var quak = (() => {
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __export = (target, all) => {
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };
  var __copyProps = (to6, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to6, key) && key !== except)
          __defProp(to6, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to6;
  };
  var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

  // lib/htmlwidget.js
  var htmlwidget_exports = {};
  __export(htmlwidget_exports, {
    default: () => htmlwidget_default
  });

  // https://cdn.jsdelivr.net/npm/tslib@2.6.2/+esm
  function n(e26, t32) {
    var r91 = {};
    for (var n37 in e26)
      Object.prototype.hasOwnProperty.call(e26, n37) && t32.indexOf(n37) < 0 && (r91[n37] = e26[n37]);
    if (null != e26 && "function" == typeof Object.getOwnPropertySymbols) {
      var o35 = 0;
      for (n37 = Object.getOwnPropertySymbols(e26); o35 < n37.length; o35++)
        t32.indexOf(n37[o35]) < 0 && Object.prototype.propertyIsEnumerable.call(e26, n37[o35]) && (r91[n37[o35]] = e26[n37[o35]]);
    }
    return r91;
  }
  function s(e26, t32, r91, n37) {
    return new (r91 || (r91 = Promise))(function(o35, a27) {
      function i29(e27) {
        try {
          u30(n37.next(e27));
        } catch (e28) {
          a27(e28);
        }
      }
      function c30(e27) {
        try {
          u30(n37.throw(e27));
        } catch (e28) {
          a27(e28);
        }
      }
      function u30(e27) {
        var t33;
        e27.done ? o35(e27.value) : (t33 = e27.value, t33 instanceof r91 ? t33 : new r91(function(e28) {
          e28(t33);
        })).then(i29, c30);
      }
      u30((n37 = n37.apply(e26, t32 || [])).next());
    });
  }
  function h(e26) {
    var t32 = "function" == typeof Symbol && Symbol.iterator, r91 = t32 && e26[t32], n37 = 0;
    if (r91)
      return r91.call(e26);
    if (e26 && "number" == typeof e26.length)
      return { next: function() {
        return e26 && n37 >= e26.length && (e26 = void 0), { value: e26 && e26[n37++], done: !e26 };
      } };
    throw new TypeError(t32 ? "Object is not iterable." : "Symbol.iterator is not defined.");
  }
  function m(e26) {
    return this instanceof m ? (this.v = e26, this) : new m(e26);
  }
  function g(e26, t32, r91) {
    if (!Symbol.asyncIterator)
      throw new TypeError("Symbol.asyncIterator is not defined.");
    var n37, o35 = r91.apply(e26, t32 || []), a27 = [];
    return n37 = {}, i29("next"), i29("throw"), i29("return"), n37[Symbol.asyncIterator] = function() {
      return this;
    }, n37;
    function i29(e27) {
      o35[e27] && (n37[e27] = function(t33) {
        return new Promise(function(r92, n38) {
          a27.push([e27, t33, r92, n38]) > 1 || c30(e27, t33);
        });
      });
    }
    function c30(e27, t33) {
      try {
        (r92 = o35[e27](t33)).value instanceof m ? Promise.resolve(r92.value.v).then(u30, f25) : l35(a27[0][2], r92);
      } catch (e28) {
        l35(a27[0][3], e28);
      }
      var r92;
    }
    function u30(e27) {
      c30("next", e27);
    }
    function f25(e27) {
      c30("throw", e27);
    }
    function l35(e27, t33) {
      e27(t33), a27.shift(), a27.length && c30(a27[0][0], a27[0][1]);
    }
  }
  function O(e26) {
    var t32, r91;
    return t32 = {}, n37("next"), n37("throw", function(e27) {
      throw e27;
    }), n37("return"), t32[Symbol.iterator] = function() {
      return this;
    }, t32;
    function n37(n38, o35) {
      t32[n38] = e26[n38] ? function(t33) {
        return (r91 = !r91) ? { value: m(e26[n38](t33)), done: false } : o35 ? o35(t33) : t33;
      } : o35;
    }
  }
  function j(e26) {
    if (!Symbol.asyncIterator)
      throw new TypeError("Symbol.asyncIterator is not defined.");
    var t32, r91 = e26[Symbol.asyncIterator];
    return r91 ? r91.call(e26) : (e26 = h(e26), t32 = {}, n37("next"), n37("throw"), n37("return"), t32[Symbol.asyncIterator] = function() {
      return this;
    }, t32);
    function n37(r92) {
      t32[r92] = e26[r92] && function(t33) {
        return new Promise(function(n38, o35) {
          (function(e27, t34, r93, n39) {
            Promise.resolve(n39).then(function(t35) {
              e27({ value: t35, done: r93 });
            }, t34);
          })(n38, o35, (t33 = e26[r92](t33)).done, t33.value);
        });
      };
    }
  }

  // https://cdn.jsdelivr.net/npm/flatbuffers@24.3.25/+esm
  var i = 4;
  var r = new Int32Array(2);
  var n2 = new Float32Array(r.buffer);
  var h2 = new Float64Array(r.buffer);
  var a = 1 === new Uint16Array(new Uint8Array([1, 0]).buffer)[0];
  var o;
  !function(t32) {
    t32[t32.UTF8_BYTES = 1] = "UTF8_BYTES", t32[t32.UTF16_STRING = 2] = "UTF16_STRING";
  }(o || (o = {}));
  var l = class _l4 {
    constructor(t32) {
      this.bytes_ = t32, this.position_ = 0, this.text_decoder_ = new TextDecoder();
    }
    static allocate(t32) {
      return new _l4(new Uint8Array(t32));
    }
    clear() {
      this.position_ = 0;
    }
    bytes() {
      return this.bytes_;
    }
    position() {
      return this.position_;
    }
    setPosition(t32) {
      this.position_ = t32;
    }
    capacity() {
      return this.bytes_.length;
    }
    readInt8(t32) {
      return this.readUint8(t32) << 24 >> 24;
    }
    readUint8(t32) {
      return this.bytes_[t32];
    }
    readInt16(t32) {
      return this.readUint16(t32) << 16 >> 16;
    }
    readUint16(t32) {
      return this.bytes_[t32] | this.bytes_[t32 + 1] << 8;
    }
    readInt32(t32) {
      return this.bytes_[t32] | this.bytes_[t32 + 1] << 8 | this.bytes_[t32 + 2] << 16 | this.bytes_[t32 + 3] << 24;
    }
    readUint32(t32) {
      return this.readInt32(t32) >>> 0;
    }
    readInt64(t32) {
      return BigInt.asIntN(64, BigInt(this.readUint32(t32)) + (BigInt(this.readUint32(t32 + 4)) << BigInt(32)));
    }
    readUint64(t32) {
      return BigInt.asUintN(64, BigInt(this.readUint32(t32)) + (BigInt(this.readUint32(t32 + 4)) << BigInt(32)));
    }
    readFloat32(t32) {
      return r[0] = this.readInt32(t32), n2[0];
    }
    readFloat64(t32) {
      return r[a ? 0 : 1] = this.readInt32(t32), r[a ? 1 : 0] = this.readInt32(t32 + 4), h2[0];
    }
    writeInt8(t32, e26) {
      this.bytes_[t32] = e26;
    }
    writeUint8(t32, e26) {
      this.bytes_[t32] = e26;
    }
    writeInt16(t32, e26) {
      this.bytes_[t32] = e26, this.bytes_[t32 + 1] = e26 >> 8;
    }
    writeUint16(t32, e26) {
      this.bytes_[t32] = e26, this.bytes_[t32 + 1] = e26 >> 8;
    }
    writeInt32(t32, e26) {
      this.bytes_[t32] = e26, this.bytes_[t32 + 1] = e26 >> 8, this.bytes_[t32 + 2] = e26 >> 16, this.bytes_[t32 + 3] = e26 >> 24;
    }
    writeUint32(t32, e26) {
      this.bytes_[t32] = e26, this.bytes_[t32 + 1] = e26 >> 8, this.bytes_[t32 + 2] = e26 >> 16, this.bytes_[t32 + 3] = e26 >> 24;
    }
    writeInt64(t32, e26) {
      this.writeInt32(t32, Number(BigInt.asIntN(32, e26))), this.writeInt32(t32 + 4, Number(BigInt.asIntN(32, e26 >> BigInt(32))));
    }
    writeUint64(t32, e26) {
      this.writeUint32(t32, Number(BigInt.asUintN(32, e26))), this.writeUint32(t32 + 4, Number(BigInt.asUintN(32, e26 >> BigInt(32))));
    }
    writeFloat32(t32, e26) {
      n2[0] = e26, this.writeInt32(t32, r[0]);
    }
    writeFloat64(t32, e26) {
      h2[0] = e26, this.writeInt32(t32, r[a ? 0 : 1]), this.writeInt32(t32 + 4, r[a ? 1 : 0]);
    }
    getBufferIdentifier() {
      if (this.bytes_.length < this.position_ + 4 + 4)
        throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");
      let t32 = "";
      for (let e26 = 0; e26 < 4; e26++)
        t32 += String.fromCharCode(this.readInt8(this.position_ + 4 + e26));
      return t32;
    }
    __offset(t32, e26) {
      const s29 = t32 - this.readInt32(t32);
      return e26 < this.readInt16(s29) ? this.readInt16(s29 + e26) : 0;
    }
    __union(t32, e26) {
      return t32.bb_pos = e26 + this.readInt32(e26), t32.bb = this, t32;
    }
    __string(t32, e26) {
      t32 += this.readInt32(t32);
      const s29 = this.readInt32(t32);
      t32 += 4;
      const i29 = this.bytes_.subarray(t32, t32 + s29);
      return e26 === o.UTF8_BYTES ? i29 : this.text_decoder_.decode(i29);
    }
    __union_with_string(t32, e26) {
      return "string" == typeof t32 ? this.__string(e26) : this.__union(t32, e26);
    }
    __indirect(t32) {
      return t32 + this.readInt32(t32);
    }
    __vector(t32) {
      return t32 + this.readInt32(t32) + 4;
    }
    __vector_len(t32) {
      return this.readInt32(t32 + this.readInt32(t32));
    }
    __has_identifier(t32) {
      if (4 != t32.length)
        throw new Error("FlatBuffers: file identifier must be length 4");
      for (let e26 = 0; e26 < 4; e26++)
        if (t32.charCodeAt(e26) != this.readInt8(this.position() + 4 + e26))
          return false;
      return true;
    }
    createScalarList(t32, e26) {
      const s29 = [];
      for (let i29 = 0; i29 < e26; ++i29) {
        const e27 = t32(i29);
        null !== e27 && s29.push(e27);
      }
      return s29;
    }
    createObjList(t32, e26) {
      const s29 = [];
      for (let i29 = 0; i29 < e26; ++i29) {
        const e27 = t32(i29);
        null !== e27 && s29.push(e27.unpack());
      }
      return s29;
    }
  };
  var b = class _b {
    constructor(t32) {
      let e26;
      this.minalign = 1, this.vtable = null, this.vtable_in_use = 0, this.isNested = false, this.object_start = 0, this.vtables = [], this.vector_num_elems = 0, this.force_defaults = false, this.string_maps = null, this.text_encoder = new TextEncoder(), e26 = t32 || 1024, this.bb = l.allocate(e26), this.space = e26;
    }
    clear() {
      this.bb.clear(), this.space = this.bb.capacity(), this.minalign = 1, this.vtable = null, this.vtable_in_use = 0, this.isNested = false, this.object_start = 0, this.vtables = [], this.vector_num_elems = 0, this.force_defaults = false, this.string_maps = null;
    }
    forceDefaults(t32) {
      this.force_defaults = t32;
    }
    dataBuffer() {
      return this.bb;
    }
    asUint8Array() {
      return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());
    }
    prep(t32, e26) {
      t32 > this.minalign && (this.minalign = t32);
      const s29 = 1 + ~(this.bb.capacity() - this.space + e26) & t32 - 1;
      for (; this.space < s29 + t32 + e26; ) {
        const t33 = this.bb.capacity();
        this.bb = _b.growByteBuffer(this.bb), this.space += this.bb.capacity() - t33;
      }
      this.pad(s29);
    }
    pad(t32) {
      for (let e26 = 0; e26 < t32; e26++)
        this.bb.writeInt8(--this.space, 0);
    }
    writeInt8(t32) {
      this.bb.writeInt8(this.space -= 1, t32);
    }
    writeInt16(t32) {
      this.bb.writeInt16(this.space -= 2, t32);
    }
    writeInt32(t32) {
      this.bb.writeInt32(this.space -= 4, t32);
    }
    writeInt64(t32) {
      this.bb.writeInt64(this.space -= 8, t32);
    }
    writeFloat32(t32) {
      this.bb.writeFloat32(this.space -= 4, t32);
    }
    writeFloat64(t32) {
      this.bb.writeFloat64(this.space -= 8, t32);
    }
    addInt8(t32) {
      this.prep(1, 0), this.writeInt8(t32);
    }
    addInt16(t32) {
      this.prep(2, 0), this.writeInt16(t32);
    }
    addInt32(t32) {
      this.prep(4, 0), this.writeInt32(t32);
    }
    addInt64(t32) {
      this.prep(8, 0), this.writeInt64(t32);
    }
    addFloat32(t32) {
      this.prep(4, 0), this.writeFloat32(t32);
    }
    addFloat64(t32) {
      this.prep(8, 0), this.writeFloat64(t32);
    }
    addFieldInt8(t32, e26, s29) {
      (this.force_defaults || e26 != s29) && (this.addInt8(e26), this.slot(t32));
    }
    addFieldInt16(t32, e26, s29) {
      (this.force_defaults || e26 != s29) && (this.addInt16(e26), this.slot(t32));
    }
    addFieldInt32(t32, e26, s29) {
      (this.force_defaults || e26 != s29) && (this.addInt32(e26), this.slot(t32));
    }
    addFieldInt64(t32, e26, s29) {
      (this.force_defaults || e26 !== s29) && (this.addInt64(e26), this.slot(t32));
    }
    addFieldFloat32(t32, e26, s29) {
      (this.force_defaults || e26 != s29) && (this.addFloat32(e26), this.slot(t32));
    }
    addFieldFloat64(t32, e26, s29) {
      (this.force_defaults || e26 != s29) && (this.addFloat64(e26), this.slot(t32));
    }
    addFieldOffset(t32, e26, s29) {
      (this.force_defaults || e26 != s29) && (this.addOffset(e26), this.slot(t32));
    }
    addFieldStruct(t32, e26, s29) {
      e26 != s29 && (this.nested(e26), this.slot(t32));
    }
    nested(t32) {
      if (t32 != this.offset())
        throw new TypeError("FlatBuffers: struct must be serialized inline.");
    }
    notNested() {
      if (this.isNested)
        throw new TypeError("FlatBuffers: object serialization must not be nested.");
    }
    slot(t32) {
      null !== this.vtable && (this.vtable[t32] = this.offset());
    }
    offset() {
      return this.bb.capacity() - this.space;
    }
    static growByteBuffer(t32) {
      const e26 = t32.capacity();
      if (3221225472 & e26)
        throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");
      const s29 = e26 << 1, i29 = l.allocate(s29);
      return i29.setPosition(s29 - e26), i29.bytes().set(t32.bytes(), s29 - e26), i29;
    }
    addOffset(t32) {
      this.prep(4, 0), this.writeInt32(this.offset() - t32 + 4);
    }
    startObject(t32) {
      this.notNested(), null == this.vtable && (this.vtable = []), this.vtable_in_use = t32;
      for (let e26 = 0; e26 < t32; e26++)
        this.vtable[e26] = 0;
      this.isNested = true, this.object_start = this.offset();
    }
    endObject() {
      if (null == this.vtable || !this.isNested)
        throw new Error("FlatBuffers: endObject called without startObject");
      this.addInt32(0);
      const t32 = this.offset();
      let e26 = this.vtable_in_use - 1;
      for (; e26 >= 0 && 0 == this.vtable[e26]; e26--)
        ;
      const s29 = e26 + 1;
      for (; e26 >= 0; e26--)
        this.addInt16(0 != this.vtable[e26] ? t32 - this.vtable[e26] : 0);
      this.addInt16(t32 - this.object_start);
      const i29 = 2 * (s29 + 2);
      this.addInt16(i29);
      let r91 = 0;
      const n37 = this.space;
      t:
        for (e26 = 0; e26 < this.vtables.length; e26++) {
          const t33 = this.bb.capacity() - this.vtables[e26];
          if (i29 == this.bb.readInt16(t33)) {
            for (let e27 = 2; e27 < i29; e27 += 2)
              if (this.bb.readInt16(n37 + e27) != this.bb.readInt16(t33 + e27))
                continue t;
            r91 = this.vtables[e26];
            break;
          }
        }
      return r91 ? (this.space = this.bb.capacity() - t32, this.bb.writeInt32(this.space, r91 - t32)) : (this.vtables.push(this.offset()), this.bb.writeInt32(this.bb.capacity() - t32, this.offset() - t32)), this.isNested = false, t32;
    }
    finish(t32, e26, s29) {
      const i29 = s29 ? 4 : 0;
      if (e26) {
        const t33 = e26;
        if (this.prep(this.minalign, 8 + i29), 4 != t33.length)
          throw new TypeError("FlatBuffers: file identifier must be length 4");
        for (let e27 = 3; e27 >= 0; e27--)
          this.writeInt8(t33.charCodeAt(e27));
      }
      this.prep(this.minalign, 4 + i29), this.addOffset(t32), i29 && this.addInt32(this.bb.capacity() - this.space), this.bb.setPosition(this.space);
    }
    finishSizePrefixed(t32, e26) {
      this.finish(t32, e26, true);
    }
    requiredField(t32, e26) {
      const s29 = this.bb.capacity() - t32, i29 = s29 - this.bb.readInt32(s29);
      if (!(e26 < this.bb.readInt16(i29) && 0 != this.bb.readInt16(i29 + e26)))
        throw new TypeError("FlatBuffers: field " + e26 + " must be set");
    }
    startVector(t32, e26, s29) {
      this.notNested(), this.vector_num_elems = e26, this.prep(4, t32 * e26), this.prep(s29, t32 * e26);
    }
    endVector() {
      return this.writeInt32(this.vector_num_elems), this.offset();
    }
    createSharedString(t32) {
      if (!t32)
        return 0;
      if (this.string_maps || (this.string_maps = /* @__PURE__ */ new Map()), this.string_maps.has(t32))
        return this.string_maps.get(t32);
      const e26 = this.createString(t32);
      return this.string_maps.set(t32, e26), e26;
    }
    createString(t32) {
      if (null == t32)
        return 0;
      let e26;
      return e26 = t32 instanceof Uint8Array ? t32 : this.text_encoder.encode(t32), this.addInt8(0), this.startVector(1, e26.length, 1), this.bb.setPosition(this.space -= e26.length), this.bb.bytes().set(e26, this.space), this.endVector();
    }
    createByteVector(t32) {
      return null == t32 ? 0 : (this.startVector(1, t32.length, 1), this.bb.setPosition(this.space -= t32.length), this.bb.bytes().set(t32, this.space), this.endVector());
    }
    createObjectOffset(t32) {
      return null === t32 ? 0 : "string" == typeof t32 ? this.createString(t32) : t32.pack(this);
    }
    createObjectOffsetList(t32) {
      const e26 = [];
      for (let s29 = 0; s29 < t32.length; ++s29) {
        const i29 = t32[s29];
        if (null === i29)
          throw new TypeError("FlatBuffers: Argument for createObjectOffsetList cannot contain null.");
        e26.push(this.createObjectOffset(i29));
      }
      return e26;
    }
    createStructOffsetList(t32, e26) {
      return e26(this, t32.length), this.createObjectOffsetList(t32.slice().reverse()), this.endVector();
    }
  };

  // https://cdn.jsdelivr.net/npm/apache-arrow@16.1.0/+esm
  var l2 = new TextDecoder("utf-8");
  var u = (t32) => l2.decode(t32);
  var c = new TextEncoder();
  var h3 = (t32) => c.encode(t32);
  var d = (t32) => "boolean" == typeof t32;
  var p = (t32) => "function" == typeof t32;
  var y = (t32) => null != t32 && Object(t32) === t32;
  var f = (t32) => y(t32) && p(t32.then);
  var b2 = (t32) => y(t32) && p(t32[Symbol.iterator]);
  var g2 = (t32) => y(t32) && p(t32[Symbol.asyncIterator]);
  var v = (t32) => y(t32) && y(t32.schema);
  var _ = (t32) => y(t32) && "done" in t32 && "value" in t32;
  var m2 = (t32) => y(t32) && p(t32.stat) && /* @__PURE__ */ ((t33) => "number" == typeof t33)(t32.fd);
  var w = (t32) => y(t32) && S(t32.body);
  var I = (t32) => "_getDOMStream" in t32 && "_getNodeStream" in t32;
  var S = (t32) => y(t32) && p(t32.cancel) && p(t32.getReader) && !I(t32);
  var A = (t32) => y(t32) && p(t32.read) && p(t32.pipe) && d(t32.readable) && !I(t32);
  var B = (t32) => y(t32) && p(t32.clear) && p(t32.bytes) && p(t32.position) && p(t32.setPosition) && p(t32.capacity) && p(t32.getBufferIdentifier) && p(t32.createLong);
  var D = "undefined" != typeof SharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer;
  function T(t32, e26, i29 = 0, n37 = e26.byteLength) {
    const r91 = t32.byteLength, s29 = new Uint8Array(t32.buffer, t32.byteOffset, r91), o35 = new Uint8Array(e26.buffer, e26.byteOffset, Math.min(n37, r91));
    return s29.set(o35, i29), t32;
  }
  function O2(t32, e26) {
    const i29 = function(t33) {
      const e27 = t33[0] ? [t33[0]] : [];
      let i30, n38, r92, s30;
      for (let o36, a28, l36 = 0, u31 = 0, c30 = t33.length; ++l36 < c30; )
        o36 = e27[u31], a28 = t33[l36], !o36 || !a28 || o36.buffer !== a28.buffer || a28.byteOffset < o36.byteOffset ? a28 && (e27[++u31] = a28) : ({ byteOffset: i30, byteLength: r92 } = o36, { byteOffset: n38, byteLength: s30 } = a28, i30 + r92 < n38 || n38 + s30 < i30 ? a28 && (e27[++u31] = a28) : e27[u31] = new Uint8Array(o36.buffer, i30, n38 - i30 + s30));
      return e27;
    }(t32), n37 = i29.reduce((t33, e27) => t33 + e27.byteLength, 0);
    let r91, s29, o35, a27 = 0, l35 = -1;
    const u30 = Math.min(e26 || Number.POSITIVE_INFINITY, n37);
    for (const t33 = i29.length; ++l35 < t33; ) {
      if (r91 = i29[l35], s29 = r91.subarray(0, Math.min(r91.length, u30 - a27)), u30 <= a27 + s29.length) {
        s29.length < r91.length ? i29[l35] = r91.subarray(s29.length) : s29.length === r91.length && l35++, o35 ? T(o35, s29, a27) : o35 = s29;
        break;
      }
      T(o35 || (o35 = new Uint8Array(u30)), s29, a27), a27 += s29.length;
    }
    return [o35 || new Uint8Array(0), i29.slice(l35), n37 - (o35 ? o35.byteLength : 0)];
  }
  function L(t32, e26) {
    let i29 = _(e26) ? e26.value : e26;
    return i29 instanceof t32 ? t32 === Uint8Array ? new t32(i29.buffer, i29.byteOffset, i29.byteLength) : i29 : i29 ? ("string" == typeof i29 && (i29 = h3(i29)), i29 instanceof ArrayBuffer || i29 instanceof D ? new t32(i29) : B(i29) ? L(t32, i29.bytes()) : ArrayBuffer.isView(i29) ? i29.byteLength <= 0 ? new t32(0) : new t32(i29.buffer, i29.byteOffset, i29.byteLength / t32.BYTES_PER_ELEMENT) : t32.from(i29)) : new t32(0);
  }
  var x = (t32) => L(Int32Array, t32);
  var M = (t32) => L(BigInt64Array, t32);
  var F = (t32) => L(Uint8Array, t32);
  var N = (t32) => (t32.next(), t32);
  function* U(t32, e26) {
    const i29 = function* (t33) {
      yield t33;
    }, n37 = "string" == typeof e26 || ArrayBuffer.isView(e26) || e26 instanceof ArrayBuffer || e26 instanceof D ? i29(e26) : b2(e26) ? e26 : i29(e26);
    return yield* N(function* (e27) {
      let i30 = null;
      do {
        i30 = e27.next(yield L(t32, i30));
      } while (!i30.done);
    }(n37[Symbol.iterator]())), new t32();
  }
  var C = (t32) => U(Uint8Array, t32);
  function E(r91, s29) {
    return g(this, arguments, function* () {
      if (f(s29))
        return yield m(yield m(yield* O(j(E(r91, yield m(s29))))));
      const o35 = function(i29) {
        return g(this, arguments, function* () {
          yield yield m(yield m(i29));
        });
      }, a27 = "string" == typeof s29 || ArrayBuffer.isView(s29) || s29 instanceof ArrayBuffer || s29 instanceof D ? o35(s29) : b2(s29) ? function(r92) {
        return g(this, arguments, function* () {
          yield m(yield* O(j(N(function* (t32) {
            let e26 = null;
            do {
              e26 = t32.next(yield null == e26 ? void 0 : e26.value);
            } while (!e26.done);
          }(r92[Symbol.iterator]())))));
        });
      }(s29) : g2(s29) ? s29 : o35(s29);
      return yield m(yield* O(j(N(function(i29) {
        return g(this, arguments, function* () {
          let t32 = null;
          do {
            t32 = yield m(i29.next(yield yield m(L(r91, t32))));
          } while (!t32.done);
        });
      }(a27[Symbol.asyncIterator]()))))), yield m(new r91());
    });
  }
  var V = (t32) => E(Uint8Array, t32);
  function R(t32, e26, i29) {
    if (0 !== t32)
      for (let n37 = -1, r91 = (i29 = i29.slice(0, e26)).length; ++n37 < r91; )
        i29[n37] += t32;
    return i29.subarray(0, e26);
  }
  function z(t32, e26) {
    let i29 = 0;
    const n37 = t32.length;
    if (n37 !== e26.length)
      return false;
    if (n37 > 0)
      do {
        if (t32[i29] !== e26[i29])
          return false;
      } while (++i29 < n37);
    return true;
  }
  var P = Object.freeze({ __proto__: null, memcpy: T, joinUint8Arrays: O2, toArrayBufferView: L, toInt8Array: (t32) => L(Int8Array, t32), toInt16Array: (t32) => L(Int16Array, t32), toInt32Array: x, toBigInt64Array: M, toUint8Array: F, toUint16Array: (t32) => L(Uint16Array, t32), toUint32Array: (t32) => L(Uint32Array, t32), toBigUint64Array: (t32) => L(BigUint64Array, t32), toFloat32Array: (t32) => L(Float32Array, t32), toFloat64Array: (t32) => L(Float64Array, t32), toUint8ClampedArray: (t32) => L(Uint8ClampedArray, t32), toArrayBufferViewIterator: U, toInt8ArrayIterator: (t32) => U(Int8Array, t32), toInt16ArrayIterator: (t32) => U(Int16Array, t32), toInt32ArrayIterator: (t32) => U(Int32Array, t32), toUint8ArrayIterator: C, toUint16ArrayIterator: (t32) => U(Uint16Array, t32), toUint32ArrayIterator: (t32) => U(Uint32Array, t32), toFloat32ArrayIterator: (t32) => U(Float32Array, t32), toFloat64ArrayIterator: (t32) => U(Float64Array, t32), toUint8ClampedArrayIterator: (t32) => U(Uint8ClampedArray, t32), toArrayBufferViewAsyncIterator: E, toInt8ArrayAsyncIterator: (t32) => E(Int8Array, t32), toInt16ArrayAsyncIterator: (t32) => E(Int16Array, t32), toInt32ArrayAsyncIterator: (t32) => E(Int32Array, t32), toUint8ArrayAsyncIterator: V, toUint16ArrayAsyncIterator: (t32) => E(Uint16Array, t32), toUint32ArrayAsyncIterator: (t32) => E(Uint32Array, t32), toFloat32ArrayAsyncIterator: (t32) => E(Float32Array, t32), toFloat64ArrayAsyncIterator: (t32) => E(Float64Array, t32), toUint8ClampedArrayAsyncIterator: (t32) => E(Uint8ClampedArray, t32), rebaseValueOffsets: R, compareArrayLike: z });
  var j2 = { fromIterable: (t32) => k(function* (t33) {
    let e26, i29, n37, r91, s29 = false, o35 = [], a27 = 0;
    function l35() {
      return "peek" === n37 ? O2(o35, r91)[0] : ([i29, o35, a27] = O2(o35, r91), i29);
    }
    ({ cmd: n37, size: r91 } = (yield null) || { cmd: "read", size: 0 });
    const u30 = C(t33)[Symbol.iterator]();
    try {
      do {
        if ({ done: e26, value: i29 } = Number.isNaN(r91 - a27) ? u30.next() : u30.next(r91 - a27), !e26 && i29.byteLength > 0 && (o35.push(i29), a27 += i29.byteLength), e26 || r91 <= a27)
          do {
            ({ cmd: n37, size: r91 } = yield l35());
          } while (r91 < a27);
      } while (!e26);
    } catch (t34) {
      (s29 = true) && "function" == typeof u30.throw && u30.throw(t34);
    } finally {
      false === s29 && "function" == typeof u30.return && u30.return(null);
    }
    return null;
  }(t32)), fromAsyncIterable: (i29) => k(function(i30) {
    return g(this, arguments, function* () {
      let t32, n37, r91, s29, o35 = false, a27 = [], l35 = 0;
      function u30() {
        return "peek" === r91 ? O2(a27, s29)[0] : ([n37, a27, l35] = O2(a27, s29), n37);
      }
      ({ cmd: r91, size: s29 } = (yield yield m(null)) || { cmd: "read", size: 0 });
      const c30 = V(i30)[Symbol.asyncIterator]();
      try {
        do {
          if ({ done: t32, value: n37 } = Number.isNaN(s29 - l35) ? yield m(c30.next()) : yield m(c30.next(s29 - l35)), !t32 && n37.byteLength > 0 && (a27.push(n37), l35 += n37.byteLength), t32 || s29 <= l35)
            do {
              ({ cmd: r91, size: s29 } = yield yield m(u30()));
            } while (s29 < l35);
        } while (!t32);
      } catch (t33) {
        (o35 = true) && "function" == typeof c30.throw && (yield m(c30.throw(t33)));
      } finally {
        false === o35 && "function" == typeof c30.return && (yield m(c30.return(new Uint8Array(0))));
      }
      return yield m(null);
    });
  }(i29)), fromDOMStream: (i29) => k(function(i30) {
    return g(this, arguments, function* () {
      let t32, n37, r91, s29 = false, o35 = false, a27 = [], l35 = 0;
      function u30() {
        return "peek" === n37 ? O2(a27, r91)[0] : ([t32, a27, l35] = O2(a27, r91), t32);
      }
      ({ cmd: n37, size: r91 } = (yield yield m(null)) || { cmd: "read", size: 0 });
      const c30 = new $(i30);
      try {
        do {
          if ({ done: s29, value: t32 } = Number.isNaN(r91 - l35) ? yield m(c30.read()) : yield m(c30.read(r91 - l35)), !s29 && t32.byteLength > 0 && (a27.push(F(t32)), l35 += t32.byteLength), s29 || r91 <= l35)
            do {
              ({ cmd: n37, size: r91 } = yield yield m(u30()));
            } while (r91 < l35);
        } while (!s29);
      } catch (t33) {
        (o35 = true) && (yield m(c30.cancel(t33)));
      } finally {
        false === o35 ? yield m(c30.cancel()) : i30.locked && c30.releaseLock();
      }
      return yield m(null);
    });
  }(i29)), fromNodeStream: (i29) => k(function(i30) {
    return g(this, arguments, function* () {
      const t32 = [];
      let n37, r91, s29, o35 = "error", a27 = false, l35 = null, u30 = 0, c30 = [];
      function h35() {
        return "peek" === n37 ? O2(c30, r91)[0] : ([s29, c30, u30] = O2(c30, r91), s29);
      }
      if ({ cmd: n37, size: r91 } = (yield yield m(null)) || { cmd: "read", size: 0 }, i30.isTTY)
        return yield yield m(new Uint8Array(0)), yield m(null);
      try {
        t32[0] = W(i30, "end"), t32[1] = W(i30, "error");
        do {
          if (t32[2] = W(i30, "readable"), [o35, l35] = yield m(Promise.race(t32.map((t33) => t33[2]))), "error" === o35)
            break;
          if ((a27 = "end" === o35) || (Number.isFinite(r91 - u30) ? (s29 = F(i30.read(r91 - u30)), s29.byteLength < r91 - u30 && (s29 = F(i30.read()))) : s29 = F(i30.read()), s29.byteLength > 0 && (c30.push(s29), u30 += s29.byteLength)), a27 || r91 <= u30)
            do {
              ({ cmd: n37, size: r91 } = yield yield m(h35()));
            } while (r91 < u30);
        } while (!a27);
      } finally {
        yield m(d25(t32, "error" === o35 ? l35 : null));
      }
      return yield m(null);
      function d25(t33, e26) {
        return s29 = c30 = null, new Promise((n38, r92) => {
          for (const [e27, n39] of t33)
            i30.off(e27, n39);
          try {
            const t34 = i30.destroy;
            t34 && t34.call(i30, e26), e26 = void 0;
          } catch (t34) {
            e26 = t34 || e26;
          } finally {
            null != e26 ? r92(e26) : n38();
          }
        });
      }
    });
  }(i29)), toDOMStream(t32, e26) {
    throw new Error('"toDOMStream" not available in this environment');
  }, toNodeStream(t32, e26) {
    throw new Error('"toNodeStream" not available in this environment');
  } };
  var k = (t32) => (t32.next(), t32);
  var $ = class {
    constructor(t32) {
      this.source = t32, this.reader = null, this.reader = this.source.getReader(), this.reader.closed.catch(() => {
      });
    }
    get closed() {
      return this.reader ? this.reader.closed.catch(() => {
      }) : Promise.resolve();
    }
    releaseLock() {
      this.reader && this.reader.releaseLock(), this.reader = null;
    }
    cancel(t32) {
      return s(this, void 0, void 0, function* () {
        const { reader: e26, source: i29 } = this;
        e26 && (yield e26.cancel(t32).catch(() => {
        })), i29 && i29.locked && this.releaseLock();
      });
    }
    read(t32) {
      return s(this, void 0, void 0, function* () {
        if (0 === t32)
          return { done: null == this.reader, value: new Uint8Array(0) };
        const e26 = yield this.reader.read();
        return !e26.done && (e26.value = F(e26)), e26;
      });
    }
  };
  var W = (t32, e26) => {
    const i29 = (t33) => n37([e26, t33]);
    let n37;
    return [e26, i29, new Promise((r91) => (n37 = r91) && t32.once(e26, i29))];
  };
  var Y;
  var H;
  var G;
  var Z;
  var X;
  var K;
  var J;
  var q;
  var Q;
  var tt;
  var et;
  var it2;
  var nt;
  var rt;
  var st;
  var ot;
  !function(t32) {
    t32[t32.V1 = 0] = "V1", t32[t32.V2 = 1] = "V2", t32[t32.V3 = 2] = "V3", t32[t32.V4 = 3] = "V4", t32[t32.V5 = 4] = "V5";
  }(Y || (Y = {})), function(t32) {
    t32[t32.Sparse = 0] = "Sparse", t32[t32.Dense = 1] = "Dense";
  }(H || (H = {})), function(t32) {
    t32[t32.HALF = 0] = "HALF", t32[t32.SINGLE = 1] = "SINGLE", t32[t32.DOUBLE = 2] = "DOUBLE";
  }(G || (G = {})), function(t32) {
    t32[t32.DAY = 0] = "DAY", t32[t32.MILLISECOND = 1] = "MILLISECOND";
  }(Z || (Z = {})), function(t32) {
    t32[t32.SECOND = 0] = "SECOND", t32[t32.MILLISECOND = 1] = "MILLISECOND", t32[t32.MICROSECOND = 2] = "MICROSECOND", t32[t32.NANOSECOND = 3] = "NANOSECOND";
  }(X || (X = {})), function(t32) {
    t32[t32.YEAR_MONTH = 0] = "YEAR_MONTH", t32[t32.DAY_TIME = 1] = "DAY_TIME", t32[t32.MONTH_DAY_NANO = 2] = "MONTH_DAY_NANO";
  }(K || (K = {})), function(t32) {
    t32[t32.BUFFER = 0] = "BUFFER";
  }(J || (J = {})), function(t32) {
    t32[t32.LZ4_FRAME = 0] = "LZ4_FRAME", t32[t32.ZSTD = 1] = "ZSTD";
  }(q || (q = {}));
  var at = class _at {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsBodyCompression(t32, e26) {
      return (e26 || new _at()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsBodyCompression(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _at()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    codec() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt8(this.bb_pos + t32) : q.LZ4_FRAME;
    }
    method() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.readInt8(this.bb_pos + t32) : J.BUFFER;
    }
    static startBodyCompression(t32) {
      t32.startObject(2);
    }
    static addCodec(t32, e26) {
      t32.addFieldInt8(0, e26, q.LZ4_FRAME);
    }
    static addMethod(t32, e26) {
      t32.addFieldInt8(1, e26, J.BUFFER);
    }
    static endBodyCompression(t32) {
      return t32.endObject();
    }
    static createBodyCompression(t32, e26, i29) {
      return _at.startBodyCompression(t32), _at.addCodec(t32, e26), _at.addMethod(t32, i29), _at.endBodyCompression(t32);
    }
  };
  var lt = class {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    offset() {
      return this.bb.readInt64(this.bb_pos);
    }
    length() {
      return this.bb.readInt64(this.bb_pos + 8);
    }
    static sizeOf() {
      return 16;
    }
    static createBuffer(t32, e26, i29) {
      return t32.prep(8, 16), t32.writeInt64(BigInt(null != i29 ? i29 : 0)), t32.writeInt64(BigInt(null != e26 ? e26 : 0)), t32.offset();
    }
  };
  var ut = class {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    length() {
      return this.bb.readInt64(this.bb_pos);
    }
    nullCount() {
      return this.bb.readInt64(this.bb_pos + 8);
    }
    static sizeOf() {
      return 16;
    }
    static createFieldNode(t32, e26, i29) {
      return t32.prep(8, 16), t32.writeInt64(BigInt(null != i29 ? i29 : 0)), t32.writeInt64(BigInt(null != e26 ? e26 : 0)), t32.offset();
    }
  };
  var ct = class _ct {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsRecordBatch(t32, e26) {
      return (e26 || new _ct()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsRecordBatch(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _ct()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    length() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt64(this.bb_pos + t32) : BigInt("0");
    }
    nodes(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 6);
      return i29 ? (e26 || new ut()).__init(this.bb.__vector(this.bb_pos + i29) + 16 * t32, this.bb) : null;
    }
    nodesLength() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    buffers(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 8);
      return i29 ? (e26 || new lt()).__init(this.bb.__vector(this.bb_pos + i29) + 16 * t32, this.bb) : null;
    }
    buffersLength() {
      const t32 = this.bb.__offset(this.bb_pos, 8);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    compression(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 10);
      return e26 ? (t32 || new at()).__init(this.bb.__indirect(this.bb_pos + e26), this.bb) : null;
    }
    static startRecordBatch(t32) {
      t32.startObject(4);
    }
    static addLength(t32, e26) {
      t32.addFieldInt64(0, e26, BigInt("0"));
    }
    static addNodes(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static startNodesVector(t32, e26) {
      t32.startVector(16, e26, 8);
    }
    static addBuffers(t32, e26) {
      t32.addFieldOffset(2, e26, 0);
    }
    static startBuffersVector(t32, e26) {
      t32.startVector(16, e26, 8);
    }
    static addCompression(t32, e26) {
      t32.addFieldOffset(3, e26, 0);
    }
    static endRecordBatch(t32) {
      return t32.endObject();
    }
  };
  var ht = class _ht {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsDictionaryBatch(t32, e26) {
      return (e26 || new _ht()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsDictionaryBatch(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _ht()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    id() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt64(this.bb_pos + t32) : BigInt("0");
    }
    data(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 6);
      return e26 ? (t32 || new ct()).__init(this.bb.__indirect(this.bb_pos + e26), this.bb) : null;
    }
    isDelta() {
      const t32 = this.bb.__offset(this.bb_pos, 8);
      return !!t32 && !!this.bb.readInt8(this.bb_pos + t32);
    }
    static startDictionaryBatch(t32) {
      t32.startObject(3);
    }
    static addId(t32, e26) {
      t32.addFieldInt64(0, e26, BigInt("0"));
    }
    static addData(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static addIsDelta(t32, e26) {
      t32.addFieldInt8(2, +e26, 0);
    }
    static endDictionaryBatch(t32) {
      return t32.endObject();
    }
  };
  !function(t32) {
    t32[t32.Little = 0] = "Little", t32[t32.Big = 1] = "Big";
  }(Q || (Q = {})), function(t32) {
    t32[t32.DenseArray = 0] = "DenseArray";
  }(tt || (tt = {}));
  var dt = class _dt {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsInt(t32, e26) {
      return (e26 || new _dt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsInt(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _dt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    bitWidth() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 0;
    }
    isSigned() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return !!t32 && !!this.bb.readInt8(this.bb_pos + t32);
    }
    static startInt(t32) {
      t32.startObject(2);
    }
    static addBitWidth(t32, e26) {
      t32.addFieldInt32(0, e26, 0);
    }
    static addIsSigned(t32, e26) {
      t32.addFieldInt8(1, +e26, 0);
    }
    static endInt(t32) {
      return t32.endObject();
    }
    static createInt(t32, e26, i29) {
      return _dt.startInt(t32), _dt.addBitWidth(t32, e26), _dt.addIsSigned(t32, i29), _dt.endInt(t32);
    }
  };
  var pt = class _pt {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsDictionaryEncoding(t32, e26) {
      return (e26 || new _pt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsDictionaryEncoding(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _pt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    id() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt64(this.bb_pos + t32) : BigInt("0");
    }
    indexType(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 6);
      return e26 ? (t32 || new dt()).__init(this.bb.__indirect(this.bb_pos + e26), this.bb) : null;
    }
    isOrdered() {
      const t32 = this.bb.__offset(this.bb_pos, 8);
      return !!t32 && !!this.bb.readInt8(this.bb_pos + t32);
    }
    dictionaryKind() {
      const t32 = this.bb.__offset(this.bb_pos, 10);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : tt.DenseArray;
    }
    static startDictionaryEncoding(t32) {
      t32.startObject(4);
    }
    static addId(t32, e26) {
      t32.addFieldInt64(0, e26, BigInt("0"));
    }
    static addIndexType(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static addIsOrdered(t32, e26) {
      t32.addFieldInt8(2, +e26, 0);
    }
    static addDictionaryKind(t32, e26) {
      t32.addFieldInt16(3, e26, tt.DenseArray);
    }
    static endDictionaryEncoding(t32) {
      return t32.endObject();
    }
  };
  var yt = class _yt {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsKeyValue(t32, e26) {
      return (e26 || new _yt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsKeyValue(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _yt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    key(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 4);
      return e26 ? this.bb.__string(this.bb_pos + e26, t32) : null;
    }
    value(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 6);
      return e26 ? this.bb.__string(this.bb_pos + e26, t32) : null;
    }
    static startKeyValue(t32) {
      t32.startObject(2);
    }
    static addKey(t32, e26) {
      t32.addFieldOffset(0, e26, 0);
    }
    static addValue(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static endKeyValue(t32) {
      return t32.endObject();
    }
    static createKeyValue(t32, e26, i29) {
      return _yt.startKeyValue(t32), _yt.addKey(t32, e26), _yt.addValue(t32, i29), _yt.endKeyValue(t32);
    }
  };
  var ft = class _ft {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsBinary(t32, e26) {
      return (e26 || new _ft()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsBinary(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _ft()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startBinary(t32) {
      t32.startObject(0);
    }
    static endBinary(t32) {
      return t32.endObject();
    }
    static createBinary(t32) {
      return _ft.startBinary(t32), _ft.endBinary(t32);
    }
  };
  var bt = class _bt {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsBool(t32, e26) {
      return (e26 || new _bt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsBool(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _bt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startBool(t32) {
      t32.startObject(0);
    }
    static endBool(t32) {
      return t32.endObject();
    }
    static createBool(t32) {
      return _bt.startBool(t32), _bt.endBool(t32);
    }
  };
  var gt = class _gt {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsDate(t32, e26) {
      return (e26 || new _gt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsDate(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _gt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    unit() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : Z.MILLISECOND;
    }
    static startDate(t32) {
      t32.startObject(1);
    }
    static addUnit(t32, e26) {
      t32.addFieldInt16(0, e26, Z.MILLISECOND);
    }
    static endDate(t32) {
      return t32.endObject();
    }
    static createDate(t32, e26) {
      return _gt.startDate(t32), _gt.addUnit(t32, e26), _gt.endDate(t32);
    }
  };
  var vt = class _vt {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsDecimal(t32, e26) {
      return (e26 || new _vt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsDecimal(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _vt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    precision() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 0;
    }
    scale() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 0;
    }
    bitWidth() {
      const t32 = this.bb.__offset(this.bb_pos, 8);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 128;
    }
    static startDecimal(t32) {
      t32.startObject(3);
    }
    static addPrecision(t32, e26) {
      t32.addFieldInt32(0, e26, 0);
    }
    static addScale(t32, e26) {
      t32.addFieldInt32(1, e26, 0);
    }
    static addBitWidth(t32, e26) {
      t32.addFieldInt32(2, e26, 128);
    }
    static endDecimal(t32) {
      return t32.endObject();
    }
    static createDecimal(t32, e26, i29, n37) {
      return _vt.startDecimal(t32), _vt.addPrecision(t32, e26), _vt.addScale(t32, i29), _vt.addBitWidth(t32, n37), _vt.endDecimal(t32);
    }
  };
  var _t = class __t {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsDuration(t32, e26) {
      return (e26 || new __t()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsDuration(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new __t()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    unit() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : X.MILLISECOND;
    }
    static startDuration(t32) {
      t32.startObject(1);
    }
    static addUnit(t32, e26) {
      t32.addFieldInt16(0, e26, X.MILLISECOND);
    }
    static endDuration(t32) {
      return t32.endObject();
    }
    static createDuration(t32, e26) {
      return __t.startDuration(t32), __t.addUnit(t32, e26), __t.endDuration(t32);
    }
  };
  var mt = class _mt {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsFixedSizeBinary(t32, e26) {
      return (e26 || new _mt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsFixedSizeBinary(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _mt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    byteWidth() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 0;
    }
    static startFixedSizeBinary(t32) {
      t32.startObject(1);
    }
    static addByteWidth(t32, e26) {
      t32.addFieldInt32(0, e26, 0);
    }
    static endFixedSizeBinary(t32) {
      return t32.endObject();
    }
    static createFixedSizeBinary(t32, e26) {
      return _mt.startFixedSizeBinary(t32), _mt.addByteWidth(t32, e26), _mt.endFixedSizeBinary(t32);
    }
  };
  var wt = class _wt {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsFixedSizeList(t32, e26) {
      return (e26 || new _wt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsFixedSizeList(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _wt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    listSize() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 0;
    }
    static startFixedSizeList(t32) {
      t32.startObject(1);
    }
    static addListSize(t32, e26) {
      t32.addFieldInt32(0, e26, 0);
    }
    static endFixedSizeList(t32) {
      return t32.endObject();
    }
    static createFixedSizeList(t32, e26) {
      return _wt.startFixedSizeList(t32), _wt.addListSize(t32, e26), _wt.endFixedSizeList(t32);
    }
  };
  var It = class _It {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsFloatingPoint(t32, e26) {
      return (e26 || new _It()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsFloatingPoint(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _It()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    precision() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : G.HALF;
    }
    static startFloatingPoint(t32) {
      t32.startObject(1);
    }
    static addPrecision(t32, e26) {
      t32.addFieldInt16(0, e26, G.HALF);
    }
    static endFloatingPoint(t32) {
      return t32.endObject();
    }
    static createFloatingPoint(t32, e26) {
      return _It.startFloatingPoint(t32), _It.addPrecision(t32, e26), _It.endFloatingPoint(t32);
    }
  };
  var St = class _St {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsInterval(t32, e26) {
      return (e26 || new _St()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsInterval(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _St()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    unit() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : K.YEAR_MONTH;
    }
    static startInterval(t32) {
      t32.startObject(1);
    }
    static addUnit(t32, e26) {
      t32.addFieldInt16(0, e26, K.YEAR_MONTH);
    }
    static endInterval(t32) {
      return t32.endObject();
    }
    static createInterval(t32, e26) {
      return _St.startInterval(t32), _St.addUnit(t32, e26), _St.endInterval(t32);
    }
  };
  var At = class _At {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsLargeBinary(t32, e26) {
      return (e26 || new _At()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsLargeBinary(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _At()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startLargeBinary(t32) {
      t32.startObject(0);
    }
    static endLargeBinary(t32) {
      return t32.endObject();
    }
    static createLargeBinary(t32) {
      return _At.startLargeBinary(t32), _At.endLargeBinary(t32);
    }
  };
  var Bt = class _Bt {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsLargeUtf8(t32, e26) {
      return (e26 || new _Bt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsLargeUtf8(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _Bt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startLargeUtf8(t32) {
      t32.startObject(0);
    }
    static endLargeUtf8(t32) {
      return t32.endObject();
    }
    static createLargeUtf8(t32) {
      return _Bt.startLargeUtf8(t32), _Bt.endLargeUtf8(t32);
    }
  };
  var Dt = class _Dt {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsList(t32, e26) {
      return (e26 || new _Dt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsList(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _Dt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startList(t32) {
      t32.startObject(0);
    }
    static endList(t32) {
      return t32.endObject();
    }
    static createList(t32) {
      return _Dt.startList(t32), _Dt.endList(t32);
    }
  };
  var Tt = class _Tt {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsMap(t32, e26) {
      return (e26 || new _Tt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsMap(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _Tt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    keysSorted() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return !!t32 && !!this.bb.readInt8(this.bb_pos + t32);
    }
    static startMap(t32) {
      t32.startObject(1);
    }
    static addKeysSorted(t32, e26) {
      t32.addFieldInt8(0, +e26, 0);
    }
    static endMap(t32) {
      return t32.endObject();
    }
    static createMap(t32, e26) {
      return _Tt.startMap(t32), _Tt.addKeysSorted(t32, e26), _Tt.endMap(t32);
    }
  };
  var Ot = class _Ot {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsNull(t32, e26) {
      return (e26 || new _Ot()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsNull(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _Ot()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startNull(t32) {
      t32.startObject(0);
    }
    static endNull(t32) {
      return t32.endObject();
    }
    static createNull(t32) {
      return _Ot.startNull(t32), _Ot.endNull(t32);
    }
  };
  var Lt = class _Lt {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsStruct_(t32, e26) {
      return (e26 || new _Lt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsStruct_(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _Lt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startStruct_(t32) {
      t32.startObject(0);
    }
    static endStruct_(t32) {
      return t32.endObject();
    }
    static createStruct_(t32) {
      return _Lt.startStruct_(t32), _Lt.endStruct_(t32);
    }
  };
  var xt = class _xt {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsTime(t32, e26) {
      return (e26 || new _xt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsTime(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _xt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    unit() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : X.MILLISECOND;
    }
    bitWidth() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 32;
    }
    static startTime(t32) {
      t32.startObject(2);
    }
    static addUnit(t32, e26) {
      t32.addFieldInt16(0, e26, X.MILLISECOND);
    }
    static addBitWidth(t32, e26) {
      t32.addFieldInt32(1, e26, 32);
    }
    static endTime(t32) {
      return t32.endObject();
    }
    static createTime(t32, e26, i29) {
      return _xt.startTime(t32), _xt.addUnit(t32, e26), _xt.addBitWidth(t32, i29), _xt.endTime(t32);
    }
  };
  var Mt = class _Mt {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsTimestamp(t32, e26) {
      return (e26 || new _Mt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsTimestamp(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _Mt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    unit() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : X.SECOND;
    }
    timezone(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 6);
      return e26 ? this.bb.__string(this.bb_pos + e26, t32) : null;
    }
    static startTimestamp(t32) {
      t32.startObject(2);
    }
    static addUnit(t32, e26) {
      t32.addFieldInt16(0, e26, X.SECOND);
    }
    static addTimezone(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static endTimestamp(t32) {
      return t32.endObject();
    }
    static createTimestamp(t32, e26, i29) {
      return _Mt.startTimestamp(t32), _Mt.addUnit(t32, e26), _Mt.addTimezone(t32, i29), _Mt.endTimestamp(t32);
    }
  };
  var Ft = class _Ft {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsUnion(t32, e26) {
      return (e26 || new _Ft()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsUnion(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _Ft()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    mode() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : H.Sparse;
    }
    typeIds(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 6);
      return e26 ? this.bb.readInt32(this.bb.__vector(this.bb_pos + e26) + 4 * t32) : 0;
    }
    typeIdsLength() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    typeIdsArray() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t32), this.bb.__vector_len(this.bb_pos + t32)) : null;
    }
    static startUnion(t32) {
      t32.startObject(2);
    }
    static addMode(t32, e26) {
      t32.addFieldInt16(0, e26, H.Sparse);
    }
    static addTypeIds(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static createTypeIdsVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addInt32(e26[i29]);
      return t32.endVector();
    }
    static startTypeIdsVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static endUnion(t32) {
      return t32.endObject();
    }
    static createUnion(t32, e26, i29) {
      return _Ft.startUnion(t32), _Ft.addMode(t32, e26), _Ft.addTypeIds(t32, i29), _Ft.endUnion(t32);
    }
  };
  var Nt = class _Nt {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsUtf8(t32, e26) {
      return (e26 || new _Nt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsUtf8(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _Nt()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startUtf8(t32) {
      t32.startObject(0);
    }
    static endUtf8(t32) {
      return t32.endObject();
    }
    static createUtf8(t32) {
      return _Nt.startUtf8(t32), _Nt.endUtf8(t32);
    }
  };
  !function(t32) {
    t32[t32.NONE = 0] = "NONE", t32[t32.Null = 1] = "Null", t32[t32.Int = 2] = "Int", t32[t32.FloatingPoint = 3] = "FloatingPoint", t32[t32.Binary = 4] = "Binary", t32[t32.Utf8 = 5] = "Utf8", t32[t32.Bool = 6] = "Bool", t32[t32.Decimal = 7] = "Decimal", t32[t32.Date = 8] = "Date", t32[t32.Time = 9] = "Time", t32[t32.Timestamp = 10] = "Timestamp", t32[t32.Interval = 11] = "Interval", t32[t32.List = 12] = "List", t32[t32.Struct_ = 13] = "Struct_", t32[t32.Union = 14] = "Union", t32[t32.FixedSizeBinary = 15] = "FixedSizeBinary", t32[t32.FixedSizeList = 16] = "FixedSizeList", t32[t32.Map = 17] = "Map", t32[t32.Duration = 18] = "Duration", t32[t32.LargeBinary = 19] = "LargeBinary", t32[t32.LargeUtf8 = 20] = "LargeUtf8", t32[t32.LargeList = 21] = "LargeList", t32[t32.RunEndEncoded = 22] = "RunEndEncoded";
  }(et || (et = {}));
  var Ut = class _Ut {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsField(t32, e26) {
      return (e26 || new _Ut()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsField(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _Ut()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    name(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 4);
      return e26 ? this.bb.__string(this.bb_pos + e26, t32) : null;
    }
    nullable() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return !!t32 && !!this.bb.readInt8(this.bb_pos + t32);
    }
    typeType() {
      const t32 = this.bb.__offset(this.bb_pos, 8);
      return t32 ? this.bb.readUint8(this.bb_pos + t32) : et.NONE;
    }
    type(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 10);
      return e26 ? this.bb.__union(t32, this.bb_pos + e26) : null;
    }
    dictionary(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 12);
      return e26 ? (t32 || new pt()).__init(this.bb.__indirect(this.bb_pos + e26), this.bb) : null;
    }
    children(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 14);
      return i29 ? (e26 || new _Ut()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + i29) + 4 * t32), this.bb) : null;
    }
    childrenLength() {
      const t32 = this.bb.__offset(this.bb_pos, 14);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    customMetadata(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 16);
      return i29 ? (e26 || new yt()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + i29) + 4 * t32), this.bb) : null;
    }
    customMetadataLength() {
      const t32 = this.bb.__offset(this.bb_pos, 16);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    static startField(t32) {
      t32.startObject(7);
    }
    static addName(t32, e26) {
      t32.addFieldOffset(0, e26, 0);
    }
    static addNullable(t32, e26) {
      t32.addFieldInt8(1, +e26, 0);
    }
    static addTypeType(t32, e26) {
      t32.addFieldInt8(2, e26, et.NONE);
    }
    static addType(t32, e26) {
      t32.addFieldOffset(3, e26, 0);
    }
    static addDictionary(t32, e26) {
      t32.addFieldOffset(4, e26, 0);
    }
    static addChildren(t32, e26) {
      t32.addFieldOffset(5, e26, 0);
    }
    static createChildrenVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addOffset(e26[i29]);
      return t32.endVector();
    }
    static startChildrenVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static addCustomMetadata(t32, e26) {
      t32.addFieldOffset(6, e26, 0);
    }
    static createCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addOffset(e26[i29]);
      return t32.endVector();
    }
    static startCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static endField(t32) {
      return t32.endObject();
    }
  };
  var Ct = class _Ct {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsSchema(t32, e26) {
      return (e26 || new _Ct()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsSchema(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _Ct()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    endianness() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : Q.Little;
    }
    fields(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 6);
      return i29 ? (e26 || new Ut()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + i29) + 4 * t32), this.bb) : null;
    }
    fieldsLength() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    customMetadata(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 8);
      return i29 ? (e26 || new yt()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + i29) + 4 * t32), this.bb) : null;
    }
    customMetadataLength() {
      const t32 = this.bb.__offset(this.bb_pos, 8);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    features(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 10);
      return e26 ? this.bb.readInt64(this.bb.__vector(this.bb_pos + e26) + 8 * t32) : BigInt(0);
    }
    featuresLength() {
      const t32 = this.bb.__offset(this.bb_pos, 10);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    static startSchema(t32) {
      t32.startObject(4);
    }
    static addEndianness(t32, e26) {
      t32.addFieldInt16(0, e26, Q.Little);
    }
    static addFields(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static createFieldsVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addOffset(e26[i29]);
      return t32.endVector();
    }
    static startFieldsVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static addCustomMetadata(t32, e26) {
      t32.addFieldOffset(2, e26, 0);
    }
    static createCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addOffset(e26[i29]);
      return t32.endVector();
    }
    static startCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static addFeatures(t32, e26) {
      t32.addFieldOffset(3, e26, 0);
    }
    static createFeaturesVector(t32, e26) {
      t32.startVector(8, e26.length, 8);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addInt64(e26[i29]);
      return t32.endVector();
    }
    static startFeaturesVector(t32, e26) {
      t32.startVector(8, e26, 8);
    }
    static endSchema(t32) {
      return t32.endObject();
    }
    static finishSchemaBuffer(t32, e26) {
      t32.finish(e26);
    }
    static finishSizePrefixedSchemaBuffer(t32, e26) {
      t32.finish(e26, void 0, true);
    }
    static createSchema(t32, e26, i29, n37, r91) {
      return _Ct.startSchema(t32), _Ct.addEndianness(t32, e26), _Ct.addFields(t32, i29), _Ct.addCustomMetadata(t32, n37), _Ct.addFeatures(t32, r91), _Ct.endSchema(t32);
    }
  };
  !function(t32) {
    t32[t32.Row = 0] = "Row", t32[t32.Column = 1] = "Column";
  }(it2 || (it2 = {})), function(t32) {
    t32[t32.NONE = 0] = "NONE", t32[t32.SparseTensorIndexCOO = 1] = "SparseTensorIndexCOO", t32[t32.SparseMatrixIndexCSX = 2] = "SparseMatrixIndexCSX", t32[t32.SparseTensorIndexCSF = 3] = "SparseTensorIndexCSF";
  }(nt || (nt = {})), function(t32) {
    t32[t32.NONE = 0] = "NONE", t32[t32.Schema = 1] = "Schema", t32[t32.DictionaryBatch = 2] = "DictionaryBatch", t32[t32.RecordBatch = 3] = "RecordBatch", t32[t32.Tensor = 4] = "Tensor", t32[t32.SparseTensor = 5] = "SparseTensor";
  }(rt || (rt = {})), function(t32) {
    t32[t32.NONE = 0] = "NONE", t32[t32.Null = 1] = "Null", t32[t32.Int = 2] = "Int", t32[t32.Float = 3] = "Float", t32[t32.Binary = 4] = "Binary", t32[t32.Utf8 = 5] = "Utf8", t32[t32.Bool = 6] = "Bool", t32[t32.Decimal = 7] = "Decimal", t32[t32.Date = 8] = "Date", t32[t32.Time = 9] = "Time", t32[t32.Timestamp = 10] = "Timestamp", t32[t32.Interval = 11] = "Interval", t32[t32.List = 12] = "List", t32[t32.Struct = 13] = "Struct", t32[t32.Union = 14] = "Union", t32[t32.FixedSizeBinary = 15] = "FixedSizeBinary", t32[t32.FixedSizeList = 16] = "FixedSizeList", t32[t32.Map = 17] = "Map", t32[t32.Duration = 18] = "Duration", t32[t32.LargeBinary = 19] = "LargeBinary", t32[t32.LargeUtf8 = 20] = "LargeUtf8", t32[t32.Dictionary = -1] = "Dictionary", t32[t32.Int8 = -2] = "Int8", t32[t32.Int16 = -3] = "Int16", t32[t32.Int32 = -4] = "Int32", t32[t32.Int64 = -5] = "Int64", t32[t32.Uint8 = -6] = "Uint8", t32[t32.Uint16 = -7] = "Uint16", t32[t32.Uint32 = -8] = "Uint32", t32[t32.Uint64 = -9] = "Uint64", t32[t32.Float16 = -10] = "Float16", t32[t32.Float32 = -11] = "Float32", t32[t32.Float64 = -12] = "Float64", t32[t32.DateDay = -13] = "DateDay", t32[t32.DateMillisecond = -14] = "DateMillisecond", t32[t32.TimestampSecond = -15] = "TimestampSecond", t32[t32.TimestampMillisecond = -16] = "TimestampMillisecond", t32[t32.TimestampMicrosecond = -17] = "TimestampMicrosecond", t32[t32.TimestampNanosecond = -18] = "TimestampNanosecond", t32[t32.TimeSecond = -19] = "TimeSecond", t32[t32.TimeMillisecond = -20] = "TimeMillisecond", t32[t32.TimeMicrosecond = -21] = "TimeMicrosecond", t32[t32.TimeNanosecond = -22] = "TimeNanosecond", t32[t32.DenseUnion = -23] = "DenseUnion", t32[t32.SparseUnion = -24] = "SparseUnion", t32[t32.IntervalDayTime = -25] = "IntervalDayTime", t32[t32.IntervalYearMonth = -26] = "IntervalYearMonth", t32[t32.DurationSecond = -27] = "DurationSecond", t32[t32.DurationMillisecond = -28] = "DurationMillisecond", t32[t32.DurationMicrosecond = -29] = "DurationMicrosecond", t32[t32.DurationNanosecond = -30] = "DurationNanosecond";
  }(st || (st = {})), function(t32) {
    t32[t32.OFFSET = 0] = "OFFSET", t32[t32.DATA = 1] = "DATA", t32[t32.VALIDITY = 2] = "VALIDITY", t32[t32.TYPE = 3] = "TYPE";
  }(ot || (ot = {}));
  var Et = void 0;
  function Vt(t32) {
    if (null === t32)
      return "null";
    if (t32 === Et)
      return "undefined";
    switch (typeof t32) {
      case "number":
      case "bigint":
        return `${t32}`;
      case "string":
        return `"${t32}"`;
    }
    return "function" == typeof t32[Symbol.toPrimitive] ? t32[Symbol.toPrimitive]("string") : ArrayBuffer.isView(t32) ? t32 instanceof BigInt64Array || t32 instanceof BigUint64Array ? `[${[...t32].map((t33) => Vt(t33))}]` : `[${t32}]` : ArrayBuffer.isView(t32) ? `[${t32}]` : JSON.stringify(t32, (t33, e26) => "bigint" == typeof e26 ? `${e26}` : e26);
  }
  var Rt = Object.freeze({ __proto__: null, valueToString: Vt });
  function zt(t32) {
    if ("bigint" == typeof t32 && (t32 < Number.MIN_SAFE_INTEGER || t32 > Number.MAX_SAFE_INTEGER))
      throw new TypeError(`${t32} is not safe to convert to a number.`);
    return Number(t32);
  }
  function Pt(t32, e26) {
    return zt(t32 / e26) + zt(t32 % e26) / zt(e26);
  }
  var jt = Symbol.for("isArrowBigNum");
  function kt(t32, ...e26) {
    return 0 === e26.length ? Object.setPrototypeOf(L(this.TypedArray, t32), this.constructor.prototype) : Object.setPrototypeOf(new this.TypedArray(t32, ...e26), this.constructor.prototype);
  }
  function $t(...t32) {
    return kt.apply(this, t32);
  }
  function Wt(...t32) {
    return kt.apply(this, t32);
  }
  function Yt(...t32) {
    return kt.apply(this, t32);
  }
  kt.prototype[jt] = true, kt.prototype.toJSON = function() {
    return `"${Zt(this)}"`;
  }, kt.prototype.valueOf = function(t32) {
    return Gt(this, t32);
  }, kt.prototype.toString = function() {
    return Zt(this);
  }, kt.prototype[Symbol.toPrimitive] = function(t32 = "default") {
    switch (t32) {
      case "number":
        return Gt(this);
      case "string":
        return Zt(this);
      case "default":
        return Xt(this);
    }
    return Zt(this);
  }, Object.setPrototypeOf($t.prototype, Object.create(Int32Array.prototype)), Object.setPrototypeOf(Wt.prototype, Object.create(Uint32Array.prototype)), Object.setPrototypeOf(Yt.prototype, Object.create(Uint32Array.prototype)), Object.assign($t.prototype, kt.prototype, { constructor: $t, signed: true, TypedArray: Int32Array, BigIntArray: BigInt64Array }), Object.assign(Wt.prototype, kt.prototype, { constructor: Wt, signed: false, TypedArray: Uint32Array, BigIntArray: BigUint64Array }), Object.assign(Yt.prototype, kt.prototype, { constructor: Yt, signed: true, TypedArray: Uint32Array, BigIntArray: BigUint64Array });
  var Ht = BigInt(4294967296) * BigInt(4294967296) - BigInt(1);
  function Gt(t32, e26) {
    const { buffer: i29, byteOffset: n37, byteLength: r91, signed: s29 } = t32, o35 = new BigUint64Array(i29, n37, r91 / 8), a27 = s29 && o35.at(-1) & BigInt(1) << BigInt(63);
    let l35 = BigInt(0), u30 = 0;
    if (a27) {
      for (const t33 of o35)
        l35 |= (t33 ^ Ht) * (BigInt(1) << BigInt(64 * u30++));
      l35 *= BigInt(-1), l35 -= BigInt(1);
    } else
      for (const t33 of o35)
        l35 |= t33 * (BigInt(1) << BigInt(64 * u30++));
    if ("number" == typeof e26) {
      const t33 = BigInt(Math.pow(10, e26)), i30 = l35 % t33;
      return zt(l35 / t33) + zt(i30) / zt(t33);
    }
    return zt(l35);
  }
  function Zt(t32) {
    if (8 === t32.byteLength) {
      return `${new t32.BigIntArray(t32.buffer, t32.byteOffset, 1)[0]}`;
    }
    if (!t32.signed)
      return Kt(t32);
    let e26 = new Uint16Array(t32.buffer, t32.byteOffset, t32.byteLength / 2);
    if (new Int16Array([e26.at(-1)])[0] >= 0)
      return Kt(t32);
    e26 = e26.slice();
    let i29 = 1;
    for (let t33 = 0; t33 < e26.length; t33++) {
      const n37 = e26[t33], r91 = ~n37 + i29;
      e26[t33] = r91, i29 &= 0 === n37 ? 1 : 0;
    }
    return `-${Kt(e26)}`;
  }
  function Xt(t32) {
    if (8 === t32.byteLength) {
      return new t32.BigIntArray(t32.buffer, t32.byteOffset, 1)[0];
    }
    return Zt(t32);
  }
  function Kt(t32) {
    let e26 = "";
    const i29 = new Uint32Array(2);
    let n37 = new Uint16Array(t32.buffer, t32.byteOffset, t32.byteLength / 2);
    const r91 = new Uint32Array((n37 = new Uint16Array(n37).reverse()).buffer);
    let s29 = -1;
    const o35 = n37.length - 1;
    do {
      for (i29[0] = n37[s29 = 0]; s29 < o35; )
        n37[s29++] = i29[1] = i29[0] / 10, i29[0] = (i29[0] - 10 * i29[1] << 16) + n37[s29];
      n37[s29] = i29[1] = i29[0] / 10, i29[0] = i29[0] - 10 * i29[1], e26 = `${i29[0]}${e26}`;
    } while (r91[0] || r91[1] || r91[2] || r91[3]);
    return null != e26 ? e26 : "0";
  }
  var Jt = class _Jt {
    static new(t32, e26) {
      switch (e26) {
        case true:
          return new $t(t32);
        case false:
          return new Wt(t32);
      }
      switch (t32.constructor) {
        case Int8Array:
        case Int16Array:
        case Int32Array:
        case BigInt64Array:
          return new $t(t32);
      }
      return 16 === t32.byteLength ? new Yt(t32) : new Wt(t32);
    }
    static signed(t32) {
      return new $t(t32);
    }
    static unsigned(t32) {
      return new Wt(t32);
    }
    static decimal(t32) {
      return new Yt(t32);
    }
    constructor(t32, e26) {
      return _Jt.new(t32, e26);
    }
  };
  var qt;
  var Qt;
  var te;
  var ee;
  var ie;
  var ne;
  var re;
  var se;
  var oe;
  var ae;
  var le;
  var ue;
  var ce;
  var he;
  var de;
  var pe;
  var ye;
  var fe;
  var be;
  var ge;
  var ve;
  var _e;
  var me;
  var we = Object.freeze({ __proto__: null, isArrowBigNumSymbol: jt, bigNumToNumber: Gt, bigNumToString: Zt, bigNumToBigInt: Xt, BN: Jt });
  var Ie = class _Ie {
    static isNull(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.Null;
    }
    static isInt(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.Int;
    }
    static isFloat(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.Float;
    }
    static isBinary(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.Binary;
    }
    static isLargeBinary(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.LargeBinary;
    }
    static isUtf8(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.Utf8;
    }
    static isLargeUtf8(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.LargeUtf8;
    }
    static isBool(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.Bool;
    }
    static isDecimal(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.Decimal;
    }
    static isDate(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.Date;
    }
    static isTime(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.Time;
    }
    static isTimestamp(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.Timestamp;
    }
    static isInterval(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.Interval;
    }
    static isDuration(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.Duration;
    }
    static isList(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.List;
    }
    static isStruct(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.Struct;
    }
    static isUnion(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.Union;
    }
    static isFixedSizeBinary(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.FixedSizeBinary;
    }
    static isFixedSizeList(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.FixedSizeList;
    }
    static isMap(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.Map;
    }
    static isDictionary(t32) {
      return (null == t32 ? void 0 : t32.typeId) === st.Dictionary;
    }
    static isDenseUnion(t32) {
      return _Ie.isUnion(t32) && t32.mode === H.Dense;
    }
    static isSparseUnion(t32) {
      return _Ie.isUnion(t32) && t32.mode === H.Sparse;
    }
    constructor(t32) {
      this.typeId = t32;
    }
  };
  qt = Symbol.toStringTag, Ie[qt] = ((me = Ie.prototype).children = null, me.ArrayType = Array, me.OffsetArrayType = Int32Array, me[Symbol.toStringTag] = "DataType");
  var Se = class extends Ie {
    constructor() {
      super(st.Null);
    }
    toString() {
      return "Null";
    }
  };
  Qt = Symbol.toStringTag, Se[Qt] = Se.prototype[Symbol.toStringTag] = "Null";
  var Ae = class extends Ie {
    constructor(t32, e26) {
      super(st.Int), this.isSigned = t32, this.bitWidth = e26;
    }
    get ArrayType() {
      switch (this.bitWidth) {
        case 8:
          return this.isSigned ? Int8Array : Uint8Array;
        case 16:
          return this.isSigned ? Int16Array : Uint16Array;
        case 32:
          return this.isSigned ? Int32Array : Uint32Array;
        case 64:
          return this.isSigned ? BigInt64Array : BigUint64Array;
      }
      throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);
    }
    toString() {
      return `${this.isSigned ? "I" : "Ui"}nt${this.bitWidth}`;
    }
  };
  te = Symbol.toStringTag, Ae[te] = ((t32) => (t32.isSigned = null, t32.bitWidth = null, t32[Symbol.toStringTag] = "Int"))(Ae.prototype);
  var Be = class extends Ae {
    constructor() {
      super(true, 8);
    }
    get ArrayType() {
      return Int8Array;
    }
  };
  var De = class extends Ae {
    constructor() {
      super(true, 16);
    }
    get ArrayType() {
      return Int16Array;
    }
  };
  var Te = class extends Ae {
    constructor() {
      super(true, 32);
    }
    get ArrayType() {
      return Int32Array;
    }
  };
  var Oe = class extends Ae {
    constructor() {
      super(true, 64);
    }
    get ArrayType() {
      return BigInt64Array;
    }
  };
  var Le = class extends Ae {
    constructor() {
      super(false, 8);
    }
    get ArrayType() {
      return Uint8Array;
    }
  };
  var xe = class extends Ae {
    constructor() {
      super(false, 16);
    }
    get ArrayType() {
      return Uint16Array;
    }
  };
  var Me = class extends Ae {
    constructor() {
      super(false, 32);
    }
    get ArrayType() {
      return Uint32Array;
    }
  };
  var Fe = class extends Ae {
    constructor() {
      super(false, 64);
    }
    get ArrayType() {
      return BigUint64Array;
    }
  };
  Object.defineProperty(Be.prototype, "ArrayType", { value: Int8Array }), Object.defineProperty(De.prototype, "ArrayType", { value: Int16Array }), Object.defineProperty(Te.prototype, "ArrayType", { value: Int32Array }), Object.defineProperty(Oe.prototype, "ArrayType", { value: BigInt64Array }), Object.defineProperty(Le.prototype, "ArrayType", { value: Uint8Array }), Object.defineProperty(xe.prototype, "ArrayType", { value: Uint16Array }), Object.defineProperty(Me.prototype, "ArrayType", { value: Uint32Array }), Object.defineProperty(Fe.prototype, "ArrayType", { value: BigUint64Array });
  var Ne = class extends Ie {
    constructor(t32) {
      super(st.Float), this.precision = t32;
    }
    get ArrayType() {
      switch (this.precision) {
        case G.HALF:
          return Uint16Array;
        case G.SINGLE:
          return Float32Array;
        case G.DOUBLE:
          return Float64Array;
      }
      throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);
    }
    toString() {
      return `Float${this.precision << 5 || 16}`;
    }
  };
  ee = Symbol.toStringTag, Ne[ee] = ((t32) => (t32.precision = null, t32[Symbol.toStringTag] = "Float"))(Ne.prototype);
  var Ue = class extends Ne {
    constructor() {
      super(G.HALF);
    }
  };
  var Ce = class extends Ne {
    constructor() {
      super(G.SINGLE);
    }
  };
  var Ee = class extends Ne {
    constructor() {
      super(G.DOUBLE);
    }
  };
  Object.defineProperty(Ue.prototype, "ArrayType", { value: Uint16Array }), Object.defineProperty(Ce.prototype, "ArrayType", { value: Float32Array }), Object.defineProperty(Ee.prototype, "ArrayType", { value: Float64Array });
  var Ve = class extends Ie {
    constructor() {
      super(st.Binary);
    }
    toString() {
      return "Binary";
    }
  };
  ie = Symbol.toStringTag, Ve[ie] = ((t32) => (t32.ArrayType = Uint8Array, t32[Symbol.toStringTag] = "Binary"))(Ve.prototype);
  var Re = class extends Ie {
    constructor() {
      super(st.LargeBinary);
    }
    toString() {
      return "LargeBinary";
    }
  };
  ne = Symbol.toStringTag, Re[ne] = ((t32) => (t32.ArrayType = Uint8Array, t32.OffsetArrayType = BigInt64Array, t32[Symbol.toStringTag] = "LargeBinary"))(Re.prototype);
  var ze = class extends Ie {
    constructor() {
      super(st.Utf8);
    }
    toString() {
      return "Utf8";
    }
  };
  re = Symbol.toStringTag, ze[re] = ((t32) => (t32.ArrayType = Uint8Array, t32[Symbol.toStringTag] = "Utf8"))(ze.prototype);
  var Pe = class extends Ie {
    constructor() {
      super(st.LargeUtf8);
    }
    toString() {
      return "LargeUtf8";
    }
  };
  se = Symbol.toStringTag, Pe[se] = ((t32) => (t32.ArrayType = Uint8Array, t32.OffsetArrayType = BigInt64Array, t32[Symbol.toStringTag] = "LargeUtf8"))(Pe.prototype);
  var je = class extends Ie {
    constructor() {
      super(st.Bool);
    }
    toString() {
      return "Bool";
    }
  };
  oe = Symbol.toStringTag, je[oe] = ((t32) => (t32.ArrayType = Uint8Array, t32[Symbol.toStringTag] = "Bool"))(je.prototype);
  var ke = class extends Ie {
    constructor(t32, e26, i29 = 128) {
      super(st.Decimal), this.scale = t32, this.precision = e26, this.bitWidth = i29;
    }
    toString() {
      return `Decimal[${this.precision}e${this.scale > 0 ? "+" : ""}${this.scale}]`;
    }
  };
  ae = Symbol.toStringTag, ke[ae] = ((t32) => (t32.scale = null, t32.precision = null, t32.ArrayType = Uint32Array, t32[Symbol.toStringTag] = "Decimal"))(ke.prototype);
  var $e = class extends Ie {
    constructor(t32) {
      super(st.Date), this.unit = t32;
    }
    toString() {
      return `Date${32 * (this.unit + 1)}<${Z[this.unit]}>`;
    }
    get ArrayType() {
      return this.unit === Z.DAY ? Int32Array : BigInt64Array;
    }
  };
  le = Symbol.toStringTag, $e[le] = ((t32) => (t32.unit = null, t32[Symbol.toStringTag] = "Date"))($e.prototype);
  var He = class extends Ie {
    constructor(t32, e26) {
      super(st.Time), this.unit = t32, this.bitWidth = e26;
    }
    toString() {
      return `Time${this.bitWidth}<${X[this.unit]}>`;
    }
    get ArrayType() {
      switch (this.bitWidth) {
        case 32:
          return Int32Array;
        case 64:
          return BigInt64Array;
      }
      throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);
    }
  };
  ue = Symbol.toStringTag, He[ue] = ((t32) => (t32.unit = null, t32.bitWidth = null, t32[Symbol.toStringTag] = "Time"))(He.prototype);
  var Je = class extends Ie {
    constructor(t32, e26) {
      super(st.Timestamp), this.unit = t32, this.timezone = e26;
    }
    toString() {
      return `Timestamp<${X[this.unit]}${this.timezone ? `, ${this.timezone}` : ""}>`;
    }
  };
  ce = Symbol.toStringTag, Je[ce] = ((t32) => (t32.unit = null, t32.timezone = null, t32.ArrayType = BigInt64Array, t32[Symbol.toStringTag] = "Timestamp"))(Je.prototype);
  var ii = class extends Ie {
    constructor(t32) {
      super(st.Interval), this.unit = t32;
    }
    toString() {
      return `Interval<${K[this.unit]}>`;
    }
  };
  he = Symbol.toStringTag, ii[he] = ((t32) => (t32.unit = null, t32.ArrayType = Int32Array, t32[Symbol.toStringTag] = "Interval"))(ii.prototype);
  var si = class extends Ie {
    constructor(t32) {
      super(st.Duration), this.unit = t32;
    }
    toString() {
      return `Duration<${X[this.unit]}>`;
    }
  };
  de = Symbol.toStringTag, si[de] = ((t32) => (t32.unit = null, t32.ArrayType = BigInt64Array, t32[Symbol.toStringTag] = "Duration"))(si.prototype);
  var ci = class extends Ie {
    constructor(t32) {
      super(st.List), this.children = [t32];
    }
    toString() {
      return `List<${this.valueType}>`;
    }
    get valueType() {
      return this.children[0].type;
    }
    get valueField() {
      return this.children[0];
    }
    get ArrayType() {
      return this.valueType.ArrayType;
    }
  };
  pe = Symbol.toStringTag, ci[pe] = ((t32) => (t32.children = null, t32[Symbol.toStringTag] = "List"))(ci.prototype);
  var hi = class extends Ie {
    constructor(t32) {
      super(st.Struct), this.children = t32;
    }
    toString() {
      return `Struct<{${this.children.map((t32) => `${t32.name}:${t32.type}`).join(", ")}}>`;
    }
  };
  ye = Symbol.toStringTag, hi[ye] = ((t32) => (t32.children = null, t32[Symbol.toStringTag] = "Struct"))(hi.prototype);
  var di = class extends Ie {
    constructor(t32, e26, i29) {
      super(st.Union), this.mode = t32, this.children = i29, this.typeIds = e26 = Int32Array.from(e26), this.typeIdToChildIndex = e26.reduce((t33, e27, i30) => (t33[e27] = i30) && t33 || t33, /* @__PURE__ */ Object.create(null));
    }
    toString() {
      return `${this[Symbol.toStringTag]}<${this.children.map((t32) => `${t32.type}`).join(" | ")}>`;
    }
  };
  fe = Symbol.toStringTag, di[fe] = ((t32) => (t32.mode = null, t32.typeIds = null, t32.children = null, t32.typeIdToChildIndex = null, t32.ArrayType = Int8Array, t32[Symbol.toStringTag] = "Union"))(di.prototype);
  var fi = class extends Ie {
    constructor(t32) {
      super(st.FixedSizeBinary), this.byteWidth = t32;
    }
    toString() {
      return `FixedSizeBinary[${this.byteWidth}]`;
    }
  };
  be = Symbol.toStringTag, fi[be] = ((t32) => (t32.byteWidth = null, t32.ArrayType = Uint8Array, t32[Symbol.toStringTag] = "FixedSizeBinary"))(fi.prototype);
  var bi = class extends Ie {
    constructor(t32, e26) {
      super(st.FixedSizeList), this.listSize = t32, this.children = [e26];
    }
    get valueType() {
      return this.children[0].type;
    }
    get valueField() {
      return this.children[0];
    }
    get ArrayType() {
      return this.valueType.ArrayType;
    }
    toString() {
      return `FixedSizeList[${this.listSize}]<${this.valueType}>`;
    }
  };
  ge = Symbol.toStringTag, bi[ge] = ((t32) => (t32.children = null, t32.listSize = null, t32[Symbol.toStringTag] = "FixedSizeList"))(bi.prototype);
  var gi = class extends Ie {
    constructor(t32, e26 = false) {
      var i29, n37, r91;
      if (super(st.Map), this.children = [t32], this.keysSorted = e26, t32 && (t32.name = "entries", null === (i29 = null == t32 ? void 0 : t32.type) || void 0 === i29 ? void 0 : i29.children)) {
        const e27 = null === (n37 = null == t32 ? void 0 : t32.type) || void 0 === n37 ? void 0 : n37.children[0];
        e27 && (e27.name = "key");
        const i30 = null === (r91 = null == t32 ? void 0 : t32.type) || void 0 === r91 ? void 0 : r91.children[1];
        i30 && (i30.name = "value");
      }
    }
    get keyType() {
      return this.children[0].type.children[0].type;
    }
    get valueType() {
      return this.children[0].type.children[1].type;
    }
    get childType() {
      return this.children[0].type;
    }
    toString() {
      return `Map<{${this.children[0].type.children.map((t32) => `${t32.name}:${t32.type}`).join(", ")}}>`;
    }
  };
  ve = Symbol.toStringTag, gi[ve] = ((t32) => (t32.children = null, t32.keysSorted = null, t32[Symbol.toStringTag] = "Map_"))(gi.prototype);
  var vi = (_i = -1, () => ++_i);
  var _i;
  var mi = class extends Ie {
    constructor(t32, e26, i29, n37) {
      super(st.Dictionary), this.indices = e26, this.dictionary = t32, this.isOrdered = n37 || false, this.id = null == i29 ? vi() : zt(i29);
    }
    get children() {
      return this.dictionary.children;
    }
    get valueType() {
      return this.dictionary;
    }
    get ArrayType() {
      return this.dictionary.ArrayType;
    }
    toString() {
      return `Dictionary<${this.indices}, ${this.dictionary}>`;
    }
  };
  function wi(t32) {
    const e26 = t32;
    switch (t32.typeId) {
      case st.Decimal:
        return t32.bitWidth / 32;
      case st.Interval:
        return 1 + e26.unit;
      case st.FixedSizeList:
        return e26.listSize;
      case st.FixedSizeBinary:
        return e26.byteWidth;
      default:
        return 1;
    }
  }
  _e = Symbol.toStringTag, mi[_e] = ((t32) => (t32.id = null, t32.indices = null, t32.isOrdered = null, t32.dictionary = null, t32[Symbol.toStringTag] = "Dictionary"))(mi.prototype);
  var Ii = class {
    visitMany(t32, ...e26) {
      return t32.map((t33, i29) => this.visit(t33, ...e26.map((t34) => t34[i29])));
    }
    visit(...t32) {
      return this.getVisitFn(t32[0], false).apply(this, t32);
    }
    getVisitFn(t32, e26 = true) {
      return function(t33, e27, i29 = true) {
        if ("number" == typeof e27)
          return Si(t33, e27, i29);
        if ("string" == typeof e27 && e27 in st)
          return Si(t33, st[e27], i29);
        if (e27 && e27 instanceof Ie)
          return Si(t33, Ai(e27), i29);
        if ((null == e27 ? void 0 : e27.type) && e27.type instanceof Ie)
          return Si(t33, Ai(e27.type), i29);
        return Si(t33, st.NONE, i29);
      }(this, t32, e26);
    }
    getVisitFnByTypeId(t32, e26 = true) {
      return Si(this, t32, e26);
    }
    visitNull(t32, ...e26) {
      return null;
    }
    visitBool(t32, ...e26) {
      return null;
    }
    visitInt(t32, ...e26) {
      return null;
    }
    visitFloat(t32, ...e26) {
      return null;
    }
    visitUtf8(t32, ...e26) {
      return null;
    }
    visitLargeUtf8(t32, ...e26) {
      return null;
    }
    visitBinary(t32, ...e26) {
      return null;
    }
    visitLargeBinary(t32, ...e26) {
      return null;
    }
    visitFixedSizeBinary(t32, ...e26) {
      return null;
    }
    visitDate(t32, ...e26) {
      return null;
    }
    visitTimestamp(t32, ...e26) {
      return null;
    }
    visitTime(t32, ...e26) {
      return null;
    }
    visitDecimal(t32, ...e26) {
      return null;
    }
    visitList(t32, ...e26) {
      return null;
    }
    visitStruct(t32, ...e26) {
      return null;
    }
    visitUnion(t32, ...e26) {
      return null;
    }
    visitDictionary(t32, ...e26) {
      return null;
    }
    visitInterval(t32, ...e26) {
      return null;
    }
    visitDuration(t32, ...e26) {
      return null;
    }
    visitFixedSizeList(t32, ...e26) {
      return null;
    }
    visitMap(t32, ...e26) {
      return null;
    }
  };
  function Si(t32, e26, i29 = true) {
    let n37 = null;
    switch (e26) {
      case st.Null:
        n37 = t32.visitNull;
        break;
      case st.Bool:
        n37 = t32.visitBool;
        break;
      case st.Int:
        n37 = t32.visitInt;
        break;
      case st.Int8:
        n37 = t32.visitInt8 || t32.visitInt;
        break;
      case st.Int16:
        n37 = t32.visitInt16 || t32.visitInt;
        break;
      case st.Int32:
        n37 = t32.visitInt32 || t32.visitInt;
        break;
      case st.Int64:
        n37 = t32.visitInt64 || t32.visitInt;
        break;
      case st.Uint8:
        n37 = t32.visitUint8 || t32.visitInt;
        break;
      case st.Uint16:
        n37 = t32.visitUint16 || t32.visitInt;
        break;
      case st.Uint32:
        n37 = t32.visitUint32 || t32.visitInt;
        break;
      case st.Uint64:
        n37 = t32.visitUint64 || t32.visitInt;
        break;
      case st.Float:
        n37 = t32.visitFloat;
        break;
      case st.Float16:
        n37 = t32.visitFloat16 || t32.visitFloat;
        break;
      case st.Float32:
        n37 = t32.visitFloat32 || t32.visitFloat;
        break;
      case st.Float64:
        n37 = t32.visitFloat64 || t32.visitFloat;
        break;
      case st.Utf8:
        n37 = t32.visitUtf8;
        break;
      case st.LargeUtf8:
        n37 = t32.visitLargeUtf8;
        break;
      case st.Binary:
        n37 = t32.visitBinary;
        break;
      case st.LargeBinary:
        n37 = t32.visitLargeBinary;
        break;
      case st.FixedSizeBinary:
        n37 = t32.visitFixedSizeBinary;
        break;
      case st.Date:
        n37 = t32.visitDate;
        break;
      case st.DateDay:
        n37 = t32.visitDateDay || t32.visitDate;
        break;
      case st.DateMillisecond:
        n37 = t32.visitDateMillisecond || t32.visitDate;
        break;
      case st.Timestamp:
        n37 = t32.visitTimestamp;
        break;
      case st.TimestampSecond:
        n37 = t32.visitTimestampSecond || t32.visitTimestamp;
        break;
      case st.TimestampMillisecond:
        n37 = t32.visitTimestampMillisecond || t32.visitTimestamp;
        break;
      case st.TimestampMicrosecond:
        n37 = t32.visitTimestampMicrosecond || t32.visitTimestamp;
        break;
      case st.TimestampNanosecond:
        n37 = t32.visitTimestampNanosecond || t32.visitTimestamp;
        break;
      case st.Time:
        n37 = t32.visitTime;
        break;
      case st.TimeSecond:
        n37 = t32.visitTimeSecond || t32.visitTime;
        break;
      case st.TimeMillisecond:
        n37 = t32.visitTimeMillisecond || t32.visitTime;
        break;
      case st.TimeMicrosecond:
        n37 = t32.visitTimeMicrosecond || t32.visitTime;
        break;
      case st.TimeNanosecond:
        n37 = t32.visitTimeNanosecond || t32.visitTime;
        break;
      case st.Decimal:
        n37 = t32.visitDecimal;
        break;
      case st.List:
        n37 = t32.visitList;
        break;
      case st.Struct:
        n37 = t32.visitStruct;
        break;
      case st.Union:
        n37 = t32.visitUnion;
        break;
      case st.DenseUnion:
        n37 = t32.visitDenseUnion || t32.visitUnion;
        break;
      case st.SparseUnion:
        n37 = t32.visitSparseUnion || t32.visitUnion;
        break;
      case st.Dictionary:
        n37 = t32.visitDictionary;
        break;
      case st.Interval:
        n37 = t32.visitInterval;
        break;
      case st.IntervalDayTime:
        n37 = t32.visitIntervalDayTime || t32.visitInterval;
        break;
      case st.IntervalYearMonth:
        n37 = t32.visitIntervalYearMonth || t32.visitInterval;
        break;
      case st.Duration:
        n37 = t32.visitDuration;
        break;
      case st.DurationSecond:
        n37 = t32.visitDurationSecond || t32.visitDuration;
        break;
      case st.DurationMillisecond:
        n37 = t32.visitDurationMillisecond || t32.visitDuration;
        break;
      case st.DurationMicrosecond:
        n37 = t32.visitDurationMicrosecond || t32.visitDuration;
        break;
      case st.DurationNanosecond:
        n37 = t32.visitDurationNanosecond || t32.visitDuration;
        break;
      case st.FixedSizeList:
        n37 = t32.visitFixedSizeList;
        break;
      case st.Map:
        n37 = t32.visitMap;
    }
    if ("function" == typeof n37)
      return n37;
    if (!i29)
      return () => null;
    throw new Error(`Unrecognized type '${st[e26]}'`);
  }
  function Ai(t32) {
    switch (t32.typeId) {
      case st.Null:
        return st.Null;
      case st.Int: {
        const { bitWidth: e26, isSigned: i29 } = t32;
        switch (e26) {
          case 8:
            return i29 ? st.Int8 : st.Uint8;
          case 16:
            return i29 ? st.Int16 : st.Uint16;
          case 32:
            return i29 ? st.Int32 : st.Uint32;
          case 64:
            return i29 ? st.Int64 : st.Uint64;
        }
        return st.Int;
      }
      case st.Float:
        switch (t32.precision) {
          case G.HALF:
            return st.Float16;
          case G.SINGLE:
            return st.Float32;
          case G.DOUBLE:
            return st.Float64;
        }
        return st.Float;
      case st.Binary:
        return st.Binary;
      case st.LargeBinary:
        return st.LargeBinary;
      case st.Utf8:
        return st.Utf8;
      case st.LargeUtf8:
        return st.LargeUtf8;
      case st.Bool:
        return st.Bool;
      case st.Decimal:
        return st.Decimal;
      case st.Time:
        switch (t32.unit) {
          case X.SECOND:
            return st.TimeSecond;
          case X.MILLISECOND:
            return st.TimeMillisecond;
          case X.MICROSECOND:
            return st.TimeMicrosecond;
          case X.NANOSECOND:
            return st.TimeNanosecond;
        }
        return st.Time;
      case st.Timestamp:
        switch (t32.unit) {
          case X.SECOND:
            return st.TimestampSecond;
          case X.MILLISECOND:
            return st.TimestampMillisecond;
          case X.MICROSECOND:
            return st.TimestampMicrosecond;
          case X.NANOSECOND:
            return st.TimestampNanosecond;
        }
        return st.Timestamp;
      case st.Date:
        switch (t32.unit) {
          case Z.DAY:
            return st.DateDay;
          case Z.MILLISECOND:
            return st.DateMillisecond;
        }
        return st.Date;
      case st.Interval:
        switch (t32.unit) {
          case K.DAY_TIME:
            return st.IntervalDayTime;
          case K.YEAR_MONTH:
            return st.IntervalYearMonth;
        }
        return st.Interval;
      case st.Duration:
        switch (t32.unit) {
          case X.SECOND:
            return st.DurationSecond;
          case X.MILLISECOND:
            return st.DurationMillisecond;
          case X.MICROSECOND:
            return st.DurationMicrosecond;
          case X.NANOSECOND:
            return st.DurationNanosecond;
        }
        return st.Duration;
      case st.Map:
        return st.Map;
      case st.List:
        return st.List;
      case st.Struct:
        return st.Struct;
      case st.Union:
        switch (t32.mode) {
          case H.Dense:
            return st.DenseUnion;
          case H.Sparse:
            return st.SparseUnion;
        }
        return st.Union;
      case st.FixedSizeBinary:
        return st.FixedSizeBinary;
      case st.FixedSizeList:
        return st.FixedSizeList;
      case st.Dictionary:
        return st.Dictionary;
    }
    throw new Error(`Unrecognized type '${st[t32.typeId]}'`);
  }
  Ii.prototype.visitInt8 = null, Ii.prototype.visitInt16 = null, Ii.prototype.visitInt32 = null, Ii.prototype.visitInt64 = null, Ii.prototype.visitUint8 = null, Ii.prototype.visitUint16 = null, Ii.prototype.visitUint32 = null, Ii.prototype.visitUint64 = null, Ii.prototype.visitFloat16 = null, Ii.prototype.visitFloat32 = null, Ii.prototype.visitFloat64 = null, Ii.prototype.visitDateDay = null, Ii.prototype.visitDateMillisecond = null, Ii.prototype.visitTimestampSecond = null, Ii.prototype.visitTimestampMillisecond = null, Ii.prototype.visitTimestampMicrosecond = null, Ii.prototype.visitTimestampNanosecond = null, Ii.prototype.visitTimeSecond = null, Ii.prototype.visitTimeMillisecond = null, Ii.prototype.visitTimeMicrosecond = null, Ii.prototype.visitTimeNanosecond = null, Ii.prototype.visitDenseUnion = null, Ii.prototype.visitSparseUnion = null, Ii.prototype.visitIntervalDayTime = null, Ii.prototype.visitIntervalYearMonth = null, Ii.prototype.visitDuration = null, Ii.prototype.visitDurationSecond = null, Ii.prototype.visitDurationMillisecond = null, Ii.prototype.visitDurationMicrosecond = null, Ii.prototype.visitDurationNanosecond = null;
  var Bi = new Float64Array(1);
  var Di = new Uint32Array(Bi.buffer);
  function Ti(t32) {
    const e26 = (31744 & t32) >> 10, i29 = (1023 & t32) / 1024, n37 = Math.pow(-1, (32768 & t32) >> 15);
    switch (e26) {
      case 31:
        return n37 * (i29 ? Number.NaN : 1 / 0);
      case 0:
        return n37 * (i29 ? 6103515625e-14 * i29 : 0);
    }
    return n37 * Math.pow(2, e26 - 15) * (1 + i29);
  }
  function Oi(t32) {
    if (t32 != t32)
      return 32256;
    Bi[0] = t32;
    const e26 = (2147483648 & Di[1]) >> 16 & 65535;
    let i29 = 2146435072 & Di[1], n37 = 0;
    return i29 >= 1089470464 ? Di[0] > 0 ? i29 = 31744 : (i29 = (2080374784 & i29) >> 16, n37 = (1048575 & Di[1]) >> 10) : i29 <= 1056964608 ? (n37 = 1048576 + (1048575 & Di[1]), n37 = 1048576 + (n37 << (i29 >> 20) - 998) >> 21, i29 = 0) : (i29 = i29 - 1056964608 >> 10, n37 = 512 + (1048575 & Di[1]) >> 10), e26 | i29 | 65535 & n37;
  }
  var Li = Object.freeze({ __proto__: null, uint16ToFloat64: Ti, float64ToUint16: Oi });
  var xi = class extends Ii {
  };
  function Mi(t32) {
    return (e26, i29, n37) => {
      if (e26.setValid(i29, null != n37))
        return t32(e26, i29, n37);
    };
  }
  var Fi = (t32, e26, i29, n37) => {
    if (i29 + 1 < e26.length) {
      const r91 = zt(e26[i29]), s29 = zt(e26[i29 + 1]);
      t32.set(n37.subarray(0, s29 - r91), r91);
    }
  };
  var Ni = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var Ui = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var Ci = ({ values: t32 }, e26, i29) => {
    t32[e26] = Oi(i29);
  };
  var Ei = ({ values: t32 }, e26, i29) => {
    ((t33, e27, i30) => {
      t33[e27] = Math.floor(i30 / 864e5);
    })(t32, e26, i29.valueOf());
  };
  var Vi = ({ values: t32 }, e26, i29) => {
    t32[e26] = BigInt(i29);
  };
  var Ri = ({ stride: t32, values: e26 }, i29, n37) => {
    e26.set(n37.subarray(0, t32), t32 * i29);
  };
  var zi = ({ values: t32, valueOffsets: e26 }, i29, n37) => Fi(t32, e26, i29, n37);
  var Pi = ({ values: t32, valueOffsets: e26 }, i29, n37) => Fi(t32, e26, i29, h3(n37));
  var ji = (t32, e26, i29) => {
    t32.type.unit === Z.DAY ? Ei(t32, e26, i29) : Vi(t32, e26, i29);
  };
  var ki = ({ values: t32 }, e26, i29) => {
    t32[e26] = BigInt(i29 / 1e3);
  };
  var $i = ({ values: t32 }, e26, i29) => {
    t32[e26] = BigInt(i29);
  };
  var Wi = ({ values: t32 }, e26, i29) => {
    t32[e26] = BigInt(1e3 * i29);
  };
  var Yi = ({ values: t32 }, e26, i29) => {
    t32[e26] = BigInt(1e6 * i29);
  };
  var Hi = (t32, e26, i29) => {
    switch (t32.type.unit) {
      case X.SECOND:
        return ki(t32, e26, i29);
      case X.MILLISECOND:
        return $i(t32, e26, i29);
      case X.MICROSECOND:
        return Wi(t32, e26, i29);
      case X.NANOSECOND:
        return Yi(t32, e26, i29);
    }
  };
  var Gi = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var Zi = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var Xi = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var Ki = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var Ji = (t32, e26, i29) => {
    switch (t32.type.unit) {
      case X.SECOND:
        return Gi(t32, e26, i29);
      case X.MILLISECOND:
        return Zi(t32, e26, i29);
      case X.MICROSECOND:
        return Xi(t32, e26, i29);
      case X.NANOSECOND:
        return Ki(t32, e26, i29);
    }
  };
  var qi = ({ values: t32, stride: e26 }, i29, n37) => {
    t32.set(n37.subarray(0, e26), e26 * i29);
  };
  var Qi = (t32, e26, i29) => {
    const n37 = t32.type.typeIdToChildIndex[t32.typeIds[e26]], r91 = t32.children[n37];
    cn.visit(r91, t32.valueOffsets[e26], i29);
  };
  var tn = (t32, e26, i29) => {
    const n37 = t32.type.typeIdToChildIndex[t32.typeIds[e26]], r91 = t32.children[n37];
    cn.visit(r91, e26, i29);
  };
  var en = (t32, e26, i29) => {
    t32.type.unit === K.DAY_TIME ? nn(t32, e26, i29) : rn(t32, e26, i29);
  };
  var nn = ({ values: t32 }, e26, i29) => {
    t32.set(i29.subarray(0, 2), 2 * e26);
  };
  var rn = ({ values: t32 }, e26, i29) => {
    t32[e26] = 12 * i29[0] + i29[1] % 12;
  };
  var sn = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var on = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var an = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var ln = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var un = (t32, e26, i29) => {
    switch (t32.type.unit) {
      case X.SECOND:
        return sn(t32, e26, i29);
      case X.MILLISECOND:
        return on(t32, e26, i29);
      case X.MICROSECOND:
        return an(t32, e26, i29);
      case X.NANOSECOND:
        return ln(t32, e26, i29);
    }
  };
  xi.prototype.visitBool = Mi(({ offset: t32, values: e26 }, i29, n37) => {
    const r91 = t32 + i29;
    n37 ? e26[r91 >> 3] |= 1 << r91 % 8 : e26[r91 >> 3] &= ~(1 << r91 % 8);
  }), xi.prototype.visitInt = Mi(Ni), xi.prototype.visitInt8 = Mi(Ni), xi.prototype.visitInt16 = Mi(Ni), xi.prototype.visitInt32 = Mi(Ni), xi.prototype.visitInt64 = Mi(Ni), xi.prototype.visitUint8 = Mi(Ni), xi.prototype.visitUint16 = Mi(Ni), xi.prototype.visitUint32 = Mi(Ni), xi.prototype.visitUint64 = Mi(Ni), xi.prototype.visitFloat = Mi((t32, e26, i29) => {
    switch (t32.type.precision) {
      case G.HALF:
        return Ci(t32, e26, i29);
      case G.SINGLE:
      case G.DOUBLE:
        return Ui(t32, e26, i29);
    }
  }), xi.prototype.visitFloat16 = Mi(Ci), xi.prototype.visitFloat32 = Mi(Ui), xi.prototype.visitFloat64 = Mi(Ui), xi.prototype.visitUtf8 = Mi(Pi), xi.prototype.visitLargeUtf8 = Mi(Pi), xi.prototype.visitBinary = Mi(zi), xi.prototype.visitLargeBinary = Mi(zi), xi.prototype.visitFixedSizeBinary = Mi(Ri), xi.prototype.visitDate = Mi(ji), xi.prototype.visitDateDay = Mi(Ei), xi.prototype.visitDateMillisecond = Mi(Vi), xi.prototype.visitTimestamp = Mi(Hi), xi.prototype.visitTimestampSecond = Mi(ki), xi.prototype.visitTimestampMillisecond = Mi($i), xi.prototype.visitTimestampMicrosecond = Mi(Wi), xi.prototype.visitTimestampNanosecond = Mi(Yi), xi.prototype.visitTime = Mi(Ji), xi.prototype.visitTimeSecond = Mi(Gi), xi.prototype.visitTimeMillisecond = Mi(Zi), xi.prototype.visitTimeMicrosecond = Mi(Xi), xi.prototype.visitTimeNanosecond = Mi(Ki), xi.prototype.visitDecimal = Mi(qi), xi.prototype.visitList = Mi((t32, e26, i29) => {
    const n37 = t32.children[0], r91 = t32.valueOffsets, s29 = cn.getVisitFn(n37);
    if (Array.isArray(i29))
      for (let t33 = -1, o35 = r91[e26], a27 = r91[e26 + 1]; o35 < a27; )
        s29(n37, o35++, i29[++t33]);
    else
      for (let t33 = -1, o35 = r91[e26], a27 = r91[e26 + 1]; o35 < a27; )
        s29(n37, o35++, i29.get(++t33));
  }), xi.prototype.visitStruct = Mi((t32, e26, i29) => {
    const n37 = t32.type.children.map((t33) => cn.getVisitFn(t33.type)), r91 = i29 instanceof Map ? (s29 = e26, o35 = i29, (t33, e27, i30, n38) => e27 && t33(e27, s29, o35.get(i30.name))) : i29 instanceof Er ? /* @__PURE__ */ ((t33, e27) => (i30, n38, r92, s30) => n38 && i30(n38, t33, e27.get(s30)))(e26, i29) : Array.isArray(i29) ? /* @__PURE__ */ ((t33, e27) => (i30, n38, r92, s30) => n38 && i30(n38, t33, e27[s30]))(e26, i29) : /* @__PURE__ */ ((t33, e27) => (i30, n38, r92, s30) => n38 && i30(n38, t33, e27[r92.name]))(e26, i29);
    var s29, o35;
    t32.type.children.forEach((e27, i30) => r91(n37[i30], t32.children[i30], e27, i30));
  }), xi.prototype.visitUnion = Mi((t32, e26, i29) => {
    t32.type.mode === H.Dense ? Qi(t32, e26, i29) : tn(t32, e26, i29);
  }), xi.prototype.visitDenseUnion = Mi(Qi), xi.prototype.visitSparseUnion = Mi(tn), xi.prototype.visitDictionary = Mi((t32, e26, i29) => {
    var n37;
    null === (n37 = t32.dictionary) || void 0 === n37 || n37.set(t32.values[e26], i29);
  }), xi.prototype.visitInterval = Mi(en), xi.prototype.visitIntervalDayTime = Mi(nn), xi.prototype.visitIntervalYearMonth = Mi(rn), xi.prototype.visitDuration = Mi(un), xi.prototype.visitDurationSecond = Mi(sn), xi.prototype.visitDurationMillisecond = Mi(on), xi.prototype.visitDurationMicrosecond = Mi(an), xi.prototype.visitDurationNanosecond = Mi(ln), xi.prototype.visitFixedSizeList = Mi((t32, e26, i29) => {
    const { stride: n37 } = t32, r91 = t32.children[0], s29 = cn.getVisitFn(r91);
    if (Array.isArray(i29))
      for (let t33 = -1, o35 = e26 * n37; ++t33 < n37; )
        s29(r91, o35 + t33, i29[t33]);
    else
      for (let t33 = -1, o35 = e26 * n37; ++t33 < n37; )
        s29(r91, o35 + t33, i29.get(t33));
  }), xi.prototype.visitMap = Mi((t32, e26, i29) => {
    const n37 = t32.children[0], { valueOffsets: r91 } = t32, s29 = cn.getVisitFn(n37);
    let { [e26]: o35, [e26 + 1]: a27 } = r91;
    const l35 = i29 instanceof Map ? i29.entries() : Object.entries(i29);
    for (const t33 of l35)
      if (s29(n37, o35, t33), ++o35 >= a27)
        break;
  });
  var cn = new xi();
  var hn = Symbol.for("parent");
  var dn = Symbol.for("rowIndex");
  var pn = class {
    constructor(t32, e26) {
      return this[hn] = t32, this[dn] = e26, new Proxy(this, new fn());
    }
    toArray() {
      return Object.values(this.toJSON());
    }
    toJSON() {
      const t32 = this[dn], e26 = this[hn], i29 = e26.type.children, n37 = {};
      for (let r91 = -1, s29 = i29.length; ++r91 < s29; )
        n37[i29[r91].name] = jn.visit(e26.children[r91], t32);
      return n37;
    }
    toString() {
      return `{${[...this].map(([t32, e26]) => `${Vt(t32)}: ${Vt(e26)}`).join(", ")}}`;
    }
    [Symbol.for("nodejs.util.inspect.custom")]() {
      return this.toString();
    }
    [Symbol.iterator]() {
      return new yn(this[hn], this[dn]);
    }
  };
  var yn = class {
    constructor(t32, e26) {
      this.childIndex = 0, this.children = t32.children, this.rowIndex = e26, this.childFields = t32.type.children, this.numChildren = this.childFields.length;
    }
    [Symbol.iterator]() {
      return this;
    }
    next() {
      const t32 = this.childIndex;
      return t32 < this.numChildren ? (this.childIndex = t32 + 1, { done: false, value: [this.childFields[t32].name, jn.visit(this.children[t32], this.rowIndex)] }) : { done: true, value: null };
    }
  };
  Object.defineProperties(pn.prototype, { [Symbol.toStringTag]: { enumerable: false, configurable: false, value: "Row" }, [hn]: { writable: true, enumerable: false, configurable: false, value: null }, [dn]: { writable: true, enumerable: false, configurable: false, value: -1 } });
  var fn = class {
    isExtensible() {
      return false;
    }
    deleteProperty() {
      return false;
    }
    preventExtensions() {
      return true;
    }
    ownKeys(t32) {
      return t32[hn].type.children.map((t33) => t33.name);
    }
    has(t32, e26) {
      return -1 !== t32[hn].type.children.findIndex((t33) => t33.name === e26);
    }
    getOwnPropertyDescriptor(t32, e26) {
      if (-1 !== t32[hn].type.children.findIndex((t33) => t33.name === e26))
        return { writable: true, enumerable: true, configurable: true };
    }
    get(t32, e26) {
      if (Reflect.has(t32, e26))
        return t32[e26];
      const i29 = t32[hn].type.children.findIndex((t33) => t33.name === e26);
      if (-1 !== i29) {
        const n37 = jn.visit(t32[hn].children[i29], t32[dn]);
        return Reflect.set(t32, e26, n37), n37;
      }
    }
    set(t32, e26, i29) {
      const n37 = t32[hn].type.children.findIndex((t33) => t33.name === e26);
      return -1 !== n37 ? (cn.visit(t32[hn].children[n37], t32[dn], i29), Reflect.set(t32, e26, i29)) : !(!Reflect.has(t32, e26) && "symbol" != typeof e26) && Reflect.set(t32, e26, i29);
    }
  };
  var bn = class extends Ii {
  };
  function gn(t32) {
    return (e26, i29) => e26.getValid(i29) ? t32(e26, i29) : null;
  }
  var vn = (t32, e26, i29) => {
    if (i29 + 1 >= e26.length)
      return null;
    const n37 = zt(e26[i29]), r91 = zt(e26[i29 + 1]);
    return t32.subarray(n37, r91);
  };
  var _n = ({ values: t32 }, e26) => ((t33, e27) => 864e5 * t33[e27])(t32, e26);
  var mn = ({ values: t32 }, e26) => zt(t32[e26]);
  var wn = ({ stride: t32, values: e26 }, i29) => e26[t32 * i29];
  var In = ({ values: t32 }, e26) => t32[e26];
  var Sn = ({ values: t32, valueOffsets: e26 }, i29) => vn(t32, e26, i29);
  var An = ({ values: t32, valueOffsets: e26 }, i29) => {
    const n37 = vn(t32, e26, i29);
    return null !== n37 ? u(n37) : null;
  };
  var Bn = ({ values: t32 }, e26) => 1e3 * zt(t32[e26]);
  var Dn = ({ values: t32 }, e26) => zt(t32[e26]);
  var Tn = ({ values: t32 }, e26) => Pt(t32[e26], BigInt(1e3));
  var On = ({ values: t32 }, e26) => Pt(t32[e26], BigInt(1e6));
  var Ln = ({ values: t32 }, e26) => t32[e26];
  var xn = ({ values: t32 }, e26) => t32[e26];
  var Mn = ({ values: t32 }, e26) => t32[e26];
  var Fn = ({ values: t32 }, e26) => t32[e26];
  var Nn = (t32, e26) => {
    const i29 = t32.type.typeIdToChildIndex[t32.typeIds[e26]], n37 = t32.children[i29];
    return jn.visit(n37, t32.valueOffsets[e26]);
  };
  var Un = (t32, e26) => {
    const i29 = t32.type.typeIdToChildIndex[t32.typeIds[e26]], n37 = t32.children[i29];
    return jn.visit(n37, e26);
  };
  var Cn = ({ values: t32 }, e26) => t32.subarray(2 * e26, 2 * (e26 + 1));
  var En = ({ values: t32 }, e26) => {
    const i29 = t32[e26], n37 = new Int32Array(2);
    return n37[0] = Math.trunc(i29 / 12), n37[1] = Math.trunc(i29 % 12), n37;
  };
  var Vn = ({ values: t32 }, e26) => t32[e26];
  var Rn = ({ values: t32 }, e26) => t32[e26];
  var zn = ({ values: t32 }, e26) => t32[e26];
  var Pn = ({ values: t32 }, e26) => t32[e26];
  bn.prototype.visitNull = gn((t32, e26) => null), bn.prototype.visitBool = gn(({ offset: t32, values: e26 }, i29) => {
    const n37 = t32 + i29;
    return 0 != (e26[n37 >> 3] & 1 << n37 % 8);
  }), bn.prototype.visitInt = gn(({ values: t32 }, e26) => t32[e26]), bn.prototype.visitInt8 = gn(wn), bn.prototype.visitInt16 = gn(wn), bn.prototype.visitInt32 = gn(wn), bn.prototype.visitInt64 = gn(In), bn.prototype.visitUint8 = gn(wn), bn.prototype.visitUint16 = gn(wn), bn.prototype.visitUint32 = gn(wn), bn.prototype.visitUint64 = gn(In), bn.prototype.visitFloat = gn(({ type: t32, values: e26 }, i29) => t32.precision !== G.HALF ? e26[i29] : Ti(e26[i29])), bn.prototype.visitFloat16 = gn(({ stride: t32, values: e26 }, i29) => Ti(e26[t32 * i29])), bn.prototype.visitFloat32 = gn(wn), bn.prototype.visitFloat64 = gn(wn), bn.prototype.visitUtf8 = gn(An), bn.prototype.visitLargeUtf8 = gn(An), bn.prototype.visitBinary = gn(Sn), bn.prototype.visitLargeBinary = gn(Sn), bn.prototype.visitFixedSizeBinary = gn(({ stride: t32, values: e26 }, i29) => e26.subarray(t32 * i29, t32 * (i29 + 1))), bn.prototype.visitDate = gn((t32, e26) => t32.type.unit === Z.DAY ? _n(t32, e26) : mn(t32, e26)), bn.prototype.visitDateDay = gn(_n), bn.prototype.visitDateMillisecond = gn(mn), bn.prototype.visitTimestamp = gn((t32, e26) => {
    switch (t32.type.unit) {
      case X.SECOND:
        return Bn(t32, e26);
      case X.MILLISECOND:
        return Dn(t32, e26);
      case X.MICROSECOND:
        return Tn(t32, e26);
      case X.NANOSECOND:
        return On(t32, e26);
    }
  }), bn.prototype.visitTimestampSecond = gn(Bn), bn.prototype.visitTimestampMillisecond = gn(Dn), bn.prototype.visitTimestampMicrosecond = gn(Tn), bn.prototype.visitTimestampNanosecond = gn(On), bn.prototype.visitTime = gn((t32, e26) => {
    switch (t32.type.unit) {
      case X.SECOND:
        return Ln(t32, e26);
      case X.MILLISECOND:
        return xn(t32, e26);
      case X.MICROSECOND:
        return Mn(t32, e26);
      case X.NANOSECOND:
        return Fn(t32, e26);
    }
  }), bn.prototype.visitTimeSecond = gn(Ln), bn.prototype.visitTimeMillisecond = gn(xn), bn.prototype.visitTimeMicrosecond = gn(Mn), bn.prototype.visitTimeNanosecond = gn(Fn), bn.prototype.visitDecimal = gn(({ values: t32, stride: e26 }, i29) => Jt.decimal(t32.subarray(e26 * i29, e26 * (i29 + 1)))), bn.prototype.visitList = gn((t32, e26) => {
    const { valueOffsets: i29, stride: n37, children: r91 } = t32, { [e26 * n37]: s29, [e26 * n37 + 1]: o35 } = i29, a27 = r91[0].slice(s29, o35 - s29);
    return new Er([a27]);
  }), bn.prototype.visitStruct = gn((t32, e26) => new pn(t32, e26)), bn.prototype.visitUnion = gn((t32, e26) => t32.type.mode === H.Dense ? Nn(t32, e26) : Un(t32, e26)), bn.prototype.visitDenseUnion = gn(Nn), bn.prototype.visitSparseUnion = gn(Un), bn.prototype.visitDictionary = gn((t32, e26) => {
    var i29;
    return null === (i29 = t32.dictionary) || void 0 === i29 ? void 0 : i29.get(t32.values[e26]);
  }), bn.prototype.visitInterval = gn((t32, e26) => t32.type.unit === K.DAY_TIME ? Cn(t32, e26) : En(t32, e26)), bn.prototype.visitIntervalDayTime = gn(Cn), bn.prototype.visitIntervalYearMonth = gn(En), bn.prototype.visitDuration = gn((t32, e26) => {
    switch (t32.type.unit) {
      case X.SECOND:
        return Vn(t32, e26);
      case X.MILLISECOND:
        return Rn(t32, e26);
      case X.MICROSECOND:
        return zn(t32, e26);
      case X.NANOSECOND:
        return Pn(t32, e26);
    }
  }), bn.prototype.visitDurationSecond = gn(Vn), bn.prototype.visitDurationMillisecond = gn(Rn), bn.prototype.visitDurationMicrosecond = gn(zn), bn.prototype.visitDurationNanosecond = gn(Pn), bn.prototype.visitFixedSizeList = gn((t32, e26) => {
    const { stride: i29, children: n37 } = t32, r91 = n37[0].slice(e26 * i29, i29);
    return new Er([r91]);
  }), bn.prototype.visitMap = gn((t32, e26) => {
    const { valueOffsets: i29, children: n37 } = t32, { [e26]: r91, [e26 + 1]: s29 } = i29, o35 = n37[0];
    return new Hn(o35.slice(r91, s29 - r91));
  });
  var jn = new bn();
  var kn = Symbol.for("keys");
  var $n = Symbol.for("vals");
  var Wn = Symbol.for("kKeysAsStrings");
  var Yn = Symbol.for("_kKeysAsStrings");
  var Hn = class {
    constructor(t32) {
      return this[kn] = new Er([t32.children[0]]).memoize(), this[$n] = t32.children[1], new Proxy(this, new Zn());
    }
    get [Wn]() {
      return this[Yn] || (this[Yn] = Array.from(this[kn].toArray(), String));
    }
    [Symbol.iterator]() {
      return new Gn(this[kn], this[$n]);
    }
    get size() {
      return this[kn].length;
    }
    toArray() {
      return Object.values(this.toJSON());
    }
    toJSON() {
      const t32 = this[kn], e26 = this[$n], i29 = {};
      for (let n37 = -1, r91 = t32.length; ++n37 < r91; )
        i29[t32.get(n37)] = jn.visit(e26, n37);
      return i29;
    }
    toString() {
      return `{${[...this].map(([t32, e26]) => `${Vt(t32)}: ${Vt(e26)}`).join(", ")}}`;
    }
    [Symbol.for("nodejs.util.inspect.custom")]() {
      return this.toString();
    }
  };
  var Gn = class {
    constructor(t32, e26) {
      this.keys = t32, this.vals = e26, this.keyIndex = 0, this.numKeys = t32.length;
    }
    [Symbol.iterator]() {
      return this;
    }
    next() {
      const t32 = this.keyIndex;
      return t32 === this.numKeys ? { done: true, value: null } : (this.keyIndex++, { done: false, value: [this.keys.get(t32), jn.visit(this.vals, t32)] });
    }
  };
  var Zn = class {
    isExtensible() {
      return false;
    }
    deleteProperty() {
      return false;
    }
    preventExtensions() {
      return true;
    }
    ownKeys(t32) {
      return t32[Wn];
    }
    has(t32, e26) {
      return t32[Wn].includes(e26);
    }
    getOwnPropertyDescriptor(t32, e26) {
      if (-1 !== t32[Wn].indexOf(e26))
        return { writable: true, enumerable: true, configurable: true };
    }
    get(t32, e26) {
      if (Reflect.has(t32, e26))
        return t32[e26];
      const i29 = t32[Wn].indexOf(e26);
      if (-1 !== i29) {
        const n37 = jn.visit(Reflect.get(t32, $n), i29);
        return Reflect.set(t32, e26, n37), n37;
      }
    }
    set(t32, e26, i29) {
      const n37 = t32[Wn].indexOf(e26);
      return -1 !== n37 ? (cn.visit(Reflect.get(t32, $n), n37, i29), Reflect.set(t32, e26, i29)) : !!Reflect.has(t32, e26) && Reflect.set(t32, e26, i29);
    }
  };
  var Xn;
  function Kn(t32, e26, i29, n37) {
    const { length: r91 = 0 } = t32;
    let s29 = "number" != typeof e26 ? 0 : e26, o35 = "number" != typeof i29 ? r91 : i29;
    return s29 < 0 && (s29 = (s29 % r91 + r91) % r91), o35 < 0 && (o35 = (o35 % r91 + r91) % r91), o35 < s29 && (Xn = s29, s29 = o35, o35 = Xn), o35 > r91 && (o35 = r91), n37 ? n37(t32, s29, o35) : [s29, o35];
  }
  Object.defineProperties(Hn.prototype, { [Symbol.toStringTag]: { enumerable: false, configurable: false, value: "Row" }, [kn]: { writable: true, enumerable: false, configurable: false, value: null }, [$n]: { writable: true, enumerable: false, configurable: false, value: null }, [Yn]: { writable: true, enumerable: false, configurable: false, value: null } });
  var Jn = (t32, e26) => t32 < 0 ? e26 + t32 : t32;
  var qn = (t32) => t32 != t32;
  function Qn(t32) {
    if ("object" !== typeof t32 || null === t32)
      return qn(t32) ? qn : (e26) => e26 === t32;
    if (t32 instanceof Date) {
      const e26 = t32.valueOf();
      return (t33) => t33 instanceof Date && t33.valueOf() === e26;
    }
    return ArrayBuffer.isView(t32) ? (e26) => !!e26 && z(t32, e26) : t32 instanceof Map ? function(t33) {
      let e26 = -1;
      const i29 = [];
      for (const n37 of t33.values())
        i29[++e26] = Qn(n37);
      return tr(i29);
    }(t32) : Array.isArray(t32) ? function(t33) {
      const e26 = [];
      for (let i29 = -1, n37 = t33.length; ++i29 < n37; )
        e26[i29] = Qn(t33[i29]);
      return tr(e26);
    }(t32) : t32 instanceof Er ? function(t33) {
      const e26 = [];
      for (let i29 = -1, n37 = t33.length; ++i29 < n37; )
        e26[i29] = Qn(t33.get(i29));
      return tr(e26);
    }(t32) : function(t33, e26 = false) {
      const i29 = Object.keys(t33);
      if (!e26 && 0 === i29.length)
        return () => false;
      const n37 = [];
      for (let e27 = -1, r91 = i29.length; ++e27 < r91; )
        n37[e27] = Qn(t33[i29[e27]]);
      return tr(n37, i29);
    }(t32, true);
  }
  function tr(t32, e26) {
    return (i29) => {
      if (!i29 || "object" != typeof i29)
        return false;
      switch (i29.constructor) {
        case Array:
          return function(t33, e27) {
            const i30 = t33.length;
            if (e27.length !== i30)
              return false;
            for (let n37 = -1; ++n37 < i30; )
              if (!t33[n37](e27[n37]))
                return false;
            return true;
          }(t32, i29);
        case Map:
          return er(t32, i29, i29.keys());
        case Hn:
        case pn:
        case Object:
        case void 0:
          return er(t32, i29, e26 || Object.keys(i29));
      }
      return i29 instanceof Er && function(t33, e27) {
        const i30 = t33.length;
        if (e27.length !== i30)
          return false;
        for (let n37 = -1; ++n37 < i30; )
          if (!t33[n37](e27.get(n37)))
            return false;
        return true;
      }(t32, i29);
    };
  }
  function er(t32, e26, i29) {
    const n37 = i29[Symbol.iterator](), r91 = e26 instanceof Map ? e26.keys() : Object.keys(e26)[Symbol.iterator](), s29 = e26 instanceof Map ? e26.values() : Object.values(e26)[Symbol.iterator]();
    let o35 = 0;
    const a27 = t32.length;
    let l35 = s29.next(), u30 = n37.next(), c30 = r91.next();
    for (; o35 < a27 && !u30.done && !c30.done && !l35.done && (u30.value === c30.value && t32[o35](l35.value)); ++o35, u30 = n37.next(), c30 = r91.next(), l35 = s29.next())
      ;
    return !!(o35 === a27 && u30.done && c30.done && l35.done) || (n37.return && n37.return(), r91.return && r91.return(), s29.return && s29.return(), false);
  }
  var ir = Object.freeze({ __proto__: null, clampRange: Kn, wrapIndex: Jn, createElementComparator: Qn });
  function nr(t32, e26, i29, n37) {
    return 0 != (i29 & 1 << n37);
  }
  function rr(t32, e26, i29, n37) {
    return (i29 & 1 << n37) >> n37;
  }
  function sr(t32, e26, i29) {
    const n37 = i29.byteLength + 7 & -8;
    if (t32 > 0 || i29.byteLength < n37) {
      const r91 = new Uint8Array(n37);
      return r91.set(t32 % 8 == 0 ? i29.subarray(t32 >> 3) : or(new ar(i29, t32, e26, null, nr)).subarray(0, n37)), r91;
    }
    return i29;
  }
  function or(t32) {
    const e26 = [];
    let i29 = 0, n37 = 0, r91 = 0;
    for (const s30 of t32)
      s30 && (r91 |= 1 << n37), 8 == ++n37 && (e26[i29++] = r91, r91 = n37 = 0);
    (0 === i29 || n37 > 0) && (e26[i29++] = r91);
    const s29 = new Uint8Array(e26.length + 7 & -8);
    return s29.set(e26), s29;
  }
  var ar = class {
    constructor(t32, e26, i29, n37, r91) {
      this.bytes = t32, this.length = i29, this.context = n37, this.get = r91, this.bit = e26 % 8, this.byteIndex = e26 >> 3, this.byte = t32[this.byteIndex++], this.index = 0;
    }
    next() {
      return this.index < this.length ? (8 === this.bit && (this.bit = 0, this.byte = this.bytes[this.byteIndex++]), { value: this.get(this.context, this.index++, this.byte, this.bit++) }) : { done: true, value: null };
    }
    [Symbol.iterator]() {
      return this;
    }
  };
  function lr(t32, e26, i29) {
    if (i29 - e26 <= 0)
      return 0;
    if (i29 - e26 < 8) {
      let n38 = 0;
      for (const r92 of new ar(t32, e26, i29 - e26, t32, rr))
        n38 += r92;
      return n38;
    }
    const n37 = i29 >> 3 << 3, r91 = e26 + (e26 % 8 == 0 ? 0 : 8 - e26 % 8);
    return lr(t32, e26, r91) + lr(t32, n37, i29) + ur(t32, r91 >> 3, n37 - r91 >> 3);
  }
  function ur(t32, e26, i29) {
    let n37 = 0, r91 = Math.trunc(e26);
    const s29 = new DataView(t32.buffer, t32.byteOffset, t32.byteLength), o35 = void 0 === i29 ? t32.byteLength : r91 + i29;
    for (; o35 - r91 >= 4; )
      n37 += cr(s29.getUint32(r91)), r91 += 4;
    for (; o35 - r91 >= 2; )
      n37 += cr(s29.getUint16(r91)), r91 += 2;
    for (; o35 - r91 >= 1; )
      n37 += cr(s29.getUint8(r91)), r91 += 1;
    return n37;
  }
  function cr(t32) {
    let e26 = Math.trunc(t32);
    return e26 -= e26 >>> 1 & 1431655765, e26 = (858993459 & e26) + (e26 >>> 2 & 858993459), 16843009 * (e26 + (e26 >>> 4) & 252645135) >>> 24;
  }
  var hr = Object.freeze({ __proto__: null, getBool: nr, getBit: rr, setBool: function(t32, e26, i29) {
    return i29 ? !!(t32[e26 >> 3] |= 1 << e26 % 8) || true : !(t32[e26 >> 3] &= ~(1 << e26 % 8)) && false;
  }, truncateBitmap: sr, packBools: or, BitIterator: ar, popcnt_bit_range: lr, popcnt_array: ur, popcnt_uint32: cr });
  var dr = class _dr {
    get typeId() {
      return this.type.typeId;
    }
    get ArrayType() {
      return this.type.ArrayType;
    }
    get buffers() {
      return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds];
    }
    get nullable() {
      if (0 !== this._nullCount) {
        const { type: t32 } = this;
        return Ie.isSparseUnion(t32) || Ie.isDenseUnion(t32) ? this.children.some((t33) => t33.nullable) : this.nullBitmap && this.nullBitmap.byteLength > 0;
      }
      return true;
    }
    get byteLength() {
      let t32 = 0;
      const { valueOffsets: e26, values: i29, nullBitmap: n37, typeIds: r91 } = this;
      return e26 && (t32 += e26.byteLength), i29 && (t32 += i29.byteLength), n37 && (t32 += n37.byteLength), r91 && (t32 += r91.byteLength), this.children.reduce((t33, e27) => t33 + e27.byteLength, t32);
    }
    get nullCount() {
      if (Ie.isUnion(this.type))
        return this.children.reduce((t33, e27) => t33 + e27.nullCount, 0);
      let t32, e26 = this._nullCount;
      return e26 <= -1 && (t32 = this.nullBitmap) && (this._nullCount = e26 = 0 === t32.length ? 0 : this.length - lr(t32, this.offset, this.offset + this.length)), e26;
    }
    constructor(t32, e26, i29, n37, r91, s29 = [], o35) {
      let a27;
      this.type = t32, this.children = s29, this.dictionary = o35, this.offset = Math.floor(Math.max(e26 || 0, 0)), this.length = Math.floor(Math.max(i29 || 0, 0)), this._nullCount = Math.floor(Math.max(n37 || 0, -1)), r91 instanceof _dr ? (this.stride = r91.stride, this.values = r91.values, this.typeIds = r91.typeIds, this.nullBitmap = r91.nullBitmap, this.valueOffsets = r91.valueOffsets) : (this.stride = wi(t32), r91 && ((a27 = r91[0]) && (this.valueOffsets = a27), (a27 = r91[1]) && (this.values = a27), (a27 = r91[2]) && (this.nullBitmap = a27), (a27 = r91[3]) && (this.typeIds = a27)));
    }
    getValid(t32) {
      const { type: e26 } = this;
      if (Ie.isUnion(e26)) {
        const i29 = e26, n37 = this.children[i29.typeIdToChildIndex[this.typeIds[t32]]], r91 = i29.mode === H.Dense ? this.valueOffsets[t32] : t32;
        return n37.getValid(r91);
      }
      if (this.nullable && this.nullCount > 0) {
        const e27 = this.offset + t32;
        return 0 != (this.nullBitmap[e27 >> 3] & 1 << e27 % 8);
      }
      return true;
    }
    setValid(t32, e26) {
      let i29;
      const { type: n37 } = this;
      if (Ie.isUnion(n37)) {
        const r91 = n37, s29 = this.children[r91.typeIdToChildIndex[this.typeIds[t32]]], o35 = r91.mode === H.Dense ? this.valueOffsets[t32] : t32;
        i29 = s29.getValid(o35), s29.setValid(o35, e26);
      } else {
        let { nullBitmap: n38 } = this;
        const { offset: r91, length: s29 } = this, o35 = r91 + t32, a27 = 1 << o35 % 8, l35 = o35 >> 3;
        (!n38 || n38.byteLength <= l35) && (n38 = new Uint8Array((r91 + s29 + 63 & -64) >> 3).fill(255), this.nullCount > 0 ? (n38.set(sr(r91, s29, this.nullBitmap), 0), Object.assign(this, { nullBitmap: n38 })) : Object.assign(this, { nullBitmap: n38, _nullCount: 0 }));
        const u30 = n38[l35];
        i29 = 0 != (u30 & a27), n38[l35] = e26 ? u30 | a27 : u30 & ~a27;
      }
      return i29 !== !!e26 && (this._nullCount = this.nullCount + (e26 ? -1 : 1)), e26;
    }
    clone(t32 = this.type, e26 = this.offset, i29 = this.length, n37 = this._nullCount, r91 = this, s29 = this.children) {
      return new _dr(t32, e26, i29, n37, r91, s29, this.dictionary);
    }
    slice(t32, e26) {
      const { stride: i29, typeId: n37, children: r91 } = this, s29 = +(0 === this._nullCount) - 1, o35 = 16 === n37 ? i29 : 1, a27 = this._sliceBuffers(t32, e26, i29, n37);
      return this.clone(this.type, this.offset + t32, e26, s29, a27, 0 === r91.length || this.valueOffsets ? r91 : this._sliceChildren(r91, o35 * t32, o35 * e26));
    }
    _changeLengthAndBackfillNullBitmap(t32) {
      if (this.typeId === st.Null)
        return this.clone(this.type, 0, t32, 0);
      const { length: e26, nullCount: i29 } = this, n37 = new Uint8Array((t32 + 63 & -64) >> 3).fill(255, 0, e26 >> 3);
      n37[e26 >> 3] = (1 << e26 - (-8 & e26)) - 1, i29 > 0 && n37.set(sr(this.offset, e26, this.nullBitmap), 0);
      const r91 = this.buffers;
      return r91[ot.VALIDITY] = n37, this.clone(this.type, 0, t32, i29 + (t32 - e26), r91);
    }
    _sliceBuffers(t32, e26, i29, n37) {
      let r91;
      const { buffers: s29 } = this;
      return (r91 = s29[ot.TYPE]) && (s29[ot.TYPE] = r91.subarray(t32, t32 + e26)), (r91 = s29[ot.OFFSET]) && (s29[ot.OFFSET] = r91.subarray(t32, t32 + e26 + 1)) || (r91 = s29[ot.DATA]) && (s29[ot.DATA] = 6 === n37 ? r91 : r91.subarray(i29 * t32, i29 * (t32 + e26))), s29;
    }
    _sliceChildren(t32, e26, i29) {
      return t32.map((t33) => t33.slice(e26, i29));
    }
  };
  dr.prototype.children = Object.freeze([]);
  var pr = class _pr extends Ii {
    visit(t32) {
      return this.getVisitFn(t32.type).call(this, t32);
    }
    visitNull(t32) {
      const { type: e26, offset: i29 = 0, length: n37 = 0 } = t32;
      return new dr(e26, i29, n37, n37);
    }
    visitBool(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = F(t32.nullBitmap), r91 = L(e26.ArrayType, t32.data), { length: s29 = r91.length >> 3, nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new dr(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitInt(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = F(t32.nullBitmap), r91 = L(e26.ArrayType, t32.data), { length: s29 = r91.length, nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new dr(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitFloat(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = F(t32.nullBitmap), r91 = L(e26.ArrayType, t32.data), { length: s29 = r91.length, nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new dr(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitUtf8(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = F(t32.data), r91 = F(t32.nullBitmap), s29 = x(t32.valueOffsets), { length: o35 = s29.length - 1, nullCount: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new dr(e26, i29, o35, a27, [s29, n37, r91]);
    }
    visitLargeUtf8(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = F(t32.data), r91 = F(t32.nullBitmap), s29 = M(t32.valueOffsets), { length: o35 = s29.length - 1, nullCount: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new dr(e26, i29, o35, a27, [s29, n37, r91]);
    }
    visitBinary(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = F(t32.data), r91 = F(t32.nullBitmap), s29 = x(t32.valueOffsets), { length: o35 = s29.length - 1, nullCount: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new dr(e26, i29, o35, a27, [s29, n37, r91]);
    }
    visitLargeBinary(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = F(t32.data), r91 = F(t32.nullBitmap), s29 = M(t32.valueOffsets), { length: o35 = s29.length - 1, nullCount: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new dr(e26, i29, o35, a27, [s29, n37, r91]);
    }
    visitFixedSizeBinary(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = F(t32.nullBitmap), r91 = L(e26.ArrayType, t32.data), { length: s29 = r91.length / wi(e26), nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new dr(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitDate(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = F(t32.nullBitmap), r91 = L(e26.ArrayType, t32.data), { length: s29 = r91.length / wi(e26), nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new dr(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitTimestamp(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = F(t32.nullBitmap), r91 = L(e26.ArrayType, t32.data), { length: s29 = r91.length / wi(e26), nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new dr(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitTime(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = F(t32.nullBitmap), r91 = L(e26.ArrayType, t32.data), { length: s29 = r91.length / wi(e26), nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new dr(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitDecimal(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = F(t32.nullBitmap), r91 = L(e26.ArrayType, t32.data), { length: s29 = r91.length / wi(e26), nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new dr(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitList(t32) {
      const { type: e26, offset: i29 = 0, child: n37 } = t32, r91 = F(t32.nullBitmap), s29 = x(t32.valueOffsets), { length: o35 = s29.length - 1, nullCount: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new dr(e26, i29, o35, a27, [s29, void 0, r91], [n37]);
    }
    visitStruct(t32) {
      const { type: e26, offset: i29 = 0, children: n37 = [] } = t32, r91 = F(t32.nullBitmap), { length: s29 = n37.reduce((t33, { length: e27 }) => Math.max(t33, e27), 0), nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new dr(e26, i29, s29, o35, [void 0, void 0, r91], n37);
    }
    visitUnion(t32) {
      const { type: e26, offset: i29 = 0, children: n37 = [] } = t32, r91 = L(e26.ArrayType, t32.typeIds), { length: s29 = r91.length, nullCount: o35 = -1 } = t32;
      if (Ie.isSparseUnion(e26))
        return new dr(e26, i29, s29, o35, [void 0, void 0, void 0, r91], n37);
      const a27 = x(t32.valueOffsets);
      return new dr(e26, i29, s29, o35, [a27, void 0, void 0, r91], n37);
    }
    visitDictionary(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = F(t32.nullBitmap), r91 = L(e26.indices.ArrayType, t32.data), { dictionary: s29 = new Er([new _pr().visit({ type: e26.dictionary })]) } = t32, { length: o35 = r91.length, nullCount: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new dr(e26, i29, o35, a27, [void 0, r91, n37], [], s29);
    }
    visitInterval(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = F(t32.nullBitmap), r91 = L(e26.ArrayType, t32.data), { length: s29 = r91.length / wi(e26), nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new dr(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitDuration(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = F(t32.nullBitmap), r91 = L(e26.ArrayType, t32.data), { length: s29 = r91.length, nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new dr(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitFixedSizeList(t32) {
      const { type: e26, offset: i29 = 0, child: n37 = new _pr().visit({ type: e26.valueType }) } = t32, r91 = F(t32.nullBitmap), { length: s29 = n37.length / wi(e26), nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new dr(e26, i29, s29, o35, [void 0, void 0, r91], [n37]);
    }
    visitMap(t32) {
      const { type: e26, offset: i29 = 0, child: n37 = new _pr().visit({ type: e26.childType }) } = t32, r91 = F(t32.nullBitmap), s29 = x(t32.valueOffsets), { length: o35 = s29.length - 1, nullCount: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new dr(e26, i29, o35, a27, [s29, void 0, r91], [n37]);
    }
  };
  var yr = new pr();
  function fr(t32) {
    return yr.visit(t32);
  }
  var br = class {
    constructor(t32 = 0, e26) {
      this.numChunks = t32, this.getChunkIterator = e26, this.chunkIndex = 0, this.chunkIterator = this.getChunkIterator(0);
    }
    next() {
      for (; this.chunkIndex < this.numChunks; ) {
        const t32 = this.chunkIterator.next();
        if (!t32.done)
          return t32;
        ++this.chunkIndex < this.numChunks && (this.chunkIterator = this.getChunkIterator(this.chunkIndex));
      }
      return { done: true, value: null };
    }
    [Symbol.iterator]() {
      return this;
    }
  };
  function gr(t32) {
    return t32.reduce((t33, e26) => t33 + e26.nullCount, 0);
  }
  function vr(t32) {
    return t32.reduce((t33, e26, i29) => (t33[i29 + 1] = t33[i29] + e26.length, t33), new Uint32Array(t32.length + 1));
  }
  function _r(t32, e26, i29, n37) {
    const r91 = [];
    for (let s29 = -1, o35 = t32.length; ++s29 < o35; ) {
      const o36 = t32[s29], a27 = e26[s29], { length: l35 } = o36;
      if (a27 >= n37)
        break;
      if (i29 >= a27 + l35)
        continue;
      if (a27 >= i29 && a27 + l35 <= n37) {
        r91.push(o36);
        continue;
      }
      const u30 = Math.max(0, i29 - a27), c30 = Math.min(n37 - a27, l35);
      r91.push(o36.slice(u30, c30 - u30));
    }
    return 0 === r91.length && r91.push(t32[0].slice(0, 0)), r91;
  }
  function mr(t32, e26, i29, n37) {
    let r91 = 0, s29 = 0, o35 = e26.length - 1;
    do {
      if (r91 >= o35 - 1)
        return i29 < e26[o35] ? n37(t32, r91, i29 - e26[r91]) : null;
      s29 = r91 + Math.trunc(0.5 * (o35 - r91)), i29 < e26[s29] ? o35 = s29 : r91 = s29;
    } while (r91 < o35);
  }
  function wr(t32, e26) {
    return t32.getValid(e26);
  }
  function Ir(t32) {
    function e26(e27, i29, n37) {
      return t32(e27[i29], n37);
    }
    return function(t33) {
      return mr(this.data, this._offsets, t33, e26);
    };
  }
  function Sr(t32) {
    let e26;
    function i29(i30, n37, r91) {
      return t32(i30[n37], r91, e26);
    }
    return function(t33, n37) {
      const r91 = this.data;
      e26 = n37;
      const s29 = mr(r91, this._offsets, t33, i29);
      return e26 = void 0, s29;
    };
  }
  function Ar(t32) {
    let e26;
    function i29(i30, n37, r91) {
      let s29 = r91, o35 = 0, a27 = 0;
      for (let r92 = n37 - 1, l35 = i30.length; ++r92 < l35; ) {
        const n38 = i30[r92];
        if (~(o35 = t32(n38, e26, s29)))
          return a27 + o35;
        s29 = 0, a27 += n38.length;
      }
      return -1;
    }
    return function(t33, n37) {
      e26 = t33;
      const r91 = this.data, s29 = "number" != typeof n37 ? i29(r91, 0, 0) : mr(r91, this._offsets, n37, i29);
      return e26 = void 0, s29;
    };
  }
  var Br = class extends Ii {
  };
  function Dr(t32, e26, i29) {
    if (void 0 === e26)
      return -1;
    if (null === e26)
      switch (t32.typeId) {
        case st.Union:
        case st.Dictionary:
          break;
        default:
          return function(t33, e27) {
            const { nullBitmap: i30 } = t33;
            if (!i30 || t33.nullCount <= 0)
              return -1;
            let n38 = 0;
            for (const r92 of new ar(i30, t33.offset + (e27 || 0), t33.length, i30, nr)) {
              if (!r92)
                return n38;
              ++n38;
            }
            return -1;
          }(t32, i29);
      }
    const n37 = jn.getVisitFn(t32), r91 = Qn(e26);
    for (let e27 = (i29 || 0) - 1, s29 = t32.length; ++e27 < s29; )
      if (r91(n37(t32, e27)))
        return e27;
    return -1;
  }
  function Tr(t32, e26, i29) {
    const n37 = jn.getVisitFn(t32), r91 = Qn(e26);
    for (let e27 = (i29 || 0) - 1, s29 = t32.length; ++e27 < s29; )
      if (r91(n37(t32, e27)))
        return e27;
    return -1;
  }
  Br.prototype.visitNull = function(t32, e26) {
    return null === e26 && t32.length > 0 ? 0 : -1;
  }, Br.prototype.visitBool = Dr, Br.prototype.visitInt = Dr, Br.prototype.visitInt8 = Dr, Br.prototype.visitInt16 = Dr, Br.prototype.visitInt32 = Dr, Br.prototype.visitInt64 = Dr, Br.prototype.visitUint8 = Dr, Br.prototype.visitUint16 = Dr, Br.prototype.visitUint32 = Dr, Br.prototype.visitUint64 = Dr, Br.prototype.visitFloat = Dr, Br.prototype.visitFloat16 = Dr, Br.prototype.visitFloat32 = Dr, Br.prototype.visitFloat64 = Dr, Br.prototype.visitUtf8 = Dr, Br.prototype.visitLargeUtf8 = Dr, Br.prototype.visitBinary = Dr, Br.prototype.visitLargeBinary = Dr, Br.prototype.visitFixedSizeBinary = Dr, Br.prototype.visitDate = Dr, Br.prototype.visitDateDay = Dr, Br.prototype.visitDateMillisecond = Dr, Br.prototype.visitTimestamp = Dr, Br.prototype.visitTimestampSecond = Dr, Br.prototype.visitTimestampMillisecond = Dr, Br.prototype.visitTimestampMicrosecond = Dr, Br.prototype.visitTimestampNanosecond = Dr, Br.prototype.visitTime = Dr, Br.prototype.visitTimeSecond = Dr, Br.prototype.visitTimeMillisecond = Dr, Br.prototype.visitTimeMicrosecond = Dr, Br.prototype.visitTimeNanosecond = Dr, Br.prototype.visitDecimal = Dr, Br.prototype.visitList = Dr, Br.prototype.visitStruct = Dr, Br.prototype.visitUnion = Dr, Br.prototype.visitDenseUnion = Tr, Br.prototype.visitSparseUnion = Tr, Br.prototype.visitDictionary = Dr, Br.prototype.visitInterval = Dr, Br.prototype.visitIntervalDayTime = Dr, Br.prototype.visitIntervalYearMonth = Dr, Br.prototype.visitDuration = Dr, Br.prototype.visitDurationSecond = Dr, Br.prototype.visitDurationMillisecond = Dr, Br.prototype.visitDurationMicrosecond = Dr, Br.prototype.visitDurationNanosecond = Dr, Br.prototype.visitFixedSizeList = Dr, Br.prototype.visitMap = Dr;
  var Or = new Br();
  var Lr = class extends Ii {
  };
  function xr(t32) {
    const { type: e26 } = t32;
    if (0 === t32.nullCount && 1 === t32.stride && (Ie.isInt(e26) && 64 !== e26.bitWidth || Ie.isTime(e26) && 64 !== e26.bitWidth || Ie.isFloat(e26) && e26.precision !== G.HALF))
      return new br(t32.data.length, (e27) => {
        const i30 = t32.data[e27];
        return i30.values.subarray(0, i30.length)[Symbol.iterator]();
      });
    let i29 = 0;
    return new br(t32.data.length, (e27) => {
      const n37 = t32.data[e27].length, r91 = t32.slice(i29, i29 + n37);
      return i29 += n37, new Mr(r91);
    });
  }
  var Mr = class {
    constructor(t32) {
      this.vector = t32, this.index = 0;
    }
    next() {
      return this.index < this.vector.length ? { value: this.vector.get(this.index++) } : { done: true, value: null };
    }
    [Symbol.iterator]() {
      return this;
    }
  };
  Lr.prototype.visitNull = xr, Lr.prototype.visitBool = xr, Lr.prototype.visitInt = xr, Lr.prototype.visitInt8 = xr, Lr.prototype.visitInt16 = xr, Lr.prototype.visitInt32 = xr, Lr.prototype.visitInt64 = xr, Lr.prototype.visitUint8 = xr, Lr.prototype.visitUint16 = xr, Lr.prototype.visitUint32 = xr, Lr.prototype.visitUint64 = xr, Lr.prototype.visitFloat = xr, Lr.prototype.visitFloat16 = xr, Lr.prototype.visitFloat32 = xr, Lr.prototype.visitFloat64 = xr, Lr.prototype.visitUtf8 = xr, Lr.prototype.visitLargeUtf8 = xr, Lr.prototype.visitBinary = xr, Lr.prototype.visitLargeBinary = xr, Lr.prototype.visitFixedSizeBinary = xr, Lr.prototype.visitDate = xr, Lr.prototype.visitDateDay = xr, Lr.prototype.visitDateMillisecond = xr, Lr.prototype.visitTimestamp = xr, Lr.prototype.visitTimestampSecond = xr, Lr.prototype.visitTimestampMillisecond = xr, Lr.prototype.visitTimestampMicrosecond = xr, Lr.prototype.visitTimestampNanosecond = xr, Lr.prototype.visitTime = xr, Lr.prototype.visitTimeSecond = xr, Lr.prototype.visitTimeMillisecond = xr, Lr.prototype.visitTimeMicrosecond = xr, Lr.prototype.visitTimeNanosecond = xr, Lr.prototype.visitDecimal = xr, Lr.prototype.visitList = xr, Lr.prototype.visitStruct = xr, Lr.prototype.visitUnion = xr, Lr.prototype.visitDenseUnion = xr, Lr.prototype.visitSparseUnion = xr, Lr.prototype.visitDictionary = xr, Lr.prototype.visitInterval = xr, Lr.prototype.visitIntervalDayTime = xr, Lr.prototype.visitIntervalYearMonth = xr, Lr.prototype.visitDuration = xr, Lr.prototype.visitDurationSecond = xr, Lr.prototype.visitDurationMillisecond = xr, Lr.prototype.visitDurationMicrosecond = xr, Lr.prototype.visitDurationNanosecond = xr, Lr.prototype.visitFixedSizeList = xr, Lr.prototype.visitMap = xr;
  var Fr = new Lr();
  var Nr;
  var Ur = {};
  var Cr = {};
  var Er = class _Er {
    constructor(t32) {
      var e26, i29, n37;
      const r91 = t32[0] instanceof _Er ? t32.flatMap((t33) => t33.data) : t32;
      if (0 === r91.length || r91.some((t33) => !(t33 instanceof dr)))
        throw new TypeError("Vector constructor expects an Array of Data instances.");
      const s29 = null === (e26 = r91[0]) || void 0 === e26 ? void 0 : e26.type;
      switch (r91.length) {
        case 0:
          this._offsets = [0];
          break;
        case 1: {
          const { get: t33, set: e27, indexOf: i30 } = Ur[s29.typeId], n38 = r91[0];
          this.isValid = (t34) => wr(n38, t34), this.get = (e28) => t33(n38, e28), this.set = (t34, i31) => e27(n38, t34, i31), this.indexOf = (t34) => i30(n38, t34), this._offsets = [0, n38.length];
          break;
        }
        default:
          Object.setPrototypeOf(this, Cr[s29.typeId]), this._offsets = vr(r91);
      }
      this.data = r91, this.type = s29, this.stride = wi(s29), this.numChildren = null !== (n37 = null === (i29 = s29.children) || void 0 === i29 ? void 0 : i29.length) && void 0 !== n37 ? n37 : 0, this.length = this._offsets.at(-1);
    }
    get byteLength() {
      return this.data.reduce((t32, e26) => t32 + e26.byteLength, 0);
    }
    get nullable() {
      return this.data.some((t32) => t32.nullable);
    }
    get nullCount() {
      return gr(this.data);
    }
    get ArrayType() {
      return this.type.ArrayType;
    }
    get [Symbol.toStringTag]() {
      return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`;
    }
    get VectorName() {
      return `${st[this.type.typeId]}Vector`;
    }
    isValid(t32) {
      return false;
    }
    get(t32) {
      return null;
    }
    at(t32) {
      return this.get(Jn(t32, this.length));
    }
    set(t32, e26) {
    }
    indexOf(t32, e26) {
      return -1;
    }
    includes(t32, e26) {
      return this.indexOf(t32, e26) > -1;
    }
    [Symbol.iterator]() {
      return Fr.visit(this);
    }
    concat(...t32) {
      return new _Er(this.data.concat(t32.flatMap((t33) => t33.data).flat(Number.POSITIVE_INFINITY)));
    }
    slice(t32, e26) {
      return new _Er(Kn(this, t32, e26, ({ data: t33, _offsets: e27 }, i29, n37) => _r(t33, e27, i29, n37)));
    }
    toJSON() {
      return [...this];
    }
    toArray() {
      const { type: t32, data: e26, length: i29, stride: n37, ArrayType: r91 } = this;
      switch (t32.typeId) {
        case st.Int:
        case st.Float:
        case st.Decimal:
        case st.Time:
        case st.Timestamp:
          switch (e26.length) {
            case 0:
              return new r91();
            case 1:
              return e26[0].values.subarray(0, i29 * n37);
            default:
              return e26.reduce((t33, { values: e27, length: i30 }) => (t33.array.set(e27.subarray(0, i30 * n37), t33.offset), t33.offset += i30 * n37, t33), { array: new r91(i29 * n37), offset: 0 }).array;
          }
      }
      return [...this];
    }
    toString() {
      return `[${[...this].join(",")}]`;
    }
    getChild(t32) {
      var e26;
      return this.getChildAt(null === (e26 = this.type.children) || void 0 === e26 ? void 0 : e26.findIndex((e27) => e27.name === t32));
    }
    getChildAt(t32) {
      return t32 > -1 && t32 < this.numChildren ? new _Er(this.data.map(({ children: e26 }) => e26[t32])) : null;
    }
    get isMemoized() {
      return !!Ie.isDictionary(this.type) && this.data[0].dictionary.isMemoized;
    }
    memoize() {
      if (Ie.isDictionary(this.type)) {
        const t32 = new Vr(this.data[0].dictionary), e26 = this.data.map((e27) => {
          const i29 = e27.clone();
          return i29.dictionary = t32, i29;
        });
        return new _Er(e26);
      }
      return new Vr(this);
    }
    unmemoize() {
      if (Ie.isDictionary(this.type) && this.isMemoized) {
        const t32 = this.data[0].dictionary.unmemoize(), e26 = this.data.map((e27) => {
          const i29 = e27.clone();
          return i29.dictionary = t32, i29;
        });
        return new _Er(e26);
      }
      return this;
    }
  };
  Nr = Symbol.toStringTag, Er[Nr] = ((t32) => {
    t32.type = Ie.prototype, t32.data = [], t32.length = 0, t32.stride = 1, t32.numChildren = 0, t32._offsets = new Uint32Array([0]), t32[Symbol.isConcatSpreadable] = true;
    const e26 = Object.keys(st).map((t33) => st[t33]).filter((t33) => "number" == typeof t33 && t33 !== st.NONE);
    for (const i29 of e26) {
      const e27 = jn.getVisitFnByTypeId(i29), n37 = cn.getVisitFnByTypeId(i29), r91 = Or.getVisitFnByTypeId(i29);
      Ur[i29] = { get: e27, set: n37, indexOf: r91 }, Cr[i29] = Object.create(t32, { isValid: { value: Ir(wr) }, get: { value: Ir(jn.getVisitFnByTypeId(i29)) }, set: { value: Sr(cn.getVisitFnByTypeId(i29)) }, indexOf: { value: Ar(Or.getVisitFnByTypeId(i29)) } });
    }
    return "Vector";
  })(Er.prototype);
  var Vr = class _Vr extends Er {
    constructor(t32) {
      super(t32.data);
      const e26 = this.get, i29 = this.set, n37 = this.slice, r91 = new Array(this.length);
      Object.defineProperty(this, "get", { value(t33) {
        const i30 = r91[t33];
        if (void 0 !== i30)
          return i30;
        const n38 = e26.call(this, t33);
        return r91[t33] = n38, n38;
      } }), Object.defineProperty(this, "set", { value(t33, e27) {
        i29.call(this, t33, e27), r91[t33] = e27;
      } }), Object.defineProperty(this, "slice", { value: (t33, e27) => new _Vr(n37.call(this, t33, e27)) }), Object.defineProperty(this, "isMemoized", { value: true }), Object.defineProperty(this, "unmemoize", { value: () => new Er(this.data) }), Object.defineProperty(this, "memoize", { value: () => this });
    }
  };
  function zr(t32) {
    if (!t32 || t32.length <= 0)
      return function(t33) {
        return true;
      };
    let e26 = "";
    const i29 = t32.filter((t33) => t33 == t33);
    return i29.length > 0 && (e26 = `
    switch (x) {${i29.map((t33) => `
        case ${function(t34) {
      if ("bigint" != typeof t34)
        return Vt(t34);
      return `${Vt(t34)}n`;
    }(t33)}:`).join("")}
            return false;
    }`), t32.length !== i29.length && (e26 = `if (x !== x) return false;
${e26}`), new Function("x", `${e26}
return true;`);
  }
  function Pr(t32, e26) {
    const i29 = Math.ceil(t32) * e26 - 1;
    return (i29 - i29 % 64 + 64 || 64) / e26;
  }
  function jr(t32, e26 = 0) {
    return t32.length >= e26 ? t32.subarray(0, e26) : T(new t32.constructor(e26), t32, 0);
  }
  var kr = class {
    constructor(t32, e26 = 0, i29 = 1) {
      this.length = Math.ceil(e26 / i29), this.buffer = new t32(this.length), this.stride = i29, this.BYTES_PER_ELEMENT = t32.BYTES_PER_ELEMENT, this.ArrayType = t32;
    }
    get byteLength() {
      return Math.ceil(this.length * this.stride) * this.BYTES_PER_ELEMENT;
    }
    get reservedLength() {
      return this.buffer.length / this.stride;
    }
    get reservedByteLength() {
      return this.buffer.byteLength;
    }
    set(t32, e26) {
      return this;
    }
    append(t32) {
      return this.set(this.length, t32);
    }
    reserve(t32) {
      if (t32 > 0) {
        this.length += t32;
        const e26 = this.stride, i29 = this.length * e26, n37 = this.buffer.length;
        i29 >= n37 && this._resize(Pr(0 === n37 ? 1 * i29 : 2 * i29, this.BYTES_PER_ELEMENT));
      }
      return this;
    }
    flush(t32 = this.length) {
      t32 = Pr(t32 * this.stride, this.BYTES_PER_ELEMENT);
      const e26 = jr(this.buffer, t32);
      return this.clear(), e26;
    }
    clear() {
      return this.length = 0, this.buffer = new this.ArrayType(), this;
    }
    _resize(t32) {
      return this.buffer = jr(this.buffer, t32);
    }
  };
  var $r = class extends kr {
    last() {
      return this.get(this.length - 1);
    }
    get(t32) {
      return this.buffer[t32];
    }
    set(t32, e26) {
      return this.reserve(t32 - this.length + 1), this.buffer[t32 * this.stride] = e26, this;
    }
  };
  var Wr = class extends $r {
    constructor() {
      super(Uint8Array, 0, 1 / 8), this.numValid = 0;
    }
    get numInvalid() {
      return this.length - this.numValid;
    }
    get(t32) {
      return this.buffer[t32 >> 3] >> t32 % 8 & 1;
    }
    set(t32, e26) {
      const { buffer: i29 } = this.reserve(t32 - this.length + 1), n37 = t32 >> 3, r91 = t32 % 8, s29 = i29[n37] >> r91 & 1;
      return e26 ? 0 === s29 && (i29[n37] |= 1 << r91, ++this.numValid) : 1 === s29 && (i29[n37] &= ~(1 << r91), --this.numValid), this;
    }
    clear() {
      return this.numValid = 0, super.clear();
    }
  };
  var Yr = class extends $r {
    constructor(t32) {
      super(t32.OffsetArrayType, 1, 1);
    }
    append(t32) {
      return this.set(this.length - 1, t32);
    }
    set(t32, e26) {
      const i29 = this.length - 1, n37 = this.reserve(t32 - i29 + 1).buffer;
      return i29 < t32++ && i29 >= 0 && n37.fill(n37[i29], i29, t32), n37[t32] = n37[t32 - 1] + e26, this;
    }
    flush(t32 = this.length - 1) {
      return t32 > this.length && this.set(t32 - 1, this.BYTES_PER_ELEMENT > 4 ? BigInt(0) : 0), super.flush(t32 + 1);
    }
  };
  var Hr = class {
    static throughNode(t32) {
      throw new Error('"throughNode" not available in this environment');
    }
    static throughDOM(t32) {
      throw new Error('"throughDOM" not available in this environment');
    }
    constructor({ type: t32, nullValues: e26 }) {
      this.length = 0, this.finished = false, this.type = t32, this.children = [], this.nullValues = e26, this.stride = wi(t32), this._nulls = new Wr(), e26 && e26.length > 0 && (this._isValid = zr(e26));
    }
    toVector() {
      return new Er([this.flush()]);
    }
    get ArrayType() {
      return this.type.ArrayType;
    }
    get nullCount() {
      return this._nulls.numInvalid;
    }
    get numChildren() {
      return this.children.length;
    }
    get byteLength() {
      let t32 = 0;
      const { _offsets: e26, _values: i29, _nulls: n37, _typeIds: r91, children: s29 } = this;
      return e26 && (t32 += e26.byteLength), i29 && (t32 += i29.byteLength), n37 && (t32 += n37.byteLength), r91 && (t32 += r91.byteLength), s29.reduce((t33, e27) => t33 + e27.byteLength, t32);
    }
    get reservedLength() {
      return this._nulls.reservedLength;
    }
    get reservedByteLength() {
      let t32 = 0;
      return this._offsets && (t32 += this._offsets.reservedByteLength), this._values && (t32 += this._values.reservedByteLength), this._nulls && (t32 += this._nulls.reservedByteLength), this._typeIds && (t32 += this._typeIds.reservedByteLength), this.children.reduce((t33, e26) => t33 + e26.reservedByteLength, t32);
    }
    get valueOffsets() {
      return this._offsets ? this._offsets.buffer : null;
    }
    get values() {
      return this._values ? this._values.buffer : null;
    }
    get nullBitmap() {
      return this._nulls ? this._nulls.buffer : null;
    }
    get typeIds() {
      return this._typeIds ? this._typeIds.buffer : null;
    }
    append(t32) {
      return this.set(this.length, t32);
    }
    isValid(t32) {
      return this._isValid(t32);
    }
    set(t32, e26) {
      return this.setValid(t32, this.isValid(e26)) && this.setValue(t32, e26), this;
    }
    setValue(t32, e26) {
      this._setValue(this, t32, e26);
    }
    setValid(t32, e26) {
      return this.length = this._nulls.set(t32, +e26).length, e26;
    }
    addChild(t32, e26 = `${this.numChildren}`) {
      throw new Error(`Cannot append children to non-nested type "${this.type}"`);
    }
    getChildAt(t32) {
      return this.children[t32] || null;
    }
    flush() {
      let t32, e26, i29, n37;
      const { type: r91, length: s29, nullCount: o35, _typeIds: a27, _offsets: l35, _values: u30, _nulls: c30 } = this;
      (e26 = null == a27 ? void 0 : a27.flush(s29)) ? n37 = null == l35 ? void 0 : l35.flush(s29) : t32 = (n37 = null == l35 ? void 0 : l35.flush(s29)) ? null == u30 ? void 0 : u30.flush(l35.last()) : null == u30 ? void 0 : u30.flush(s29), o35 > 0 && (i29 = null == c30 ? void 0 : c30.flush(s29));
      const h35 = this.children.map((t33) => t33.flush());
      return this.clear(), fr({ type: r91, length: s29, nullCount: o35, children: h35, child: h35[0], data: t32, typeIds: e26, nullBitmap: i29, valueOffsets: n37 });
    }
    finish() {
      this.finished = true;
      for (const t32 of this.children)
        t32.finish();
      return this;
    }
    clear() {
      var t32, e26, i29, n37;
      this.length = 0, null === (t32 = this._nulls) || void 0 === t32 || t32.clear(), null === (e26 = this._values) || void 0 === e26 || e26.clear(), null === (i29 = this._offsets) || void 0 === i29 || i29.clear(), null === (n37 = this._typeIds) || void 0 === n37 || n37.clear();
      for (const t33 of this.children)
        t33.clear();
      return this;
    }
  };
  Hr.prototype.length = 1, Hr.prototype.stride = 1, Hr.prototype.children = null, Hr.prototype.finished = false, Hr.prototype.nullValues = null, Hr.prototype._isValid = () => true;
  var Gr = class extends Hr {
    constructor(t32) {
      super(t32), this._values = new $r(this.ArrayType, 0, this.stride);
    }
    setValue(t32, e26) {
      const i29 = this._values;
      return i29.reserve(t32 - i29.length + 1), super.setValue(t32, e26);
    }
  };
  var Zr = class extends Hr {
    constructor(t32) {
      super(t32), this._pendingLength = 0, this._offsets = new Yr(t32.type);
    }
    setValue(t32, e26) {
      const i29 = this._pending || (this._pending = /* @__PURE__ */ new Map()), n37 = i29.get(t32);
      n37 && (this._pendingLength -= n37.length), this._pendingLength += e26 instanceof Hn ? e26[kn].length : e26.length, i29.set(t32, e26);
    }
    setValid(t32, e26) {
      return !!super.setValid(t32, e26) || ((this._pending || (this._pending = /* @__PURE__ */ new Map())).set(t32, void 0), false);
    }
    clear() {
      return this._pendingLength = 0, this._pending = void 0, super.clear();
    }
    flush() {
      return this._flush(), super.flush();
    }
    finish() {
      return this._flush(), super.finish();
    }
    _flush() {
      const t32 = this._pending, e26 = this._pendingLength;
      return this._pendingLength = 0, this._pending = void 0, t32 && t32.size > 0 && this._flushPending(t32, e26), this;
    }
  };
  var Xr = class {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    offset() {
      return this.bb.readInt64(this.bb_pos);
    }
    metaDataLength() {
      return this.bb.readInt32(this.bb_pos + 8);
    }
    bodyLength() {
      return this.bb.readInt64(this.bb_pos + 16);
    }
    static sizeOf() {
      return 24;
    }
    static createBlock(t32, e26, i29, n37) {
      return t32.prep(8, 24), t32.writeInt64(BigInt(null != n37 ? n37 : 0)), t32.pad(4), t32.writeInt32(i29), t32.writeInt64(BigInt(null != e26 ? e26 : 0)), t32.offset();
    }
  };
  var Kr = class _Kr {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsFooter(t32, e26) {
      return (e26 || new _Kr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsFooter(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _Kr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    version() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : Y.V1;
    }
    schema(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 6);
      return e26 ? (t32 || new Ct()).__init(this.bb.__indirect(this.bb_pos + e26), this.bb) : null;
    }
    dictionaries(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 8);
      return i29 ? (e26 || new Xr()).__init(this.bb.__vector(this.bb_pos + i29) + 24 * t32, this.bb) : null;
    }
    dictionariesLength() {
      const t32 = this.bb.__offset(this.bb_pos, 8);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    recordBatches(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 10);
      return i29 ? (e26 || new Xr()).__init(this.bb.__vector(this.bb_pos + i29) + 24 * t32, this.bb) : null;
    }
    recordBatchesLength() {
      const t32 = this.bb.__offset(this.bb_pos, 10);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    customMetadata(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 12);
      return i29 ? (e26 || new yt()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + i29) + 4 * t32), this.bb) : null;
    }
    customMetadataLength() {
      const t32 = this.bb.__offset(this.bb_pos, 12);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    static startFooter(t32) {
      t32.startObject(5);
    }
    static addVersion(t32, e26) {
      t32.addFieldInt16(0, e26, Y.V1);
    }
    static addSchema(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static addDictionaries(t32, e26) {
      t32.addFieldOffset(2, e26, 0);
    }
    static startDictionariesVector(t32, e26) {
      t32.startVector(24, e26, 8);
    }
    static addRecordBatches(t32, e26) {
      t32.addFieldOffset(3, e26, 0);
    }
    static startRecordBatchesVector(t32, e26) {
      t32.startVector(24, e26, 8);
    }
    static addCustomMetadata(t32, e26) {
      t32.addFieldOffset(4, e26, 0);
    }
    static createCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addOffset(e26[i29]);
      return t32.endVector();
    }
    static startCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static endFooter(t32) {
      return t32.endObject();
    }
    static finishFooterBuffer(t32, e26) {
      t32.finish(e26);
    }
    static finishSizePrefixedFooterBuffer(t32, e26) {
      t32.finish(e26, void 0, true);
    }
  };
  var Jr = class _Jr {
    constructor(t32 = [], e26, i29, n37 = Y.V5) {
      this.fields = t32 || [], this.metadata = e26 || /* @__PURE__ */ new Map(), i29 || (i29 = ts(t32)), this.dictionaries = i29, this.metadataVersion = n37;
    }
    get [Symbol.toStringTag]() {
      return "Schema";
    }
    get names() {
      return this.fields.map((t32) => t32.name);
    }
    toString() {
      return `Schema<{ ${this.fields.map((t32, e26) => `${e26}: ${t32}`).join(", ")} }>`;
    }
    select(t32) {
      const e26 = new Set(t32), i29 = this.fields.filter((t33) => e26.has(t33.name));
      return new _Jr(i29, this.metadata);
    }
    selectAt(t32) {
      const e26 = t32.map((t33) => this.fields[t33]).filter(Boolean);
      return new _Jr(e26, this.metadata);
    }
    assign(...t32) {
      const e26 = t32[0] instanceof _Jr ? t32[0] : Array.isArray(t32[0]) ? new _Jr(t32[0]) : new _Jr(t32), i29 = [...this.fields], n37 = Qr(Qr(/* @__PURE__ */ new Map(), this.metadata), e26.metadata), r91 = e26.fields.filter((t33) => {
        const e27 = i29.findIndex((e28) => e28.name === t33.name);
        return !~e27 || (i29[e27] = t33.clone({ metadata: Qr(Qr(/* @__PURE__ */ new Map(), i29[e27].metadata), t33.metadata) })) && false;
      }), s29 = ts(r91, /* @__PURE__ */ new Map());
      return new _Jr([...i29, ...r91], n37, new Map([...this.dictionaries, ...s29]));
    }
  };
  Jr.prototype.fields = null, Jr.prototype.metadata = null, Jr.prototype.dictionaries = null;
  var qr = class _qr {
    static new(...t32) {
      let [e26, i29, n37, r91] = t32;
      return t32[0] && "object" == typeof t32[0] && ({ name: e26 } = t32[0], void 0 === i29 && (i29 = t32[0].type), void 0 === n37 && (n37 = t32[0].nullable), void 0 === r91 && (r91 = t32[0].metadata)), new _qr(`${e26}`, i29, n37, r91);
    }
    constructor(t32, e26, i29 = false, n37) {
      this.name = t32, this.type = e26, this.nullable = i29, this.metadata = n37 || /* @__PURE__ */ new Map();
    }
    get typeId() {
      return this.type.typeId;
    }
    get [Symbol.toStringTag]() {
      return "Field";
    }
    toString() {
      return `${this.name}: ${this.type}`;
    }
    clone(...t32) {
      let [e26, i29, n37, r91] = t32;
      return t32[0] && "object" == typeof t32[0] ? { name: e26 = this.name, type: i29 = this.type, nullable: n37 = this.nullable, metadata: r91 = this.metadata } = t32[0] : [e26 = this.name, i29 = this.type, n37 = this.nullable, r91 = this.metadata] = t32, _qr.new(e26, i29, n37, r91);
    }
  };
  function Qr(t32, e26) {
    return new Map([...t32 || /* @__PURE__ */ new Map(), ...e26 || /* @__PURE__ */ new Map()]);
  }
  function ts(t32, e26 = /* @__PURE__ */ new Map()) {
    for (let i29 = -1, n37 = t32.length; ++i29 < n37; ) {
      const n38 = t32[i29].type;
      if (Ie.isDictionary(n38))
        if (e26.has(n38.id)) {
          if (e26.get(n38.id) !== n38.dictionary)
            throw new Error("Cannot create Schema containing two different dictionaries with the same Id");
        } else
          e26.set(n38.id, n38.dictionary);
      n38.children && n38.children.length > 0 && ts(n38.children, e26);
    }
    return e26;
  }
  qr.prototype.type = null, qr.prototype.name = null, qr.prototype.nullable = null, qr.prototype.metadata = null;
  var es = b;
  var is = l;
  var ns = class {
    static decode(t32) {
      t32 = new is(F(t32));
      const e26 = Kr.getRootAsFooter(t32), i29 = Jr.decode(e26.schema(), /* @__PURE__ */ new Map(), e26.version());
      return new rs(i29, e26);
    }
    static encode(t32) {
      const e26 = new es(), i29 = Jr.encode(e26, t32.schema);
      Kr.startRecordBatchesVector(e26, t32.numRecordBatches);
      for (const i30 of [...t32.recordBatches()].slice().reverse())
        ss.encode(e26, i30);
      const n37 = e26.endVector();
      Kr.startDictionariesVector(e26, t32.numDictionaries);
      for (const i30 of [...t32.dictionaryBatches()].slice().reverse())
        ss.encode(e26, i30);
      const r91 = e26.endVector();
      return Kr.startFooter(e26), Kr.addSchema(e26, i29), Kr.addVersion(e26, Y.V5), Kr.addRecordBatches(e26, n37), Kr.addDictionaries(e26, r91), Kr.finishFooterBuffer(e26, Kr.endFooter(e26)), e26.asUint8Array();
    }
    get numRecordBatches() {
      return this._recordBatches.length;
    }
    get numDictionaries() {
      return this._dictionaryBatches.length;
    }
    constructor(t32, e26 = Y.V5, i29, n37) {
      this.schema = t32, this.version = e26, i29 && (this._recordBatches = i29), n37 && (this._dictionaryBatches = n37);
    }
    *recordBatches() {
      for (let t32, e26 = -1, i29 = this.numRecordBatches; ++e26 < i29; )
        (t32 = this.getRecordBatch(e26)) && (yield t32);
    }
    *dictionaryBatches() {
      for (let t32, e26 = -1, i29 = this.numDictionaries; ++e26 < i29; )
        (t32 = this.getDictionaryBatch(e26)) && (yield t32);
    }
    getRecordBatch(t32) {
      return t32 >= 0 && t32 < this.numRecordBatches && this._recordBatches[t32] || null;
    }
    getDictionaryBatch(t32) {
      return t32 >= 0 && t32 < this.numDictionaries && this._dictionaryBatches[t32] || null;
    }
  };
  var rs = class extends ns {
    get numRecordBatches() {
      return this._footer.recordBatchesLength();
    }
    get numDictionaries() {
      return this._footer.dictionariesLength();
    }
    constructor(t32, e26) {
      super(t32, e26.version()), this._footer = e26;
    }
    getRecordBatch(t32) {
      if (t32 >= 0 && t32 < this.numRecordBatches) {
        const e26 = this._footer.recordBatches(t32);
        if (e26)
          return ss.decode(e26);
      }
      return null;
    }
    getDictionaryBatch(t32) {
      if (t32 >= 0 && t32 < this.numDictionaries) {
        const e26 = this._footer.dictionaries(t32);
        if (e26)
          return ss.decode(e26);
      }
      return null;
    }
  };
  var ss = class _ss {
    static decode(t32) {
      return new _ss(t32.metaDataLength(), t32.bodyLength(), t32.offset());
    }
    static encode(t32, e26) {
      const { metaDataLength: i29 } = e26, n37 = BigInt(e26.offset), r91 = BigInt(e26.bodyLength);
      return Xr.createBlock(t32, n37, i29, r91);
    }
    constructor(t32, e26, i29) {
      this.metaDataLength = t32, this.offset = zt(i29), this.bodyLength = zt(e26);
    }
  };
  var os = Object.freeze({ done: true, value: void 0 });
  var as = class {
    constructor(t32) {
      this._json = t32;
    }
    get schema() {
      return this._json.schema;
    }
    get batches() {
      return this._json.batches || [];
    }
    get dictionaries() {
      return this._json.dictionaries || [];
    }
  };
  var ls = class {
    tee() {
      return this._getDOMStream().tee();
    }
    pipe(t32, e26) {
      return this._getNodeStream().pipe(t32, e26);
    }
    pipeTo(t32, e26) {
      return this._getDOMStream().pipeTo(t32, e26);
    }
    pipeThrough(t32, e26) {
      return this._getDOMStream().pipeThrough(t32, e26);
    }
    _getDOMStream() {
      return this._DOMStream || (this._DOMStream = this.toDOMStream());
    }
    _getNodeStream() {
      return this._nodeStream || (this._nodeStream = this.toNodeStream());
    }
  };
  var us = class extends ls {
    constructor() {
      super(), this._values = [], this.resolvers = [], this._closedPromise = new Promise((t32) => this._closedPromiseResolve = t32);
    }
    get closed() {
      return this._closedPromise;
    }
    cancel(t32) {
      return s(this, void 0, void 0, function* () {
        yield this.return(t32);
      });
    }
    write(t32) {
      this._ensureOpen() && (this.resolvers.length <= 0 ? this._values.push(t32) : this.resolvers.shift().resolve({ done: false, value: t32 }));
    }
    abort(t32) {
      this._closedPromiseResolve && (this.resolvers.length <= 0 ? this._error = { error: t32 } : this.resolvers.shift().reject({ done: true, value: t32 }));
    }
    close() {
      if (this._closedPromiseResolve) {
        const { resolvers: t32 } = this;
        for (; t32.length > 0; )
          t32.shift().resolve(os);
        this._closedPromiseResolve(), this._closedPromiseResolve = void 0;
      }
    }
    [Symbol.asyncIterator]() {
      return this;
    }
    toDOMStream(t32) {
      return j2.toDOMStream(this._closedPromiseResolve || this._error ? this : this._values, t32);
    }
    toNodeStream(t32) {
      return j2.toNodeStream(this._closedPromiseResolve || this._error ? this : this._values, t32);
    }
    throw(t32) {
      return s(this, void 0, void 0, function* () {
        return yield this.abort(t32), os;
      });
    }
    return(t32) {
      return s(this, void 0, void 0, function* () {
        return yield this.close(), os;
      });
    }
    read(t32) {
      return s(this, void 0, void 0, function* () {
        return (yield this.next(t32, "read")).value;
      });
    }
    peek(t32) {
      return s(this, void 0, void 0, function* () {
        return (yield this.next(t32, "peek")).value;
      });
    }
    next(...t32) {
      return this._values.length > 0 ? Promise.resolve({ done: false, value: this._values.shift() }) : this._error ? Promise.reject({ done: true, value: this._error.error }) : this._closedPromiseResolve ? new Promise((t33, e26) => {
        this.resolvers.push({ resolve: t33, reject: e26 });
      }) : Promise.resolve(os);
    }
    _ensureOpen() {
      if (this._closedPromiseResolve)
        return true;
      throw new Error("AsyncQueue is closed");
    }
  };
  var cs = class extends us {
    write(t32) {
      if ((t32 = F(t32)).byteLength > 0)
        return super.write(t32);
    }
    toString(t32 = false) {
      return t32 ? u(this.toUint8Array(true)) : this.toUint8Array(false).then(u);
    }
    toUint8Array(t32 = false) {
      return t32 ? O2(this._values)[0] : (() => s(this, void 0, void 0, function* () {
        var t33, e26, i29, r91;
        const s29 = [];
        let o35 = 0;
        try {
          for (var a27, l35 = true, u30 = j(this); !(t33 = (a27 = yield u30.next()).done); l35 = true) {
            r91 = a27.value, l35 = false;
            const t34 = r91;
            s29.push(t34), o35 += t34.byteLength;
          }
        } catch (t34) {
          e26 = { error: t34 };
        } finally {
          try {
            l35 || t33 || !(i29 = u30.return) || (yield i29.call(u30));
          } finally {
            if (e26)
              throw e26.error;
          }
        }
        return O2(s29, o35)[0];
      }))();
    }
  };
  var hs = class {
    constructor(t32) {
      t32 && (this.source = new ps(j2.fromIterable(t32)));
    }
    [Symbol.iterator]() {
      return this;
    }
    next(t32) {
      return this.source.next(t32);
    }
    throw(t32) {
      return this.source.throw(t32);
    }
    return(t32) {
      return this.source.return(t32);
    }
    peek(t32) {
      return this.source.peek(t32);
    }
    read(t32) {
      return this.source.read(t32);
    }
  };
  var ds = class _ds {
    constructor(t32) {
      t32 instanceof _ds ? this.source = t32.source : t32 instanceof cs ? this.source = new ys(j2.fromAsyncIterable(t32)) : A(t32) ? this.source = new ys(j2.fromNodeStream(t32)) : S(t32) ? this.source = new ys(j2.fromDOMStream(t32)) : w(t32) ? this.source = new ys(j2.fromDOMStream(t32.body)) : b2(t32) ? this.source = new ys(j2.fromIterable(t32)) : (f(t32) || g2(t32)) && (this.source = new ys(j2.fromAsyncIterable(t32)));
    }
    [Symbol.asyncIterator]() {
      return this;
    }
    next(t32) {
      return this.source.next(t32);
    }
    throw(t32) {
      return this.source.throw(t32);
    }
    return(t32) {
      return this.source.return(t32);
    }
    get closed() {
      return this.source.closed;
    }
    cancel(t32) {
      return this.source.cancel(t32);
    }
    peek(t32) {
      return this.source.peek(t32);
    }
    read(t32) {
      return this.source.read(t32);
    }
  };
  var ps = class {
    constructor(t32) {
      this.source = t32;
    }
    cancel(t32) {
      this.return(t32);
    }
    peek(t32) {
      return this.next(t32, "peek").value;
    }
    read(t32) {
      return this.next(t32, "read").value;
    }
    next(t32, e26 = "read") {
      return this.source.next({ cmd: e26, size: t32 });
    }
    throw(t32) {
      return Object.create(this.source.throw && this.source.throw(t32) || os);
    }
    return(t32) {
      return Object.create(this.source.return && this.source.return(t32) || os);
    }
  };
  var ys = class {
    constructor(t32) {
      this.source = t32, this._closedPromise = new Promise((t33) => this._closedPromiseResolve = t33);
    }
    cancel(t32) {
      return s(this, void 0, void 0, function* () {
        yield this.return(t32);
      });
    }
    get closed() {
      return this._closedPromise;
    }
    read(t32) {
      return s(this, void 0, void 0, function* () {
        return (yield this.next(t32, "read")).value;
      });
    }
    peek(t32) {
      return s(this, void 0, void 0, function* () {
        return (yield this.next(t32, "peek")).value;
      });
    }
    next(t32) {
      return s(this, arguments, void 0, function* (t33, e26 = "read") {
        return yield this.source.next({ cmd: e26, size: t33 });
      });
    }
    throw(t32) {
      return s(this, void 0, void 0, function* () {
        const e26 = this.source.throw && (yield this.source.throw(t32)) || os;
        return this._closedPromiseResolve && this._closedPromiseResolve(), this._closedPromiseResolve = void 0, Object.create(e26);
      });
    }
    return(t32) {
      return s(this, void 0, void 0, function* () {
        const e26 = this.source.return && (yield this.source.return(t32)) || os;
        return this._closedPromiseResolve && this._closedPromiseResolve(), this._closedPromiseResolve = void 0, Object.create(e26);
      });
    }
  };
  var fs = class extends hs {
    constructor(t32, e26) {
      super(), this.position = 0, this.buffer = F(t32), this.size = void 0 === e26 ? this.buffer.byteLength : e26;
    }
    readInt32(t32) {
      const { buffer: e26, byteOffset: i29 } = this.readAt(t32, 4);
      return new DataView(e26, i29).getInt32(0, true);
    }
    seek(t32) {
      return this.position = Math.min(t32, this.size), t32 < this.size;
    }
    read(t32) {
      const { buffer: e26, size: i29, position: n37 } = this;
      return e26 && n37 < i29 ? ("number" != typeof t32 && (t32 = Number.POSITIVE_INFINITY), this.position = Math.min(i29, n37 + Math.min(i29 - n37, t32)), e26.subarray(n37, this.position)) : null;
    }
    readAt(t32, e26) {
      const i29 = this.buffer, n37 = Math.min(this.size, t32 + e26);
      return i29 ? i29.subarray(t32, n37) : new Uint8Array(e26);
    }
    close() {
      this.buffer && (this.buffer = null);
    }
    throw(t32) {
      return this.close(), { done: true, value: t32 };
    }
    return(t32) {
      return this.close(), { done: true, value: t32 };
    }
  };
  var bs = class extends ds {
    constructor(t32, e26) {
      super(), this.position = 0, this._handle = t32, "number" == typeof e26 ? this.size = e26 : this._pending = (() => s(this, void 0, void 0, function* () {
        this.size = (yield t32.stat()).size, delete this._pending;
      }))();
    }
    readInt32(t32) {
      return s(this, void 0, void 0, function* () {
        const { buffer: e26, byteOffset: i29 } = yield this.readAt(t32, 4);
        return new DataView(e26, i29).getInt32(0, true);
      });
    }
    seek(t32) {
      return s(this, void 0, void 0, function* () {
        return this._pending && (yield this._pending), this.position = Math.min(t32, this.size), t32 < this.size;
      });
    }
    read(t32) {
      return s(this, void 0, void 0, function* () {
        this._pending && (yield this._pending);
        const { _handle: e26, size: i29, position: n37 } = this;
        if (e26 && n37 < i29) {
          "number" != typeof t32 && (t32 = Number.POSITIVE_INFINITY);
          let r91 = n37, s29 = 0, o35 = 0;
          const a27 = Math.min(i29, r91 + Math.min(i29 - r91, t32)), l35 = new Uint8Array(Math.max(0, (this.position = a27) - r91));
          for (; (r91 += o35) < a27 && (s29 += o35) < l35.byteLength; )
            ({ bytesRead: o35 } = yield e26.read(l35, s29, l35.byteLength - s29, r91));
          return l35;
        }
        return null;
      });
    }
    readAt(t32, e26) {
      return s(this, void 0, void 0, function* () {
        this._pending && (yield this._pending);
        const { _handle: i29, size: n37 } = this;
        if (i29 && t32 + e26 < n37) {
          const r91 = Math.min(n37, t32 + e26), s29 = new Uint8Array(r91 - t32);
          return (yield i29.read(s29, 0, e26, t32)).buffer;
        }
        return new Uint8Array(e26);
      });
    }
    close() {
      return s(this, void 0, void 0, function* () {
        const t32 = this._handle;
        this._handle = null, t32 && (yield t32.close());
      });
    }
    throw(t32) {
      return s(this, void 0, void 0, function* () {
        return yield this.close(), { done: true, value: t32 };
      });
    }
    return(t32) {
      return s(this, void 0, void 0, function* () {
        return yield this.close(), { done: true, value: t32 };
      });
    }
  };
  function gs(t32) {
    return t32 < 0 && (t32 = 4294967295 + t32 + 1), `0x${t32.toString(16)}`;
  }
  var vs = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8];
  var _s = class {
    constructor(t32) {
      this.buffer = t32;
    }
    high() {
      return this.buffer[1];
    }
    low() {
      return this.buffer[0];
    }
    _times(t32) {
      const e26 = new Uint32Array([this.buffer[1] >>> 16, 65535 & this.buffer[1], this.buffer[0] >>> 16, 65535 & this.buffer[0]]), i29 = new Uint32Array([t32.buffer[1] >>> 16, 65535 & t32.buffer[1], t32.buffer[0] >>> 16, 65535 & t32.buffer[0]]);
      let n37 = e26[3] * i29[3];
      this.buffer[0] = 65535 & n37;
      let r91 = n37 >>> 16;
      return n37 = e26[2] * i29[3], r91 += n37, n37 = e26[3] * i29[2] >>> 0, r91 += n37, this.buffer[0] += r91 << 16, this.buffer[1] = r91 >>> 0 < n37 ? 65536 : 0, this.buffer[1] += r91 >>> 16, this.buffer[1] += e26[1] * i29[3] + e26[2] * i29[2] + e26[3] * i29[1], this.buffer[1] += e26[0] * i29[3] + e26[1] * i29[2] + e26[2] * i29[1] + e26[3] * i29[0] << 16, this;
    }
    _plus(t32) {
      const e26 = this.buffer[0] + t32.buffer[0] >>> 0;
      this.buffer[1] += t32.buffer[1], e26 < this.buffer[0] >>> 0 && ++this.buffer[1], this.buffer[0] = e26;
    }
    lessThan(t32) {
      return this.buffer[1] < t32.buffer[1] || this.buffer[1] === t32.buffer[1] && this.buffer[0] < t32.buffer[0];
    }
    equals(t32) {
      return this.buffer[1] === t32.buffer[1] && this.buffer[0] == t32.buffer[0];
    }
    greaterThan(t32) {
      return t32.lessThan(this);
    }
    hex() {
      return `${gs(this.buffer[1])} ${gs(this.buffer[0])}`;
    }
  };
  var ms = class _ms extends _s {
    times(t32) {
      return this._times(t32), this;
    }
    plus(t32) {
      return this._plus(t32), this;
    }
    static from(t32, e26 = new Uint32Array(2)) {
      return _ms.fromString("string" == typeof t32 ? t32 : t32.toString(), e26);
    }
    static fromNumber(t32, e26 = new Uint32Array(2)) {
      return _ms.fromString(t32.toString(), e26);
    }
    static fromString(t32, e26 = new Uint32Array(2)) {
      const i29 = t32.length, n37 = new _ms(e26);
      for (let e27 = 0; e27 < i29; ) {
        const r91 = 8 < i29 - e27 ? 8 : i29 - e27, s29 = new _ms(new Uint32Array([Number.parseInt(t32.slice(e27, e27 + r91), 10), 0])), o35 = new _ms(new Uint32Array([vs[r91], 0]));
        n37.times(o35), n37.plus(s29), e27 += r91;
      }
      return n37;
    }
    static convertArray(t32) {
      const e26 = new Uint32Array(2 * t32.length);
      for (let i29 = -1, n37 = t32.length; ++i29 < n37; )
        _ms.from(t32[i29], new Uint32Array(e26.buffer, e26.byteOffset + 2 * i29 * 4, 2));
      return e26;
    }
    static multiply(t32, e26) {
      return new _ms(new Uint32Array(t32.buffer)).times(e26);
    }
    static add(t32, e26) {
      return new _ms(new Uint32Array(t32.buffer)).plus(e26);
    }
  };
  var ws = class _ws extends _s {
    negate() {
      return this.buffer[0] = 1 + ~this.buffer[0], this.buffer[1] = ~this.buffer[1], 0 == this.buffer[0] && ++this.buffer[1], this;
    }
    times(t32) {
      return this._times(t32), this;
    }
    plus(t32) {
      return this._plus(t32), this;
    }
    lessThan(t32) {
      const e26 = this.buffer[1] << 0, i29 = t32.buffer[1] << 0;
      return e26 < i29 || e26 === i29 && this.buffer[0] < t32.buffer[0];
    }
    static from(t32, e26 = new Uint32Array(2)) {
      return _ws.fromString("string" == typeof t32 ? t32 : t32.toString(), e26);
    }
    static fromNumber(t32, e26 = new Uint32Array(2)) {
      return _ws.fromString(t32.toString(), e26);
    }
    static fromString(t32, e26 = new Uint32Array(2)) {
      const i29 = t32.startsWith("-"), n37 = t32.length, r91 = new _ws(e26);
      for (let e27 = i29 ? 1 : 0; e27 < n37; ) {
        const i30 = 8 < n37 - e27 ? 8 : n37 - e27, s29 = new _ws(new Uint32Array([Number.parseInt(t32.slice(e27, e27 + i30), 10), 0])), o35 = new _ws(new Uint32Array([vs[i30], 0]));
        r91.times(o35), r91.plus(s29), e27 += i30;
      }
      return i29 ? r91.negate() : r91;
    }
    static convertArray(t32) {
      const e26 = new Uint32Array(2 * t32.length);
      for (let i29 = -1, n37 = t32.length; ++i29 < n37; )
        _ws.from(t32[i29], new Uint32Array(e26.buffer, e26.byteOffset + 2 * i29 * 4, 2));
      return e26;
    }
    static multiply(t32, e26) {
      return new _ws(new Uint32Array(t32.buffer)).times(e26);
    }
    static add(t32, e26) {
      return new _ws(new Uint32Array(t32.buffer)).plus(e26);
    }
  };
  var Is = class _Is {
    constructor(t32) {
      this.buffer = t32;
    }
    high() {
      return new ws(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));
    }
    low() {
      return new ws(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));
    }
    negate() {
      return this.buffer[0] = 1 + ~this.buffer[0], this.buffer[1] = ~this.buffer[1], this.buffer[2] = ~this.buffer[2], this.buffer[3] = ~this.buffer[3], 0 == this.buffer[0] && ++this.buffer[1], 0 == this.buffer[1] && ++this.buffer[2], 0 == this.buffer[2] && ++this.buffer[3], this;
    }
    times(t32) {
      const e26 = new ms(new Uint32Array([this.buffer[3], 0])), i29 = new ms(new Uint32Array([this.buffer[2], 0])), n37 = new ms(new Uint32Array([this.buffer[1], 0])), r91 = new ms(new Uint32Array([this.buffer[0], 0])), s29 = new ms(new Uint32Array([t32.buffer[3], 0])), o35 = new ms(new Uint32Array([t32.buffer[2], 0])), a27 = new ms(new Uint32Array([t32.buffer[1], 0])), l35 = new ms(new Uint32Array([t32.buffer[0], 0]));
      let u30 = ms.multiply(r91, l35);
      this.buffer[0] = u30.low();
      const c30 = new ms(new Uint32Array([u30.high(), 0]));
      u30 = ms.multiply(n37, l35), c30.plus(u30), u30 = ms.multiply(r91, a27), c30.plus(u30), this.buffer[1] = c30.low(), this.buffer[3] = c30.lessThan(u30) ? 1 : 0, this.buffer[2] = c30.high();
      return new ms(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2)).plus(ms.multiply(i29, l35)).plus(ms.multiply(n37, a27)).plus(ms.multiply(r91, o35)), this.buffer[3] += ms.multiply(e26, l35).plus(ms.multiply(i29, a27)).plus(ms.multiply(n37, o35)).plus(ms.multiply(r91, s29)).low(), this;
    }
    plus(t32) {
      const e26 = new Uint32Array(4);
      return e26[3] = this.buffer[3] + t32.buffer[3] >>> 0, e26[2] = this.buffer[2] + t32.buffer[2] >>> 0, e26[1] = this.buffer[1] + t32.buffer[1] >>> 0, e26[0] = this.buffer[0] + t32.buffer[0] >>> 0, e26[0] < this.buffer[0] >>> 0 && ++e26[1], e26[1] < this.buffer[1] >>> 0 && ++e26[2], e26[2] < this.buffer[2] >>> 0 && ++e26[3], this.buffer[3] = e26[3], this.buffer[2] = e26[2], this.buffer[1] = e26[1], this.buffer[0] = e26[0], this;
    }
    hex() {
      return `${gs(this.buffer[3])} ${gs(this.buffer[2])} ${gs(this.buffer[1])} ${gs(this.buffer[0])}`;
    }
    static multiply(t32, e26) {
      return new _Is(new Uint32Array(t32.buffer)).times(e26);
    }
    static add(t32, e26) {
      return new _Is(new Uint32Array(t32.buffer)).plus(e26);
    }
    static from(t32, e26 = new Uint32Array(4)) {
      return _Is.fromString("string" == typeof t32 ? t32 : t32.toString(), e26);
    }
    static fromNumber(t32, e26 = new Uint32Array(4)) {
      return _Is.fromString(t32.toString(), e26);
    }
    static fromString(t32, e26 = new Uint32Array(4)) {
      const i29 = t32.startsWith("-"), n37 = t32.length, r91 = new _Is(e26);
      for (let e27 = i29 ? 1 : 0; e27 < n37; ) {
        const i30 = 8 < n37 - e27 ? 8 : n37 - e27, s29 = new _Is(new Uint32Array([Number.parseInt(t32.slice(e27, e27 + i30), 10), 0, 0, 0])), o35 = new _Is(new Uint32Array([vs[i30], 0, 0, 0]));
        r91.times(o35), r91.plus(s29), e27 += i30;
      }
      return i29 ? r91.negate() : r91;
    }
    static convertArray(t32) {
      const e26 = new Uint32Array(4 * t32.length);
      for (let i29 = -1, n37 = t32.length; ++i29 < n37; )
        _Is.from(t32[i29], new Uint32Array(e26.buffer, e26.byteOffset + 16 * i29, 4));
      return e26;
    }
  };
  var Ss = Object.freeze({ __proto__: null, BaseInt64: _s, Uint64: ms, Int64: ws, Int128: Is });
  var As = class extends Ii {
    constructor(t32, e26, i29, n37, r91 = Y.V5) {
      super(), this.nodesIndex = -1, this.buffersIndex = -1, this.bytes = t32, this.nodes = e26, this.buffers = i29, this.dictionaries = n37, this.metadataVersion = r91;
    }
    visit(t32) {
      return super.visit(t32 instanceof qr ? t32.type : t32);
    }
    visitNull(t32, { length: e26 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26 });
    }
    visitBool(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitInt(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitFloat(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitUtf8(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), valueOffsets: this.readOffsets(t32), data: this.readData(t32) });
    }
    visitLargeUtf8(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), valueOffsets: this.readOffsets(t32), data: this.readData(t32) });
    }
    visitBinary(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), valueOffsets: this.readOffsets(t32), data: this.readData(t32) });
    }
    visitLargeBinary(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), valueOffsets: this.readOffsets(t32), data: this.readData(t32) });
    }
    visitFixedSizeBinary(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitDate(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitTimestamp(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitTime(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitDecimal(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitList(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), valueOffsets: this.readOffsets(t32), child: this.visit(t32.children[0]) });
    }
    visitStruct(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), children: this.visitMany(t32.children) });
    }
    visitUnion(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return this.metadataVersion < Y.V5 && this.readNullBitmap(t32, i29), t32.mode === H.Sparse ? this.visitSparseUnion(t32, { length: e26, nullCount: i29 }) : this.visitDenseUnion(t32, { length: e26, nullCount: i29 });
    }
    visitDenseUnion(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, typeIds: this.readTypeIds(t32), valueOffsets: this.readOffsets(t32), children: this.visitMany(t32.children) });
    }
    visitSparseUnion(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, typeIds: this.readTypeIds(t32), children: this.visitMany(t32.children) });
    }
    visitDictionary(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32.indices), dictionary: this.readDictionary(t32) });
    }
    visitInterval(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitDuration(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitFixedSizeList(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), child: this.visit(t32.children[0]) });
    }
    visitMap(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return fr({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), valueOffsets: this.readOffsets(t32), child: this.visit(t32.children[0]) });
    }
    nextFieldNode() {
      return this.nodes[++this.nodesIndex];
    }
    nextBufferRange() {
      return this.buffers[++this.buffersIndex];
    }
    readNullBitmap(t32, e26, i29 = this.nextBufferRange()) {
      return e26 > 0 && this.readData(t32, i29) || new Uint8Array(0);
    }
    readOffsets(t32, e26) {
      return this.readData(t32, e26);
    }
    readTypeIds(t32, e26) {
      return this.readData(t32, e26);
    }
    readData(t32, { length: e26, offset: i29 } = this.nextBufferRange()) {
      return this.bytes.subarray(i29, i29 + e26);
    }
    readDictionary(t32) {
      return this.dictionaries.get(t32.id);
    }
  };
  var Bs = class extends As {
    constructor(t32, e26, i29, n37, r91) {
      super(new Uint8Array(0), e26, i29, n37, r91), this.sources = t32;
    }
    readNullBitmap(t32, e26, { offset: i29 } = this.nextBufferRange()) {
      return e26 <= 0 ? new Uint8Array(0) : or(this.sources[i29]);
    }
    readOffsets(t32, { offset: e26 } = this.nextBufferRange()) {
      return L(Uint8Array, L(t32.OffsetArrayType, this.sources[e26]));
    }
    readTypeIds(t32, { offset: e26 } = this.nextBufferRange()) {
      return L(Uint8Array, L(t32.ArrayType, this.sources[e26]));
    }
    readData(t32, { offset: e26 } = this.nextBufferRange()) {
      const { sources: i29 } = this;
      return Ie.isTimestamp(t32) || (Ie.isInt(t32) || Ie.isTime(t32)) && 64 === t32.bitWidth || Ie.isDuration(t32) || Ie.isDate(t32) && t32.unit === Z.MILLISECOND ? L(Uint8Array, ws.convertArray(i29[e26])) : Ie.isDecimal(t32) ? L(Uint8Array, Is.convertArray(i29[e26])) : Ie.isBinary(t32) || Ie.isLargeBinary(t32) || Ie.isFixedSizeBinary(t32) ? function(t33) {
        const e27 = t33.join(""), i30 = new Uint8Array(e27.length / 2);
        for (let t34 = 0; t34 < e27.length; t34 += 2)
          i30[t34 >> 1] = Number.parseInt(e27.slice(t34, t34 + 2), 16);
        return i30;
      }(i29[e26]) : Ie.isBool(t32) ? or(i29[e26]) : Ie.isUtf8(t32) || Ie.isLargeUtf8(t32) ? h3(i29[e26].join("")) : L(Uint8Array, L(t32.ArrayType, i29[e26].map((t33) => +t33)));
    }
  };
  var Ds = class extends Zr {
    constructor(t32) {
      super(t32), this._values = new kr(Uint8Array);
    }
    get byteLength() {
      let t32 = this._pendingLength + 4 * this.length;
      return this._offsets && (t32 += this._offsets.byteLength), this._values && (t32 += this._values.byteLength), this._nulls && (t32 += this._nulls.byteLength), t32;
    }
    setValue(t32, e26) {
      return super.setValue(t32, F(e26));
    }
    _flushPending(t32, e26) {
      const i29 = this._offsets, n37 = this._values.reserve(e26).buffer;
      let r91 = 0;
      for (const [e27, s29] of t32)
        if (void 0 === s29)
          i29.set(e27, 0);
        else {
          const t33 = s29.length;
          n37.set(s29, r91), i29.set(e27, t33), r91 += t33;
        }
    }
  };
  var Ts = class extends Zr {
    constructor(t32) {
      super(t32), this._values = new kr(Uint8Array);
    }
    get byteLength() {
      let t32 = this._pendingLength + 4 * this.length;
      return this._offsets && (t32 += this._offsets.byteLength), this._values && (t32 += this._values.byteLength), this._nulls && (t32 += this._nulls.byteLength), t32;
    }
    setValue(t32, e26) {
      return super.setValue(t32, F(e26));
    }
    _flushPending(t32, e26) {
      const i29 = this._offsets, n37 = this._values.reserve(e26).buffer;
      let r91 = 0;
      for (const [e27, s29] of t32)
        if (void 0 === s29)
          i29.set(e27, BigInt(0));
        else {
          const t33 = s29.length;
          n37.set(s29, r91), i29.set(e27, BigInt(t33)), r91 += t33;
        }
    }
  };
  var Os = class extends Hr {
    constructor(t32) {
      super(t32), this._values = new Wr();
    }
    setValue(t32, e26) {
      this._values.set(t32, +e26);
    }
  };
  var Ls = class extends Gr {
  };
  Ls.prototype._setValue = ji;
  var xs = class extends Ls {
  };
  xs.prototype._setValue = Ei;
  var Ms = class extends Ls {
  };
  Ms.prototype._setValue = Vi;
  var Fs = class extends Gr {
  };
  Fs.prototype._setValue = qi;
  var Ns = class extends Hr {
    constructor({ type: t32, nullValues: e26, dictionaryHashFunction: i29 }) {
      super({ type: new mi(t32.dictionary, t32.indices, t32.id, t32.isOrdered) }), this._nulls = null, this._dictionaryOffset = 0, this._keysToIndices = /* @__PURE__ */ Object.create(null), this.indices = Ro({ type: this.type.indices, nullValues: e26 }), this.dictionary = Ro({ type: this.type.dictionary, nullValues: null }), "function" == typeof i29 && (this.valueToKey = i29);
    }
    get values() {
      return this.indices.values;
    }
    get nullCount() {
      return this.indices.nullCount;
    }
    get nullBitmap() {
      return this.indices.nullBitmap;
    }
    get byteLength() {
      return this.indices.byteLength + this.dictionary.byteLength;
    }
    get reservedLength() {
      return this.indices.reservedLength + this.dictionary.reservedLength;
    }
    get reservedByteLength() {
      return this.indices.reservedByteLength + this.dictionary.reservedByteLength;
    }
    isValid(t32) {
      return this.indices.isValid(t32);
    }
    setValid(t32, e26) {
      const i29 = this.indices;
      return e26 = i29.setValid(t32, e26), this.length = i29.length, e26;
    }
    setValue(t32, e26) {
      const i29 = this._keysToIndices, n37 = this.valueToKey(e26);
      let r91 = i29[n37];
      return void 0 === r91 && (i29[n37] = r91 = this._dictionaryOffset + this.dictionary.append(e26).length - 1), this.indices.setValue(t32, r91);
    }
    flush() {
      const t32 = this.type, e26 = this._dictionary, i29 = this.dictionary.toVector(), n37 = this.indices.flush().clone(t32);
      return n37.dictionary = e26 ? e26.concat(i29) : i29, this.finished || (this._dictionaryOffset += i29.length), this._dictionary = n37.dictionary, this.clear(), n37;
    }
    finish() {
      return this.indices.finish(), this.dictionary.finish(), this._dictionaryOffset = 0, this._keysToIndices = /* @__PURE__ */ Object.create(null), super.finish();
    }
    clear() {
      return this.indices.clear(), this.dictionary.clear(), super.clear();
    }
    valueToKey(t32) {
      return "string" == typeof t32 ? t32 : `${t32}`;
    }
  };
  var Us = class extends Gr {
  };
  Us.prototype._setValue = Ri;
  var Cs = class extends Hr {
    setValue(t32, e26) {
      const [i29] = this.children, n37 = t32 * this.stride;
      for (let t33 = -1, r91 = e26.length; ++t33 < r91; )
        i29.set(n37 + t33, e26[t33]);
    }
    addChild(t32, e26 = "0") {
      if (this.numChildren > 0)
        throw new Error("FixedSizeListBuilder can only have one child.");
      const i29 = this.children.push(t32);
      return this.type = new bi(this.type.listSize, new qr(e26, t32.type, true)), i29;
    }
  };
  var Es = class extends Gr {
    setValue(t32, e26) {
      this._values.set(t32, e26);
    }
  };
  var Vs = class extends Es {
    setValue(t32, e26) {
      super.setValue(t32, Oi(e26));
    }
  };
  var Rs = class extends Es {
  };
  var zs = class extends Es {
  };
  var Ps = class extends Gr {
  };
  Ps.prototype._setValue = en;
  var js = class extends Ps {
  };
  js.prototype._setValue = nn;
  var ks = class extends Ps {
  };
  ks.prototype._setValue = rn;
  var $s = class extends Gr {
  };
  $s.prototype._setValue = un;
  var Ws = class extends $s {
  };
  Ws.prototype._setValue = sn;
  var Ys = class extends $s {
  };
  Ys.prototype._setValue = on;
  var Hs = class extends $s {
  };
  Hs.prototype._setValue = an;
  var Gs = class extends $s {
  };
  Gs.prototype._setValue = ln;
  var Zs = class extends Gr {
    setValue(t32, e26) {
      this._values.set(t32, e26);
    }
  };
  var Xs = class extends Zs {
  };
  var Ks = class extends Zs {
  };
  var Js = class extends Zs {
  };
  var qs = class extends Zs {
  };
  var Qs = class extends Zs {
  };
  var to = class extends Zs {
  };
  var eo = class extends Zs {
  };
  var io = class extends Zs {
  };
  var no = class extends Zr {
    constructor(t32) {
      super(t32), this._offsets = new Yr(t32.type);
    }
    addChild(t32, e26 = "0") {
      if (this.numChildren > 0)
        throw new Error("ListBuilder can only have one child.");
      return this.children[this.numChildren] = t32, this.type = new ci(new qr(e26, t32.type, true)), this.numChildren - 1;
    }
    _flushPending(t32) {
      const e26 = this._offsets, [i29] = this.children;
      for (const [n37, r91] of t32)
        if (void 0 === r91)
          e26.set(n37, 0);
        else {
          const t33 = r91, s29 = t33.length, o35 = e26.set(n37, s29).buffer[n37];
          for (let e27 = -1; ++e27 < s29; )
            i29.set(o35 + e27, t33[e27]);
        }
    }
  };
  var ro = class extends Zr {
    set(t32, e26) {
      return super.set(t32, e26);
    }
    setValue(t32, e26) {
      const i29 = e26 instanceof Map ? e26 : new Map(Object.entries(e26)), n37 = this._pending || (this._pending = /* @__PURE__ */ new Map()), r91 = n37.get(t32);
      r91 && (this._pendingLength -= r91.size), this._pendingLength += i29.size, n37.set(t32, i29);
    }
    addChild(t32, e26 = `${this.numChildren}`) {
      if (this.numChildren > 0)
        throw new Error("ListBuilder can only have one child.");
      return this.children[this.numChildren] = t32, this.type = new gi(new qr(e26, t32.type, true), this.type.keysSorted), this.numChildren - 1;
    }
    _flushPending(t32) {
      const e26 = this._offsets, [i29] = this.children;
      for (const [n37, r91] of t32)
        if (void 0 === r91)
          e26.set(n37, 0);
        else {
          let { [n37]: t33, [n37 + 1]: s29 } = e26.set(n37, r91.size).buffer;
          for (const e27 of r91.entries())
            if (i29.set(t33, e27), ++t33 >= s29)
              break;
        }
    }
  };
  var so = class extends Hr {
    setValue(t32, e26) {
    }
    setValid(t32, e26) {
      return this.length = Math.max(t32 + 1, this.length), e26;
    }
  };
  var oo = class extends Hr {
    setValue(t32, e26) {
      const { children: i29, type: n37 } = this;
      switch (Array.isArray(e26) || e26.constructor) {
        case true:
          return n37.children.forEach((n38, r91) => i29[r91].set(t32, e26[r91]));
        case Map:
          return n37.children.forEach((n38, r91) => i29[r91].set(t32, e26.get(n38.name)));
        default:
          return n37.children.forEach((n38, r91) => i29[r91].set(t32, e26[n38.name]));
      }
    }
    setValid(t32, e26) {
      return super.setValid(t32, e26) || this.children.forEach((i29) => i29.setValid(t32, e26)), e26;
    }
    addChild(t32, e26 = `${this.numChildren}`) {
      const i29 = this.children.push(t32);
      return this.type = new hi([...this.type.children, new qr(e26, t32.type, true)]), i29;
    }
  };
  var ao = class extends Gr {
  };
  ao.prototype._setValue = Hi;
  var lo = class extends ao {
  };
  lo.prototype._setValue = ki;
  var uo = class extends ao {
  };
  uo.prototype._setValue = $i;
  var co = class extends ao {
  };
  co.prototype._setValue = Wi;
  var ho = class extends ao {
  };
  ho.prototype._setValue = Yi;
  var po = class extends Gr {
  };
  po.prototype._setValue = Ji;
  var yo = class extends po {
  };
  yo.prototype._setValue = Gi;
  var fo = class extends po {
  };
  fo.prototype._setValue = Zi;
  var bo = class extends po {
  };
  bo.prototype._setValue = Xi;
  var go = class extends po {
  };
  go.prototype._setValue = Ki;
  var vo = class extends Hr {
    constructor(t32) {
      super(t32), this._typeIds = new $r(Int8Array, 0, 1), "function" == typeof t32.valueToChildTypeId && (this._valueToChildTypeId = t32.valueToChildTypeId);
    }
    get typeIdToChildIndex() {
      return this.type.typeIdToChildIndex;
    }
    append(t32, e26) {
      return this.set(this.length, t32, e26);
    }
    set(t32, e26, i29) {
      return void 0 === i29 && (i29 = this._valueToChildTypeId(this, e26, t32)), this.setValue(t32, e26, i29), this;
    }
    setValue(t32, e26, i29) {
      this._typeIds.set(t32, i29);
      const n37 = this.type.typeIdToChildIndex[i29], r91 = this.children[n37];
      null == r91 || r91.set(t32, e26);
    }
    addChild(t32, e26 = `${this.children.length}`) {
      const i29 = this.children.push(t32), { type: { children: n37, mode: r91, typeIds: s29 } } = this, o35 = [...n37, new qr(e26, t32.type)];
      return this.type = new di(r91, [...s29, i29], o35), i29;
    }
    _valueToChildTypeId(t32, e26, i29) {
      throw new Error("Cannot map UnionBuilder value to child typeId. Pass the `childTypeId` as the second argument to unionBuilder.append(), or supply a `valueToChildTypeId` function as part of the UnionBuilder constructor options.");
    }
  };
  var _o = class extends vo {
  };
  var mo = class extends vo {
    constructor(t32) {
      super(t32), this._offsets = new $r(Int32Array);
    }
    setValue(t32, e26, i29) {
      const n37 = this._typeIds.set(t32, i29).buffer[t32], r91 = this.getChildAt(this.type.typeIdToChildIndex[n37]), s29 = this._offsets.set(t32, r91.length).buffer[t32];
      null == r91 || r91.set(s29, e26);
    }
  };
  var wo = class extends Zr {
    constructor(t32) {
      super(t32), this._values = new kr(Uint8Array);
    }
    get byteLength() {
      let t32 = this._pendingLength + 4 * this.length;
      return this._offsets && (t32 += this._offsets.byteLength), this._values && (t32 += this._values.byteLength), this._nulls && (t32 += this._nulls.byteLength), t32;
    }
    setValue(t32, e26) {
      return super.setValue(t32, h3(e26));
    }
    _flushPending(t32, e26) {
    }
  };
  wo.prototype._flushPending = Ds.prototype._flushPending;
  var Io = class extends Zr {
    constructor(t32) {
      super(t32), this._values = new kr(Uint8Array);
    }
    get byteLength() {
      let t32 = this._pendingLength + 4 * this.length;
      return this._offsets && (t32 += this._offsets.byteLength), this._values && (t32 += this._values.byteLength), this._nulls && (t32 += this._nulls.byteLength), t32;
    }
    setValue(t32, e26) {
      return super.setValue(t32, h3(e26));
    }
    _flushPending(t32, e26) {
    }
  };
  Io.prototype._flushPending = Ts.prototype._flushPending;
  var So = new class extends Ii {
    visitNull() {
      return so;
    }
    visitBool() {
      return Os;
    }
    visitInt() {
      return Zs;
    }
    visitInt8() {
      return Xs;
    }
    visitInt16() {
      return Ks;
    }
    visitInt32() {
      return Js;
    }
    visitInt64() {
      return qs;
    }
    visitUint8() {
      return Qs;
    }
    visitUint16() {
      return to;
    }
    visitUint32() {
      return eo;
    }
    visitUint64() {
      return io;
    }
    visitFloat() {
      return Es;
    }
    visitFloat16() {
      return Vs;
    }
    visitFloat32() {
      return Rs;
    }
    visitFloat64() {
      return zs;
    }
    visitUtf8() {
      return wo;
    }
    visitLargeUtf8() {
      return Io;
    }
    visitBinary() {
      return Ds;
    }
    visitLargeBinary() {
      return Ts;
    }
    visitFixedSizeBinary() {
      return Us;
    }
    visitDate() {
      return Ls;
    }
    visitDateDay() {
      return xs;
    }
    visitDateMillisecond() {
      return Ms;
    }
    visitTimestamp() {
      return ao;
    }
    visitTimestampSecond() {
      return lo;
    }
    visitTimestampMillisecond() {
      return uo;
    }
    visitTimestampMicrosecond() {
      return co;
    }
    visitTimestampNanosecond() {
      return ho;
    }
    visitTime() {
      return po;
    }
    visitTimeSecond() {
      return yo;
    }
    visitTimeMillisecond() {
      return fo;
    }
    visitTimeMicrosecond() {
      return bo;
    }
    visitTimeNanosecond() {
      return go;
    }
    visitDecimal() {
      return Fs;
    }
    visitList() {
      return no;
    }
    visitStruct() {
      return oo;
    }
    visitUnion() {
      return vo;
    }
    visitDenseUnion() {
      return mo;
    }
    visitSparseUnion() {
      return _o;
    }
    visitDictionary() {
      return Ns;
    }
    visitInterval() {
      return Ps;
    }
    visitIntervalDayTime() {
      return js;
    }
    visitIntervalYearMonth() {
      return ks;
    }
    visitDuration() {
      return $s;
    }
    visitDurationSecond() {
      return Ws;
    }
    visitDurationMillisecond() {
      return Ys;
    }
    visitDurationMicrosecond() {
      return Hs;
    }
    visitDurationNanosecond() {
      return Gs;
    }
    visitFixedSizeList() {
      return Cs;
    }
    visitMap() {
      return ro;
    }
  }();
  var Ao = class extends Ii {
    compareSchemas(t32, e26) {
      return t32 === e26 || e26 instanceof t32.constructor && this.compareManyFields(t32.fields, e26.fields);
    }
    compareManyFields(t32, e26) {
      return t32 === e26 || Array.isArray(t32) && Array.isArray(e26) && t32.length === e26.length && t32.every((t33, i29) => this.compareFields(t33, e26[i29]));
    }
    compareFields(t32, e26) {
      return t32 === e26 || e26 instanceof t32.constructor && t32.name === e26.name && t32.nullable === e26.nullable && this.visit(t32.type, e26.type);
    }
  };
  function Bo(t32, e26) {
    return e26 instanceof t32.constructor;
  }
  function Do(t32, e26) {
    return t32 === e26 || Bo(t32, e26);
  }
  function To(t32, e26) {
    return t32 === e26 || Bo(t32, e26) && t32.bitWidth === e26.bitWidth && t32.isSigned === e26.isSigned;
  }
  function Oo(t32, e26) {
    return t32 === e26 || Bo(t32, e26) && t32.precision === e26.precision;
  }
  function Lo(t32, e26) {
    return t32 === e26 || Bo(t32, e26) && t32.unit === e26.unit;
  }
  function xo(t32, e26) {
    return t32 === e26 || Bo(t32, e26) && t32.unit === e26.unit && t32.timezone === e26.timezone;
  }
  function Mo(t32, e26) {
    return t32 === e26 || Bo(t32, e26) && t32.unit === e26.unit && t32.bitWidth === e26.bitWidth;
  }
  function Fo(t32, e26) {
    return t32 === e26 || Bo(t32, e26) && t32.mode === e26.mode && t32.typeIds.every((t33, i29) => t33 === e26.typeIds[i29]) && Co.compareManyFields(t32.children, e26.children);
  }
  function No(t32, e26) {
    return t32 === e26 || Bo(t32, e26) && t32.unit === e26.unit;
  }
  function Uo(t32, e26) {
    return t32 === e26 || Bo(t32, e26) && t32.unit === e26.unit;
  }
  Ao.prototype.visitNull = Do, Ao.prototype.visitBool = Do, Ao.prototype.visitInt = To, Ao.prototype.visitInt8 = To, Ao.prototype.visitInt16 = To, Ao.prototype.visitInt32 = To, Ao.prototype.visitInt64 = To, Ao.prototype.visitUint8 = To, Ao.prototype.visitUint16 = To, Ao.prototype.visitUint32 = To, Ao.prototype.visitUint64 = To, Ao.prototype.visitFloat = Oo, Ao.prototype.visitFloat16 = Oo, Ao.prototype.visitFloat32 = Oo, Ao.prototype.visitFloat64 = Oo, Ao.prototype.visitUtf8 = Do, Ao.prototype.visitLargeUtf8 = Do, Ao.prototype.visitBinary = Do, Ao.prototype.visitLargeBinary = Do, Ao.prototype.visitFixedSizeBinary = function(t32, e26) {
    return t32 === e26 || Bo(t32, e26) && t32.byteWidth === e26.byteWidth;
  }, Ao.prototype.visitDate = Lo, Ao.prototype.visitDateDay = Lo, Ao.prototype.visitDateMillisecond = Lo, Ao.prototype.visitTimestamp = xo, Ao.prototype.visitTimestampSecond = xo, Ao.prototype.visitTimestampMillisecond = xo, Ao.prototype.visitTimestampMicrosecond = xo, Ao.prototype.visitTimestampNanosecond = xo, Ao.prototype.visitTime = Mo, Ao.prototype.visitTimeSecond = Mo, Ao.prototype.visitTimeMillisecond = Mo, Ao.prototype.visitTimeMicrosecond = Mo, Ao.prototype.visitTimeNanosecond = Mo, Ao.prototype.visitDecimal = Do, Ao.prototype.visitList = function(t32, e26) {
    return t32 === e26 || Bo(t32, e26) && t32.children.length === e26.children.length && Co.compareManyFields(t32.children, e26.children);
  }, Ao.prototype.visitStruct = function(t32, e26) {
    return t32 === e26 || Bo(t32, e26) && t32.children.length === e26.children.length && Co.compareManyFields(t32.children, e26.children);
  }, Ao.prototype.visitUnion = Fo, Ao.prototype.visitDenseUnion = Fo, Ao.prototype.visitSparseUnion = Fo, Ao.prototype.visitDictionary = function(t32, e26) {
    return t32 === e26 || Bo(t32, e26) && t32.id === e26.id && t32.isOrdered === e26.isOrdered && Co.visit(t32.indices, e26.indices) && Co.visit(t32.dictionary, e26.dictionary);
  }, Ao.prototype.visitInterval = No, Ao.prototype.visitIntervalDayTime = No, Ao.prototype.visitIntervalYearMonth = No, Ao.prototype.visitDuration = Uo, Ao.prototype.visitDurationSecond = Uo, Ao.prototype.visitDurationMillisecond = Uo, Ao.prototype.visitDurationMicrosecond = Uo, Ao.prototype.visitDurationNanosecond = Uo, Ao.prototype.visitFixedSizeList = function(t32, e26) {
    return t32 === e26 || Bo(t32, e26) && t32.listSize === e26.listSize && t32.children.length === e26.children.length && Co.compareManyFields(t32.children, e26.children);
  }, Ao.prototype.visitMap = function(t32, e26) {
    return t32 === e26 || Bo(t32, e26) && t32.keysSorted === e26.keysSorted && t32.children.length === e26.children.length && Co.compareManyFields(t32.children, e26.children);
  };
  var Co = new Ao();
  function Eo(t32, e26) {
    return Co.compareSchemas(t32, e26);
  }
  function Vo(t32, e26) {
    return Co.visit(t32, e26);
  }
  function Ro(t32) {
    const e26 = t32.type, i29 = new (So.getVisitFn(e26)())(t32);
    if (e26.children && e26.children.length > 0) {
      const n37 = t32.children || [], r91 = { nullValues: t32.nullValues }, s29 = Array.isArray(n37) ? (t33, e27) => n37[e27] || r91 : ({ name: t33 }) => n37[t33] || r91;
      for (const [t33, n38] of e26.children.entries()) {
        const { type: e27 } = n38, r92 = s29(n38, t33);
        i29.children.push(Ro(Object.assign(Object.assign({}, r92), { type: e27 })));
      }
    }
    return i29;
  }
  function Wo(t32, e26) {
    return function(t33, e27) {
      const i29 = [...t33.fields], n37 = [], r91 = { numBatches: e27.reduce((t34, e28) => Math.max(t34, e28.length), 0) };
      let s29 = 0, o35 = 0, a27 = -1;
      const l35 = e27.length;
      let u30, c30 = [];
      for (; r91.numBatches-- > 0; ) {
        for (o35 = Number.POSITIVE_INFINITY, a27 = -1; ++a27 < l35; )
          c30[a27] = u30 = e27[a27].shift(), o35 = Math.min(o35, u30 ? u30.length : o35);
        Number.isFinite(o35) && (c30 = Yo(i29, o35, c30, e27, r91), o35 > 0 && (n37[s29++] = fr({ type: new hi(i29), length: o35, nullCount: 0, children: c30.slice() })));
      }
      return [t33 = t33.assign(i29), n37.map((e28) => new Jo(t33, e28))];
    }(t32, e26.map((t33) => t33.data.concat()));
  }
  function Yo(t32, e26, i29, n37, r91) {
    var s29;
    const o35 = (e26 + 63 & -64) >> 3;
    for (let a27 = -1, l35 = n37.length; ++a27 < l35; ) {
      const l36 = i29[a27], u30 = null == l36 ? void 0 : l36.length;
      if (u30 >= e26)
        u30 === e26 ? i29[a27] = l36 : (i29[a27] = l36.slice(0, e26), r91.numBatches = Math.max(r91.numBatches, n37[a27].unshift(l36.slice(e26, u30 - e26))));
      else {
        const n38 = t32[a27];
        t32[a27] = n38.clone({ nullable: true }), i29[a27] = null !== (s29 = null == l36 ? void 0 : l36._changeLengthAndBackfillNullBitmap(e26)) && void 0 !== s29 ? s29 : fr({ type: n38.type, length: e26, nullCount: e26, nullBitmap: new Uint8Array(o35) });
      }
    }
    return i29;
  }
  var Ho;
  var Go;
  var Zo = class _Zo {
    constructor(...t32) {
      var e26, i29;
      if (0 === t32.length)
        return this.batches = [], this.schema = new Jr([]), this._offsets = [0], this;
      let n37, r91;
      t32[0] instanceof Jr && (n37 = t32.shift()), t32.at(-1) instanceof Uint32Array && (r91 = t32.pop());
      const s29 = (t33) => {
        if (t33) {
          if (t33 instanceof Jo)
            return [t33];
          if (t33 instanceof _Zo)
            return t33.batches;
          if (t33 instanceof dr) {
            if (t33.type instanceof hi)
              return [new Jo(new Jr(t33.type.children), t33)];
          } else {
            if (Array.isArray(t33))
              return t33.flatMap((t34) => s29(t34));
            if ("function" == typeof t33[Symbol.iterator])
              return [...t33].flatMap((t34) => s29(t34));
            if ("object" == typeof t33) {
              const e27 = Object.keys(t33), i30 = e27.map((e28) => new Er([t33[e28]])), r92 = null != n37 ? n37 : new Jr(e27.map((t34, e28) => new qr(String(t34), i30[e28].type, i30[e28].nullable))), [, s30] = Wo(r92, i30);
              return 0 === s30.length ? [new Jo(t33)] : s30;
            }
          }
        }
        return [];
      }, o35 = t32.flatMap((t33) => s29(t33));
      if (n37 = null !== (i29 = null != n37 ? n37 : null === (e26 = o35[0]) || void 0 === e26 ? void 0 : e26.schema) && void 0 !== i29 ? i29 : new Jr([]), !(n37 instanceof Jr))
        throw new TypeError("Table constructor expects a [Schema, RecordBatch[]] pair.");
      for (const t33 of o35) {
        if (!(t33 instanceof Jo))
          throw new TypeError("Table constructor expects a [Schema, RecordBatch[]] pair.");
        if (!Eo(n37, t33.schema))
          throw new TypeError("Table and inner RecordBatch schemas must be equivalent.");
      }
      this.schema = n37, this.batches = o35, this._offsets = null != r91 ? r91 : vr(this.data);
    }
    get data() {
      return this.batches.map(({ data: t32 }) => t32);
    }
    get numCols() {
      return this.schema.fields.length;
    }
    get numRows() {
      return this.data.reduce((t32, e26) => t32 + e26.length, 0);
    }
    get nullCount() {
      return -1 === this._nullCount && (this._nullCount = gr(this.data)), this._nullCount;
    }
    isValid(t32) {
      return false;
    }
    get(t32) {
      return null;
    }
    at(t32) {
      return this.get(Jn(t32, this.numRows));
    }
    set(t32, e26) {
    }
    indexOf(t32, e26) {
      return -1;
    }
    [Symbol.iterator]() {
      return this.batches.length > 0 ? Fr.visit(new Er(this.data)) : new Array(0)[Symbol.iterator]();
    }
    toArray() {
      return [...this];
    }
    toString() {
      return `[
  ${this.toArray().join(",\n  ")}
]`;
    }
    concat(...t32) {
      const e26 = this.schema, i29 = this.data.concat(t32.flatMap(({ data: t33 }) => t33));
      return new _Zo(e26, i29.map((t33) => new Jo(e26, t33)));
    }
    slice(t32, e26) {
      const i29 = this.schema;
      [t32, e26] = Kn({ length: this.numRows }, t32, e26);
      const n37 = _r(this.data, this._offsets, t32, e26);
      return new _Zo(i29, n37.map((t33) => new Jo(i29, t33)));
    }
    getChild(t32) {
      return this.getChildAt(this.schema.fields.findIndex((e26) => e26.name === t32));
    }
    getChildAt(t32) {
      if (t32 > -1 && t32 < this.schema.fields.length) {
        const e26 = this.data.map((e27) => e27.children[t32]);
        if (0 === e26.length) {
          const { type: i29 } = this.schema.fields[t32], n37 = fr({ type: i29, length: 0, nullCount: 0 });
          e26.push(n37._changeLengthAndBackfillNullBitmap(this.numRows));
        }
        return new Er(e26);
      }
      return null;
    }
    setChild(t32, e26) {
      var i29;
      return this.setChildAt(null === (i29 = this.schema.fields) || void 0 === i29 ? void 0 : i29.findIndex((e27) => e27.name === t32), e26);
    }
    setChildAt(t32, e26) {
      let i29 = this.schema, n37 = [...this.batches];
      if (t32 > -1 && t32 < this.numCols) {
        e26 || (e26 = new Er([fr({ type: new Se(), length: this.numRows })]));
        const r91 = i29.fields.slice(), s29 = r91[t32].clone({ type: e26.type }), o35 = this.schema.fields.map((t33, e27) => this.getChildAt(e27));
        [r91[t32], o35[t32]] = [s29, e26], [i29, n37] = Wo(i29, o35);
      }
      return new _Zo(i29, n37);
    }
    select(t32) {
      const e26 = this.schema.fields.reduce((t33, e27, i29) => t33.set(e27.name, i29), /* @__PURE__ */ new Map());
      return this.selectAt(t32.map((t33) => e26.get(t33)).filter((t33) => t33 > -1));
    }
    selectAt(t32) {
      const e26 = this.schema.selectAt(t32), i29 = this.batches.map((e27) => e27.selectAt(t32));
      return new _Zo(e26, i29);
    }
    assign(t32) {
      const e26 = this.schema.fields, [i29, n37] = t32.schema.fields.reduce((t33, i30, n38) => {
        const [r92, s30] = t33, o35 = e26.findIndex((t34) => t34.name === i30.name);
        return ~o35 ? s30[o35] = n38 : r92.push(n38), t33;
      }, [[], []]), r91 = this.schema.assign(t32.schema), s29 = [...e26.map((t33, e27) => [e27, n37[e27]]).map(([e27, i30]) => void 0 === i30 ? this.getChildAt(e27) : t32.getChildAt(i30)), ...i29.map((e27) => t32.getChildAt(e27))].filter(Boolean);
      return new _Zo(...Wo(r91, s29));
    }
  };
  Ho = Symbol.toStringTag, Zo[Ho] = ((t32) => (t32.schema = null, t32.batches = [], t32._offsets = new Uint32Array([0]), t32._nullCount = -1, t32[Symbol.isConcatSpreadable] = true, t32.isValid = Ir(wr), t32.get = Ir(jn.getVisitFn(st.Struct)), t32.set = Sr(cn.getVisitFn(st.Struct)), t32.indexOf = Ar(Or.getVisitFn(st.Struct)), "Table"))(Zo.prototype);
  var Jo = class _Jo {
    constructor(...t32) {
      switch (t32.length) {
        case 2:
          if ([this.schema] = t32, !(this.schema instanceof Jr))
            throw new TypeError("RecordBatch constructor expects a [Schema, Data] pair.");
          if ([, this.data = fr({ nullCount: 0, type: new hi(this.schema.fields), children: this.schema.fields.map((t33) => fr({ type: t33.type, nullCount: 0 })) })] = t32, !(this.data instanceof dr))
            throw new TypeError("RecordBatch constructor expects a [Schema, Data] pair.");
          [this.schema, this.data] = qo(this.schema, this.data.children);
          break;
        case 1: {
          const [e26] = t32, { fields: i29, children: n37, length: r91 } = Object.keys(e26).reduce((t33, i30, n38) => (t33.children[n38] = e26[i30], t33.length = Math.max(t33.length, e26[i30].length), t33.fields[n38] = qr.new({ name: i30, type: e26[i30].type, nullable: true }), t33), { length: 0, fields: new Array(), children: new Array() }), s29 = new Jr(i29), o35 = fr({ type: new hi(i29), length: r91, children: n37, nullCount: 0 });
          [this.schema, this.data] = qo(s29, o35.children, r91);
          break;
        }
        default:
          throw new TypeError("RecordBatch constructor expects an Object mapping names to child Data, or a [Schema, Data] pair.");
      }
    }
    get dictionaries() {
      return this._dictionaries || (this._dictionaries = Qo(this.schema.fields, this.data.children));
    }
    get numCols() {
      return this.schema.fields.length;
    }
    get numRows() {
      return this.data.length;
    }
    get nullCount() {
      return this.data.nullCount;
    }
    isValid(t32) {
      return this.data.getValid(t32);
    }
    get(t32) {
      return jn.visit(this.data, t32);
    }
    at(t32) {
      return this.get(Jn(t32, this.numRows));
    }
    set(t32, e26) {
      return cn.visit(this.data, t32, e26);
    }
    indexOf(t32, e26) {
      return Or.visit(this.data, t32, e26);
    }
    [Symbol.iterator]() {
      return Fr.visit(new Er([this.data]));
    }
    toArray() {
      return [...this];
    }
    concat(...t32) {
      return new Zo(this.schema, [this, ...t32]);
    }
    slice(t32, e26) {
      const [i29] = new Er([this.data]).slice(t32, e26).data;
      return new _Jo(this.schema, i29);
    }
    getChild(t32) {
      var e26;
      return this.getChildAt(null === (e26 = this.schema.fields) || void 0 === e26 ? void 0 : e26.findIndex((e27) => e27.name === t32));
    }
    getChildAt(t32) {
      return t32 > -1 && t32 < this.schema.fields.length ? new Er([this.data.children[t32]]) : null;
    }
    setChild(t32, e26) {
      var i29;
      return this.setChildAt(null === (i29 = this.schema.fields) || void 0 === i29 ? void 0 : i29.findIndex((e27) => e27.name === t32), e26);
    }
    setChildAt(t32, e26) {
      let i29 = this.schema, n37 = this.data;
      if (t32 > -1 && t32 < this.numCols) {
        e26 || (e26 = new Er([fr({ type: new Se(), length: this.numRows })]));
        const r91 = i29.fields.slice(), s29 = n37.children.slice(), o35 = r91[t32].clone({ type: e26.type });
        [r91[t32], s29[t32]] = [o35, e26.data[0]], i29 = new Jr(r91, new Map(this.schema.metadata)), n37 = fr({ type: new hi(r91), children: s29 });
      }
      return new _Jo(i29, n37);
    }
    select(t32) {
      const e26 = this.schema.select(t32), i29 = new hi(e26.fields), n37 = [];
      for (const e27 of t32) {
        const t33 = this.schema.fields.findIndex((t34) => t34.name === e27);
        ~t33 && (n37[t33] = this.data.children[t33]);
      }
      return new _Jo(e26, fr({ type: i29, length: this.numRows, children: n37 }));
    }
    selectAt(t32) {
      const e26 = this.schema.selectAt(t32), i29 = t32.map((t33) => this.data.children[t33]).filter(Boolean), n37 = fr({ type: new hi(e26.fields), length: this.numRows, children: i29 });
      return new _Jo(e26, n37);
    }
  };
  function qo(t32, e26, i29 = e26.reduce((t33, e27) => Math.max(t33, e27.length), 0)) {
    var n37;
    const r91 = [...t32.fields], s29 = [...e26], o35 = (i29 + 63 & -64) >> 3;
    for (const [a27, l35] of t32.fields.entries()) {
      const t33 = e26[a27];
      t33 && t33.length === i29 || (r91[a27] = l35.clone({ nullable: true }), s29[a27] = null !== (n37 = null == t33 ? void 0 : t33._changeLengthAndBackfillNullBitmap(i29)) && void 0 !== n37 ? n37 : fr({ type: l35.type, length: i29, nullCount: i29, nullBitmap: new Uint8Array(o35) }));
    }
    return [t32.assign(r91), fr({ type: new hi(r91), length: i29, children: s29 })];
  }
  function Qo(t32, e26, i29 = /* @__PURE__ */ new Map()) {
    var n37, r91;
    if ((null !== (n37 = null == t32 ? void 0 : t32.length) && void 0 !== n37 ? n37 : 0) > 0 && (null == t32 ? void 0 : t32.length) === (null == e26 ? void 0 : e26.length))
      for (let n38 = -1, s29 = t32.length; ++n38 < s29; ) {
        const { type: s30 } = t32[n38], o35 = e26[n38];
        for (const t33 of [o35, ...(null === (r91 = null == o35 ? void 0 : o35.dictionary) || void 0 === r91 ? void 0 : r91.data) || []])
          Qo(s30.children, null == t33 ? void 0 : t33.children, i29);
        if (Ie.isDictionary(s30)) {
          const { id: t33 } = s30;
          if (i29.has(t33)) {
            if (i29.get(t33) !== o35.dictionary)
              throw new Error("Cannot create Schema containing two different dictionaries with the same Id");
          } else
            (null == o35 ? void 0 : o35.dictionary) && i29.set(t33, o35.dictionary);
        }
      }
    return i29;
  }
  Go = Symbol.toStringTag, Jo[Go] = ((t32) => (t32._nullCount = -1, t32[Symbol.isConcatSpreadable] = true, "RecordBatch"))(Jo.prototype);
  var ta = class extends Jo {
    constructor(t32) {
      const e26 = t32.fields.map((t33) => fr({ type: t33.type }));
      super(t32, fr({ type: new hi(t32.fields), nullCount: 0, children: e26 }));
    }
  };
  var ea = class _ea {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsMessage(t32, e26) {
      return (e26 || new _ea()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsMessage(t32, e26) {
      return t32.setPosition(t32.position() + i), (e26 || new _ea()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    version() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : Y.V1;
    }
    headerType() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.readUint8(this.bb_pos + t32) : rt.NONE;
    }
    header(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 8);
      return e26 ? this.bb.__union(t32, this.bb_pos + e26) : null;
    }
    bodyLength() {
      const t32 = this.bb.__offset(this.bb_pos, 10);
      return t32 ? this.bb.readInt64(this.bb_pos + t32) : BigInt("0");
    }
    customMetadata(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 12);
      return i29 ? (e26 || new yt()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + i29) + 4 * t32), this.bb) : null;
    }
    customMetadataLength() {
      const t32 = this.bb.__offset(this.bb_pos, 12);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    static startMessage(t32) {
      t32.startObject(5);
    }
    static addVersion(t32, e26) {
      t32.addFieldInt16(0, e26, Y.V1);
    }
    static addHeaderType(t32, e26) {
      t32.addFieldInt8(1, e26, rt.NONE);
    }
    static addHeader(t32, e26) {
      t32.addFieldOffset(2, e26, 0);
    }
    static addBodyLength(t32, e26) {
      t32.addFieldInt64(3, e26, BigInt("0"));
    }
    static addCustomMetadata(t32, e26) {
      t32.addFieldOffset(4, e26, 0);
    }
    static createCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addOffset(e26[i29]);
      return t32.endVector();
    }
    static startCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static endMessage(t32) {
      return t32.endObject();
    }
    static finishMessageBuffer(t32, e26) {
      t32.finish(e26);
    }
    static finishSizePrefixedMessageBuffer(t32, e26) {
      t32.finish(e26, void 0, true);
    }
    static createMessage(t32, e26, i29, n37, r91, s29) {
      return _ea.startMessage(t32), _ea.addVersion(t32, e26), _ea.addHeaderType(t32, i29), _ea.addHeader(t32, n37), _ea.addBodyLength(t32, r91), _ea.addCustomMetadata(t32, s29), _ea.endMessage(t32);
    }
  };
  var ia = new class extends Ii {
    visit(t32, e26) {
      return null == t32 || null == e26 ? void 0 : super.visit(t32, e26);
    }
    visitNull(t32, e26) {
      return Ot.startNull(e26), Ot.endNull(e26);
    }
    visitInt(t32, e26) {
      return dt.startInt(e26), dt.addBitWidth(e26, t32.bitWidth), dt.addIsSigned(e26, t32.isSigned), dt.endInt(e26);
    }
    visitFloat(t32, e26) {
      return It.startFloatingPoint(e26), It.addPrecision(e26, t32.precision), It.endFloatingPoint(e26);
    }
    visitBinary(t32, e26) {
      return ft.startBinary(e26), ft.endBinary(e26);
    }
    visitLargeBinary(t32, e26) {
      return At.startLargeBinary(e26), At.endLargeBinary(e26);
    }
    visitBool(t32, e26) {
      return bt.startBool(e26), bt.endBool(e26);
    }
    visitUtf8(t32, e26) {
      return Nt.startUtf8(e26), Nt.endUtf8(e26);
    }
    visitLargeUtf8(t32, e26) {
      return Bt.startLargeUtf8(e26), Bt.endLargeUtf8(e26);
    }
    visitDecimal(t32, e26) {
      return vt.startDecimal(e26), vt.addScale(e26, t32.scale), vt.addPrecision(e26, t32.precision), vt.addBitWidth(e26, t32.bitWidth), vt.endDecimal(e26);
    }
    visitDate(t32, e26) {
      return gt.startDate(e26), gt.addUnit(e26, t32.unit), gt.endDate(e26);
    }
    visitTime(t32, e26) {
      return xt.startTime(e26), xt.addUnit(e26, t32.unit), xt.addBitWidth(e26, t32.bitWidth), xt.endTime(e26);
    }
    visitTimestamp(t32, e26) {
      const i29 = t32.timezone && e26.createString(t32.timezone) || void 0;
      return Mt.startTimestamp(e26), Mt.addUnit(e26, t32.unit), void 0 !== i29 && Mt.addTimezone(e26, i29), Mt.endTimestamp(e26);
    }
    visitInterval(t32, e26) {
      return St.startInterval(e26), St.addUnit(e26, t32.unit), St.endInterval(e26);
    }
    visitDuration(t32, e26) {
      return _t.startDuration(e26), _t.addUnit(e26, t32.unit), _t.endDuration(e26);
    }
    visitList(t32, e26) {
      return Dt.startList(e26), Dt.endList(e26);
    }
    visitStruct(t32, e26) {
      return Lt.startStruct_(e26), Lt.endStruct_(e26);
    }
    visitUnion(t32, e26) {
      Ft.startTypeIdsVector(e26, t32.typeIds.length);
      const i29 = Ft.createTypeIdsVector(e26, t32.typeIds);
      return Ft.startUnion(e26), Ft.addMode(e26, t32.mode), Ft.addTypeIds(e26, i29), Ft.endUnion(e26);
    }
    visitDictionary(t32, e26) {
      const i29 = this.visit(t32.indices, e26);
      return pt.startDictionaryEncoding(e26), pt.addId(e26, BigInt(t32.id)), pt.addIsOrdered(e26, t32.isOrdered), void 0 !== i29 && pt.addIndexType(e26, i29), pt.endDictionaryEncoding(e26);
    }
    visitFixedSizeBinary(t32, e26) {
      return mt.startFixedSizeBinary(e26), mt.addByteWidth(e26, t32.byteWidth), mt.endFixedSizeBinary(e26);
    }
    visitFixedSizeList(t32, e26) {
      return wt.startFixedSizeList(e26), wt.addListSize(e26, t32.listSize), wt.endFixedSizeList(e26);
    }
    visitMap(t32, e26) {
      return Tt.startMap(e26), Tt.addKeysSorted(e26, t32.keysSorted), Tt.endMap(e26);
    }
  }();
  function na(t32) {
    return new pa(t32.count, sa(t32.columns), oa(t32.columns));
  }
  function ra(t32, e26) {
    return (t32.children || []).filter(Boolean).map((t33) => qr.fromJSON(t33, e26));
  }
  function sa(t32) {
    return (t32 || []).reduce((t33, e26) => {
      return [...t33, new ba(e26.count, (i29 = e26.VALIDITY, (i29 || []).reduce((t34, e27) => t34 + +(0 === e27), 0))), ...sa(e26.children)];
      var i29;
    }, []);
  }
  function oa(t32, e26 = []) {
    for (let i29 = -1, n37 = (t32 || []).length; ++i29 < n37; ) {
      const n38 = t32[i29];
      n38.VALIDITY && e26.push(new fa(e26.length, n38.VALIDITY.length)), n38.TYPE_ID && e26.push(new fa(e26.length, n38.TYPE_ID.length)), n38.OFFSET && e26.push(new fa(e26.length, n38.OFFSET.length)), n38.DATA && e26.push(new fa(e26.length, n38.DATA.length)), e26 = oa(n38.children, e26);
    }
    return e26;
  }
  function aa(t32 = []) {
    return new Map(t32.map(({ key: t33, value: e26 }) => [t33, e26]));
  }
  function la(t32) {
    return new Ae(t32.isSigned, t32.bitWidth);
  }
  function ua(t32, e26) {
    const i29 = t32.type.name;
    switch (i29) {
      case "NONE":
      case "null":
        return new Se();
      case "binary":
        return new Ve();
      case "largebinary":
        return new Re();
      case "utf8":
        return new ze();
      case "largeutf8":
        return new Pe();
      case "bool":
        return new je();
      case "list":
        return new ci((e26 || [])[0]);
      case "struct":
      case "struct_":
        return new hi(e26 || []);
    }
    switch (i29) {
      case "int": {
        const e27 = t32.type;
        return new Ae(e27.isSigned, e27.bitWidth);
      }
      case "floatingpoint": {
        const e27 = t32.type;
        return new Ne(G[e27.precision]);
      }
      case "decimal": {
        const e27 = t32.type;
        return new ke(e27.scale, e27.precision, e27.bitWidth);
      }
      case "date": {
        const e27 = t32.type;
        return new $e(Z[e27.unit]);
      }
      case "time": {
        const e27 = t32.type;
        return new He(X[e27.unit], e27.bitWidth);
      }
      case "timestamp": {
        const e27 = t32.type;
        return new Je(X[e27.unit], e27.timezone);
      }
      case "interval": {
        const e27 = t32.type;
        return new ii(K[e27.unit]);
      }
      case "duration": {
        const e27 = t32.type;
        return new si(X[e27.unit]);
      }
      case "union": {
        const i30 = t32.type, [n37, ...r91] = (i30.mode + "").toLowerCase(), s29 = n37.toUpperCase() + r91.join("");
        return new di(H[s29], i30.typeIds || [], e26 || []);
      }
      case "fixedsizebinary": {
        const e27 = t32.type;
        return new fi(e27.byteWidth);
      }
      case "fixedsizelist": {
        const i30 = t32.type;
        return new bi(i30.listSize, (e26 || [])[0]);
      }
      case "map": {
        const i30 = t32.type;
        return new gi((e26 || [])[0], i30.keysSorted);
      }
    }
    throw new Error(`Unrecognized type: "${i29}"`);
  }
  var ca = b;
  var ha = l;
  var da = class _da {
    static fromJSON(t32, e26) {
      const i29 = new _da(0, Y.V5, e26);
      return i29._createHeader = /* @__PURE__ */ function(t33, e27) {
        return () => {
          switch (e27) {
            case rt.Schema:
              return Jr.fromJSON(t33);
            case rt.RecordBatch:
              return pa.fromJSON(t33);
            case rt.DictionaryBatch:
              return ya.fromJSON(t33);
          }
          throw new Error(`Unrecognized Message type: { name: ${rt[e27]}, type: ${e27} }`);
        };
      }(t32, e26), i29;
    }
    static decode(t32) {
      t32 = new ha(F(t32));
      const e26 = ea.getRootAsMessage(t32), i29 = e26.bodyLength(), n37 = e26.version(), r91 = e26.headerType(), s29 = new _da(i29, n37, r91);
      return s29._createHeader = /* @__PURE__ */ function(t33, e27) {
        return () => {
          switch (e27) {
            case rt.Schema:
              return Jr.decode(t33.header(new Ct()), /* @__PURE__ */ new Map(), t33.version());
            case rt.RecordBatch:
              return pa.decode(t33.header(new ct()), t33.version());
            case rt.DictionaryBatch:
              return ya.decode(t33.header(new ht()), t33.version());
          }
          throw new Error(`Unrecognized Message type: { name: ${rt[e27]}, type: ${e27} }`);
        };
      }(e26, r91), s29;
    }
    static encode(t32) {
      const e26 = new ca();
      let i29 = -1;
      return t32.isSchema() ? i29 = Jr.encode(e26, t32.header()) : t32.isRecordBatch() ? i29 = pa.encode(e26, t32.header()) : t32.isDictionaryBatch() && (i29 = ya.encode(e26, t32.header())), ea.startMessage(e26), ea.addVersion(e26, Y.V5), ea.addHeader(e26, i29), ea.addHeaderType(e26, t32.headerType), ea.addBodyLength(e26, BigInt(t32.bodyLength)), ea.finishMessageBuffer(e26, ea.endMessage(e26)), e26.asUint8Array();
    }
    static from(t32, e26 = 0) {
      if (t32 instanceof Jr)
        return new _da(0, Y.V5, rt.Schema, t32);
      if (t32 instanceof pa)
        return new _da(e26, Y.V5, rt.RecordBatch, t32);
      if (t32 instanceof ya)
        return new _da(e26, Y.V5, rt.DictionaryBatch, t32);
      throw new Error(`Unrecognized Message header: ${t32}`);
    }
    get type() {
      return this.headerType;
    }
    get version() {
      return this._version;
    }
    get headerType() {
      return this._headerType;
    }
    get bodyLength() {
      return this._bodyLength;
    }
    header() {
      return this._createHeader();
    }
    isSchema() {
      return this.headerType === rt.Schema;
    }
    isRecordBatch() {
      return this.headerType === rt.RecordBatch;
    }
    isDictionaryBatch() {
      return this.headerType === rt.DictionaryBatch;
    }
    constructor(t32, e26, i29, n37) {
      this._version = e26, this._headerType = i29, this.body = new Uint8Array(0), n37 && (this._createHeader = () => n37), this._bodyLength = zt(t32);
    }
  };
  var pa = class {
    get nodes() {
      return this._nodes;
    }
    get length() {
      return this._length;
    }
    get buffers() {
      return this._buffers;
    }
    constructor(t32, e26, i29) {
      this._nodes = e26, this._buffers = i29, this._length = zt(t32);
    }
  };
  var ya = class {
    get id() {
      return this._id;
    }
    get data() {
      return this._data;
    }
    get isDelta() {
      return this._isDelta;
    }
    get length() {
      return this.data.length;
    }
    get nodes() {
      return this.data.nodes;
    }
    get buffers() {
      return this.data.buffers;
    }
    constructor(t32, e26, i29 = false) {
      this._data = t32, this._isDelta = i29, this._id = zt(e26);
    }
  };
  var fa = class {
    constructor(t32, e26) {
      this.offset = zt(t32), this.length = zt(e26);
    }
  };
  var ba = class {
    constructor(t32, e26) {
      this.length = zt(t32), this.nullCount = zt(e26);
    }
  };
  function ga(t32, e26) {
    const i29 = [];
    for (let n37, r91 = -1, s29 = -1, o35 = t32.childrenLength(); ++r91 < o35; )
      (n37 = t32.children(r91)) && (i29[++s29] = qr.decode(n37, e26));
    return i29;
  }
  function va(t32) {
    const e26 = /* @__PURE__ */ new Map();
    if (t32)
      for (let i29, n37, r91 = -1, s29 = Math.trunc(t32.customMetadataLength()); ++r91 < s29; )
        (i29 = t32.customMetadata(r91)) && null != (n37 = i29.key()) && e26.set(n37, i29.value());
    return e26;
  }
  function _a(t32) {
    return new Ae(t32.isSigned(), t32.bitWidth());
  }
  function ma(t32, e26) {
    const i29 = t32.typeType();
    switch (i29) {
      case et.NONE:
      case et.Null:
        return new Se();
      case et.Binary:
        return new Ve();
      case et.LargeBinary:
        return new Re();
      case et.Utf8:
        return new ze();
      case et.LargeUtf8:
        return new Pe();
      case et.Bool:
        return new je();
      case et.List:
        return new ci((e26 || [])[0]);
      case et.Struct_:
        return new hi(e26 || []);
    }
    switch (i29) {
      case et.Int: {
        const e27 = t32.type(new dt());
        return new Ae(e27.isSigned(), e27.bitWidth());
      }
      case et.FloatingPoint: {
        const e27 = t32.type(new It());
        return new Ne(e27.precision());
      }
      case et.Decimal: {
        const e27 = t32.type(new vt());
        return new ke(e27.scale(), e27.precision(), e27.bitWidth());
      }
      case et.Date: {
        const e27 = t32.type(new gt());
        return new $e(e27.unit());
      }
      case et.Time: {
        const e27 = t32.type(new xt());
        return new He(e27.unit(), e27.bitWidth());
      }
      case et.Timestamp: {
        const e27 = t32.type(new Mt());
        return new Je(e27.unit(), e27.timezone());
      }
      case et.Interval: {
        const e27 = t32.type(new St());
        return new ii(e27.unit());
      }
      case et.Duration: {
        const e27 = t32.type(new _t());
        return new si(e27.unit());
      }
      case et.Union: {
        const i30 = t32.type(new Ft());
        return new di(i30.mode(), i30.typeIdsArray() || [], e26 || []);
      }
      case et.FixedSizeBinary: {
        const e27 = t32.type(new mt());
        return new fi(e27.byteWidth());
      }
      case et.FixedSizeList: {
        const i30 = t32.type(new wt());
        return new bi(i30.listSize(), (e26 || [])[0]);
      }
      case et.Map: {
        const i30 = t32.type(new Tt());
        return new gi((e26 || [])[0], i30.keysSorted());
      }
    }
    throw new Error(`Unrecognized type: "${et[i29]}" (${i29})`);
  }
  qr.encode = function(t32, e26) {
    let i29 = -1, n37 = -1, r91 = -1;
    const s29 = e26.type;
    let o35 = e26.typeId;
    Ie.isDictionary(s29) ? (o35 = s29.dictionary.typeId, r91 = ia.visit(s29, t32), n37 = ia.visit(s29.dictionary, t32)) : n37 = ia.visit(s29, t32);
    const a27 = (s29.children || []).map((e27) => qr.encode(t32, e27)), l35 = Ut.createChildrenVector(t32, a27), u30 = e26.metadata && e26.metadata.size > 0 ? Ut.createCustomMetadataVector(t32, [...e26.metadata].map(([e27, i30]) => {
      const n38 = t32.createString(`${e27}`), r92 = t32.createString(`${i30}`);
      return yt.startKeyValue(t32), yt.addKey(t32, n38), yt.addValue(t32, r92), yt.endKeyValue(t32);
    })) : -1;
    e26.name && (i29 = t32.createString(e26.name));
    Ut.startField(t32), Ut.addType(t32, n37), Ut.addTypeType(t32, o35), Ut.addChildren(t32, l35), Ut.addNullable(t32, !!e26.nullable), -1 !== i29 && Ut.addName(t32, i29);
    -1 !== r91 && Ut.addDictionary(t32, r91);
    -1 !== u30 && Ut.addCustomMetadata(t32, u30);
    return Ut.endField(t32);
  }, qr.decode = function(t32, e26) {
    let i29, n37, r91, s29, o35, a27;
    e26 && (a27 = t32.dictionary()) ? e26.has(i29 = zt(a27.id())) ? (s29 = (s29 = a27.indexType()) ? _a(s29) : new Te(), o35 = new mi(e26.get(i29), s29, i29, a27.isOrdered()), n37 = new qr(t32.name(), o35, t32.nullable(), va(t32))) : (s29 = (s29 = a27.indexType()) ? _a(s29) : new Te(), e26.set(i29, r91 = ma(t32, ga(t32, e26))), o35 = new mi(r91, s29, i29, a27.isOrdered()), n37 = new qr(t32.name(), o35, t32.nullable(), va(t32))) : (r91 = ma(t32, ga(t32, e26)), n37 = new qr(t32.name(), r91, t32.nullable(), va(t32)));
    return n37 || null;
  }, qr.fromJSON = function(t32, e26) {
    let i29, n37, r91, s29, o35, a27;
    return e26 && (s29 = t32.dictionary) ? e26.has(i29 = s29.id) ? (n37 = (n37 = s29.indexType) ? la(n37) : new Te(), a27 = new mi(e26.get(i29), n37, i29, s29.isOrdered), r91 = new qr(t32.name, a27, t32.nullable, aa(t32.metadata))) : (n37 = (n37 = s29.indexType) ? la(n37) : new Te(), e26.set(i29, o35 = ua(t32, ra(t32, e26))), a27 = new mi(o35, n37, i29, s29.isOrdered), r91 = new qr(t32.name, a27, t32.nullable, aa(t32.metadata))) : (o35 = ua(t32, ra(t32, e26)), r91 = new qr(t32.name, o35, t32.nullable, aa(t32.metadata))), r91 || null;
  }, Jr.encode = function(t32, e26) {
    const i29 = e26.fields.map((e27) => qr.encode(t32, e27));
    Ct.startFieldsVector(t32, i29.length);
    const n37 = Ct.createFieldsVector(t32, i29), r91 = e26.metadata && e26.metadata.size > 0 ? Ct.createCustomMetadataVector(t32, [...e26.metadata].map(([e27, i30]) => {
      const n38 = t32.createString(`${e27}`), r92 = t32.createString(`${i30}`);
      return yt.startKeyValue(t32), yt.addKey(t32, n38), yt.addValue(t32, r92), yt.endKeyValue(t32);
    })) : -1;
    Ct.startSchema(t32), Ct.addFields(t32, n37), Ct.addEndianness(t32, wa ? Q.Little : Q.Big), -1 !== r91 && Ct.addCustomMetadata(t32, r91);
    return Ct.endSchema(t32);
  }, Jr.decode = function(t32, e26 = /* @__PURE__ */ new Map(), i29 = Y.V5) {
    const n37 = function(t33, e27) {
      const i30 = [];
      for (let n38, r91 = -1, s29 = -1, o35 = t33.fieldsLength(); ++r91 < o35; )
        (n38 = t33.fields(r91)) && (i30[++s29] = qr.decode(n38, e27));
      return i30;
    }(t32, e26);
    return new Jr(n37, va(t32), e26, i29);
  }, Jr.fromJSON = function(t32, e26 = /* @__PURE__ */ new Map()) {
    return new Jr(function(t33, e27) {
      return (t33.fields || []).filter(Boolean).map((t34) => qr.fromJSON(t34, e27));
    }(t32, e26), aa(t32.metadata), e26);
  }, pa.encode = function(t32, e26) {
    const i29 = e26.nodes || [], n37 = e26.buffers || [];
    ct.startNodesVector(t32, i29.length);
    for (const e27 of i29.slice().reverse())
      ba.encode(t32, e27);
    const r91 = t32.endVector();
    ct.startBuffersVector(t32, n37.length);
    for (const e27 of n37.slice().reverse())
      fa.encode(t32, e27);
    const s29 = t32.endVector();
    return ct.startRecordBatch(t32), ct.addLength(t32, BigInt(e26.length)), ct.addNodes(t32, r91), ct.addBuffers(t32, s29), ct.endRecordBatch(t32);
  }, pa.decode = function(t32, e26 = Y.V5) {
    if (null !== t32.compression())
      throw new Error("Record batch compression not implemented");
    return new pa(t32.length(), function(t33) {
      const e27 = [];
      for (let i29, n37 = -1, r91 = -1, s29 = t33.nodesLength(); ++n37 < s29; )
        (i29 = t33.nodes(n37)) && (e27[++r91] = ba.decode(i29));
      return e27;
    }(t32), function(t33, e27) {
      const i29 = [];
      for (let n37, r91 = -1, s29 = -1, o35 = t33.buffersLength(); ++r91 < o35; )
        (n37 = t33.buffers(r91)) && (e27 < Y.V4 && (n37.bb_pos += 8 * (r91 + 1)), i29[++s29] = fa.decode(n37));
      return i29;
    }(t32, e26));
  }, pa.fromJSON = na, ya.encode = function(t32, e26) {
    const i29 = pa.encode(t32, e26.data);
    return ht.startDictionaryBatch(t32), ht.addId(t32, BigInt(e26.id)), ht.addIsDelta(t32, e26.isDelta), ht.addData(t32, i29), ht.endDictionaryBatch(t32);
  }, ya.decode = function(t32, e26 = Y.V5) {
    return new ya(pa.decode(t32.data(), e26), t32.id(), t32.isDelta());
  }, ya.fromJSON = function(t32) {
    return new ya(na(t32.data), t32.id, t32.isDelta);
  }, ba.encode = function(t32, e26) {
    return ut.createFieldNode(t32, BigInt(e26.length), BigInt(e26.nullCount));
  }, ba.decode = function(t32) {
    return new ba(t32.length(), t32.nullCount());
  }, fa.encode = function(t32, e26) {
    return lt.createBuffer(t32, BigInt(e26.offset), BigInt(e26.length));
  }, fa.decode = function(t32) {
    return new fa(t32.offset(), t32.length());
  };
  var wa = (() => {
    const t32 = new ArrayBuffer(2);
    return new DataView(t32).setInt16(0, 256, true), 256 === new Int16Array(t32)[0];
  })();
  var Ia = (t32) => `Expected ${rt[t32]} Message in stream, but was null or length 0.`;
  var Sa = (t32) => `Header pointer of flatbuffer-encoded ${rt[t32]} Message is null or length 0.`;
  var Aa = (t32, e26) => `Expected to read ${t32} metadata bytes, but only read ${e26}.`;
  var Ba = (t32, e26) => `Expected to read ${t32} bytes for message body, but only read ${e26}.`;
  var Da = class {
    constructor(t32) {
      this.source = t32 instanceof hs ? t32 : new hs(t32);
    }
    [Symbol.iterator]() {
      return this;
    }
    next() {
      let t32;
      return (t32 = this.readMetadataLength()).done || -1 === t32.value && (t32 = this.readMetadataLength()).done || (t32 = this.readMetadata(t32.value)).done ? os : t32;
    }
    throw(t32) {
      return this.source.throw(t32);
    }
    return(t32) {
      return this.source.return(t32);
    }
    readMessage(t32) {
      let e26;
      if ((e26 = this.next()).done)
        return null;
      if (null != t32 && e26.value.headerType !== t32)
        throw new Error(Ia(t32));
      return e26.value;
    }
    readMessageBody(t32) {
      if (t32 <= 0)
        return new Uint8Array(0);
      const e26 = F(this.source.read(t32));
      if (e26.byteLength < t32)
        throw new Error(Ba(t32, e26.byteLength));
      return e26.byteOffset % 8 == 0 && e26.byteOffset + e26.byteLength <= e26.buffer.byteLength ? e26 : e26.slice();
    }
    readSchema(t32 = false) {
      const e26 = rt.Schema, i29 = this.readMessage(e26), n37 = null == i29 ? void 0 : i29.header();
      if (t32 && !n37)
        throw new Error(Sa(e26));
      return n37;
    }
    readMetadataLength() {
      const t32 = this.source.read(La), e26 = t32 && new l(t32), i29 = (null == e26 ? void 0 : e26.readInt32(0)) || 0;
      return { done: 0 === i29, value: i29 };
    }
    readMetadata(t32) {
      const e26 = this.source.read(t32);
      if (!e26)
        return os;
      if (e26.byteLength < t32)
        throw new Error(Aa(t32, e26.byteLength));
      return { done: false, value: da.decode(e26) };
    }
  };
  var Ta = class {
    constructor(t32, e26) {
      this.source = t32 instanceof ds ? t32 : m2(t32) ? new bs(t32, e26) : new ds(t32);
    }
    [Symbol.asyncIterator]() {
      return this;
    }
    next() {
      return s(this, void 0, void 0, function* () {
        let t32;
        return (t32 = yield this.readMetadataLength()).done || -1 === t32.value && (t32 = yield this.readMetadataLength()).done || (t32 = yield this.readMetadata(t32.value)).done ? os : t32;
      });
    }
    throw(t32) {
      return s(this, void 0, void 0, function* () {
        return yield this.source.throw(t32);
      });
    }
    return(t32) {
      return s(this, void 0, void 0, function* () {
        return yield this.source.return(t32);
      });
    }
    readMessage(t32) {
      return s(this, void 0, void 0, function* () {
        let e26;
        if ((e26 = yield this.next()).done)
          return null;
        if (null != t32 && e26.value.headerType !== t32)
          throw new Error(Ia(t32));
        return e26.value;
      });
    }
    readMessageBody(t32) {
      return s(this, void 0, void 0, function* () {
        if (t32 <= 0)
          return new Uint8Array(0);
        const e26 = F(yield this.source.read(t32));
        if (e26.byteLength < t32)
          throw new Error(Ba(t32, e26.byteLength));
        return e26.byteOffset % 8 == 0 && e26.byteOffset + e26.byteLength <= e26.buffer.byteLength ? e26 : e26.slice();
      });
    }
    readSchema() {
      return s(this, arguments, void 0, function* (t32 = false) {
        const e26 = rt.Schema, i29 = yield this.readMessage(e26), n37 = null == i29 ? void 0 : i29.header();
        if (t32 && !n37)
          throw new Error(Sa(e26));
        return n37;
      });
    }
    readMetadataLength() {
      return s(this, void 0, void 0, function* () {
        const t32 = yield this.source.read(La), e26 = t32 && new l(t32), i29 = (null == e26 ? void 0 : e26.readInt32(0)) || 0;
        return { done: 0 === i29, value: i29 };
      });
    }
    readMetadata(t32) {
      return s(this, void 0, void 0, function* () {
        const e26 = yield this.source.read(t32);
        if (!e26)
          return os;
        if (e26.byteLength < t32)
          throw new Error(Aa(t32, e26.byteLength));
        return { done: false, value: da.decode(e26) };
      });
    }
  };
  var Oa = class extends Da {
    constructor(t32) {
      super(new Uint8Array(0)), this._schema = false, this._body = [], this._batchIndex = 0, this._dictionaryIndex = 0, this._json = t32 instanceof as ? t32 : new as(t32);
    }
    next() {
      const { _json: t32 } = this;
      if (!this._schema) {
        this._schema = true;
        return { done: false, value: da.fromJSON(t32.schema, rt.Schema) };
      }
      if (this._dictionaryIndex < t32.dictionaries.length) {
        const e26 = t32.dictionaries[this._dictionaryIndex++];
        this._body = e26.data.columns;
        return { done: false, value: da.fromJSON(e26, rt.DictionaryBatch) };
      }
      if (this._batchIndex < t32.batches.length) {
        const e26 = t32.batches[this._batchIndex++];
        this._body = e26.columns;
        return { done: false, value: da.fromJSON(e26, rt.RecordBatch) };
      }
      return this._body = [], os;
    }
    readMessageBody(t32) {
      return function t33(e26) {
        return (e26 || []).reduce((e27, i29) => [...e27, ...i29.VALIDITY && [i29.VALIDITY] || [], ...i29.TYPE_ID && [i29.TYPE_ID] || [], ...i29.OFFSET && [i29.OFFSET] || [], ...i29.DATA && [i29.DATA] || [], ...t33(i29.children)], []);
      }(this._body);
    }
    readMessage(t32) {
      let e26;
      if ((e26 = this.next()).done)
        return null;
      if (null != t32 && e26.value.headerType !== t32)
        throw new Error(Ia(t32));
      return e26.value;
    }
    readSchema() {
      const t32 = rt.Schema, e26 = this.readMessage(t32), i29 = null == e26 ? void 0 : e26.header();
      if (!e26 || !i29)
        throw new Error(Sa(t32));
      return i29;
    }
  };
  var La = 4;
  var xa = "ARROW1";
  var Ma = new Uint8Array(6);
  for (let t32 = 0; t32 < 6; t32 += 1)
    Ma[t32] = xa.codePointAt(t32);
  function Fa(t32, e26 = 0) {
    for (let i29 = -1, n37 = Ma.length; ++i29 < n37; )
      if (Ma[i29] !== t32[e26 + i29])
        return false;
    return true;
  }
  var Na = Ma.length;
  var Ua = Na + La;
  var Ca = 2 * Na + La;
  var Ea = class _Ea extends ls {
    constructor(t32) {
      super(), this._impl = t32;
    }
    get closed() {
      return this._impl.closed;
    }
    get schema() {
      return this._impl.schema;
    }
    get autoDestroy() {
      return this._impl.autoDestroy;
    }
    get dictionaries() {
      return this._impl.dictionaries;
    }
    get numDictionaries() {
      return this._impl.numDictionaries;
    }
    get numRecordBatches() {
      return this._impl.numRecordBatches;
    }
    get footer() {
      return this._impl.isFile() ? this._impl.footer : null;
    }
    isSync() {
      return this._impl.isSync();
    }
    isAsync() {
      return this._impl.isAsync();
    }
    isFile() {
      return this._impl.isFile();
    }
    isStream() {
      return this._impl.isStream();
    }
    next() {
      return this._impl.next();
    }
    throw(t32) {
      return this._impl.throw(t32);
    }
    return(t32) {
      return this._impl.return(t32);
    }
    cancel() {
      return this._impl.cancel();
    }
    reset(t32) {
      return this._impl.reset(t32), this._DOMStream = void 0, this._nodeStream = void 0, this;
    }
    open(t32) {
      const e26 = this._impl.open(t32);
      return f(e26) ? e26.then(() => this) : this;
    }
    readRecordBatch(t32) {
      return this._impl.isFile() ? this._impl.readRecordBatch(t32) : null;
    }
    [Symbol.iterator]() {
      return this._impl[Symbol.iterator]();
    }
    [Symbol.asyncIterator]() {
      return this._impl[Symbol.asyncIterator]();
    }
    toDOMStream() {
      return j2.toDOMStream(this.isSync() ? { [Symbol.iterator]: () => this } : { [Symbol.asyncIterator]: () => this });
    }
    toNodeStream() {
      return j2.toNodeStream(this.isSync() ? { [Symbol.iterator]: () => this } : { [Symbol.asyncIterator]: () => this }, { objectMode: true });
    }
    static throughNode(t32) {
      throw new Error('"throughNode" not available in this environment');
    }
    static throughDOM(t32, e26) {
      throw new Error('"throughDOM" not available in this environment');
    }
    static from(e26) {
      return e26 instanceof _Ea ? e26 : v(e26) ? function(t32) {
        return new Va(new Ha(t32));
      }(e26) : m2(e26) ? function(t32) {
        return s(this, void 0, void 0, function* () {
          const { size: e27 } = yield t32.stat(), i29 = new bs(t32, e27);
          return e27 >= Ca && Fa(yield i29.readAt(0, Na + 7 & -8)) ? new Pa(new Ya(i29)) : new Ra(new $a(i29));
        });
      }(e26) : f(e26) ? (() => s(this, void 0, void 0, function* () {
        return yield _Ea.from(yield e26);
      }))() : w(e26) || S(e26) || A(e26) || g2(e26) ? function(e27) {
        return s(this, void 0, void 0, function* () {
          const i29 = yield e27.peek(Na + 7 & -8);
          return i29 && i29.byteLength >= 4 ? Fa(i29) ? new za(new Wa(yield e27.read())) : new Ra(new $a(e27)) : new Ra(new $a(function() {
            return g(this, arguments, function* () {
            });
          }()));
        });
      }(new ds(e26)) : function(t32) {
        const e27 = t32.peek(Na + 7 & -8);
        return e27 && e27.byteLength >= 4 ? Fa(e27) ? new za(new Wa(t32.read())) : new Va(new ka(t32)) : new Va(new ka(function* () {
        }()));
      }(new hs(e26));
    }
    static readAll(t32) {
      return t32 instanceof _Ea ? t32.isSync() ? Za(t32) : Xa(t32) : v(t32) || ArrayBuffer.isView(t32) || b2(t32) || _(t32) ? Za(t32) : Xa(t32);
    }
  };
  var Va = class extends Ea {
    constructor(t32) {
      super(t32), this._impl = t32;
    }
    readAll() {
      return [...this];
    }
    [Symbol.iterator]() {
      return this._impl[Symbol.iterator]();
    }
    [Symbol.asyncIterator]() {
      return g(this, arguments, function* () {
        yield m(yield* O(j(this[Symbol.iterator]())));
      });
    }
  };
  var Ra = class extends Ea {
    constructor(t32) {
      super(t32), this._impl = t32;
    }
    readAll() {
      return s(this, void 0, void 0, function* () {
        var t32, e26, i29, r91;
        const s29 = new Array();
        try {
          for (var o35, a27 = true, l35 = j(this); !(t32 = (o35 = yield l35.next()).done); a27 = true) {
            r91 = o35.value, a27 = false;
            const t33 = r91;
            s29.push(t33);
          }
        } catch (t33) {
          e26 = { error: t33 };
        } finally {
          try {
            a27 || t32 || !(i29 = l35.return) || (yield i29.call(l35));
          } finally {
            if (e26)
              throw e26.error;
          }
        }
        return s29;
      });
    }
    [Symbol.iterator]() {
      throw new Error("AsyncRecordBatchStreamReader is not Iterable");
    }
    [Symbol.asyncIterator]() {
      return this._impl[Symbol.asyncIterator]();
    }
  };
  var za = class extends Va {
    constructor(t32) {
      super(t32), this._impl = t32;
    }
  };
  var Pa = class extends Ra {
    constructor(t32) {
      super(t32), this._impl = t32;
    }
  };
  var ja = class {
    get numDictionaries() {
      return this._dictionaryIndex;
    }
    get numRecordBatches() {
      return this._recordBatchIndex;
    }
    constructor(t32 = /* @__PURE__ */ new Map()) {
      this.closed = false, this.autoDestroy = true, this._dictionaryIndex = 0, this._recordBatchIndex = 0, this.dictionaries = t32;
    }
    isSync() {
      return false;
    }
    isAsync() {
      return false;
    }
    isFile() {
      return false;
    }
    isStream() {
      return false;
    }
    reset(t32) {
      return this._dictionaryIndex = 0, this._recordBatchIndex = 0, this.schema = t32, this.dictionaries = /* @__PURE__ */ new Map(), this;
    }
    _loadRecordBatch(t32, e26) {
      const i29 = this._loadVectors(t32, e26, this.schema.fields), n37 = fr({ type: new hi(this.schema.fields), length: t32.length, children: i29 });
      return new Jo(this.schema, n37);
    }
    _loadDictionaryBatch(t32, e26) {
      const { id: i29, isDelta: n37 } = t32, { dictionaries: r91, schema: s29 } = this, o35 = r91.get(i29);
      if (n37 || !o35) {
        const r92 = s29.dictionaries.get(i29), a27 = this._loadVectors(t32.data, e26, [r92]);
        return (o35 && n37 ? o35.concat(new Er(a27)) : new Er(a27)).memoize();
      }
      return o35.memoize();
    }
    _loadVectors(t32, e26, i29) {
      return new As(e26, t32.nodes, t32.buffers, this.dictionaries, this.schema.metadataVersion).visitMany(i29);
    }
  };
  var ka = class extends ja {
    constructor(t32, e26) {
      super(e26), this._reader = v(t32) ? new Oa(this._handle = t32) : new Da(this._handle = t32);
    }
    isSync() {
      return true;
    }
    isStream() {
      return true;
    }
    [Symbol.iterator]() {
      return this;
    }
    cancel() {
      !this.closed && (this.closed = true) && (this.reset()._reader.return(), this._reader = null, this.dictionaries = null);
    }
    open(t32) {
      return this.closed || (this.autoDestroy = Ga(this, t32), this.schema || (this.schema = this._reader.readSchema()) || this.cancel()), this;
    }
    throw(t32) {
      return !this.closed && this.autoDestroy && (this.closed = true) ? this.reset()._reader.throw(t32) : os;
    }
    return(t32) {
      return !this.closed && this.autoDestroy && (this.closed = true) ? this.reset()._reader.return(t32) : os;
    }
    next() {
      if (this.closed)
        return os;
      let t32;
      const { _reader: e26 } = this;
      for (; t32 = this._readNextMessageAndValidate(); )
        if (t32.isSchema())
          this.reset(t32.header());
        else {
          if (t32.isRecordBatch()) {
            this._recordBatchIndex++;
            const i29 = t32.header(), n37 = e26.readMessageBody(t32.bodyLength);
            return { done: false, value: this._loadRecordBatch(i29, n37) };
          }
          if (t32.isDictionaryBatch()) {
            this._dictionaryIndex++;
            const i29 = t32.header(), n37 = e26.readMessageBody(t32.bodyLength), r91 = this._loadDictionaryBatch(i29, n37);
            this.dictionaries.set(i29.id, r91);
          }
        }
      return this.schema && 0 === this._recordBatchIndex ? (this._recordBatchIndex++, { done: false, value: new ta(this.schema) }) : this.return();
    }
    _readNextMessageAndValidate(t32) {
      return this._reader.readMessage(t32);
    }
  };
  var $a = class extends ja {
    constructor(t32, e26) {
      super(e26), this._reader = new Ta(this._handle = t32);
    }
    isAsync() {
      return true;
    }
    isStream() {
      return true;
    }
    [Symbol.asyncIterator]() {
      return this;
    }
    cancel() {
      return s(this, void 0, void 0, function* () {
        !this.closed && (this.closed = true) && (yield this.reset()._reader.return(), this._reader = null, this.dictionaries = null);
      });
    }
    open(t32) {
      return s(this, void 0, void 0, function* () {
        return this.closed || (this.autoDestroy = Ga(this, t32), this.schema || (this.schema = yield this._reader.readSchema()) || (yield this.cancel())), this;
      });
    }
    throw(t32) {
      return s(this, void 0, void 0, function* () {
        return !this.closed && this.autoDestroy && (this.closed = true) ? yield this.reset()._reader.throw(t32) : os;
      });
    }
    return(t32) {
      return s(this, void 0, void 0, function* () {
        return !this.closed && this.autoDestroy && (this.closed = true) ? yield this.reset()._reader.return(t32) : os;
      });
    }
    next() {
      return s(this, void 0, void 0, function* () {
        if (this.closed)
          return os;
        let t32;
        const { _reader: e26 } = this;
        for (; t32 = yield this._readNextMessageAndValidate(); )
          if (t32.isSchema())
            yield this.reset(t32.header());
          else {
            if (t32.isRecordBatch()) {
              this._recordBatchIndex++;
              const i29 = t32.header(), n37 = yield e26.readMessageBody(t32.bodyLength);
              return { done: false, value: this._loadRecordBatch(i29, n37) };
            }
            if (t32.isDictionaryBatch()) {
              this._dictionaryIndex++;
              const i29 = t32.header(), n37 = yield e26.readMessageBody(t32.bodyLength), r91 = this._loadDictionaryBatch(i29, n37);
              this.dictionaries.set(i29.id, r91);
            }
          }
        return this.schema && 0 === this._recordBatchIndex ? (this._recordBatchIndex++, { done: false, value: new ta(this.schema) }) : yield this.return();
      });
    }
    _readNextMessageAndValidate(t32) {
      return s(this, void 0, void 0, function* () {
        return yield this._reader.readMessage(t32);
      });
    }
  };
  var Wa = class extends ka {
    get footer() {
      return this._footer;
    }
    get numDictionaries() {
      return this._footer ? this._footer.numDictionaries : 0;
    }
    get numRecordBatches() {
      return this._footer ? this._footer.numRecordBatches : 0;
    }
    constructor(t32, e26) {
      super(t32 instanceof fs ? t32 : new fs(t32), e26);
    }
    isSync() {
      return true;
    }
    isFile() {
      return true;
    }
    open(t32) {
      if (!this.closed && !this._footer) {
        this.schema = (this._footer = this._readFooter()).schema;
        for (const t33 of this._footer.dictionaryBatches())
          t33 && this._readDictionaryBatch(this._dictionaryIndex++);
      }
      return super.open(t32);
    }
    readRecordBatch(t32) {
      var e26;
      if (this.closed)
        return null;
      this._footer || this.open();
      const i29 = null === (e26 = this._footer) || void 0 === e26 ? void 0 : e26.getRecordBatch(t32);
      if (i29 && this._handle.seek(i29.offset)) {
        const t33 = this._reader.readMessage(rt.RecordBatch);
        if (null == t33 ? void 0 : t33.isRecordBatch()) {
          const e27 = t33.header(), i30 = this._reader.readMessageBody(t33.bodyLength);
          return this._loadRecordBatch(e27, i30);
        }
      }
      return null;
    }
    _readDictionaryBatch(t32) {
      var e26;
      const i29 = null === (e26 = this._footer) || void 0 === e26 ? void 0 : e26.getDictionaryBatch(t32);
      if (i29 && this._handle.seek(i29.offset)) {
        const t33 = this._reader.readMessage(rt.DictionaryBatch);
        if (null == t33 ? void 0 : t33.isDictionaryBatch()) {
          const e27 = t33.header(), i30 = this._reader.readMessageBody(t33.bodyLength), n37 = this._loadDictionaryBatch(e27, i30);
          this.dictionaries.set(e27.id, n37);
        }
      }
    }
    _readFooter() {
      const { _handle: t32 } = this, e26 = t32.size - Ua, i29 = t32.readInt32(e26), n37 = t32.readAt(e26 - i29, i29);
      return ns.decode(n37);
    }
    _readNextMessageAndValidate(t32) {
      var e26;
      if (this._footer || this.open(), this._footer && this._recordBatchIndex < this.numRecordBatches) {
        const i29 = null === (e26 = this._footer) || void 0 === e26 ? void 0 : e26.getRecordBatch(this._recordBatchIndex);
        if (i29 && this._handle.seek(i29.offset))
          return this._reader.readMessage(t32);
      }
      return null;
    }
  };
  var Ya = class extends $a {
    get footer() {
      return this._footer;
    }
    get numDictionaries() {
      return this._footer ? this._footer.numDictionaries : 0;
    }
    get numRecordBatches() {
      return this._footer ? this._footer.numRecordBatches : 0;
    }
    constructor(t32, ...e26) {
      const i29 = "number" != typeof e26[0] ? e26.shift() : void 0, n37 = e26[0] instanceof Map ? e26.shift() : void 0;
      super(t32 instanceof bs ? t32 : new bs(t32, i29), n37);
    }
    isFile() {
      return true;
    }
    isAsync() {
      return true;
    }
    open(t32) {
      const e26 = Object.create(null, { open: { get: () => super.open } });
      return s(this, void 0, void 0, function* () {
        if (!this.closed && !this._footer) {
          this.schema = (this._footer = yield this._readFooter()).schema;
          for (const t33 of this._footer.dictionaryBatches())
            t33 && (yield this._readDictionaryBatch(this._dictionaryIndex++));
        }
        return yield e26.open.call(this, t32);
      });
    }
    readRecordBatch(t32) {
      return s(this, void 0, void 0, function* () {
        var e26;
        if (this.closed)
          return null;
        this._footer || (yield this.open());
        const i29 = null === (e26 = this._footer) || void 0 === e26 ? void 0 : e26.getRecordBatch(t32);
        if (i29 && (yield this._handle.seek(i29.offset))) {
          const t33 = yield this._reader.readMessage(rt.RecordBatch);
          if (null == t33 ? void 0 : t33.isRecordBatch()) {
            const e27 = t33.header(), i30 = yield this._reader.readMessageBody(t33.bodyLength);
            return this._loadRecordBatch(e27, i30);
          }
        }
        return null;
      });
    }
    _readDictionaryBatch(t32) {
      return s(this, void 0, void 0, function* () {
        var e26;
        const i29 = null === (e26 = this._footer) || void 0 === e26 ? void 0 : e26.getDictionaryBatch(t32);
        if (i29 && (yield this._handle.seek(i29.offset))) {
          const t33 = yield this._reader.readMessage(rt.DictionaryBatch);
          if (null == t33 ? void 0 : t33.isDictionaryBatch()) {
            const e27 = t33.header(), i30 = yield this._reader.readMessageBody(t33.bodyLength), n37 = this._loadDictionaryBatch(e27, i30);
            this.dictionaries.set(e27.id, n37);
          }
        }
      });
    }
    _readFooter() {
      return s(this, void 0, void 0, function* () {
        const { _handle: t32 } = this;
        t32._pending && (yield t32._pending);
        const e26 = t32.size - Ua, i29 = yield t32.readInt32(e26), n37 = yield t32.readAt(e26 - i29, i29);
        return ns.decode(n37);
      });
    }
    _readNextMessageAndValidate(t32) {
      return s(this, void 0, void 0, function* () {
        if (this._footer || (yield this.open()), this._footer && this._recordBatchIndex < this.numRecordBatches) {
          const e26 = this._footer.getRecordBatch(this._recordBatchIndex);
          if (e26 && (yield this._handle.seek(e26.offset)))
            return yield this._reader.readMessage(t32);
        }
        return null;
      });
    }
  };
  var Ha = class extends ka {
    constructor(t32, e26) {
      super(t32, e26);
    }
    _loadVectors(t32, e26, i29) {
      return new Bs(e26, t32.nodes, t32.buffers, this.dictionaries, this.schema.metadataVersion).visitMany(i29);
    }
  };
  function Ga(t32, e26) {
    return e26 && "boolean" == typeof e26.autoDestroy ? e26.autoDestroy : t32.autoDestroy;
  }
  function* Za(t32) {
    const e26 = Ea.from(t32);
    try {
      if (!e26.open({ autoDestroy: false }).closed)
        do {
          yield e26;
        } while (!e26.reset().open().closed);
    } finally {
      e26.cancel();
    }
  }
  function Xa(i29) {
    return g(this, arguments, function* () {
      const t32 = yield m(Ea.from(i29));
      try {
        if (!(yield m(t32.open({ autoDestroy: false }))).closed)
          do {
            yield yield m(t32);
          } while (!(yield m(t32.reset().open())).closed);
      } finally {
        yield m(t32.cancel());
      }
    });
  }
  var Ka = class _Ka extends Ii {
    static assemble(...t32) {
      const e26 = (t33) => t33.flatMap((t34) => Array.isArray(t34) ? e26(t34) : t34 instanceof Jo ? t34.data.children : t34.data), i29 = new _Ka();
      return i29.visitMany(e26(t32)), i29;
    }
    constructor() {
      super(), this._byteLength = 0, this._nodes = [], this._buffers = [], this._bufferRegions = [];
    }
    visit(t32) {
      if (t32 instanceof Er)
        return this.visitMany(t32.data), this;
      const { type: e26 } = t32;
      if (!Ie.isDictionary(e26)) {
        const { length: i29 } = t32;
        if (i29 > 2147483647)
          throw new RangeError("Cannot write arrays larger than 2^31 - 1 in length");
        if (Ie.isUnion(e26))
          this.nodes.push(new ba(i29, 0));
        else {
          const { nullCount: n37 } = t32;
          Ie.isNull(e26) || Ja.call(this, n37 <= 0 ? new Uint8Array(0) : sr(t32.offset, i29, t32.nullBitmap)), this.nodes.push(new ba(i29, n37));
        }
      }
      return super.visit(t32);
    }
    visitNull(t32) {
      return this;
    }
    visitDictionary(t32) {
      return this.visit(t32.clone(t32.type.indices));
    }
    get nodes() {
      return this._nodes;
    }
    get buffers() {
      return this._buffers;
    }
    get byteLength() {
      return this._byteLength;
    }
    get bufferRegions() {
      return this._bufferRegions;
    }
  };
  function Ja(t32) {
    const e26 = t32.byteLength + 7 & -8;
    return this.buffers.push(t32), this.bufferRegions.push(new fa(this._byteLength, e26)), this._byteLength += e26, this;
  }
  function qa(t32) {
    return Ja.call(this, t32.values.subarray(0, t32.length * t32.stride));
  }
  function Qa(t32) {
    const { length: e26, values: i29, valueOffsets: n37 } = t32, r91 = zt(n37[0]), s29 = zt(n37[e26]), o35 = Math.min(s29 - r91, i29.byteLength - r91);
    return Ja.call(this, R(-r91, e26 + 1, n37)), Ja.call(this, i29.subarray(r91, r91 + o35)), this;
  }
  function tl(t32) {
    const { length: e26, valueOffsets: i29 } = t32;
    if (i29) {
      const { 0: n37, [e26]: r91 } = i29;
      return Ja.call(this, R(-n37, e26 + 1, i29)), this.visit(t32.children[0].slice(n37, r91 - n37));
    }
    return this.visit(t32.children[0]);
  }
  function el(t32) {
    return this.visitMany(t32.type.children.map((e26, i29) => t32.children[i29]).filter(Boolean))[0];
  }
  Ka.prototype.visitBool = function(t32) {
    let e26;
    return t32.nullCount >= t32.length ? Ja.call(this, new Uint8Array(0)) : (e26 = t32.values) instanceof Uint8Array ? Ja.call(this, sr(t32.offset, t32.length, e26)) : Ja.call(this, or(t32.values));
  }, Ka.prototype.visitInt = qa, Ka.prototype.visitFloat = qa, Ka.prototype.visitUtf8 = Qa, Ka.prototype.visitLargeUtf8 = Qa, Ka.prototype.visitBinary = Qa, Ka.prototype.visitLargeBinary = Qa, Ka.prototype.visitFixedSizeBinary = qa, Ka.prototype.visitDate = qa, Ka.prototype.visitTimestamp = qa, Ka.prototype.visitTime = qa, Ka.prototype.visitDecimal = qa, Ka.prototype.visitList = tl, Ka.prototype.visitStruct = el, Ka.prototype.visitUnion = function(t32) {
    var e26;
    const { type: i29, length: n37, typeIds: r91, valueOffsets: s29 } = t32;
    if (Ja.call(this, r91), i29.mode === H.Sparse)
      return el.call(this, t32);
    if (i29.mode === H.Dense) {
      if (t32.offset <= 0)
        return Ja.call(this, s29), el.call(this, t32);
      {
        const o35 = new Int32Array(n37), a27 = /* @__PURE__ */ Object.create(null), l35 = /* @__PURE__ */ Object.create(null);
        for (let t33, i30, u30 = -1; ++u30 < n37; )
          void 0 !== (t33 = r91[u30]) && (void 0 === (i30 = a27[t33]) && (i30 = a27[t33] = s29[u30]), o35[u30] = s29[u30] - i30, l35[t33] = (null !== (e26 = l35[t33]) && void 0 !== e26 ? e26 : 0) + 1);
        Ja.call(this, o35), this.visitMany(t32.children.map((t33, e27) => {
          const r92 = i29.typeIds[e27], s30 = a27[r92], o36 = l35[r92];
          return t33.slice(s30, Math.min(n37, o36));
        }));
      }
    }
    return this;
  }, Ka.prototype.visitInterval = qa, Ka.prototype.visitDuration = qa, Ka.prototype.visitFixedSizeList = tl, Ka.prototype.visitMap = tl;
  var ol = class extends ls {
    static throughNode(t32) {
      throw new Error('"throughNode" not available in this environment');
    }
    static throughDOM(t32, e26) {
      throw new Error('"throughDOM" not available in this environment');
    }
    constructor(t32) {
      super(), this._position = 0, this._started = false, this._sink = new cs(), this._schema = null, this._dictionaryBlocks = [], this._recordBatchBlocks = [], this._dictionaryDeltaOffsets = /* @__PURE__ */ new Map(), y(t32) || (t32 = { autoDestroy: true, writeLegacyIpcFormat: false }), this._autoDestroy = "boolean" != typeof t32.autoDestroy || t32.autoDestroy, this._writeLegacyIpcFormat = "boolean" == typeof t32.writeLegacyIpcFormat && t32.writeLegacyIpcFormat;
    }
    toString(t32 = false) {
      return this._sink.toString(t32);
    }
    toUint8Array(t32 = false) {
      return this._sink.toUint8Array(t32);
    }
    writeAll(t32) {
      return f(t32) ? t32.then((t33) => this.writeAll(t33)) : g2(t32) ? hl(this, t32) : cl(this, t32);
    }
    get closed() {
      return this._sink.closed;
    }
    [Symbol.asyncIterator]() {
      return this._sink[Symbol.asyncIterator]();
    }
    toDOMStream(t32) {
      return this._sink.toDOMStream(t32);
    }
    toNodeStream(t32) {
      return this._sink.toNodeStream(t32);
    }
    close() {
      return this.reset()._sink.close();
    }
    abort(t32) {
      return this.reset()._sink.abort(t32);
    }
    finish() {
      return this._autoDestroy ? this.close() : this.reset(this._sink, this._schema), this;
    }
    reset(t32 = this._sink, e26 = null) {
      var i29;
      return t32 === this._sink || t32 instanceof cs ? this._sink = t32 : (this._sink = new cs(), t32 && (y(i29 = t32) && p(i29.abort) && p(i29.getWriter) && !I(i29)) ? this.toDOMStream({ type: "bytes" }).pipeTo(t32) : t32 && ((t33) => y(t33) && p(t33.end) && p(t33.write) && d(t33.writable) && !I(t33))(t32) && this.toNodeStream({ objectMode: false }).pipe(t32)), this._started && this._schema && this._writeFooter(this._schema), this._started = false, this._dictionaryBlocks = [], this._recordBatchBlocks = [], this._dictionaryDeltaOffsets = /* @__PURE__ */ new Map(), e26 && Eo(e26, this._schema) || (null == e26 ? (this._position = 0, this._schema = null) : (this._started = true, this._schema = e26, this._writeSchema(e26))), this;
    }
    write(t32) {
      let e26 = null;
      if (!this._sink)
        throw new Error("RecordBatchWriter is closed");
      if (null == t32)
        return this.finish() && void 0;
      if (t32 instanceof Zo && !(e26 = t32.schema))
        return this.finish() && void 0;
      if (t32 instanceof Jo && !(e26 = t32.schema))
        return this.finish() && void 0;
      if (e26 && !Eo(e26, this._schema)) {
        if (this._started && this._autoDestroy)
          return this.close();
        this.reset(this._sink, e26);
      }
      t32 instanceof Jo ? t32 instanceof ta || this._writeRecordBatch(t32) : t32 instanceof Zo ? this.writeAll(t32.batches) : b2(t32) && this.writeAll(t32);
    }
    _writeMessage(t32, e26 = 8) {
      const i29 = e26 - 1, n37 = da.encode(t32), r91 = n37.byteLength, s29 = this._writeLegacyIpcFormat ? 4 : 8, o35 = r91 + s29 + i29 & ~i29, a27 = o35 - r91 - s29;
      return t32.headerType === rt.RecordBatch ? this._recordBatchBlocks.push(new ss(o35, t32.bodyLength, this._position)) : t32.headerType === rt.DictionaryBatch && this._dictionaryBlocks.push(new ss(o35, t32.bodyLength, this._position)), this._writeLegacyIpcFormat || this._write(Int32Array.of(-1)), this._write(Int32Array.of(o35 - s29)), r91 > 0 && this._write(n37), this._writePadding(a27);
    }
    _write(t32) {
      if (this._started) {
        const e26 = F(t32);
        e26 && e26.byteLength > 0 && (this._sink.write(e26), this._position += e26.byteLength);
      }
      return this;
    }
    _writeSchema(t32) {
      return this._writeMessage(da.from(t32));
    }
    _writeFooter(t32) {
      return this._writeLegacyIpcFormat ? this._write(Int32Array.of(0)) : this._write(Int32Array.of(-1, 0));
    }
    _writeMagic() {
      return this._write(Ma);
    }
    _writePadding(t32) {
      return t32 > 0 ? this._write(new Uint8Array(t32)) : this;
    }
    _writeRecordBatch(t32) {
      const { byteLength: e26, nodes: i29, bufferRegions: n37, buffers: r91 } = Ka.assemble(t32), s29 = new pa(t32.numRows, i29, n37), o35 = da.from(s29, e26);
      return this._writeDictionaries(t32)._writeMessage(o35)._writeBodyBuffers(r91);
    }
    _writeDictionaryBatch(t32, e26, i29 = false) {
      this._dictionaryDeltaOffsets.set(e26, t32.length + (this._dictionaryDeltaOffsets.get(e26) || 0));
      const { byteLength: n37, nodes: r91, bufferRegions: s29, buffers: o35 } = Ka.assemble(new Er([t32])), a27 = new pa(t32.length, r91, s29), l35 = new ya(a27, e26, i29), u30 = da.from(l35, n37);
      return this._writeMessage(u30)._writeBodyBuffers(o35);
    }
    _writeBodyBuffers(t32) {
      let e26, i29, n37;
      for (let r91 = -1, s29 = t32.length; ++r91 < s29; )
        (e26 = t32[r91]) && (i29 = e26.byteLength) > 0 && (this._write(e26), (n37 = (i29 + 7 & -8) - i29) > 0 && this._writePadding(n37));
      return this;
    }
    _writeDictionaries(t32) {
      for (let [e26, i29] of t32.dictionaries) {
        let t33 = this._dictionaryDeltaOffsets.get(e26) || 0;
        if (0 === t33 || (i29 = null == i29 ? void 0 : i29.slice(t33)).length > 0)
          for (const n37 of i29.data)
            this._writeDictionaryBatch(n37, e26, t33 > 0), t33 += n37.length;
      }
      return this;
    }
  };
  var al = class _al extends ol {
    static writeAll(t32, e26) {
      const i29 = new _al(e26);
      return f(t32) ? t32.then((t33) => i29.writeAll(t33)) : g2(t32) ? hl(i29, t32) : cl(i29, t32);
    }
  };
  var ll = class _ll extends ol {
    static writeAll(t32) {
      const e26 = new _ll();
      return f(t32) ? t32.then((t33) => e26.writeAll(t33)) : g2(t32) ? hl(e26, t32) : cl(e26, t32);
    }
    constructor() {
      super(), this._autoDestroy = true;
    }
    _writeSchema(t32) {
      return this._writeMagic()._writePadding(2);
    }
    _writeFooter(t32) {
      const e26 = ns.encode(new ns(t32, Y.V5, this._recordBatchBlocks, this._dictionaryBlocks));
      return super._writeFooter(t32)._write(e26)._write(Int32Array.of(e26.byteLength))._writeMagic();
    }
  };
  function cl(t32, e26) {
    let i29 = e26;
    e26 instanceof Zo && (i29 = e26.batches, t32.reset(void 0, e26.schema));
    for (const e27 of i29)
      t32.write(e27);
    return t32.finish();
  }
  function hl(t32, e26) {
    return s(this, void 0, void 0, function* () {
      var i29, r91, s29, o35, a27, l35, u30;
      try {
        for (i29 = true, r91 = j(e26); !(o35 = (s29 = yield r91.next()).done); i29 = true) {
          u30 = s29.value, i29 = false;
          const e27 = u30;
          t32.write(e27);
        }
      } catch (t33) {
        a27 = { error: t33 };
      } finally {
        try {
          i29 || o35 || !(l35 = r91.return) || (yield l35.call(r91));
        } finally {
          if (a27)
            throw a27.error;
        }
      }
      return t32.finish();
    });
  }
  var yl = class {
    constructor(t32) {
      this._numChunks = 0, this._finished = false, this._bufferedSize = 0;
      const { readableStrategy: e26, writableStrategy: i29, queueingStrategy: n37 = "count" } = t32, r91 = n(t32, ["readableStrategy", "writableStrategy", "queueingStrategy"]);
      this._controller = null, this._builder = Ro(r91), this._getSize = "bytes" !== n37 ? fl : bl;
      const { highWaterMark: o35 = "bytes" === n37 ? Math.pow(2, 14) : 1e3 } = Object.assign({}, e26), { highWaterMark: a27 = "bytes" === n37 ? Math.pow(2, 14) : 1e3 } = Object.assign({}, i29);
      this.readable = new ReadableStream({ cancel: () => {
        this._builder.clear();
      }, pull: (t33) => {
        this._maybeFlush(this._builder, this._controller = t33);
      }, start: (t33) => {
        this._maybeFlush(this._builder, this._controller = t33);
      } }, { highWaterMark: o35, size: "bytes" !== n37 ? fl : bl }), this.writable = new WritableStream({ abort: () => {
        this._builder.clear();
      }, write: () => {
        this._maybeFlush(this._builder, this._controller);
      }, close: () => {
        this._maybeFlush(this._builder.finish(), this._controller);
      } }, { highWaterMark: a27, size: (t33) => this._writeValueAndReturnChunkSize(t33) });
    }
    _writeValueAndReturnChunkSize(t32) {
      const e26 = this._bufferedSize;
      return this._bufferedSize = this._getSize(this._builder.append(t32)), this._bufferedSize - e26;
    }
    _maybeFlush(t32, e26) {
      null != e26 && (this._bufferedSize >= e26.desiredSize && ++this._numChunks && this._enqueue(e26, t32.toVector()), t32.finished && ((t32.length > 0 || 0 === this._numChunks) && ++this._numChunks && this._enqueue(e26, t32.toVector()), !this._finished && (this._finished = true) && this._enqueue(e26, null)));
    }
    _enqueue(t32, e26) {
      this._bufferedSize = 0, this._controller = null, null == e26 ? t32.close() : t32.enqueue(e26);
    }
  };
  var fl = (t32) => {
    var e26;
    return null !== (e26 = null == t32 ? void 0 : t32.length) && void 0 !== e26 ? e26 : 0;
  };
  var bl = (t32) => {
    var e26;
    return null !== (e26 = null == t32 ? void 0 : t32.byteLength) && void 0 !== e26 ? e26 : 0;
  };
  function gl(t32, e26) {
    const i29 = new cs();
    let n37 = null;
    const s29 = new ReadableStream({ cancel() {
      return s(this, void 0, void 0, function* () {
        yield i29.close();
      });
    }, start(t33) {
      return s(this, void 0, void 0, function* () {
        yield o35(t33, n37 || (n37 = yield function() {
          return s(this, void 0, void 0, function* () {
            return yield (yield Ea.from(i29)).open(e26);
          });
        }()));
      });
    }, pull(t33) {
      return s(this, void 0, void 0, function* () {
        n37 ? yield o35(t33, n37) : t33.close();
      });
    } });
    return { writable: new WritableStream(i29, Object.assign({ highWaterMark: Math.pow(2, 14) }, t32)), readable: s29 };
    function o35(t33, e27) {
      return s(this, void 0, void 0, function* () {
        let i30 = t33.desiredSize, n38 = null;
        for (; !(n38 = yield e27.next()).done; )
          if (t33.enqueue(n38.value), null != i30 && --i30 <= 0)
            return;
        t33.close();
      });
    }
  }
  function vl(t32, e26) {
    const i29 = new this(t32), n37 = new ds(i29), s29 = new ReadableStream({ cancel() {
      return s(this, void 0, void 0, function* () {
        yield n37.cancel();
      });
    }, pull(t33) {
      return s(this, void 0, void 0, function* () {
        yield o35(t33);
      });
    }, start(t33) {
      return s(this, void 0, void 0, function* () {
        yield o35(t33);
      });
    } }, Object.assign({ highWaterMark: Math.pow(2, 14) }, e26));
    return { writable: new WritableStream(i29, t32), readable: s29 };
    function o35(t33) {
      return s(this, void 0, void 0, function* () {
        let e27 = null, i30 = t33.desiredSize;
        for (; e27 = yield n37.read(i30 || null); )
          if (t33.enqueue(e27), null != i30 && (i30 -= e27.byteLength) <= 0)
            return;
        t33.close();
      });
    }
  }
  function _l(t32) {
    const e26 = Ea.from(t32);
    return f(e26) ? e26.then((t33) => _l(t33)) : e26.isAsync() ? e26.readAll().then((t33) => new Zo(t33)) : new Zo(e26.readAll());
  }
  var wl = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, we), Ss), hr), Li), P), ir), Rt), { compareSchemas: Eo, compareFields: function(t32, e26) {
    return Co.compareFields(t32, e26);
  }, compareTypes: Vo });
  j2.toDOMStream = function(t32, e26) {
    if (g2(t32))
      return function(t33, e27) {
        let i29 = null;
        const n37 = "bytes" === (null == e27 ? void 0 : e27.type) || false, s29 = (null == e27 ? void 0 : e27.highWaterMark) || Math.pow(2, 24);
        return new ReadableStream(Object.assign(Object.assign({}, e27), { start(e28) {
          return s(this, void 0, void 0, function* () {
            yield o35(e28, i29 || (i29 = t33[Symbol.asyncIterator]()));
          });
        }, pull(t34) {
          return s(this, void 0, void 0, function* () {
            i29 ? yield o35(t34, i29) : t34.close();
          });
        }, cancel() {
          return s(this, void 0, void 0, function* () {
            (null == i29 ? void 0 : i29.return) && (yield i29.return()), i29 = null;
          });
        } }), Object.assign({ highWaterMark: n37 ? s29 : void 0 }, e27));
        function o35(t34, e28) {
          return s(this, void 0, void 0, function* () {
            let i30, r91 = null, s30 = t34.desiredSize || null;
            for (; !(r91 = yield e28.next(n37 ? s30 : null)).done; )
              if (ArrayBuffer.isView(r91.value) && (i30 = F(r91.value)) && (null != s30 && n37 && (s30 = s30 - i30.byteLength + 1), r91.value = i30), t34.enqueue(r91.value), null != s30 && --s30 <= 0)
                return;
            t34.close();
          });
        }
      }(t32, e26);
    if (b2(t32))
      return function(t33, e27) {
        let i29 = null;
        const n37 = "bytes" === (null == e27 ? void 0 : e27.type) || false, r91 = (null == e27 ? void 0 : e27.highWaterMark) || Math.pow(2, 24);
        return new ReadableStream(Object.assign(Object.assign({}, e27), { start(e28) {
          s29(e28, i29 || (i29 = t33[Symbol.iterator]()));
        }, pull(t34) {
          i29 ? s29(t34, i29) : t34.close();
        }, cancel() {
          (null == i29 ? void 0 : i29.return) && i29.return(), i29 = null;
        } }), Object.assign({ highWaterMark: n37 ? r91 : void 0 }, e27));
        function s29(t34, e28) {
          let i30, r92 = null, s30 = t34.desiredSize || null;
          for (; !(r92 = e28.next(n37 ? s30 : null)).done; )
            if (ArrayBuffer.isView(r92.value) && (i30 = F(r92.value)) && (null != s30 && n37 && (s30 = s30 - i30.byteLength + 1), r92.value = i30), t34.enqueue(r92.value), null != s30 && --s30 <= 0)
              return;
          t34.close();
        }
      }(t32, e26);
    throw new Error("toDOMStream() must be called with an Iterable or AsyncIterable");
  }, Hr.throughDOM = function(t32) {
    return new yl(t32);
  }, Ea.throughDOM = gl, za.throughDOM = gl, Va.throughDOM = gl, ol.throughDOM = vl, ll.throughDOM = vl, al.throughDOM = vl;

  // https://cdn.jsdelivr.net/npm/@uwdata/mosaic-sql@0.10.0/+esm
  var t = class {
    constructor(t32, e26) {
      t32 && (this.table = String(t32)), e26 && (this.column = e26);
    }
    get columns() {
      return this.column ? [this.column] : [];
    }
    toString() {
      const { table: t32, column: n37 } = this;
      if (n37) {
        const r91 = n37.startsWith("*") ? n37 : `"${n37}"`;
        return `${t32 ? `${e(t32)}.` : ""}${r91}`;
      }
      return t32 ? e(t32) : "NULL";
    }
  };
  function e(t32) {
    return t32.split(".").map((t33) => `"${t33}"`).join(".");
  }
  function n3(t32) {
    return "string" == typeof t32 ? i2(t32) : t32;
  }
  function r2(t32) {
    return "string" == typeof t32 ? s2(t32) : t32;
  }
  function s2(e26) {
    return new t(e26);
  }
  function i2(e26, n37 = null) {
    return 1 === arguments.length && (n37 = e26, e26 = null), new t(e26, n37);
  }
  function a2(t32) {
    switch (typeof t32) {
      case "boolean":
        return t32 ? "TRUE" : "FALSE";
      case "string":
        return `'${t32.replace("'", "''")}'`;
      case "number":
        return Number.isFinite(t32) ? String(t32) : "NULL";
      default:
        if (null == t32)
          return "NULL";
        if (t32 instanceof Date) {
          const e26 = +t32;
          if (Number.isNaN(e26))
            return "NULL";
          const n37 = t32.getUTCFullYear(), r91 = t32.getUTCMonth(), s29 = t32.getUTCDate();
          return e26 === Date.UTC(n37, r91, s29) ? `MAKE_DATE(${n37}, ${r91 + 1}, ${s29})` : `EPOCH_MS(${e26})`;
        }
        return t32 instanceof RegExp ? `'${t32.source}'` : String(t32);
    }
  }
  var c2 = (t32) => "function" == typeof t32?.addEventListener;
  function l3(t32) {
    return t32 instanceof h4;
  }
  var h4 = class {
    constructor(t32, e26, n37) {
      this._expr = Array.isArray(t32) ? t32 : [t32], this._deps = e26 || [], this.annotate(n37);
      const r91 = this._expr.filter((t33) => c2(t33));
      r91.length > 0 ? (this._params = Array.from(new Set(r91)), this._params.forEach((t33) => {
        t33.addEventListener("value", () => function(t34, e27) {
          if (e27?.size)
            return Promise.allSettled(Array.from(e27, (e28) => e28(t34)));
        }(this, this.map?.get("value")));
      })) : this.addEventListener = void 0;
    }
    get value() {
      return this;
    }
    get columns() {
      const { _params: t32, _deps: e26 } = this;
      if (t32) {
        const n37 = new Set(t32.flatMap((t33) => {
          const e27 = t33.value?.columns;
          return Array.isArray(e27) ? e27 : [];
        }));
        if (n37.size) {
          const t33 = new Set(e26);
          return n37.forEach((e27) => t33.add(e27)), Array.from(t33);
        }
      }
      return e26;
    }
    get column() {
      return this._deps.length ? this._deps[0] : this.columns[0];
    }
    annotate(...t32) {
      return Object.assign(this, ...t32);
    }
    toString() {
      return this._expr.map((t32) => c2(t32) && !l3(t32) ? a2(t32.value) : t32).join("");
    }
    addEventListener(t32, e26) {
      const n37 = this.map || (this.map = /* @__PURE__ */ new Map());
      (n37.get(t32) || (n37.set(t32, /* @__PURE__ */ new Set()), n37.get(t32))).add(e26);
    }
  };
  function f2(t32, e26) {
    const n37 = [t32[0]], r91 = /* @__PURE__ */ new Set(), s29 = e26.length;
    for (let i29 = 0, o35 = 0; i29 < s29; ) {
      const s30 = e26[i29];
      c2(s30) ? n37[++o35] = s30 : (Array.isArray(s30?.columns) && s30.columns.forEach((t33) => r91.add(t33)), n37[o35] += "string" == typeof s30 ? s30 : a2(s30));
      const u30 = t32[++i29];
      c2(n37[o35]) ? n37[++o35] = u30 : n37[o35] += u30;
    }
    return { spans: n37, cols: Array.from(r91) };
  }
  function p2(t32, ...e26) {
    const { spans: n37, cols: r91 } = f2(t32, e26);
    return new h4(n37, r91);
  }
  function $2(t32) {
    const e26 = n3(t32);
    return p2`${e26} DESC NULLS LAST`.annotate({ label: e26?.label, desc: true });
  }
  var g3 = (t32) => ({ value: t32, toString: () => a2(t32) });
  function E2(t32) {
    t32(this.op, this), this.children?.forEach((e26) => e26.visit(t32));
  }
  function y2(t32, e26) {
    const r91 = e26.filter((t33) => null != t33).map(n3), s29 = r91.map((e27, n37) => n37 ? ` ${t32} ` : "");
    return 1 === r91.length ? s29.push("") : r91.length > 1 && (s29[0] = "(", s29.push(")")), p2(s29, ...r91).annotate({ op: t32, children: r91, visit: E2 });
  }
  var m3 = (...t32) => y2("AND", t32.flat());
  var N2 = (...t32) => y2("OR", t32.flat());
  var A2 = (w2 = "NOT", (t32) => p2`(${w2} ${n3(t32)})`.annotate({ op: w2, a: t32, visit: E2 }));
  var w2;
  var S2 = (t32) => (e26) => p2`(${n3(e26)} ${t32})`.annotate({ op: t32, a: e26, visit: E2 });
  var d2 = S2("IS NULL");
  var R2 = S2("IS NOT NULL");
  var T2 = (t32) => (e26, r91) => p2`(${n3(e26)} ${t32} ${n3(r91)})`.annotate({ op: t32, a: e26, b: r91, visit: E2 });
  var b3 = T2("=");
  var I2 = T2("<>");
  var O3 = T2("<");
  var q2 = T2(">");
  var L2 = T2("<=");
  var M2 = T2(">=");
  var _2 = T2("IS DISTINCT FROM");
  var D2 = T2("IS NOT DISTINCT FROM");
  function v2(t32, e26, r91, s29) {
    e26 = n3(e26);
    const i29 = t32.startsWith("NOT ") ? "NOT " : "";
    return (r91 ? s29 ? p2`${i29}(${r91[0]} <= ${e26} AND ${e26} < ${r91[1]})` : p2`(${e26} ${t32} ${r91[0]} AND ${r91[1]})` : p2``).annotate({ op: t32, visit: E2, field: e26, range: r91 });
  }
  var G2 = (t32, e26, n37) => v2("BETWEEN", t32, e26, n37);
  function U2(t32, e26) {
    return Array.from({ length: t32 }, () => e26);
  }
  function F2(t32, e26) {
    return (...r91) => {
      const s29 = r91.map(n3), i29 = e26 ? `::${e26}` : "";
      return (s29.length ? p2([`${t32}(`, ...U2(s29.length - 1, ", "), `)${i29}`], ...s29) : p2`${t32}()${i29}`).annotate({ func: t32, args: s29 });
    };
  }
  var j3 = F2("REGEXP_MATCHES");
  var P2 = F2("CONTAINS");
  var W2 = F2("PREFIX");
  var x2 = F2("SUFFIX");
  var B2 = F2("LOWER");
  var V2 = F2("UPPER");
  var Y2 = F2("LENGTH");
  var X2 = F2("ISNAN");
  var H2 = F2("ISFINITE");
  var K2 = F2("ISINF");
  var z2 = class _z extends h4 {
    constructor(t32, e26, n37, r91, s29 = "", i29 = "", o35 = "") {
      let u30;
      if (r91 && !(s29 || i29 || o35))
        u30 = r91 ? p2`${e26} OVER "${r91}"` : p2`${e26} OVER ()`;
      else {
        u30 = p2`${e26} OVER (${r91 ? `"${r91}" ` : ""}${s29}${s29 && i29 ? " " : ""}${i29}${(s29 || i29) && o35 ? " " : ""}${o35})`;
      }
      n37 && (u30 = p2`(${u30})::${n37}`);
      const { _expr: a27, _deps: c30 } = u30;
      super(a27, c30), this.window = t32, this.func = e26, this.type = n37, this.name = r91, this.group = s29, this.order = i29, this.frame = o35;
    }
    get basis() {
      return this.column;
    }
    get label() {
      const { func: t32 } = this;
      return t32.label ?? t32.toString();
    }
    over(t32) {
      const { window: e26, func: n37, type: r91, group: s29, order: i29, frame: o35 } = this;
      return new _z(e26, n37, r91, t32, s29, i29, o35);
    }
    partitionby(...t32) {
      const e26 = t32.flat().filter((t33) => t33).map(n3), r91 = p2(["PARTITION BY ", U2(e26.length - 1, ", "), ""], ...e26), { window: s29, func: i29, type: o35, name: u30, order: a27, frame: c30 } = this;
      return new _z(s29, i29, o35, u30, r91, a27, c30);
    }
    orderby(...t32) {
      const e26 = t32.flat().filter((t33) => t33).map(n3), r91 = p2(["ORDER BY ", U2(e26.length - 1, ", "), ""], ...e26), { window: s29, func: i29, type: o35, name: u30, group: a27, frame: c30 } = this;
      return new _z(s29, i29, o35, u30, a27, r91, c30);
    }
    rows(t32) {
      const e26 = Q2("ROWS", t32), { window: n37, func: r91, type: s29, name: i29, group: o35, order: u30 } = this;
      return new _z(n37, r91, s29, i29, o35, u30, e26);
    }
    range(t32) {
      const e26 = Q2("RANGE", t32), { window: n37, func: r91, type: s29, name: i29, group: o35, order: u30 } = this;
      return new _z(n37, r91, s29, i29, o35, u30, e26);
    }
  };
  function Q2(t32, e26) {
    if (c2(e26)) {
      const n37 = p2`${e26}`;
      return n37.toString = () => `${t32} ${k2(e26.value)}`, n37;
    }
    return `${t32} ${k2(e26)}`;
  }
  function k2(t32) {
    const [e26, n37] = t32;
    return `BETWEEN ${0 === e26 ? "CURRENT ROW" : Number.isFinite(e26) ? `${Math.abs(e26)} PRECEDING` : "UNBOUNDED PRECEDING"} AND ${0 === n37 ? "CURRENT ROW" : Number.isFinite(n37) ? `${Math.abs(n37)} FOLLOWING` : "UNBOUNDED FOLLOWING"}`;
  }
  function J2(t32, e26) {
    return (...n37) => {
      const r91 = F2(t32)(...n37);
      return new z2(t32, r91, e26);
    };
  }
  var Z2 = J2("ROW_NUMBER", "INTEGER");
  var tt2 = J2("RANK", "INTEGER");
  var et2 = J2("DENSE_RANK", "INTEGER");
  var nt2 = J2("PERCENT_RANK");
  var rt2 = J2("CUME_DIST");
  var st2 = J2("NTILE");
  var it3 = J2("LAG");
  var ot2 = J2("LEAD");
  var ut2 = J2("FIRST_VALUE");
  var at2 = J2("LAST_VALUE");
  var ct2 = J2("NTH_VALUE");
  function lt2(t32, ...e26) {
    return p2(t32, ...e26).annotate({ aggregate: true });
  }
  var ht2 = class _ht extends h4 {
    constructor(t32, e26, r91, s29, i29) {
      e26 = (e26 || []).map(n3);
      const { strings: o35, exprs: u30 } = function(t33, e27, n37, r92, s30) {
        const i30 = ")" + (n37 ? `::${n37}` : "");
        let o36 = [`${t33}(${r92 ? "DISTINCT " : ""}`], u31 = [];
        e27.length ? (o36 = o36.concat([...U2(e27.length - 1, ", "), `${i30}${s30 ? " FILTER (WHERE " : ""}`, ...s30 ? [")"] : []]), u31 = [...e27, ...s30 ? [s30] : []]) : o36[0] += "*" + i30;
        return { exprs: u31, strings: o36 };
      }(t32, e26, r91, s29, i29), { spans: a27, cols: c30 } = f2(o35, u30);
      super(a27, c30), this.aggregate = t32, this.args = e26, this.type = r91, this.isDistinct = s29, this.filter = i29;
    }
    get basis() {
      return this.column;
    }
    get label() {
      const { aggregate: t32, args: e26, isDistinct: n37 } = this, r91 = n37 ? "DISTINCT" + (e26.length ? " " : "") : "", s29 = e26.length ? `(${r91}${e26.map(ft2).join(", ")})` : "";
      return `${t32.toLowerCase()}${s29}`;
    }
    distinct() {
      const { aggregate: t32, args: e26, type: n37, filter: r91 } = this;
      return new _ht(t32, e26, n37, true, r91);
    }
    where(t32) {
      const { aggregate: e26, args: n37, type: r91, isDistinct: s29 } = this;
      return new _ht(e26, n37, r91, s29, t32);
    }
    window() {
      const { aggregate: t32, args: e26, type: n37, isDistinct: r91 } = this, s29 = new _ht(t32, e26, null, r91);
      return new z2(t32, s29, n37);
    }
    partitionby(...t32) {
      return this.window().partitionby(...t32);
    }
    orderby(...t32) {
      return this.window().orderby(...t32);
    }
    rows(t32) {
      return this.window().rows(t32);
    }
    range(t32) {
      return this.window().range(t32);
    }
  };
  function ft2(t32) {
    const e26 = a2(t32);
    return e26 && e26.startsWith('"') && e26.endsWith('"') ? e26.slice(1, -1) : e26;
  }
  function pt2(t32, e26) {
    return (...n37) => new ht2(t32, n37, e26);
  }
  var $t2 = pt2("COUNT", "INTEGER");
  var gt2 = pt2("AVG");
  var Et2 = pt2("AVG");
  var yt2 = pt2("MAD");
  var mt2 = pt2("MAX");
  var Nt2 = pt2("MIN");
  var At2 = pt2("SUM", "DOUBLE");
  var wt2 = pt2("PRODUCT");
  var St2 = pt2("MEDIAN");
  var dt2 = pt2("QUANTILE");
  var Rt2 = pt2("MODE");
  var Tt2 = pt2("VARIANCE");
  var bt2 = pt2("STDDEV");
  var It2 = pt2("SKEWNESS");
  var Ot2 = pt2("KURTOSIS");
  var qt2 = pt2("ENTROPY");
  var Lt2 = pt2("VAR_POP");
  var Mt2 = pt2("STDDEV_POP");
  var _t2 = pt2("CORR");
  var Dt2 = pt2("COVAR_SAMP");
  var vt2 = pt2("COVAR_POP");
  var Gt2 = pt2("REGR_INTERCEPT");
  var Ct2 = pt2("REGR_SLOPE");
  var Ut2 = pt2("REGR_COUNT");
  var Ft2 = pt2("REGR_R2");
  var jt2 = pt2("REGR_SYY");
  var Pt2 = pt2("REGR_SXX");
  var Wt2 = pt2("REGR_SXY");
  var xt2 = pt2("REGR_AVGX");
  var Bt2 = pt2("REGR_AVGY");
  var Vt2 = pt2("FIRST");
  var Yt2 = pt2("LAST");
  var Xt2 = pt2("ARG_MIN");
  var Ht2 = pt2("ARG_MAX");
  var Kt2 = pt2("STRING_AGG");
  var zt2 = pt2("ARRAY_AGG");
  var Zt2 = (t32) => p2`epoch_ms(${n3(t32)})`;
  function te2(t32, e26, r91 = 1) {
    return p2`TIME_BUCKET(${`INTERVAL ${r91} ${e26}`}, ${n3(t32)})`.annotate({ label: e26 });
  }
  var se2 = F2("ST_AsGeoJSON");
  var ie2 = F2("ST_X");
  var oe2 = F2("ST_Y");
  var ue2 = F2("ST_CENTROID");
  var le2 = class _le {
    static select(...t32) {
      return new _le().select(...t32);
    }
    static from(...t32) {
      return new _le().from(...t32);
    }
    static with(...t32) {
      return new _le().with(...t32);
    }
    static union(...t32) {
      return new he2("UNION", t32.flat());
    }
    static unionAll(...t32) {
      return new he2("UNION ALL", t32.flat());
    }
    static intersect(...t32) {
      return new he2("INTERSECT", t32.flat());
    }
    static except(...t32) {
      return new he2("EXCEPT", t32.flat());
    }
    static describe(t32) {
      const e26 = t32.clone(), { clone: n37, toString: r91 } = e26;
      return Object.assign(e26, { describe: true, clone: () => _le.describe(n37.call(e26)), toString: () => `DESCRIBE ${r91.call(e26)}` });
    }
    constructor() {
      this.query = { with: [], select: [], from: [], where: [], groupby: [], having: [], window: [], qualify: [], orderby: [] }, this.cteFor = null;
    }
    clone() {
      const t32 = new _le();
      return t32.query = { ...this.query }, t32;
    }
    with(...t32) {
      const { query: e26 } = this;
      if (0 === t32.length)
        return e26.with;
      {
        const n37 = [], r91 = (t33, e27) => {
          const r92 = e27.clone();
          r92.cteFor = this, n37.push({ as: t33, query: r92 });
        };
        return t32.flat().forEach((t33) => {
          if (null == t33)
            ;
          else if (t33.as && t33.query)
            r91(t33.as, t33.query);
          else
            for (const e27 in t33)
              r91(e27, t33[e27]);
        }), e26.with = e26.with.concat(n37), this;
      }
    }
    select(...e26) {
      const { query: r91 } = this;
      if (0 === e26.length)
        return r91.select;
      {
        const s29 = [];
        for (const r92 of e26.flat())
          if (null == r92)
            ;
          else if ("string" == typeof r92)
            s29.push({ as: r92, expr: n3(r92) });
          else if (r92 instanceof t)
            s29.push({ as: r92.column, expr: r92 });
          else if (Array.isArray(r92))
            s29.push({ as: r92[0], expr: r92[1] });
          else
            for (const t32 in r92)
              s29.push({ as: $e2(t32), expr: n3(r92[t32]) });
        const i29 = new Set(s29.map((t32) => t32.as));
        return r91.select = r91.select.filter((t32) => !i29.has(t32.as)).concat(s29.filter((t32) => t32.expr)), this;
      }
    }
    $select(...t32) {
      return this.query.select = [], this.select(...t32);
    }
    distinct(t32 = true) {
      return this.query.distinct = !!t32, this;
    }
    from(...e26) {
      const { query: n37 } = this;
      if (0 === e26.length)
        return n37.from;
      {
        const s29 = [];
        return e26.flat().forEach((e27) => {
          if (null == e27)
            ;
          else if ("string" == typeof e27)
            s29.push({ as: e27, from: r2(e27) });
          else if (e27 instanceof t)
            s29.push({ as: e27.table, from: e27 });
          else if (fe2(e27) || l3(e27))
            s29.push({ from: e27 });
          else if (Array.isArray(e27))
            s29.push({ as: $e2(e27[0]), from: r2(e27[1]) });
          else
            for (const t32 in e27)
              s29.push({ as: $e2(t32), from: r2(e27[t32]) });
        }), n37.from = n37.from.concat(s29), this;
      }
    }
    $from(...t32) {
      return this.query.from = [], this.from(...t32);
    }
    sample(t32, e26) {
      const { query: n37 } = this;
      if (0 === arguments.length)
        return n37.sample;
      {
        let r91 = t32;
        return "number" == typeof t32 && (r91 = t32 > 0 && t32 < 1 ? { perc: 100 * t32, method: e26 } : { rows: Math.round(t32), method: e26 }), n37.sample = r91, this;
      }
    }
    where(...t32) {
      const { query: e26 } = this;
      return 0 === t32.length ? e26.where : (e26.where = e26.where.concat(t32.flat().filter((t33) => t33)), this);
    }
    $where(...t32) {
      return this.query.where = [], this.where(...t32);
    }
    groupby(...t32) {
      const { query: e26 } = this;
      return 0 === t32.length ? e26.groupby : (e26.groupby = e26.groupby.concat(t32.flat().filter((t33) => t33).map(n3)), this);
    }
    $groupby(...t32) {
      return this.query.groupby = [], this.groupby(...t32);
    }
    having(...t32) {
      const { query: e26 } = this;
      return 0 === t32.length ? e26.having : (e26.having = e26.having.concat(t32.flat().filter((t33) => t33)), this);
    }
    window(...t32) {
      const { query: e26 } = this;
      if (0 === t32.length)
        return e26.window;
      {
        const n37 = [];
        return t32.flat().forEach((t33) => {
          if (null == t33)
            ;
          else
            for (const e27 in t33)
              n37.push({ as: $e2(e27), expr: t33[e27] });
        }), e26.window = e26.window.concat(n37), this;
      }
    }
    qualify(...t32) {
      const { query: e26 } = this;
      return 0 === t32.length ? e26.qualify : (e26.qualify = e26.qualify.concat(t32.flat().filter((t33) => t33)), this);
    }
    orderby(...t32) {
      const { query: e26 } = this;
      return 0 === t32.length ? e26.orderby : (e26.orderby = e26.orderby.concat(t32.flat().filter((t33) => t33).map(n3)), this);
    }
    limit(t32) {
      const { query: e26 } = this;
      return 0 === arguments.length ? e26.limit : (e26.limit = Number.isFinite(t32) ? t32 : void 0, this);
    }
    offset(t32) {
      const { query: e26 } = this;
      return 0 === arguments.length ? e26.offset : (e26.offset = Number.isFinite(t32) ? t32 : void 0, this);
    }
    get subqueries() {
      const { query: t32, cteFor: e26 } = this, n37 = (e26?.query || t32).with, r91 = n37?.reduce((t33, { as: e27, query: n38 }) => (t33[e27] = n38, t33), {}), s29 = [];
      return t32.from.forEach(({ from: t33 }) => {
        if (fe2(t33))
          s29.push(t33);
        else if (r91[t33.table]) {
          const e27 = r91[t33.table];
          s29.push(e27);
        }
      }), s29;
    }
    toString() {
      const { with: e26, select: n37, distinct: r91, from: s29, sample: i29, where: o35, groupby: u30, having: a27, window: c30, qualify: l35, orderby: h35, limit: f25, offset: p24 } = this.query, $26 = [];
      if (e26.length) {
        const t32 = e26.map(({ as: t33, query: e27 }) => `"${t33}" AS (${e27})`);
        $26.push(`WITH ${t32.join(", ")}`);
      }
      const g31 = n37.map(({ as: e27, expr: n38 }) => {
        return s30 = e27, (r92 = n38) instanceof t && r92.column === s30 && !n38.table ? `${n38}` : `${n38} AS "${e27}"`;
        var r92, s30;
      });
      if ($26.push(`SELECT${r91 ? " DISTINCT" : ""} ${g31.join(", ")}`), s29.length) {
        const t32 = s29.map(({ as: t33, from: e27 }) => {
          const n38 = fe2(e27) ? `(${e27})` : `${e27}`;
          return t33 && t33 !== e27.table ? `${n38} AS "${t33}"` : n38;
        });
        $26.push(`FROM ${t32.join(", ")}`);
      }
      if (o35.length) {
        const t32 = o35.map(String).filter((t33) => t33).join(" AND ");
        t32 && $26.push(`WHERE ${t32}`);
      }
      if (i29) {
        const { rows: t32, perc: e27, method: n38, seed: r92 } = i29, s30 = t32 ? `${t32} ROWS` : `${e27} PERCENT`, o36 = n38 ? ` (${n38}${null != r92 ? `, ${r92}` : ""})` : "";
        $26.push(`USING SAMPLE ${s30}${o36}`);
      }
      if (u30.length && $26.push(`GROUP BY ${u30.join(", ")}`), a27.length) {
        const t32 = a27.map(String).filter((t33) => t33).join(" AND ");
        t32 && $26.push(`HAVING ${t32}`);
      }
      if (c30.length) {
        const t32 = c30.map(({ as: t33, expr: e27 }) => `"${t33}" AS (${e27})`);
        $26.push(`WINDOW ${t32.join(", ")}`);
      }
      if (l35.length) {
        const t32 = l35.map(String).filter((t33) => t33).join(" AND ");
        t32 && $26.push(`QUALIFY ${t32}`);
      }
      return h35.length && $26.push(`ORDER BY ${h35.join(", ")}`), Number.isFinite(f25) && $26.push(`LIMIT ${f25}`), Number.isFinite(p24) && $26.push(`OFFSET ${p24}`), $26.join(" ");
    }
  };
  var he2 = class _he {
    constructor(t32, e26) {
      this.op = t32, this.queries = e26.map((t33) => t33.clone()), this.query = { orderby: [] }, this.cteFor = null;
    }
    clone() {
      const t32 = new _he(this.op, this.queries);
      return t32.query = { ...this.query }, t32;
    }
    orderby(...t32) {
      const { query: e26 } = this;
      return 0 === t32.length ? e26.orderby : (e26.orderby = e26.orderby.concat(t32.flat().filter((t33) => t33).map(n3)), this);
    }
    limit(t32) {
      const { query: e26 } = this;
      return 0 === arguments.length ? e26.limit : (e26.limit = Number.isFinite(t32) ? t32 : void 0, this);
    }
    offset(t32) {
      const { query: e26 } = this;
      return 0 === arguments.length ? e26.offset : (e26.offset = Number.isFinite(t32) ? t32 : void 0, this);
    }
    get subqueries() {
      const { queries: t32, cteFor: e26 } = this;
      return e26 && t32.forEach((t33) => t33.cteFor = e26), t32;
    }
    toString() {
      const { op: t32, queries: e26, query: { orderby: n37, limit: r91, offset: s29 } } = this, i29 = [e26.join(` ${t32} `)];
      return n37.length && i29.push(`ORDER BY ${n37.join(", ")}`), Number.isFinite(r91) && i29.push(`LIMIT ${r91}`), Number.isFinite(s29) && i29.push(`OFFSET ${s29}`), i29.join(" ");
    }
  };
  function fe2(t32) {
    return t32 instanceof le2 || t32 instanceof he2;
  }
  function pe2(t32) {
    return fe2(t32) && t32.describe;
  }
  function $e2(t32) {
    return function(t33) {
      return '"' === t33[0] && '"' === t33[t33.length - 1];
    }(t32) ? t32.slice(1, -1) : t32;
  }
  var ge2 = (t32) => t32;
  function Ee2() {
    return { apply: ge2, invert: ge2, sqlApply: n3, sqlInvert: ge2 };
  }
  function ye2() {
    return { apply: (t32) => +t32, invert: (t32) => new Date(t32), sqlApply: (t32) => t32 instanceof Date ? +t32 : Zt2(n3(t32)), sqlInvert: ge2 };
  }
  var me2 = { identity: Ee2, linear: Ee2, log: function({ base: t32 = null } = {}) {
    if (null == t32 || t32 === Math.E)
      return { apply: Math.log, invert: Math.exp, sqlApply: (t33) => p2`LN(${n3(t33)})`, sqlInvert: (t33) => p2`EXP(${t33})` };
    if (10 === t32)
      return { apply: Math.log10, invert: (t33) => Math.pow(10, t33), sqlApply: (t33) => p2`LOG(${n3(t33)})`, sqlInvert: (t33) => p2`POW(10, ${t33})` };
    {
      const e26 = +t32;
      return { apply: (t33) => Math.log(t33) / Math.log(e26), invert: (t33) => Math.pow(e26, t33), sqlApply: (t33) => p2`LN(${n3(t33)}) / LN(${e26})`, sqlInvert: (t33) => p2`POW(${e26}, ${t33})` };
    }
  }, symlog: function({ constant: t32 = 1 } = {}) {
    const e26 = +t32;
    return { apply: (t33) => Math.sign(t33) * Math.log1p(Math.abs(t33)), invert: (t33) => Math.sign(t33) * Math.exp(Math.abs(t33) - e26), sqlApply: (t33) => p2`SIGN(${t33 = n3(t33)}) * LN(${e26} + ABS(${t33}))`, sqlInvert: (t33) => p2`SIGN(${t33}) * (EXP(ABS(${t33})) - ${e26})` };
  }, sqrt: function() {
    return { apply: (t32) => Math.sign(t32) * Math.sqrt(Math.abs(t32)), invert: (t32) => Math.sign(t32) * t32 * t32, sqlApply: (t32) => p2`SIGN(${t32 = n3(t32)}) * SQRT(ABS(${t32}))`, sqlInvert: (t32) => p2`SIGN(${t32}) * (${t32}) ** 2` };
  }, pow: function({ exponent: t32 = 1 } = {}) {
    const e26 = +t32;
    return { apply: (t33) => Math.sign(t33) * Math.pow(Math.abs(t33), e26), invert: (t33) => Math.sign(t33) * Math.pow(Math.abs(t33), 1 / e26), sqlApply: (t33) => p2`SIGN(${t33 = n3(t33)}) * POW(ABS(${t33}), ${e26})`, sqlInvert: (t33) => p2`SIGN(${t33}) * POW(ABS(${t33}), 1/${e26})` };
  }, time: ye2, utc: ye2 };
  function Ne2(t32) {
    const e26 = me2[t32.type];
    return e26 ? { ...t32, ...e26(t32) } : null;
  }
  function Ae2(t32, e26, { replace: n37 = false, temp: r91 = true, view: s29 = false } = {}) {
    return "CREATE" + (n37 ? " OR REPLACE " : " ") + (r91 ? "TEMP " : "") + (s29 ? "VIEW" : "TABLE") + (n37 ? " " : " IF NOT EXISTS ") + t32 + " AS " + e26;
  }
  function Se2(t32, e26, n37, r91 = {}, s29 = {}) {
    const { select: i29 = ["*"], where: o35, view: u30, temp: a27, replace: c30, ...l35 } = r91, h35 = function(t33) {
      return Object.entries(t33).map(([t34, e27]) => `${t34}=${Oe2(e27)}`).join(", ");
    }({ ...s29, ...l35 }), f25 = `${t32}('${n37}'${h35 ? ", " + h35 : ""})`, p24 = o35 ? ` WHERE ${o35}` : "";
    return Ae2(e26, `SELECT ${i29.join(", ")} FROM ${f25}${p24}`, { view: u30, temp: a27, replace: c30 });
  }
  function Te2(t32, e26, n37) {
    return Se2("read_parquet", t32, e26, n37);
  }
  function Oe2(t32) {
    switch (typeof t32) {
      case "boolean":
        return String(t32);
      case "string":
        return `'${t32}'`;
      case "undefined":
      case "object":
        return null == t32 ? "NULL" : Array.isArray(t32) ? "[" + t32.map((t33) => Oe2(t33)).join(", ") + "]" : "{" + Object.entries(t32).map(([t33, e26]) => `'${t33}': ${Oe2(e26)}`).join(", ") + "}";
      default:
        return t32;
    }
  }

  // https://cdn.jsdelivr.net/npm/flatbuffers@23.5.26/+esm
  var i3 = 4;
  var r3 = new Int32Array(2);
  var n4 = new Float32Array(r3.buffer);
  var h5 = new Float64Array(r3.buffer);
  var a3 = 1 === new Uint16Array(new Uint8Array([1, 0]).buffer)[0];
  var o2;
  !function(t32) {
    t32[t32.UTF8_BYTES = 1] = "UTF8_BYTES", t32[t32.UTF16_STRING = 2] = "UTF16_STRING";
  }(o2 || (o2 = {}));
  var l4 = class _l4 {
    constructor(t32) {
      this.bytes_ = t32, this.position_ = 0, this.text_decoder_ = new TextDecoder();
    }
    static allocate(t32) {
      return new _l4(new Uint8Array(t32));
    }
    clear() {
      this.position_ = 0;
    }
    bytes() {
      return this.bytes_;
    }
    position() {
      return this.position_;
    }
    setPosition(t32) {
      this.position_ = t32;
    }
    capacity() {
      return this.bytes_.length;
    }
    readInt8(t32) {
      return this.readUint8(t32) << 24 >> 24;
    }
    readUint8(t32) {
      return this.bytes_[t32];
    }
    readInt16(t32) {
      return this.readUint16(t32) << 16 >> 16;
    }
    readUint16(t32) {
      return this.bytes_[t32] | this.bytes_[t32 + 1] << 8;
    }
    readInt32(t32) {
      return this.bytes_[t32] | this.bytes_[t32 + 1] << 8 | this.bytes_[t32 + 2] << 16 | this.bytes_[t32 + 3] << 24;
    }
    readUint32(t32) {
      return this.readInt32(t32) >>> 0;
    }
    readInt64(t32) {
      return BigInt.asIntN(64, BigInt(this.readUint32(t32)) + (BigInt(this.readUint32(t32 + 4)) << BigInt(32)));
    }
    readUint64(t32) {
      return BigInt.asUintN(64, BigInt(this.readUint32(t32)) + (BigInt(this.readUint32(t32 + 4)) << BigInt(32)));
    }
    readFloat32(t32) {
      return r3[0] = this.readInt32(t32), n4[0];
    }
    readFloat64(t32) {
      return r3[a3 ? 0 : 1] = this.readInt32(t32), r3[a3 ? 1 : 0] = this.readInt32(t32 + 4), h5[0];
    }
    writeInt8(t32, e26) {
      this.bytes_[t32] = e26;
    }
    writeUint8(t32, e26) {
      this.bytes_[t32] = e26;
    }
    writeInt16(t32, e26) {
      this.bytes_[t32] = e26, this.bytes_[t32 + 1] = e26 >> 8;
    }
    writeUint16(t32, e26) {
      this.bytes_[t32] = e26, this.bytes_[t32 + 1] = e26 >> 8;
    }
    writeInt32(t32, e26) {
      this.bytes_[t32] = e26, this.bytes_[t32 + 1] = e26 >> 8, this.bytes_[t32 + 2] = e26 >> 16, this.bytes_[t32 + 3] = e26 >> 24;
    }
    writeUint32(t32, e26) {
      this.bytes_[t32] = e26, this.bytes_[t32 + 1] = e26 >> 8, this.bytes_[t32 + 2] = e26 >> 16, this.bytes_[t32 + 3] = e26 >> 24;
    }
    writeInt64(t32, e26) {
      this.writeInt32(t32, Number(BigInt.asIntN(32, e26))), this.writeInt32(t32 + 4, Number(BigInt.asIntN(32, e26 >> BigInt(32))));
    }
    writeUint64(t32, e26) {
      this.writeUint32(t32, Number(BigInt.asUintN(32, e26))), this.writeUint32(t32 + 4, Number(BigInt.asUintN(32, e26 >> BigInt(32))));
    }
    writeFloat32(t32, e26) {
      n4[0] = e26, this.writeInt32(t32, r3[0]);
    }
    writeFloat64(t32, e26) {
      h5[0] = e26, this.writeInt32(t32, r3[a3 ? 0 : 1]), this.writeInt32(t32 + 4, r3[a3 ? 1 : 0]);
    }
    getBufferIdentifier() {
      if (this.bytes_.length < this.position_ + 4 + 4)
        throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");
      let t32 = "";
      for (let e26 = 0; e26 < 4; e26++)
        t32 += String.fromCharCode(this.readInt8(this.position_ + 4 + e26));
      return t32;
    }
    __offset(t32, e26) {
      const s29 = t32 - this.readInt32(t32);
      return e26 < this.readInt16(s29) ? this.readInt16(s29 + e26) : 0;
    }
    __union(t32, e26) {
      return t32.bb_pos = e26 + this.readInt32(e26), t32.bb = this, t32;
    }
    __string(t32, e26) {
      t32 += this.readInt32(t32);
      const s29 = this.readInt32(t32);
      t32 += 4;
      const i29 = this.bytes_.subarray(t32, t32 + s29);
      return e26 === o2.UTF8_BYTES ? i29 : this.text_decoder_.decode(i29);
    }
    __union_with_string(t32, e26) {
      return "string" == typeof t32 ? this.__string(e26) : this.__union(t32, e26);
    }
    __indirect(t32) {
      return t32 + this.readInt32(t32);
    }
    __vector(t32) {
      return t32 + this.readInt32(t32) + 4;
    }
    __vector_len(t32) {
      return this.readInt32(t32 + this.readInt32(t32));
    }
    __has_identifier(t32) {
      if (4 != t32.length)
        throw new Error("FlatBuffers: file identifier must be length 4");
      for (let e26 = 0; e26 < 4; e26++)
        if (t32.charCodeAt(e26) != this.readInt8(this.position() + 4 + e26))
          return false;
      return true;
    }
    createScalarList(t32, e26) {
      const s29 = [];
      for (let i29 = 0; i29 < e26; ++i29) {
        const e27 = t32(i29);
        null !== e27 && s29.push(e27);
      }
      return s29;
    }
    createObjList(t32, e26) {
      const s29 = [];
      for (let i29 = 0; i29 < e26; ++i29) {
        const e27 = t32(i29);
        null !== e27 && s29.push(e27.unpack());
      }
      return s29;
    }
  };
  var d3 = class _d3 {
    constructor(t32) {
      let e26;
      this.minalign = 1, this.vtable = null, this.vtable_in_use = 0, this.isNested = false, this.object_start = 0, this.vtables = [], this.vector_num_elems = 0, this.force_defaults = false, this.string_maps = null, this.text_encoder = new TextEncoder(), e26 = t32 || 1024, this.bb = l4.allocate(e26), this.space = e26;
    }
    clear() {
      this.bb.clear(), this.space = this.bb.capacity(), this.minalign = 1, this.vtable = null, this.vtable_in_use = 0, this.isNested = false, this.object_start = 0, this.vtables = [], this.vector_num_elems = 0, this.force_defaults = false, this.string_maps = null;
    }
    forceDefaults(t32) {
      this.force_defaults = t32;
    }
    dataBuffer() {
      return this.bb;
    }
    asUint8Array() {
      return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());
    }
    prep(t32, e26) {
      t32 > this.minalign && (this.minalign = t32);
      const s29 = 1 + ~(this.bb.capacity() - this.space + e26) & t32 - 1;
      for (; this.space < s29 + t32 + e26; ) {
        const t33 = this.bb.capacity();
        this.bb = _d3.growByteBuffer(this.bb), this.space += this.bb.capacity() - t33;
      }
      this.pad(s29);
    }
    pad(t32) {
      for (let e26 = 0; e26 < t32; e26++)
        this.bb.writeInt8(--this.space, 0);
    }
    writeInt8(t32) {
      this.bb.writeInt8(this.space -= 1, t32);
    }
    writeInt16(t32) {
      this.bb.writeInt16(this.space -= 2, t32);
    }
    writeInt32(t32) {
      this.bb.writeInt32(this.space -= 4, t32);
    }
    writeInt64(t32) {
      this.bb.writeInt64(this.space -= 8, t32);
    }
    writeFloat32(t32) {
      this.bb.writeFloat32(this.space -= 4, t32);
    }
    writeFloat64(t32) {
      this.bb.writeFloat64(this.space -= 8, t32);
    }
    addInt8(t32) {
      this.prep(1, 0), this.writeInt8(t32);
    }
    addInt16(t32) {
      this.prep(2, 0), this.writeInt16(t32);
    }
    addInt32(t32) {
      this.prep(4, 0), this.writeInt32(t32);
    }
    addInt64(t32) {
      this.prep(8, 0), this.writeInt64(t32);
    }
    addFloat32(t32) {
      this.prep(4, 0), this.writeFloat32(t32);
    }
    addFloat64(t32) {
      this.prep(8, 0), this.writeFloat64(t32);
    }
    addFieldInt8(t32, e26, s29) {
      (this.force_defaults || e26 != s29) && (this.addInt8(e26), this.slot(t32));
    }
    addFieldInt16(t32, e26, s29) {
      (this.force_defaults || e26 != s29) && (this.addInt16(e26), this.slot(t32));
    }
    addFieldInt32(t32, e26, s29) {
      (this.force_defaults || e26 != s29) && (this.addInt32(e26), this.slot(t32));
    }
    addFieldInt64(t32, e26, s29) {
      (this.force_defaults || e26 !== s29) && (this.addInt64(e26), this.slot(t32));
    }
    addFieldFloat32(t32, e26, s29) {
      (this.force_defaults || e26 != s29) && (this.addFloat32(e26), this.slot(t32));
    }
    addFieldFloat64(t32, e26, s29) {
      (this.force_defaults || e26 != s29) && (this.addFloat64(e26), this.slot(t32));
    }
    addFieldOffset(t32, e26, s29) {
      (this.force_defaults || e26 != s29) && (this.addOffset(e26), this.slot(t32));
    }
    addFieldStruct(t32, e26, s29) {
      e26 != s29 && (this.nested(e26), this.slot(t32));
    }
    nested(t32) {
      if (t32 != this.offset())
        throw new TypeError("FlatBuffers: struct must be serialized inline.");
    }
    notNested() {
      if (this.isNested)
        throw new TypeError("FlatBuffers: object serialization must not be nested.");
    }
    slot(t32) {
      null !== this.vtable && (this.vtable[t32] = this.offset());
    }
    offset() {
      return this.bb.capacity() - this.space;
    }
    static growByteBuffer(t32) {
      const e26 = t32.capacity();
      if (3221225472 & e26)
        throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");
      const s29 = e26 << 1, i29 = l4.allocate(s29);
      return i29.setPosition(s29 - e26), i29.bytes().set(t32.bytes(), s29 - e26), i29;
    }
    addOffset(t32) {
      this.prep(4, 0), this.writeInt32(this.offset() - t32 + 4);
    }
    startObject(t32) {
      this.notNested(), null == this.vtable && (this.vtable = []), this.vtable_in_use = t32;
      for (let e26 = 0; e26 < t32; e26++)
        this.vtable[e26] = 0;
      this.isNested = true, this.object_start = this.offset();
    }
    endObject() {
      if (null == this.vtable || !this.isNested)
        throw new Error("FlatBuffers: endObject called without startObject");
      this.addInt32(0);
      const t32 = this.offset();
      let e26 = this.vtable_in_use - 1;
      for (; e26 >= 0 && 0 == this.vtable[e26]; e26--)
        ;
      const s29 = e26 + 1;
      for (; e26 >= 0; e26--)
        this.addInt16(0 != this.vtable[e26] ? t32 - this.vtable[e26] : 0);
      this.addInt16(t32 - this.object_start);
      const i29 = 2 * (s29 + 2);
      this.addInt16(i29);
      let r91 = 0;
      const n37 = this.space;
      t:
        for (e26 = 0; e26 < this.vtables.length; e26++) {
          const t33 = this.bb.capacity() - this.vtables[e26];
          if (i29 == this.bb.readInt16(t33)) {
            for (let e27 = 2; e27 < i29; e27 += 2)
              if (this.bb.readInt16(n37 + e27) != this.bb.readInt16(t33 + e27))
                continue t;
            r91 = this.vtables[e26];
            break;
          }
        }
      return r91 ? (this.space = this.bb.capacity() - t32, this.bb.writeInt32(this.space, r91 - t32)) : (this.vtables.push(this.offset()), this.bb.writeInt32(this.bb.capacity() - t32, this.offset() - t32)), this.isNested = false, t32;
    }
    finish(t32, e26, s29) {
      const i29 = s29 ? 4 : 0;
      if (e26) {
        const t33 = e26;
        if (this.prep(this.minalign, 8 + i29), 4 != t33.length)
          throw new TypeError("FlatBuffers: file identifier must be length 4");
        for (let e27 = 3; e27 >= 0; e27--)
          this.writeInt8(t33.charCodeAt(e27));
      }
      this.prep(this.minalign, 4 + i29), this.addOffset(t32), i29 && this.addInt32(this.bb.capacity() - this.space), this.bb.setPosition(this.space);
    }
    finishSizePrefixed(t32, e26) {
      this.finish(t32, e26, true);
    }
    requiredField(t32, e26) {
      const s29 = this.bb.capacity() - t32, i29 = s29 - this.bb.readInt32(s29);
      if (!(e26 < this.bb.readInt16(i29) && 0 != this.bb.readInt16(i29 + e26)))
        throw new TypeError("FlatBuffers: field " + e26 + " must be set");
    }
    startVector(t32, e26, s29) {
      this.notNested(), this.vector_num_elems = e26, this.prep(4, t32 * e26), this.prep(s29, t32 * e26);
    }
    endVector() {
      return this.writeInt32(this.vector_num_elems), this.offset();
    }
    createSharedString(t32) {
      if (!t32)
        return 0;
      if (this.string_maps || (this.string_maps = /* @__PURE__ */ new Map()), this.string_maps.has(t32))
        return this.string_maps.get(t32);
      const e26 = this.createString(t32);
      return this.string_maps.set(t32, e26), e26;
    }
    createString(t32) {
      if (null == t32)
        return 0;
      let e26;
      e26 = t32 instanceof Uint8Array ? t32 : this.text_encoder.encode(t32), this.addInt8(0), this.startVector(1, e26.length, 1), this.bb.setPosition(this.space -= e26.length);
      for (let t33 = 0, s29 = this.space, i29 = this.bb.bytes(); t33 < e26.length; t33++)
        i29[s29++] = e26[t33];
      return this.endVector();
    }
    createObjectOffset(t32) {
      return null === t32 ? 0 : "string" == typeof t32 ? this.createString(t32) : t32.pack(this);
    }
    createObjectOffsetList(t32) {
      const e26 = [];
      for (let s29 = 0; s29 < t32.length; ++s29) {
        const i29 = t32[s29];
        if (null === i29)
          throw new TypeError("FlatBuffers: Argument for createObjectOffsetList cannot contain null.");
        e26.push(this.createObjectOffset(i29));
      }
      return e26;
    }
    createStructOffsetList(t32, e26) {
      return e26(this, t32.length), this.createObjectOffsetList(t32.slice().reverse()), this.endVector();
    }
  };

  // https://cdn.jsdelivr.net/npm/apache-arrow@14.0.2/+esm
  var l5 = new TextDecoder("utf-8");
  var u2 = (t32) => l5.decode(t32);
  var c3 = new TextEncoder();
  var h6 = (t32) => c3.encode(t32);
  var d4 = (t32) => "boolean" == typeof t32;
  var p3 = (t32) => "function" == typeof t32;
  var y3 = (t32) => null != t32 && Object(t32) === t32;
  var f3 = (t32) => y3(t32) && p3(t32.then);
  var b4 = (t32) => y3(t32) && p3(t32[Symbol.iterator]);
  var v3 = (t32) => y3(t32) && p3(t32[Symbol.asyncIterator]);
  var g4 = (t32) => y3(t32) && y3(t32.schema);
  var m4 = (t32) => y3(t32) && "done" in t32 && "value" in t32;
  var _3 = (t32) => y3(t32) && p3(t32.stat) && /* @__PURE__ */ ((t33) => "number" == typeof t33)(t32.fd);
  var w3 = (t32) => y3(t32) && S3(t32.body);
  var I3 = (t32) => "_getDOMStream" in t32 && "_getNodeStream" in t32;
  var S3 = (t32) => y3(t32) && p3(t32.cancel) && p3(t32.getReader) && !I3(t32);
  var A3 = (t32) => y3(t32) && p3(t32.read) && p3(t32.pipe) && d4(t32.readable) && !I3(t32);
  var D3 = (t32) => y3(t32) && p3(t32.clear) && p3(t32.bytes) && p3(t32.position) && p3(t32.setPosition) && p3(t32.capacity) && p3(t32.getBufferIdentifier) && p3(t32.createLong);
  var B3 = "undefined" != typeof SharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer;
  function T3(t32, e26, i29 = 0, n37 = e26.byteLength) {
    const r91 = t32.byteLength, s29 = new Uint8Array(t32.buffer, t32.byteOffset, r91), o35 = new Uint8Array(e26.buffer, e26.byteOffset, Math.min(n37, r91));
    return s29.set(o35, i29), t32;
  }
  function O4(t32, e26) {
    const i29 = function(t33) {
      const e27 = t33[0] ? [t33[0]] : [];
      let i30, n38, r92, s30;
      for (let o36, a28, l36 = 0, u31 = 0, c30 = t33.length; ++l36 < c30; )
        o36 = e27[u31], a28 = t33[l36], !o36 || !a28 || o36.buffer !== a28.buffer || a28.byteOffset < o36.byteOffset ? a28 && (e27[++u31] = a28) : ({ byteOffset: i30, byteLength: r92 } = o36, { byteOffset: n38, byteLength: s30 } = a28, i30 + r92 < n38 || n38 + s30 < i30 ? a28 && (e27[++u31] = a28) : e27[u31] = new Uint8Array(o36.buffer, i30, n38 - i30 + s30));
      return e27;
    }(t32), n37 = i29.reduce((t33, e27) => t33 + e27.byteLength, 0);
    let r91, s29, o35, a27 = 0, l35 = -1;
    const u30 = Math.min(e26 || Number.POSITIVE_INFINITY, n37);
    for (const t33 = i29.length; ++l35 < t33; ) {
      if (r91 = i29[l35], s29 = r91.subarray(0, Math.min(r91.length, u30 - a27)), u30 <= a27 + s29.length) {
        s29.length < r91.length ? i29[l35] = r91.subarray(s29.length) : s29.length === r91.length && l35++, o35 ? T3(o35, s29, a27) : o35 = s29;
        break;
      }
      T3(o35 || (o35 = new Uint8Array(u30)), s29, a27), a27 += s29.length;
    }
    return [o35 || new Uint8Array(0), i29.slice(l35), n37 - (o35 ? o35.byteLength : 0)];
  }
  function M3(t32, e26) {
    let i29 = m4(e26) ? e26.value : e26;
    return i29 instanceof t32 ? t32 === Uint8Array ? new t32(i29.buffer, i29.byteOffset, i29.byteLength) : i29 : i29 ? ("string" == typeof i29 && (i29 = h6(i29)), i29 instanceof ArrayBuffer || i29 instanceof B3 ? new t32(i29) : D3(i29) ? M3(t32, i29.bytes()) : ArrayBuffer.isView(i29) ? i29.byteLength <= 0 ? new t32(0) : new t32(i29.buffer, i29.byteOffset, i29.byteLength / t32.BYTES_PER_ELEMENT) : t32.from(i29)) : new t32(0);
  }
  var x3 = (t32) => M3(Int32Array, t32);
  var L3 = (t32) => M3(Uint8Array, t32);
  var N3 = (t32) => (t32.next(), t32);
  function* F3(t32, e26) {
    const i29 = function* (t33) {
      yield t33;
    }, n37 = "string" == typeof e26 || ArrayBuffer.isView(e26) || e26 instanceof ArrayBuffer || e26 instanceof B3 ? i29(e26) : b4(e26) ? e26 : i29(e26);
    return yield* N3(function* (e27) {
      let i30 = null;
      do {
        i30 = e27.next(yield M3(t32, i30));
      } while (!i30.done);
    }(n37[Symbol.iterator]())), new t32();
  }
  var U3 = (t32) => F3(Uint8Array, t32);
  function E3(r91, s29) {
    return g(this, arguments, function* () {
      if (f3(s29))
        return yield m(yield m(yield* O(j(E3(r91, yield m(s29))))));
      const o35 = function(i29) {
        return g(this, arguments, function* () {
          yield yield m(yield m(i29));
        });
      }, a27 = "string" == typeof s29 || ArrayBuffer.isView(s29) || s29 instanceof ArrayBuffer || s29 instanceof B3 ? o35(s29) : b4(s29) ? function(r92) {
        return g(this, arguments, function* () {
          yield m(yield* O(j(N3(function* (t32) {
            let e26 = null;
            do {
              e26 = t32.next(yield null == e26 ? void 0 : e26.value);
            } while (!e26.done);
          }(r92[Symbol.iterator]())))));
        });
      }(s29) : v3(s29) ? s29 : o35(s29);
      return yield m(yield* O(j(N3(function(i29) {
        return g(this, arguments, function* () {
          let t32 = null;
          do {
            t32 = yield m(i29.next(yield yield m(M3(r91, t32))));
          } while (!t32.done);
        });
      }(a27[Symbol.asyncIterator]()))))), yield m(new r91());
    });
  }
  var C2 = (t32) => E3(Uint8Array, t32);
  function V3(t32, e26, i29) {
    if (0 !== t32)
      for (let n37 = -1, r91 = (i29 = i29.slice(0, e26)).length; ++n37 < r91; )
        i29[n37] += t32;
    return i29.subarray(0, e26);
  }
  function R3(t32, e26) {
    let i29 = 0;
    const n37 = t32.length;
    if (n37 !== e26.length)
      return false;
    if (n37 > 0)
      do {
        if (t32[i29] !== e26[i29])
          return false;
      } while (++i29 < n37);
    return true;
  }
  var z3 = Object.freeze({ __proto__: null, memcpy: T3, joinUint8Arrays: O4, toArrayBufferView: M3, toInt8Array: (t32) => M3(Int8Array, t32), toInt16Array: (t32) => M3(Int16Array, t32), toInt32Array: x3, toBigInt64Array: (t32) => M3(BigInt64Array, t32), toUint8Array: L3, toUint16Array: (t32) => M3(Uint16Array, t32), toUint32Array: (t32) => M3(Uint32Array, t32), toBigUint64Array: (t32) => M3(BigUint64Array, t32), toFloat32Array: (t32) => M3(Float32Array, t32), toFloat64Array: (t32) => M3(Float64Array, t32), toUint8ClampedArray: (t32) => M3(Uint8ClampedArray, t32), toArrayBufferViewIterator: F3, toInt8ArrayIterator: (t32) => F3(Int8Array, t32), toInt16ArrayIterator: (t32) => F3(Int16Array, t32), toInt32ArrayIterator: (t32) => F3(Int32Array, t32), toUint8ArrayIterator: U3, toUint16ArrayIterator: (t32) => F3(Uint16Array, t32), toUint32ArrayIterator: (t32) => F3(Uint32Array, t32), toFloat32ArrayIterator: (t32) => F3(Float32Array, t32), toFloat64ArrayIterator: (t32) => F3(Float64Array, t32), toUint8ClampedArrayIterator: (t32) => F3(Uint8ClampedArray, t32), toArrayBufferViewAsyncIterator: E3, toInt8ArrayAsyncIterator: (t32) => E3(Int8Array, t32), toInt16ArrayAsyncIterator: (t32) => E3(Int16Array, t32), toInt32ArrayAsyncIterator: (t32) => E3(Int32Array, t32), toUint8ArrayAsyncIterator: C2, toUint16ArrayAsyncIterator: (t32) => E3(Uint16Array, t32), toUint32ArrayAsyncIterator: (t32) => E3(Uint32Array, t32), toFloat32ArrayAsyncIterator: (t32) => E3(Float32Array, t32), toFloat64ArrayAsyncIterator: (t32) => E3(Float64Array, t32), toUint8ClampedArrayAsyncIterator: (t32) => E3(Uint8ClampedArray, t32), rebaseValueOffsets: V3, compareArrayLike: R3 });
  var P3 = { fromIterable: (t32) => j4(function* (t33) {
    let e26, i29, n37, r91, s29 = false, o35 = [], a27 = 0;
    function l35() {
      return "peek" === n37 ? O4(o35, r91)[0] : ([i29, o35, a27] = O4(o35, r91), i29);
    }
    ({ cmd: n37, size: r91 } = yield null);
    const u30 = U3(t33)[Symbol.iterator]();
    try {
      do {
        if ({ done: e26, value: i29 } = Number.isNaN(r91 - a27) ? u30.next() : u30.next(r91 - a27), !e26 && i29.byteLength > 0 && (o35.push(i29), a27 += i29.byteLength), e26 || r91 <= a27)
          do {
            ({ cmd: n37, size: r91 } = yield l35());
          } while (r91 < a27);
      } while (!e26);
    } catch (t34) {
      (s29 = true) && "function" == typeof u30.throw && u30.throw(t34);
    } finally {
      false === s29 && "function" == typeof u30.return && u30.return(null);
    }
    return null;
  }(t32)), fromAsyncIterable: (i29) => j4(function(i30) {
    return g(this, arguments, function* () {
      let t32, n37, r91, s29, o35 = false, a27 = [], l35 = 0;
      function u30() {
        return "peek" === r91 ? O4(a27, s29)[0] : ([n37, a27, l35] = O4(a27, s29), n37);
      }
      ({ cmd: r91, size: s29 } = yield yield m(null));
      const c30 = C2(i30)[Symbol.asyncIterator]();
      try {
        do {
          if ({ done: t32, value: n37 } = Number.isNaN(s29 - l35) ? yield m(c30.next()) : yield m(c30.next(s29 - l35)), !t32 && n37.byteLength > 0 && (a27.push(n37), l35 += n37.byteLength), t32 || s29 <= l35)
            do {
              ({ cmd: r91, size: s29 } = yield yield m(u30()));
            } while (s29 < l35);
        } while (!t32);
      } catch (t33) {
        (o35 = true) && "function" == typeof c30.throw && (yield m(c30.throw(t33)));
      } finally {
        false === o35 && "function" == typeof c30.return && (yield m(c30.return(new Uint8Array(0))));
      }
      return yield m(null);
    });
  }(i29)), fromDOMStream: (i29) => j4(function(i30) {
    return g(this, arguments, function* () {
      let t32, n37, r91, s29 = false, o35 = false, a27 = [], l35 = 0;
      function u30() {
        return "peek" === n37 ? O4(a27, r91)[0] : ([t32, a27, l35] = O4(a27, r91), t32);
      }
      ({ cmd: n37, size: r91 } = yield yield m(null));
      const c30 = new k3(i30);
      try {
        do {
          if ({ done: s29, value: t32 } = Number.isNaN(r91 - l35) ? yield m(c30.read()) : yield m(c30.read(r91 - l35)), !s29 && t32.byteLength > 0 && (a27.push(L3(t32)), l35 += t32.byteLength), s29 || r91 <= l35)
            do {
              ({ cmd: n37, size: r91 } = yield yield m(u30()));
            } while (r91 < l35);
        } while (!s29);
      } catch (t33) {
        (o35 = true) && (yield m(c30.cancel(t33)));
      } finally {
        false === o35 ? yield m(c30.cancel()) : i30.locked && c30.releaseLock();
      }
      return yield m(null);
    });
  }(i29)), fromNodeStream: (i29) => j4(function(i30) {
    return g(this, arguments, function* () {
      const t32 = [];
      let n37, r91, s29, o35 = "error", a27 = false, l35 = null, u30 = 0, c30 = [];
      function h35() {
        return "peek" === n37 ? O4(c30, r91)[0] : ([s29, c30, u30] = O4(c30, r91), s29);
      }
      if ({ cmd: n37, size: r91 } = yield yield m(null), i30.isTTY)
        return yield yield m(new Uint8Array(0)), yield m(null);
      try {
        t32[0] = $3(i30, "end"), t32[1] = $3(i30, "error");
        do {
          if (t32[2] = $3(i30, "readable"), [o35, l35] = yield m(Promise.race(t32.map((t33) => t33[2]))), "error" === o35)
            break;
          if ((a27 = "end" === o35) || (Number.isFinite(r91 - u30) ? (s29 = L3(i30.read(r91 - u30)), s29.byteLength < r91 - u30 && (s29 = L3(i30.read()))) : s29 = L3(i30.read()), s29.byteLength > 0 && (c30.push(s29), u30 += s29.byteLength)), a27 || r91 <= u30)
            do {
              ({ cmd: n37, size: r91 } = yield yield m(h35()));
            } while (r91 < u30);
        } while (!a27);
      } finally {
        yield m(d25(t32, "error" === o35 ? l35 : null));
      }
      return yield m(null);
      function d25(t33, e26) {
        return s29 = c30 = null, new Promise((n38, r92) => {
          for (const [e27, n39] of t33)
            i30.off(e27, n39);
          try {
            const t34 = i30.destroy;
            t34 && t34.call(i30, e26), e26 = void 0;
          } catch (t34) {
            e26 = t34 || e26;
          } finally {
            null != e26 ? r92(e26) : n38();
          }
        });
      }
    });
  }(i29)), toDOMStream(t32, e26) {
    throw new Error('"toDOMStream" not available in this environment');
  }, toNodeStream(t32, e26) {
    throw new Error('"toNodeStream" not available in this environment');
  } };
  var j4 = (t32) => (t32.next(), t32);
  var k3 = class {
    constructor(t32) {
      this.source = t32, this.reader = null, this.reader = this.source.getReader(), this.reader.closed.catch(() => {
      });
    }
    get closed() {
      return this.reader ? this.reader.closed.catch(() => {
      }) : Promise.resolve();
    }
    releaseLock() {
      this.reader && this.reader.releaseLock(), this.reader = null;
    }
    cancel(t32) {
      return s(this, void 0, void 0, function* () {
        const { reader: e26, source: i29 } = this;
        e26 && (yield e26.cancel(t32).catch(() => {
        })), i29 && i29.locked && this.releaseLock();
      });
    }
    read(t32) {
      return s(this, void 0, void 0, function* () {
        if (0 === t32)
          return { done: null == this.reader, value: new Uint8Array(0) };
        const e26 = yield this.reader.read();
        return !e26.done && (e26.value = L3(e26)), e26;
      });
    }
  };
  var $3 = (t32, e26) => {
    const i29 = (t33) => n37([e26, t33]);
    let n37;
    return [e26, i29, new Promise((r91) => (n37 = r91) && t32.once(e26, i29))];
  };
  var W3;
  var Y3;
  var H3;
  var G3;
  var Z3;
  var X3;
  var K3;
  var J3;
  var q3;
  !function(t32) {
    t32[t32.V1 = 0] = "V1", t32[t32.V2 = 1] = "V2", t32[t32.V3 = 2] = "V3", t32[t32.V4 = 3] = "V4", t32[t32.V5 = 4] = "V5";
  }(W3 || (W3 = {})), function(t32) {
    t32[t32.Sparse = 0] = "Sparse", t32[t32.Dense = 1] = "Dense";
  }(Y3 || (Y3 = {})), function(t32) {
    t32[t32.HALF = 0] = "HALF", t32[t32.SINGLE = 1] = "SINGLE", t32[t32.DOUBLE = 2] = "DOUBLE";
  }(H3 || (H3 = {})), function(t32) {
    t32[t32.DAY = 0] = "DAY", t32[t32.MILLISECOND = 1] = "MILLISECOND";
  }(G3 || (G3 = {})), function(t32) {
    t32[t32.SECOND = 0] = "SECOND", t32[t32.MILLISECOND = 1] = "MILLISECOND", t32[t32.MICROSECOND = 2] = "MICROSECOND", t32[t32.NANOSECOND = 3] = "NANOSECOND";
  }(Z3 || (Z3 = {})), function(t32) {
    t32[t32.YEAR_MONTH = 0] = "YEAR_MONTH", t32[t32.DAY_TIME = 1] = "DAY_TIME", t32[t32.MONTH_DAY_NANO = 2] = "MONTH_DAY_NANO";
  }(X3 || (X3 = {})), function(t32) {
    t32[t32.NONE = 0] = "NONE", t32[t32.Schema = 1] = "Schema", t32[t32.DictionaryBatch = 2] = "DictionaryBatch", t32[t32.RecordBatch = 3] = "RecordBatch", t32[t32.Tensor = 4] = "Tensor", t32[t32.SparseTensor = 5] = "SparseTensor";
  }(K3 || (K3 = {})), function(t32) {
    t32[t32.NONE = 0] = "NONE", t32[t32.Null = 1] = "Null", t32[t32.Int = 2] = "Int", t32[t32.Float = 3] = "Float", t32[t32.Binary = 4] = "Binary", t32[t32.Utf8 = 5] = "Utf8", t32[t32.Bool = 6] = "Bool", t32[t32.Decimal = 7] = "Decimal", t32[t32.Date = 8] = "Date", t32[t32.Time = 9] = "Time", t32[t32.Timestamp = 10] = "Timestamp", t32[t32.Interval = 11] = "Interval", t32[t32.List = 12] = "List", t32[t32.Struct = 13] = "Struct", t32[t32.Union = 14] = "Union", t32[t32.FixedSizeBinary = 15] = "FixedSizeBinary", t32[t32.FixedSizeList = 16] = "FixedSizeList", t32[t32.Map = 17] = "Map", t32[t32.Duration = 18] = "Duration", t32[t32.Dictionary = -1] = "Dictionary", t32[t32.Int8 = -2] = "Int8", t32[t32.Int16 = -3] = "Int16", t32[t32.Int32 = -4] = "Int32", t32[t32.Int64 = -5] = "Int64", t32[t32.Uint8 = -6] = "Uint8", t32[t32.Uint16 = -7] = "Uint16", t32[t32.Uint32 = -8] = "Uint32", t32[t32.Uint64 = -9] = "Uint64", t32[t32.Float16 = -10] = "Float16", t32[t32.Float32 = -11] = "Float32", t32[t32.Float64 = -12] = "Float64", t32[t32.DateDay = -13] = "DateDay", t32[t32.DateMillisecond = -14] = "DateMillisecond", t32[t32.TimestampSecond = -15] = "TimestampSecond", t32[t32.TimestampMillisecond = -16] = "TimestampMillisecond", t32[t32.TimestampMicrosecond = -17] = "TimestampMicrosecond", t32[t32.TimestampNanosecond = -18] = "TimestampNanosecond", t32[t32.TimeSecond = -19] = "TimeSecond", t32[t32.TimeMillisecond = -20] = "TimeMillisecond", t32[t32.TimeMicrosecond = -21] = "TimeMicrosecond", t32[t32.TimeNanosecond = -22] = "TimeNanosecond", t32[t32.DenseUnion = -23] = "DenseUnion", t32[t32.SparseUnion = -24] = "SparseUnion", t32[t32.IntervalDayTime = -25] = "IntervalDayTime", t32[t32.IntervalYearMonth = -26] = "IntervalYearMonth", t32[t32.DurationSecond = -27] = "DurationSecond", t32[t32.DurationMillisecond = -28] = "DurationMillisecond", t32[t32.DurationMicrosecond = -29] = "DurationMicrosecond", t32[t32.DurationNanosecond = -30] = "DurationNanosecond";
  }(J3 || (J3 = {})), function(t32) {
    t32[t32.OFFSET = 0] = "OFFSET", t32[t32.DATA = 1] = "DATA", t32[t32.VALIDITY = 2] = "VALIDITY", t32[t32.TYPE = 3] = "TYPE";
  }(q3 || (q3 = {}));
  var Q3 = void 0;
  function tt3(t32) {
    if (null === t32)
      return "null";
    if (t32 === Q3)
      return "undefined";
    switch (typeof t32) {
      case "number":
      case "bigint":
        return `${t32}`;
      case "string":
        return `"${t32}"`;
    }
    return "function" == typeof t32[Symbol.toPrimitive] ? t32[Symbol.toPrimitive]("string") : ArrayBuffer.isView(t32) ? t32 instanceof BigInt64Array || t32 instanceof BigUint64Array ? `[${[...t32].map((t33) => tt3(t33))}]` : `[${t32}]` : ArrayBuffer.isView(t32) ? `[${t32}]` : JSON.stringify(t32, (t33, e26) => "bigint" == typeof e26 ? `${e26}` : e26);
  }
  var et3 = Object.freeze({ __proto__: null, valueToString: tt3 });
  var it4 = Symbol.for("isArrowBigNum");
  function nt3(t32, ...e26) {
    return 0 === e26.length ? Object.setPrototypeOf(M3(this.TypedArray, t32), this.constructor.prototype) : Object.setPrototypeOf(new this.TypedArray(t32, ...e26), this.constructor.prototype);
  }
  function rt3(...t32) {
    return nt3.apply(this, t32);
  }
  function st3(...t32) {
    return nt3.apply(this, t32);
  }
  function ot3(...t32) {
    return nt3.apply(this, t32);
  }
  function at3(t32) {
    const { buffer: e26, byteOffset: i29, length: n37, signed: r91 } = t32, s29 = new BigUint64Array(e26, i29, n37), o35 = r91 && s29.at(-1) & BigInt(1) << BigInt(63);
    let a27 = o35 ? BigInt(1) : BigInt(0), l35 = BigInt(0);
    if (o35) {
      for (const t33 of s29)
        a27 += ~t33 * (BigInt(1) << BigInt(32) * l35++);
      a27 *= BigInt(-1);
    } else
      for (const t33 of s29)
        a27 += t33 * (BigInt(1) << BigInt(32) * l35++);
    return a27;
  }
  nt3.prototype[it4] = true, nt3.prototype.toJSON = function() {
    return `"${lt3(this)}"`;
  }, nt3.prototype.valueOf = function() {
    return at3(this);
  }, nt3.prototype.toString = function() {
    return lt3(this);
  }, nt3.prototype[Symbol.toPrimitive] = function(t32 = "default") {
    switch (t32) {
      case "number":
        return at3(this);
      case "string":
        return lt3(this);
      case "default":
        return ut3(this);
    }
    return lt3(this);
  }, Object.setPrototypeOf(rt3.prototype, Object.create(Int32Array.prototype)), Object.setPrototypeOf(st3.prototype, Object.create(Uint32Array.prototype)), Object.setPrototypeOf(ot3.prototype, Object.create(Uint32Array.prototype)), Object.assign(rt3.prototype, nt3.prototype, { constructor: rt3, signed: true, TypedArray: Int32Array, BigIntArray: BigInt64Array }), Object.assign(st3.prototype, nt3.prototype, { constructor: st3, signed: false, TypedArray: Uint32Array, BigIntArray: BigUint64Array }), Object.assign(ot3.prototype, nt3.prototype, { constructor: ot3, signed: true, TypedArray: Uint32Array, BigIntArray: BigUint64Array });
  var lt3 = (t32) => {
    if (8 === t32.byteLength) {
      return `${new t32.BigIntArray(t32.buffer, t32.byteOffset, 1)[0]}`;
    }
    if (!t32.signed)
      return ct3(t32);
    let e26 = new Uint16Array(t32.buffer, t32.byteOffset, t32.byteLength / 2);
    if (new Int16Array([e26.at(-1)])[0] >= 0)
      return ct3(t32);
    e26 = e26.slice();
    let i29 = 1;
    for (let t33 = 0; t33 < e26.length; t33++) {
      const n37 = e26[t33], r91 = ~n37 + i29;
      e26[t33] = r91, i29 &= 0 === n37 ? 1 : 0;
    }
    return `-${ct3(e26)}`;
  };
  var ut3 = (t32) => {
    if (8 === t32.byteLength) {
      return new t32.BigIntArray(t32.buffer, t32.byteOffset, 1)[0];
    }
    return lt3(t32);
  };
  function ct3(t32) {
    let e26 = "";
    const i29 = new Uint32Array(2);
    let n37 = new Uint16Array(t32.buffer, t32.byteOffset, t32.byteLength / 2);
    const r91 = new Uint32Array((n37 = new Uint16Array(n37).reverse()).buffer);
    let s29 = -1;
    const o35 = n37.length - 1;
    do {
      for (i29[0] = n37[s29 = 0]; s29 < o35; )
        n37[s29++] = i29[1] = i29[0] / 10, i29[0] = (i29[0] - 10 * i29[1] << 16) + n37[s29];
      n37[s29] = i29[1] = i29[0] / 10, i29[0] = i29[0] - 10 * i29[1], e26 = `${i29[0]}${e26}`;
    } while (r91[0] || r91[1] || r91[2] || r91[3]);
    return null != e26 ? e26 : "0";
  }
  var ht3 = class _ht {
    static new(t32, e26) {
      switch (e26) {
        case true:
          return new rt3(t32);
        case false:
          return new st3(t32);
      }
      switch (t32.constructor) {
        case Int8Array:
        case Int16Array:
        case Int32Array:
        case BigInt64Array:
          return new rt3(t32);
      }
      return 16 === t32.byteLength ? new ot3(t32) : new st3(t32);
    }
    static signed(t32) {
      return new rt3(t32);
    }
    static unsigned(t32) {
      return new st3(t32);
    }
    static decimal(t32) {
      return new ot3(t32);
    }
    constructor(t32, e26) {
      return _ht.new(t32, e26);
    }
  };
  var dt3;
  var pt3;
  var yt3;
  var ft3;
  var bt3;
  var vt3;
  var gt3;
  var mt3;
  var _t3;
  var wt3;
  var It3;
  var St3;
  var At3;
  var Dt3;
  var Bt3;
  var Tt3;
  var Ot3;
  var Mt3;
  var xt3;
  var Lt3;
  var Nt3;
  var Ft3 = Object.freeze({ __proto__: null, isArrowBigNumSymbol: it4, bigNumToString: lt3, bigNumToBigInt: ut3, BN: ht3 });
  function Ut3(t32) {
    if ("bigint" == typeof t32 && (t32 < Number.MIN_SAFE_INTEGER || t32 > Number.MAX_SAFE_INTEGER))
      throw new TypeError(`${t32} is not safe to convert to a number.`);
    return Number(t32);
  }
  var Et3 = class _Et {
    static isNull(t32) {
      return (null == t32 ? void 0 : t32.typeId) === J3.Null;
    }
    static isInt(t32) {
      return (null == t32 ? void 0 : t32.typeId) === J3.Int;
    }
    static isFloat(t32) {
      return (null == t32 ? void 0 : t32.typeId) === J3.Float;
    }
    static isBinary(t32) {
      return (null == t32 ? void 0 : t32.typeId) === J3.Binary;
    }
    static isUtf8(t32) {
      return (null == t32 ? void 0 : t32.typeId) === J3.Utf8;
    }
    static isBool(t32) {
      return (null == t32 ? void 0 : t32.typeId) === J3.Bool;
    }
    static isDecimal(t32) {
      return (null == t32 ? void 0 : t32.typeId) === J3.Decimal;
    }
    static isDate(t32) {
      return (null == t32 ? void 0 : t32.typeId) === J3.Date;
    }
    static isTime(t32) {
      return (null == t32 ? void 0 : t32.typeId) === J3.Time;
    }
    static isTimestamp(t32) {
      return (null == t32 ? void 0 : t32.typeId) === J3.Timestamp;
    }
    static isInterval(t32) {
      return (null == t32 ? void 0 : t32.typeId) === J3.Interval;
    }
    static isDuration(t32) {
      return (null == t32 ? void 0 : t32.typeId) === J3.Duration;
    }
    static isList(t32) {
      return (null == t32 ? void 0 : t32.typeId) === J3.List;
    }
    static isStruct(t32) {
      return (null == t32 ? void 0 : t32.typeId) === J3.Struct;
    }
    static isUnion(t32) {
      return (null == t32 ? void 0 : t32.typeId) === J3.Union;
    }
    static isFixedSizeBinary(t32) {
      return (null == t32 ? void 0 : t32.typeId) === J3.FixedSizeBinary;
    }
    static isFixedSizeList(t32) {
      return (null == t32 ? void 0 : t32.typeId) === J3.FixedSizeList;
    }
    static isMap(t32) {
      return (null == t32 ? void 0 : t32.typeId) === J3.Map;
    }
    static isDictionary(t32) {
      return (null == t32 ? void 0 : t32.typeId) === J3.Dictionary;
    }
    static isDenseUnion(t32) {
      return _Et.isUnion(t32) && t32.mode === Y3.Dense;
    }
    static isSparseUnion(t32) {
      return _Et.isUnion(t32) && t32.mode === Y3.Sparse;
    }
    get typeId() {
      return J3.NONE;
    }
  };
  dt3 = Symbol.toStringTag, Et3[dt3] = ((Nt3 = Et3.prototype).children = null, Nt3.ArrayType = Array, Nt3[Symbol.toStringTag] = "DataType");
  var Ct3 = class extends Et3 {
    toString() {
      return "Null";
    }
    get typeId() {
      return J3.Null;
    }
  };
  pt3 = Symbol.toStringTag, Ct3[pt3] = Ct3.prototype[Symbol.toStringTag] = "Null";
  var Vt3 = class extends Et3 {
    constructor(t32, e26) {
      super(), this.isSigned = t32, this.bitWidth = e26;
    }
    get typeId() {
      return J3.Int;
    }
    get ArrayType() {
      switch (this.bitWidth) {
        case 8:
          return this.isSigned ? Int8Array : Uint8Array;
        case 16:
          return this.isSigned ? Int16Array : Uint16Array;
        case 32:
          return this.isSigned ? Int32Array : Uint32Array;
        case 64:
          return this.isSigned ? BigInt64Array : BigUint64Array;
      }
      throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);
    }
    toString() {
      return `${this.isSigned ? "I" : "Ui"}nt${this.bitWidth}`;
    }
  };
  yt3 = Symbol.toStringTag, Vt3[yt3] = ((t32) => (t32.isSigned = null, t32.bitWidth = null, t32[Symbol.toStringTag] = "Int"))(Vt3.prototype);
  var Rt3 = class extends Vt3 {
    constructor() {
      super(true, 8);
    }
    get ArrayType() {
      return Int8Array;
    }
  };
  var zt3 = class extends Vt3 {
    constructor() {
      super(true, 16);
    }
    get ArrayType() {
      return Int16Array;
    }
  };
  var Pt3 = class extends Vt3 {
    constructor() {
      super(true, 32);
    }
    get ArrayType() {
      return Int32Array;
    }
  };
  var jt3 = class extends Vt3 {
    constructor() {
      super(true, 64);
    }
    get ArrayType() {
      return BigInt64Array;
    }
  };
  var kt2 = class extends Vt3 {
    constructor() {
      super(false, 8);
    }
    get ArrayType() {
      return Uint8Array;
    }
  };
  var $t3 = class extends Vt3 {
    constructor() {
      super(false, 16);
    }
    get ArrayType() {
      return Uint16Array;
    }
  };
  var Wt3 = class extends Vt3 {
    constructor() {
      super(false, 32);
    }
    get ArrayType() {
      return Uint32Array;
    }
  };
  var Yt3 = class extends Vt3 {
    constructor() {
      super(false, 64);
    }
    get ArrayType() {
      return BigUint64Array;
    }
  };
  Object.defineProperty(Rt3.prototype, "ArrayType", { value: Int8Array }), Object.defineProperty(zt3.prototype, "ArrayType", { value: Int16Array }), Object.defineProperty(Pt3.prototype, "ArrayType", { value: Int32Array }), Object.defineProperty(jt3.prototype, "ArrayType", { value: BigInt64Array }), Object.defineProperty(kt2.prototype, "ArrayType", { value: Uint8Array }), Object.defineProperty($t3.prototype, "ArrayType", { value: Uint16Array }), Object.defineProperty(Wt3.prototype, "ArrayType", { value: Uint32Array }), Object.defineProperty(Yt3.prototype, "ArrayType", { value: BigUint64Array });
  var Ht3 = class extends Et3 {
    constructor(t32) {
      super(), this.precision = t32;
    }
    get typeId() {
      return J3.Float;
    }
    get ArrayType() {
      switch (this.precision) {
        case H3.HALF:
          return Uint16Array;
        case H3.SINGLE:
          return Float32Array;
        case H3.DOUBLE:
          return Float64Array;
      }
      throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);
    }
    toString() {
      return `Float${this.precision << 5 || 16}`;
    }
  };
  ft3 = Symbol.toStringTag, Ht3[ft3] = ((t32) => (t32.precision = null, t32[Symbol.toStringTag] = "Float"))(Ht3.prototype);
  var Gt3 = class extends Ht3 {
    constructor() {
      super(H3.HALF);
    }
  };
  var Zt3 = class extends Ht3 {
    constructor() {
      super(H3.SINGLE);
    }
  };
  var Xt3 = class extends Ht3 {
    constructor() {
      super(H3.DOUBLE);
    }
  };
  Object.defineProperty(Gt3.prototype, "ArrayType", { value: Uint16Array }), Object.defineProperty(Zt3.prototype, "ArrayType", { value: Float32Array }), Object.defineProperty(Xt3.prototype, "ArrayType", { value: Float64Array });
  var Kt3 = class extends Et3 {
    constructor() {
      super();
    }
    get typeId() {
      return J3.Binary;
    }
    toString() {
      return "Binary";
    }
  };
  bt3 = Symbol.toStringTag, Kt3[bt3] = ((t32) => (t32.ArrayType = Uint8Array, t32[Symbol.toStringTag] = "Binary"))(Kt3.prototype);
  var Jt2 = class extends Et3 {
    constructor() {
      super();
    }
    get typeId() {
      return J3.Utf8;
    }
    toString() {
      return "Utf8";
    }
  };
  vt3 = Symbol.toStringTag, Jt2[vt3] = ((t32) => (t32.ArrayType = Uint8Array, t32[Symbol.toStringTag] = "Utf8"))(Jt2.prototype);
  var qt3 = class extends Et3 {
    constructor() {
      super();
    }
    get typeId() {
      return J3.Bool;
    }
    toString() {
      return "Bool";
    }
  };
  gt3 = Symbol.toStringTag, qt3[gt3] = ((t32) => (t32.ArrayType = Uint8Array, t32[Symbol.toStringTag] = "Bool"))(qt3.prototype);
  var Qt2 = class extends Et3 {
    constructor(t32, e26, i29 = 128) {
      super(), this.scale = t32, this.precision = e26, this.bitWidth = i29;
    }
    get typeId() {
      return J3.Decimal;
    }
    toString() {
      return `Decimal[${this.precision}e${this.scale > 0 ? "+" : ""}${this.scale}]`;
    }
  };
  mt3 = Symbol.toStringTag, Qt2[mt3] = ((t32) => (t32.scale = null, t32.precision = null, t32.ArrayType = Uint32Array, t32[Symbol.toStringTag] = "Decimal"))(Qt2.prototype);
  var te3 = class extends Et3 {
    constructor(t32) {
      super(), this.unit = t32;
    }
    get typeId() {
      return J3.Date;
    }
    toString() {
      return `Date${32 * (this.unit + 1)}<${G3[this.unit]}>`;
    }
  };
  _t3 = Symbol.toStringTag, te3[_t3] = ((t32) => (t32.unit = null, t32.ArrayType = Int32Array, t32[Symbol.toStringTag] = "Date"))(te3.prototype);
  var ne2 = class extends Et3 {
    constructor(t32, e26) {
      super(), this.unit = t32, this.bitWidth = e26;
    }
    get typeId() {
      return J3.Time;
    }
    toString() {
      return `Time${this.bitWidth}<${Z3[this.unit]}>`;
    }
    get ArrayType() {
      switch (this.bitWidth) {
        case 32:
          return Int32Array;
        case 64:
          return BigInt64Array;
      }
      throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);
    }
  };
  wt3 = Symbol.toStringTag, ne2[wt3] = ((t32) => (t32.unit = null, t32.bitWidth = null, t32[Symbol.toStringTag] = "Time"))(ne2.prototype);
  var le3 = class extends Et3 {
    constructor(t32, e26) {
      super(), this.unit = t32, this.timezone = e26;
    }
    get typeId() {
      return J3.Timestamp;
    }
    toString() {
      return `Timestamp<${Z3[this.unit]}${this.timezone ? `, ${this.timezone}` : ""}>`;
    }
  };
  It3 = Symbol.toStringTag, le3[It3] = ((t32) => (t32.unit = null, t32.timezone = null, t32.ArrayType = Int32Array, t32[Symbol.toStringTag] = "Timestamp"))(le3.prototype);
  var pe3 = class extends Et3 {
    constructor(t32) {
      super(), this.unit = t32;
    }
    get typeId() {
      return J3.Interval;
    }
    toString() {
      return `Interval<${X3[this.unit]}>`;
    }
  };
  St3 = Symbol.toStringTag, pe3[St3] = ((t32) => (t32.unit = null, t32.ArrayType = Int32Array, t32[Symbol.toStringTag] = "Interval"))(pe3.prototype);
  var be2 = class extends Et3 {
    constructor(t32) {
      super(), this.unit = t32;
    }
    get typeId() {
      return J3.Duration;
    }
    toString() {
      return `Duration<${Z3[this.unit]}>`;
    }
  };
  At3 = Symbol.toStringTag, be2[At3] = ((t32) => (t32.unit = null, t32.ArrayType = BigInt64Array, t32[Symbol.toStringTag] = "Duration"))(be2.prototype);
  var we2 = class extends Et3 {
    constructor(t32) {
      super(), this.children = [t32];
    }
    get typeId() {
      return J3.List;
    }
    toString() {
      return `List<${this.valueType}>`;
    }
    get valueType() {
      return this.children[0].type;
    }
    get valueField() {
      return this.children[0];
    }
    get ArrayType() {
      return this.valueType.ArrayType;
    }
  };
  Dt3 = Symbol.toStringTag, we2[Dt3] = ((t32) => (t32.children = null, t32[Symbol.toStringTag] = "List"))(we2.prototype);
  var Ie2 = class extends Et3 {
    constructor(t32) {
      super(), this.children = t32;
    }
    get typeId() {
      return J3.Struct;
    }
    toString() {
      return `Struct<{${this.children.map((t32) => `${t32.name}:${t32.type}`).join(", ")}}>`;
    }
  };
  Bt3 = Symbol.toStringTag, Ie2[Bt3] = ((t32) => (t32.children = null, t32[Symbol.toStringTag] = "Struct"))(Ie2.prototype);
  var Se3 = class extends Et3 {
    constructor(t32, e26, i29) {
      super(), this.mode = t32, this.children = i29, this.typeIds = e26 = Int32Array.from(e26), this.typeIdToChildIndex = e26.reduce((t33, e27, i30) => (t33[e27] = i30) && t33 || t33, /* @__PURE__ */ Object.create(null));
    }
    get typeId() {
      return J3.Union;
    }
    toString() {
      return `${this[Symbol.toStringTag]}<${this.children.map((t32) => `${t32.type}`).join(" | ")}>`;
    }
  };
  Tt3 = Symbol.toStringTag, Se3[Tt3] = ((t32) => (t32.mode = null, t32.typeIds = null, t32.children = null, t32.typeIdToChildIndex = null, t32.ArrayType = Int8Array, t32[Symbol.toStringTag] = "Union"))(Se3.prototype);
  var Be2 = class extends Et3 {
    constructor(t32) {
      super(), this.byteWidth = t32;
    }
    get typeId() {
      return J3.FixedSizeBinary;
    }
    toString() {
      return `FixedSizeBinary[${this.byteWidth}]`;
    }
  };
  Ot3 = Symbol.toStringTag, Be2[Ot3] = ((t32) => (t32.byteWidth = null, t32.ArrayType = Uint8Array, t32[Symbol.toStringTag] = "FixedSizeBinary"))(Be2.prototype);
  var Te3 = class extends Et3 {
    constructor(t32, e26) {
      super(), this.listSize = t32, this.children = [e26];
    }
    get typeId() {
      return J3.FixedSizeList;
    }
    get valueType() {
      return this.children[0].type;
    }
    get valueField() {
      return this.children[0];
    }
    get ArrayType() {
      return this.valueType.ArrayType;
    }
    toString() {
      return `FixedSizeList[${this.listSize}]<${this.valueType}>`;
    }
  };
  Mt3 = Symbol.toStringTag, Te3[Mt3] = ((t32) => (t32.children = null, t32.listSize = null, t32[Symbol.toStringTag] = "FixedSizeList"))(Te3.prototype);
  var Oe3 = class extends Et3 {
    constructor(t32, e26 = false) {
      var i29, n37, r91;
      if (super(), this.children = [t32], this.keysSorted = e26, t32 && (t32.name = "entries", null === (i29 = null == t32 ? void 0 : t32.type) || void 0 === i29 ? void 0 : i29.children)) {
        const e27 = null === (n37 = null == t32 ? void 0 : t32.type) || void 0 === n37 ? void 0 : n37.children[0];
        e27 && (e27.name = "key");
        const i30 = null === (r91 = null == t32 ? void 0 : t32.type) || void 0 === r91 ? void 0 : r91.children[1];
        i30 && (i30.name = "value");
      }
    }
    get typeId() {
      return J3.Map;
    }
    get keyType() {
      return this.children[0].type.children[0].type;
    }
    get valueType() {
      return this.children[0].type.children[1].type;
    }
    get childType() {
      return this.children[0].type;
    }
    toString() {
      return `Map<{${this.children[0].type.children.map((t32) => `${t32.name}:${t32.type}`).join(", ")}}>`;
    }
  };
  xt3 = Symbol.toStringTag, Oe3[xt3] = ((t32) => (t32.children = null, t32.keysSorted = null, t32[Symbol.toStringTag] = "Map_"))(Oe3.prototype);
  var Me2 = (xe2 = -1, () => ++xe2);
  var xe2;
  var Le2 = class extends Et3 {
    constructor(t32, e26, i29, n37) {
      super(), this.indices = e26, this.dictionary = t32, this.isOrdered = n37 || false, this.id = null == i29 ? Me2() : Ut3(i29);
    }
    get typeId() {
      return J3.Dictionary;
    }
    get children() {
      return this.dictionary.children;
    }
    get valueType() {
      return this.dictionary;
    }
    get ArrayType() {
      return this.dictionary.ArrayType;
    }
    toString() {
      return `Dictionary<${this.indices}, ${this.dictionary}>`;
    }
  };
  function Ne3(t32) {
    const e26 = t32;
    switch (t32.typeId) {
      case J3.Decimal:
        return t32.bitWidth / 32;
      case J3.Timestamp:
        return 2;
      case J3.Date:
      case J3.Interval:
        return 1 + e26.unit;
      case J3.FixedSizeList:
        return e26.listSize;
      case J3.FixedSizeBinary:
        return e26.byteWidth;
      default:
        return 1;
    }
  }
  Lt3 = Symbol.toStringTag, Le2[Lt3] = ((t32) => (t32.id = null, t32.indices = null, t32.isOrdered = null, t32.dictionary = null, t32[Symbol.toStringTag] = "Dictionary"))(Le2.prototype);
  var Fe2 = class {
    visitMany(t32, ...e26) {
      return t32.map((t33, i29) => this.visit(t33, ...e26.map((t34) => t34[i29])));
    }
    visit(...t32) {
      return this.getVisitFn(t32[0], false).apply(this, t32);
    }
    getVisitFn(t32, e26 = true) {
      return function(t33, e27, i29 = true) {
        if ("number" == typeof e27)
          return Ue2(t33, e27, i29);
        if ("string" == typeof e27 && e27 in J3)
          return Ue2(t33, J3[e27], i29);
        if (e27 && e27 instanceof Et3)
          return Ue2(t33, Ee3(e27), i29);
        if ((null == e27 ? void 0 : e27.type) && e27.type instanceof Et3)
          return Ue2(t33, Ee3(e27.type), i29);
        return Ue2(t33, J3.NONE, i29);
      }(this, t32, e26);
    }
    getVisitFnByTypeId(t32, e26 = true) {
      return Ue2(this, t32, e26);
    }
    visitNull(t32, ...e26) {
      return null;
    }
    visitBool(t32, ...e26) {
      return null;
    }
    visitInt(t32, ...e26) {
      return null;
    }
    visitFloat(t32, ...e26) {
      return null;
    }
    visitUtf8(t32, ...e26) {
      return null;
    }
    visitBinary(t32, ...e26) {
      return null;
    }
    visitFixedSizeBinary(t32, ...e26) {
      return null;
    }
    visitDate(t32, ...e26) {
      return null;
    }
    visitTimestamp(t32, ...e26) {
      return null;
    }
    visitTime(t32, ...e26) {
      return null;
    }
    visitDecimal(t32, ...e26) {
      return null;
    }
    visitList(t32, ...e26) {
      return null;
    }
    visitStruct(t32, ...e26) {
      return null;
    }
    visitUnion(t32, ...e26) {
      return null;
    }
    visitDictionary(t32, ...e26) {
      return null;
    }
    visitInterval(t32, ...e26) {
      return null;
    }
    visitDuration(t32, ...e26) {
      return null;
    }
    visitFixedSizeList(t32, ...e26) {
      return null;
    }
    visitMap(t32, ...e26) {
      return null;
    }
  };
  function Ue2(t32, e26, i29 = true) {
    let n37 = null;
    switch (e26) {
      case J3.Null:
        n37 = t32.visitNull;
        break;
      case J3.Bool:
        n37 = t32.visitBool;
        break;
      case J3.Int:
        n37 = t32.visitInt;
        break;
      case J3.Int8:
        n37 = t32.visitInt8 || t32.visitInt;
        break;
      case J3.Int16:
        n37 = t32.visitInt16 || t32.visitInt;
        break;
      case J3.Int32:
        n37 = t32.visitInt32 || t32.visitInt;
        break;
      case J3.Int64:
        n37 = t32.visitInt64 || t32.visitInt;
        break;
      case J3.Uint8:
        n37 = t32.visitUint8 || t32.visitInt;
        break;
      case J3.Uint16:
        n37 = t32.visitUint16 || t32.visitInt;
        break;
      case J3.Uint32:
        n37 = t32.visitUint32 || t32.visitInt;
        break;
      case J3.Uint64:
        n37 = t32.visitUint64 || t32.visitInt;
        break;
      case J3.Float:
        n37 = t32.visitFloat;
        break;
      case J3.Float16:
        n37 = t32.visitFloat16 || t32.visitFloat;
        break;
      case J3.Float32:
        n37 = t32.visitFloat32 || t32.visitFloat;
        break;
      case J3.Float64:
        n37 = t32.visitFloat64 || t32.visitFloat;
        break;
      case J3.Utf8:
        n37 = t32.visitUtf8;
        break;
      case J3.Binary:
        n37 = t32.visitBinary;
        break;
      case J3.FixedSizeBinary:
        n37 = t32.visitFixedSizeBinary;
        break;
      case J3.Date:
        n37 = t32.visitDate;
        break;
      case J3.DateDay:
        n37 = t32.visitDateDay || t32.visitDate;
        break;
      case J3.DateMillisecond:
        n37 = t32.visitDateMillisecond || t32.visitDate;
        break;
      case J3.Timestamp:
        n37 = t32.visitTimestamp;
        break;
      case J3.TimestampSecond:
        n37 = t32.visitTimestampSecond || t32.visitTimestamp;
        break;
      case J3.TimestampMillisecond:
        n37 = t32.visitTimestampMillisecond || t32.visitTimestamp;
        break;
      case J3.TimestampMicrosecond:
        n37 = t32.visitTimestampMicrosecond || t32.visitTimestamp;
        break;
      case J3.TimestampNanosecond:
        n37 = t32.visitTimestampNanosecond || t32.visitTimestamp;
        break;
      case J3.Time:
        n37 = t32.visitTime;
        break;
      case J3.TimeSecond:
        n37 = t32.visitTimeSecond || t32.visitTime;
        break;
      case J3.TimeMillisecond:
        n37 = t32.visitTimeMillisecond || t32.visitTime;
        break;
      case J3.TimeMicrosecond:
        n37 = t32.visitTimeMicrosecond || t32.visitTime;
        break;
      case J3.TimeNanosecond:
        n37 = t32.visitTimeNanosecond || t32.visitTime;
        break;
      case J3.Decimal:
        n37 = t32.visitDecimal;
        break;
      case J3.List:
        n37 = t32.visitList;
        break;
      case J3.Struct:
        n37 = t32.visitStruct;
        break;
      case J3.Union:
        n37 = t32.visitUnion;
        break;
      case J3.DenseUnion:
        n37 = t32.visitDenseUnion || t32.visitUnion;
        break;
      case J3.SparseUnion:
        n37 = t32.visitSparseUnion || t32.visitUnion;
        break;
      case J3.Dictionary:
        n37 = t32.visitDictionary;
        break;
      case J3.Interval:
        n37 = t32.visitInterval;
        break;
      case J3.IntervalDayTime:
        n37 = t32.visitIntervalDayTime || t32.visitInterval;
        break;
      case J3.IntervalYearMonth:
        n37 = t32.visitIntervalYearMonth || t32.visitInterval;
        break;
      case J3.Duration:
        n37 = t32.visitDuration;
        break;
      case J3.DurationSecond:
        n37 = t32.visitDurationSecond || t32.visitDuration;
        break;
      case J3.DurationMillisecond:
        n37 = t32.visitDurationMillisecond || t32.visitDuration;
        break;
      case J3.DurationMicrosecond:
        n37 = t32.visitDurationMicrosecond || t32.visitDuration;
        break;
      case J3.DurationNanosecond:
        n37 = t32.visitDurationNanosecond || t32.visitDuration;
        break;
      case J3.FixedSizeList:
        n37 = t32.visitFixedSizeList;
        break;
      case J3.Map:
        n37 = t32.visitMap;
    }
    if ("function" == typeof n37)
      return n37;
    if (!i29)
      return () => null;
    throw new Error(`Unrecognized type '${J3[e26]}'`);
  }
  function Ee3(t32) {
    switch (t32.typeId) {
      case J3.Null:
        return J3.Null;
      case J3.Int: {
        const { bitWidth: e26, isSigned: i29 } = t32;
        switch (e26) {
          case 8:
            return i29 ? J3.Int8 : J3.Uint8;
          case 16:
            return i29 ? J3.Int16 : J3.Uint16;
          case 32:
            return i29 ? J3.Int32 : J3.Uint32;
          case 64:
            return i29 ? J3.Int64 : J3.Uint64;
        }
        return J3.Int;
      }
      case J3.Float:
        switch (t32.precision) {
          case H3.HALF:
            return J3.Float16;
          case H3.SINGLE:
            return J3.Float32;
          case H3.DOUBLE:
            return J3.Float64;
        }
        return J3.Float;
      case J3.Binary:
        return J3.Binary;
      case J3.Utf8:
        return J3.Utf8;
      case J3.Bool:
        return J3.Bool;
      case J3.Decimal:
        return J3.Decimal;
      case J3.Time:
        switch (t32.unit) {
          case Z3.SECOND:
            return J3.TimeSecond;
          case Z3.MILLISECOND:
            return J3.TimeMillisecond;
          case Z3.MICROSECOND:
            return J3.TimeMicrosecond;
          case Z3.NANOSECOND:
            return J3.TimeNanosecond;
        }
        return J3.Time;
      case J3.Timestamp:
        switch (t32.unit) {
          case Z3.SECOND:
            return J3.TimestampSecond;
          case Z3.MILLISECOND:
            return J3.TimestampMillisecond;
          case Z3.MICROSECOND:
            return J3.TimestampMicrosecond;
          case Z3.NANOSECOND:
            return J3.TimestampNanosecond;
        }
        return J3.Timestamp;
      case J3.Date:
        switch (t32.unit) {
          case G3.DAY:
            return J3.DateDay;
          case G3.MILLISECOND:
            return J3.DateMillisecond;
        }
        return J3.Date;
      case J3.Interval:
        switch (t32.unit) {
          case X3.DAY_TIME:
            return J3.IntervalDayTime;
          case X3.YEAR_MONTH:
            return J3.IntervalYearMonth;
        }
        return J3.Interval;
      case J3.Duration:
        switch (t32.unit) {
          case Z3.SECOND:
            return J3.DurationSecond;
          case Z3.MILLISECOND:
            return J3.DurationMillisecond;
          case Z3.MICROSECOND:
            return J3.DurationMicrosecond;
          case Z3.NANOSECOND:
            return J3.DurationNanosecond;
        }
        return J3.Duration;
      case J3.Map:
        return J3.Map;
      case J3.List:
        return J3.List;
      case J3.Struct:
        return J3.Struct;
      case J3.Union:
        switch (t32.mode) {
          case Y3.Dense:
            return J3.DenseUnion;
          case Y3.Sparse:
            return J3.SparseUnion;
        }
        return J3.Union;
      case J3.FixedSizeBinary:
        return J3.FixedSizeBinary;
      case J3.FixedSizeList:
        return J3.FixedSizeList;
      case J3.Dictionary:
        return J3.Dictionary;
    }
    throw new Error(`Unrecognized type '${J3[t32.typeId]}'`);
  }
  Fe2.prototype.visitInt8 = null, Fe2.prototype.visitInt16 = null, Fe2.prototype.visitInt32 = null, Fe2.prototype.visitInt64 = null, Fe2.prototype.visitUint8 = null, Fe2.prototype.visitUint16 = null, Fe2.prototype.visitUint32 = null, Fe2.prototype.visitUint64 = null, Fe2.prototype.visitFloat16 = null, Fe2.prototype.visitFloat32 = null, Fe2.prototype.visitFloat64 = null, Fe2.prototype.visitDateDay = null, Fe2.prototype.visitDateMillisecond = null, Fe2.prototype.visitTimestampSecond = null, Fe2.prototype.visitTimestampMillisecond = null, Fe2.prototype.visitTimestampMicrosecond = null, Fe2.prototype.visitTimestampNanosecond = null, Fe2.prototype.visitTimeSecond = null, Fe2.prototype.visitTimeMillisecond = null, Fe2.prototype.visitTimeMicrosecond = null, Fe2.prototype.visitTimeNanosecond = null, Fe2.prototype.visitDenseUnion = null, Fe2.prototype.visitSparseUnion = null, Fe2.prototype.visitIntervalDayTime = null, Fe2.prototype.visitIntervalYearMonth = null, Fe2.prototype.visitDuration = null, Fe2.prototype.visitDurationSecond = null, Fe2.prototype.visitDurationMillisecond = null, Fe2.prototype.visitDurationMicrosecond = null, Fe2.prototype.visitDurationNanosecond = null;
  var Ce2 = new Float64Array(1);
  var Ve2 = new Uint32Array(Ce2.buffer);
  function Re2(t32) {
    const e26 = (31744 & t32) >> 10, i29 = (1023 & t32) / 1024, n37 = Math.pow(-1, (32768 & t32) >> 15);
    switch (e26) {
      case 31:
        return n37 * (i29 ? Number.NaN : 1 / 0);
      case 0:
        return n37 * (i29 ? 6103515625e-14 * i29 : 0);
    }
    return n37 * Math.pow(2, e26 - 15) * (1 + i29);
  }
  function ze2(t32) {
    if (t32 != t32)
      return 32256;
    Ce2[0] = t32;
    const e26 = (2147483648 & Ve2[1]) >> 16 & 65535;
    let i29 = 2146435072 & Ve2[1], n37 = 0;
    return i29 >= 1089470464 ? Ve2[0] > 0 ? i29 = 31744 : (i29 = (2080374784 & i29) >> 16, n37 = (1048575 & Ve2[1]) >> 10) : i29 <= 1056964608 ? (n37 = 1048576 + (1048575 & Ve2[1]), n37 = 1048576 + (n37 << (i29 >> 20) - 998) >> 21, i29 = 0) : (i29 = i29 - 1056964608 >> 10, n37 = 512 + (1048575 & Ve2[1]) >> 10), e26 | i29 | 65535 & n37;
  }
  var Pe2 = Object.freeze({ __proto__: null, uint16ToFloat64: Re2, float64ToUint16: ze2 });
  var je2 = class extends Fe2 {
  };
  function ke2(t32) {
    return (e26, i29, n37) => {
      if (e26.setValid(i29, null != n37))
        return t32(e26, i29, n37);
    };
  }
  var $e3 = (t32, e26, i29) => {
    t32[e26] = Math.trunc(i29 % 4294967296), t32[e26 + 1] = Math.trunc(i29 / 4294967296);
  };
  var We = (t32, e26, i29, n37) => {
    if (i29 + 1 < e26.length) {
      const { [i29]: r91, [i29 + 1]: s29 } = e26;
      t32.set(n37.subarray(0, s29 - r91), r91);
    }
  };
  var Ye = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var He2 = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var Ge = ({ values: t32 }, e26, i29) => {
    t32[e26] = ze2(i29);
  };
  var Ze = ({ values: t32 }, e26, i29) => {
    ((t33, e27, i30) => {
      t33[e27] = Math.trunc(i30 / 864e5);
    })(t32, e26, i29.valueOf());
  };
  var Xe = ({ values: t32 }, e26, i29) => {
    $e3(t32, 2 * e26, i29.valueOf());
  };
  var Ke = ({ stride: t32, values: e26 }, i29, n37) => {
    e26.set(n37.subarray(0, t32), t32 * i29);
  };
  var Je2 = (t32, e26, i29) => {
    t32.type.unit === G3.DAY ? Ze(t32, e26, i29) : Xe(t32, e26, i29);
  };
  var qe = ({ values: t32 }, e26, i29) => $e3(t32, 2 * e26, i29 / 1e3);
  var Qe = ({ values: t32 }, e26, i29) => $e3(t32, 2 * e26, i29);
  var ti = ({ values: t32 }, e26, i29) => ((t33, e27, i30) => {
    t33[e27] = Math.trunc(1e3 * i30 % 4294967296), t33[e27 + 1] = Math.trunc(1e3 * i30 / 4294967296);
  })(t32, 2 * e26, i29);
  var ei = ({ values: t32 }, e26, i29) => ((t33, e27, i30) => {
    t33[e27] = Math.trunc(1e6 * i30 % 4294967296), t33[e27 + 1] = Math.trunc(1e6 * i30 / 4294967296);
  })(t32, 2 * e26, i29);
  var ii2 = (t32, e26, i29) => {
    switch (t32.type.unit) {
      case Z3.SECOND:
        return qe(t32, e26, i29);
      case Z3.MILLISECOND:
        return Qe(t32, e26, i29);
      case Z3.MICROSECOND:
        return ti(t32, e26, i29);
      case Z3.NANOSECOND:
        return ei(t32, e26, i29);
    }
  };
  var ni = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var ri = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var si2 = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var oi = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var ai = (t32, e26, i29) => {
    switch (t32.type.unit) {
      case Z3.SECOND:
        return ni(t32, e26, i29);
      case Z3.MILLISECOND:
        return ri(t32, e26, i29);
      case Z3.MICROSECOND:
        return si2(t32, e26, i29);
      case Z3.NANOSECOND:
        return oi(t32, e26, i29);
    }
  };
  var li = ({ values: t32, stride: e26 }, i29, n37) => {
    t32.set(n37.subarray(0, e26), e26 * i29);
  };
  var ui = (t32, e26, i29) => {
    const n37 = t32.type.typeIdToChildIndex[t32.typeIds[e26]], r91 = t32.children[n37];
    mi2.visit(r91, t32.valueOffsets[e26], i29);
  };
  var ci2 = (t32, e26, i29) => {
    const n37 = t32.type.typeIdToChildIndex[t32.typeIds[e26]], r91 = t32.children[n37];
    mi2.visit(r91, e26, i29);
  };
  var hi2 = (t32, e26, i29) => {
    t32.type.unit === X3.DAY_TIME ? di2(t32, e26, i29) : pi(t32, e26, i29);
  };
  var di2 = ({ values: t32 }, e26, i29) => {
    t32.set(i29.subarray(0, 2), 2 * e26);
  };
  var pi = ({ values: t32 }, e26, i29) => {
    t32[e26] = 12 * i29[0] + i29[1] % 12;
  };
  var yi = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var fi2 = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var bi2 = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var vi2 = ({ values: t32 }, e26, i29) => {
    t32[e26] = i29;
  };
  var gi2 = (t32, e26, i29) => {
    switch (t32.type.unit) {
      case Z3.SECOND:
        return yi(t32, e26, i29);
      case Z3.MILLISECOND:
        return fi2(t32, e26, i29);
      case Z3.MICROSECOND:
        return bi2(t32, e26, i29);
      case Z3.NANOSECOND:
        return vi2(t32, e26, i29);
    }
  };
  je2.prototype.visitBool = ke2(({ offset: t32, values: e26 }, i29, n37) => {
    const r91 = t32 + i29;
    n37 ? e26[r91 >> 3] |= 1 << r91 % 8 : e26[r91 >> 3] &= ~(1 << r91 % 8);
  }), je2.prototype.visitInt = ke2(Ye), je2.prototype.visitInt8 = ke2(Ye), je2.prototype.visitInt16 = ke2(Ye), je2.prototype.visitInt32 = ke2(Ye), je2.prototype.visitInt64 = ke2(Ye), je2.prototype.visitUint8 = ke2(Ye), je2.prototype.visitUint16 = ke2(Ye), je2.prototype.visitUint32 = ke2(Ye), je2.prototype.visitUint64 = ke2(Ye), je2.prototype.visitFloat = ke2((t32, e26, i29) => {
    switch (t32.type.precision) {
      case H3.HALF:
        return Ge(t32, e26, i29);
      case H3.SINGLE:
      case H3.DOUBLE:
        return He2(t32, e26, i29);
    }
  }), je2.prototype.visitFloat16 = ke2(Ge), je2.prototype.visitFloat32 = ke2(He2), je2.prototype.visitFloat64 = ke2(He2), je2.prototype.visitUtf8 = ke2(({ values: t32, valueOffsets: e26 }, i29, n37) => {
    We(t32, e26, i29, h6(n37));
  }), je2.prototype.visitBinary = ke2(({ values: t32, valueOffsets: e26 }, i29, n37) => We(t32, e26, i29, n37)), je2.prototype.visitFixedSizeBinary = ke2(Ke), je2.prototype.visitDate = ke2(Je2), je2.prototype.visitDateDay = ke2(Ze), je2.prototype.visitDateMillisecond = ke2(Xe), je2.prototype.visitTimestamp = ke2(ii2), je2.prototype.visitTimestampSecond = ke2(qe), je2.prototype.visitTimestampMillisecond = ke2(Qe), je2.prototype.visitTimestampMicrosecond = ke2(ti), je2.prototype.visitTimestampNanosecond = ke2(ei), je2.prototype.visitTime = ke2(ai), je2.prototype.visitTimeSecond = ke2(ni), je2.prototype.visitTimeMillisecond = ke2(ri), je2.prototype.visitTimeMicrosecond = ke2(si2), je2.prototype.visitTimeNanosecond = ke2(oi), je2.prototype.visitDecimal = ke2(li), je2.prototype.visitList = ke2((t32, e26, i29) => {
    const n37 = t32.children[0], r91 = t32.valueOffsets, s29 = mi2.getVisitFn(n37);
    if (Array.isArray(i29))
      for (let t33 = -1, o35 = r91[e26], a27 = r91[e26 + 1]; o35 < a27; )
        s29(n37, o35++, i29[++t33]);
    else
      for (let t33 = -1, o35 = r91[e26], a27 = r91[e26 + 1]; o35 < a27; )
        s29(n37, o35++, i29.get(++t33));
  }), je2.prototype.visitStruct = ke2((t32, e26, i29) => {
    const n37 = t32.type.children.map((t33) => mi2.getVisitFn(t33.type)), r91 = i29 instanceof Map ? (s29 = e26, o35 = i29, (t33, e27, i30, n38) => e27 && t33(e27, s29, o35.get(i30.name))) : i29 instanceof Zn2 ? /* @__PURE__ */ ((t33, e27) => (i30, n38, r92, s30) => n38 && i30(n38, t33, e27.get(s30)))(e26, i29) : Array.isArray(i29) ? /* @__PURE__ */ ((t33, e27) => (i30, n38, r92, s30) => n38 && i30(n38, t33, e27[s30]))(e26, i29) : /* @__PURE__ */ ((t33, e27) => (i30, n38, r92, s30) => n38 && i30(n38, t33, e27[r92.name]))(e26, i29);
    var s29, o35;
    t32.type.children.forEach((e27, i30) => r91(n37[i30], t32.children[i30], e27, i30));
  }), je2.prototype.visitUnion = ke2((t32, e26, i29) => {
    t32.type.mode === Y3.Dense ? ui(t32, e26, i29) : ci2(t32, e26, i29);
  }), je2.prototype.visitDenseUnion = ke2(ui), je2.prototype.visitSparseUnion = ke2(ci2), je2.prototype.visitDictionary = ke2((t32, e26, i29) => {
    var n37;
    null === (n37 = t32.dictionary) || void 0 === n37 || n37.set(t32.values[e26], i29);
  }), je2.prototype.visitInterval = ke2(hi2), je2.prototype.visitIntervalDayTime = ke2(di2), je2.prototype.visitIntervalYearMonth = ke2(pi), je2.prototype.visitDuration = ke2(gi2), je2.prototype.visitDurationSecond = ke2(yi), je2.prototype.visitDurationMillisecond = ke2(fi2), je2.prototype.visitDurationMicrosecond = ke2(bi2), je2.prototype.visitDurationNanosecond = ke2(vi2), je2.prototype.visitFixedSizeList = ke2((t32, e26, i29) => {
    const { stride: n37 } = t32, r91 = t32.children[0], s29 = mi2.getVisitFn(r91);
    if (Array.isArray(i29))
      for (let t33 = -1, o35 = e26 * n37; ++t33 < n37; )
        s29(r91, o35 + t33, i29[t33]);
    else
      for (let t33 = -1, o35 = e26 * n37; ++t33 < n37; )
        s29(r91, o35 + t33, i29.get(t33));
  }), je2.prototype.visitMap = ke2((t32, e26, i29) => {
    const n37 = t32.children[0], { valueOffsets: r91 } = t32, s29 = mi2.getVisitFn(n37);
    let { [e26]: o35, [e26 + 1]: a27 } = r91;
    const l35 = i29 instanceof Map ? i29.entries() : Object.entries(i29);
    for (const t33 of l35)
      if (s29(n37, o35, t33), ++o35 >= a27)
        break;
  });
  var mi2 = new je2();
  var _i2 = Symbol.for("parent");
  var wi2 = Symbol.for("rowIndex");
  var Ii2 = class {
    constructor(t32, e26) {
      return this[_i2] = t32, this[wi2] = e26, new Proxy(this, new Ai2());
    }
    toArray() {
      return Object.values(this.toJSON());
    }
    toJSON() {
      const t32 = this[wi2], e26 = this[_i2], i29 = e26.type.children, n37 = {};
      for (let r91 = -1, s29 = i29.length; ++r91 < s29; )
        n37[i29[r91].name] = Ki2.visit(e26.children[r91], t32);
      return n37;
    }
    toString() {
      return `{${[...this].map(([t32, e26]) => `${tt3(t32)}: ${tt3(e26)}`).join(", ")}}`;
    }
    [Symbol.for("nodejs.util.inspect.custom")]() {
      return this.toString();
    }
    [Symbol.iterator]() {
      return new Si2(this[_i2], this[wi2]);
    }
  };
  var Si2 = class {
    constructor(t32, e26) {
      this.childIndex = 0, this.children = t32.children, this.rowIndex = e26, this.childFields = t32.type.children, this.numChildren = this.childFields.length;
    }
    [Symbol.iterator]() {
      return this;
    }
    next() {
      const t32 = this.childIndex;
      return t32 < this.numChildren ? (this.childIndex = t32 + 1, { done: false, value: [this.childFields[t32].name, Ki2.visit(this.children[t32], this.rowIndex)] }) : { done: true, value: null };
    }
  };
  Object.defineProperties(Ii2.prototype, { [Symbol.toStringTag]: { enumerable: false, configurable: false, value: "Row" }, [_i2]: { writable: true, enumerable: false, configurable: false, value: null }, [wi2]: { writable: true, enumerable: false, configurable: false, value: -1 } });
  var Ai2 = class {
    isExtensible() {
      return false;
    }
    deleteProperty() {
      return false;
    }
    preventExtensions() {
      return true;
    }
    ownKeys(t32) {
      return t32[_i2].type.children.map((t33) => t33.name);
    }
    has(t32, e26) {
      return -1 !== t32[_i2].type.children.findIndex((t33) => t33.name === e26);
    }
    getOwnPropertyDescriptor(t32, e26) {
      if (-1 !== t32[_i2].type.children.findIndex((t33) => t33.name === e26))
        return { writable: true, enumerable: true, configurable: true };
    }
    get(t32, e26) {
      if (Reflect.has(t32, e26))
        return t32[e26];
      const i29 = t32[_i2].type.children.findIndex((t33) => t33.name === e26);
      if (-1 !== i29) {
        const n37 = Ki2.visit(t32[_i2].children[i29], t32[wi2]);
        return Reflect.set(t32, e26, n37), n37;
      }
    }
    set(t32, e26, i29) {
      const n37 = t32[_i2].type.children.findIndex((t33) => t33.name === e26);
      return -1 !== n37 ? (mi2.visit(t32[_i2].children[n37], t32[wi2], i29), Reflect.set(t32, e26, i29)) : !(!Reflect.has(t32, e26) && "symbol" != typeof e26) && Reflect.set(t32, e26, i29);
    }
  };
  var Di2 = class extends Fe2 {
  };
  function Bi2(t32) {
    return (e26, i29) => e26.getValid(i29) ? t32(e26, i29) : null;
  }
  var Ti2 = (t32, e26) => 4294967296 * t32[e26 + 1] + (t32[e26] >>> 0);
  var Oi2 = (t32) => new Date(t32);
  var Mi2 = (t32, e26, i29) => {
    if (i29 + 1 >= e26.length)
      return null;
    const n37 = e26[i29], r91 = e26[i29 + 1];
    return t32.subarray(n37, r91);
  };
  var xi2 = ({ values: t32 }, e26) => ((t33, e27) => Oi2(((t34, e28) => 864e5 * t34[e28])(t33, e27)))(t32, e26);
  var Li2 = ({ values: t32 }, e26) => ((t33, e27) => Oi2(Ti2(t33, e27)))(t32, 2 * e26);
  var Ni2 = ({ stride: t32, values: e26 }, i29) => e26[t32 * i29];
  var Fi2 = ({ values: t32 }, e26) => t32[e26];
  var Ui2 = ({ values: t32 }, e26) => 1e3 * Ti2(t32, 2 * e26);
  var Ei2 = ({ values: t32 }, e26) => Ti2(t32, 2 * e26);
  var Ci2 = ({ values: t32 }, e26) => ((t33, e27) => t33[e27 + 1] / 1e3 * 4294967296 + (t33[e27] >>> 0) / 1e3)(t32, 2 * e26);
  var Vi2 = ({ values: t32 }, e26) => ((t33, e27) => t33[e27 + 1] / 1e6 * 4294967296 + (t33[e27] >>> 0) / 1e6)(t32, 2 * e26);
  var Ri2 = ({ values: t32 }, e26) => t32[e26];
  var zi2 = ({ values: t32 }, e26) => t32[e26];
  var Pi2 = ({ values: t32 }, e26) => t32[e26];
  var ji2 = ({ values: t32 }, e26) => t32[e26];
  var ki2 = (t32, e26) => {
    const i29 = t32.type.typeIdToChildIndex[t32.typeIds[e26]], n37 = t32.children[i29];
    return Ki2.visit(n37, t32.valueOffsets[e26]);
  };
  var $i2 = (t32, e26) => {
    const i29 = t32.type.typeIdToChildIndex[t32.typeIds[e26]], n37 = t32.children[i29];
    return Ki2.visit(n37, e26);
  };
  var Wi2 = ({ values: t32 }, e26) => t32.subarray(2 * e26, 2 * (e26 + 1));
  var Yi2 = ({ values: t32 }, e26) => {
    const i29 = t32[e26], n37 = new Int32Array(2);
    return n37[0] = Math.trunc(i29 / 12), n37[1] = Math.trunc(i29 % 12), n37;
  };
  var Hi2 = ({ values: t32 }, e26) => t32[e26];
  var Gi2 = ({ values: t32 }, e26) => t32[e26];
  var Zi2 = ({ values: t32 }, e26) => t32[e26];
  var Xi2 = ({ values: t32 }, e26) => t32[e26];
  Di2.prototype.visitNull = Bi2((t32, e26) => null), Di2.prototype.visitBool = Bi2(({ offset: t32, values: e26 }, i29) => {
    const n37 = t32 + i29;
    return 0 != (e26[n37 >> 3] & 1 << n37 % 8);
  }), Di2.prototype.visitInt = Bi2(({ values: t32 }, e26) => t32[e26]), Di2.prototype.visitInt8 = Bi2(Ni2), Di2.prototype.visitInt16 = Bi2(Ni2), Di2.prototype.visitInt32 = Bi2(Ni2), Di2.prototype.visitInt64 = Bi2(Fi2), Di2.prototype.visitUint8 = Bi2(Ni2), Di2.prototype.visitUint16 = Bi2(Ni2), Di2.prototype.visitUint32 = Bi2(Ni2), Di2.prototype.visitUint64 = Bi2(Fi2), Di2.prototype.visitFloat = Bi2(({ type: t32, values: e26 }, i29) => t32.precision !== H3.HALF ? e26[i29] : Re2(e26[i29])), Di2.prototype.visitFloat16 = Bi2(({ stride: t32, values: e26 }, i29) => Re2(e26[t32 * i29])), Di2.prototype.visitFloat32 = Bi2(Ni2), Di2.prototype.visitFloat64 = Bi2(Ni2), Di2.prototype.visitUtf8 = Bi2(({ values: t32, valueOffsets: e26 }, i29) => {
    const n37 = Mi2(t32, e26, i29);
    return null !== n37 ? u2(n37) : null;
  }), Di2.prototype.visitBinary = Bi2(({ values: t32, valueOffsets: e26 }, i29) => Mi2(t32, e26, i29)), Di2.prototype.visitFixedSizeBinary = Bi2(({ stride: t32, values: e26 }, i29) => e26.subarray(t32 * i29, t32 * (i29 + 1))), Di2.prototype.visitDate = Bi2((t32, e26) => t32.type.unit === G3.DAY ? xi2(t32, e26) : Li2(t32, e26)), Di2.prototype.visitDateDay = Bi2(xi2), Di2.prototype.visitDateMillisecond = Bi2(Li2), Di2.prototype.visitTimestamp = Bi2((t32, e26) => {
    switch (t32.type.unit) {
      case Z3.SECOND:
        return Ui2(t32, e26);
      case Z3.MILLISECOND:
        return Ei2(t32, e26);
      case Z3.MICROSECOND:
        return Ci2(t32, e26);
      case Z3.NANOSECOND:
        return Vi2(t32, e26);
    }
  }), Di2.prototype.visitTimestampSecond = Bi2(Ui2), Di2.prototype.visitTimestampMillisecond = Bi2(Ei2), Di2.prototype.visitTimestampMicrosecond = Bi2(Ci2), Di2.prototype.visitTimestampNanosecond = Bi2(Vi2), Di2.prototype.visitTime = Bi2((t32, e26) => {
    switch (t32.type.unit) {
      case Z3.SECOND:
        return Ri2(t32, e26);
      case Z3.MILLISECOND:
        return zi2(t32, e26);
      case Z3.MICROSECOND:
        return Pi2(t32, e26);
      case Z3.NANOSECOND:
        return ji2(t32, e26);
    }
  }), Di2.prototype.visitTimeSecond = Bi2(Ri2), Di2.prototype.visitTimeMillisecond = Bi2(zi2), Di2.prototype.visitTimeMicrosecond = Bi2(Pi2), Di2.prototype.visitTimeNanosecond = Bi2(ji2), Di2.prototype.visitDecimal = Bi2(({ values: t32, stride: e26 }, i29) => ht3.decimal(t32.subarray(e26 * i29, e26 * (i29 + 1)))), Di2.prototype.visitList = Bi2((t32, e26) => {
    const { valueOffsets: i29, stride: n37, children: r91 } = t32, { [e26 * n37]: s29, [e26 * n37 + 1]: o35 } = i29, a27 = r91[0].slice(s29, o35 - s29);
    return new Zn2([a27]);
  }), Di2.prototype.visitStruct = Bi2((t32, e26) => new Ii2(t32, e26)), Di2.prototype.visitUnion = Bi2((t32, e26) => t32.type.mode === Y3.Dense ? ki2(t32, e26) : $i2(t32, e26)), Di2.prototype.visitDenseUnion = Bi2(ki2), Di2.prototype.visitSparseUnion = Bi2($i2), Di2.prototype.visitDictionary = Bi2((t32, e26) => {
    var i29;
    return null === (i29 = t32.dictionary) || void 0 === i29 ? void 0 : i29.get(t32.values[e26]);
  }), Di2.prototype.visitInterval = Bi2((t32, e26) => t32.type.unit === X3.DAY_TIME ? Wi2(t32, e26) : Yi2(t32, e26)), Di2.prototype.visitIntervalDayTime = Bi2(Wi2), Di2.prototype.visitIntervalYearMonth = Bi2(Yi2), Di2.prototype.visitDuration = Bi2((t32, e26) => {
    switch (t32.type.unit) {
      case Z3.SECOND:
        return Hi2(t32, e26);
      case Z3.MILLISECOND:
        return Gi2(t32, e26);
      case Z3.MICROSECOND:
        return Zi2(t32, e26);
      case Z3.NANOSECOND:
        return Xi2(t32, e26);
    }
  }), Di2.prototype.visitDurationSecond = Bi2(Hi2), Di2.prototype.visitDurationMillisecond = Bi2(Gi2), Di2.prototype.visitDurationMicrosecond = Bi2(Zi2), Di2.prototype.visitDurationNanosecond = Bi2(Xi2), Di2.prototype.visitFixedSizeList = Bi2((t32, e26) => {
    const { stride: i29, children: n37 } = t32, r91 = n37[0].slice(e26 * i29, i29);
    return new Zn2([r91]);
  }), Di2.prototype.visitMap = Bi2((t32, e26) => {
    const { valueOffsets: i29, children: n37 } = t32, { [e26]: r91, [e26 + 1]: s29 } = i29, o35 = n37[0];
    return new Qi2(o35.slice(r91, s29 - r91));
  });
  var Ki2 = new Di2();
  var Ji2 = Symbol.for("keys");
  var qi2 = Symbol.for("vals");
  var Qi2 = class {
    constructor(t32) {
      return this[Ji2] = new Zn2([t32.children[0]]).memoize(), this[qi2] = t32.children[1], new Proxy(this, new en2());
    }
    [Symbol.iterator]() {
      return new tn2(this[Ji2], this[qi2]);
    }
    get size() {
      return this[Ji2].length;
    }
    toArray() {
      return Object.values(this.toJSON());
    }
    toJSON() {
      const t32 = this[Ji2], e26 = this[qi2], i29 = {};
      for (let n37 = -1, r91 = t32.length; ++n37 < r91; )
        i29[t32.get(n37)] = Ki2.visit(e26, n37);
      return i29;
    }
    toString() {
      return `{${[...this].map(([t32, e26]) => `${tt3(t32)}: ${tt3(e26)}`).join(", ")}}`;
    }
    [Symbol.for("nodejs.util.inspect.custom")]() {
      return this.toString();
    }
  };
  var tn2 = class {
    constructor(t32, e26) {
      this.keys = t32, this.vals = e26, this.keyIndex = 0, this.numKeys = t32.length;
    }
    [Symbol.iterator]() {
      return this;
    }
    next() {
      const t32 = this.keyIndex;
      return t32 === this.numKeys ? { done: true, value: null } : (this.keyIndex++, { done: false, value: [this.keys.get(t32), Ki2.visit(this.vals, t32)] });
    }
  };
  var en2 = class {
    isExtensible() {
      return false;
    }
    deleteProperty() {
      return false;
    }
    preventExtensions() {
      return true;
    }
    ownKeys(t32) {
      return t32[Ji2].toArray().map(String);
    }
    has(t32, e26) {
      return t32[Ji2].includes(e26);
    }
    getOwnPropertyDescriptor(t32, e26) {
      if (-1 !== t32[Ji2].indexOf(e26))
        return { writable: true, enumerable: true, configurable: true };
    }
    get(t32, e26) {
      if (Reflect.has(t32, e26))
        return t32[e26];
      const i29 = t32[Ji2].indexOf(e26);
      if (-1 !== i29) {
        const n37 = Ki2.visit(Reflect.get(t32, qi2), i29);
        return Reflect.set(t32, e26, n37), n37;
      }
    }
    set(t32, e26, i29) {
      const n37 = t32[Ji2].indexOf(e26);
      return -1 !== n37 ? (mi2.visit(Reflect.get(t32, qi2), n37, i29), Reflect.set(t32, e26, i29)) : !!Reflect.has(t32, e26) && Reflect.set(t32, e26, i29);
    }
  };
  var nn2;
  function rn2(t32, e26, i29, n37) {
    const { length: r91 = 0 } = t32;
    let s29 = "number" != typeof e26 ? 0 : e26, o35 = "number" != typeof i29 ? r91 : i29;
    return s29 < 0 && (s29 = (s29 % r91 + r91) % r91), o35 < 0 && (o35 = (o35 % r91 + r91) % r91), o35 < s29 && (nn2 = s29, s29 = o35, o35 = nn2), o35 > r91 && (o35 = r91), n37 ? n37(t32, s29, o35) : [s29, o35];
  }
  Object.defineProperties(Qi2.prototype, { [Symbol.toStringTag]: { enumerable: false, configurable: false, value: "Row" }, [Ji2]: { writable: true, enumerable: false, configurable: false, value: null }, [qi2]: { writable: true, enumerable: false, configurable: false, value: null } });
  var sn2 = (t32) => t32 != t32;
  function on2(t32) {
    if ("object" !== typeof t32 || null === t32)
      return sn2(t32) ? sn2 : (e26) => e26 === t32;
    if (t32 instanceof Date) {
      const e26 = t32.valueOf();
      return (t33) => t33 instanceof Date && t33.valueOf() === e26;
    }
    return ArrayBuffer.isView(t32) ? (e26) => !!e26 && R3(t32, e26) : t32 instanceof Map ? function(t33) {
      let e26 = -1;
      const i29 = [];
      for (const n37 of t33.values())
        i29[++e26] = on2(n37);
      return an2(i29);
    }(t32) : Array.isArray(t32) ? function(t33) {
      const e26 = [];
      for (let i29 = -1, n37 = t33.length; ++i29 < n37; )
        e26[i29] = on2(t33[i29]);
      return an2(e26);
    }(t32) : t32 instanceof Zn2 ? function(t33) {
      const e26 = [];
      for (let i29 = -1, n37 = t33.length; ++i29 < n37; )
        e26[i29] = on2(t33.get(i29));
      return an2(e26);
    }(t32) : function(t33, e26 = false) {
      const i29 = Object.keys(t33);
      if (!e26 && 0 === i29.length)
        return () => false;
      const n37 = [];
      for (let e27 = -1, r91 = i29.length; ++e27 < r91; )
        n37[e27] = on2(t33[i29[e27]]);
      return an2(n37, i29);
    }(t32, true);
  }
  function an2(t32, e26) {
    return (i29) => {
      if (!i29 || "object" != typeof i29)
        return false;
      switch (i29.constructor) {
        case Array:
          return function(t33, e27) {
            const i30 = t33.length;
            if (e27.length !== i30)
              return false;
            for (let n37 = -1; ++n37 < i30; )
              if (!t33[n37](e27[n37]))
                return false;
            return true;
          }(t32, i29);
        case Map:
          return ln2(t32, i29, i29.keys());
        case Qi2:
        case Ii2:
        case Object:
        case void 0:
          return ln2(t32, i29, e26 || Object.keys(i29));
      }
      return i29 instanceof Zn2 && function(t33, e27) {
        const i30 = t33.length;
        if (e27.length !== i30)
          return false;
        for (let n37 = -1; ++n37 < i30; )
          if (!t33[n37](e27.get(n37)))
            return false;
        return true;
      }(t32, i29);
    };
  }
  function ln2(t32, e26, i29) {
    const n37 = i29[Symbol.iterator](), r91 = e26 instanceof Map ? e26.keys() : Object.keys(e26)[Symbol.iterator](), s29 = e26 instanceof Map ? e26.values() : Object.values(e26)[Symbol.iterator]();
    let o35 = 0;
    const a27 = t32.length;
    let l35 = s29.next(), u30 = n37.next(), c30 = r91.next();
    for (; o35 < a27 && !u30.done && !c30.done && !l35.done && (u30.value === c30.value && t32[o35](l35.value)); ++o35, u30 = n37.next(), c30 = r91.next(), l35 = s29.next())
      ;
    return !!(o35 === a27 && u30.done && c30.done && l35.done) || (n37.return && n37.return(), r91.return && r91.return(), s29.return && s29.return(), false);
  }
  var un2 = Object.freeze({ __proto__: null, clampIndex: function(t32, e26, i29) {
    const n37 = t32.length, r91 = e26 > -1 ? e26 : n37 + e26 % n37;
    return i29 ? i29(t32, r91) : r91;
  }, clampRange: rn2, createElementComparator: on2 });
  function cn2(t32, e26, i29, n37) {
    return 0 != (i29 & 1 << n37);
  }
  function hn2(t32, e26, i29, n37) {
    return (i29 & 1 << n37) >> n37;
  }
  function dn2(t32, e26, i29) {
    const n37 = i29.byteLength + 7 & -8;
    if (t32 > 0 || i29.byteLength < n37) {
      const r91 = new Uint8Array(n37);
      return r91.set(t32 % 8 == 0 ? i29.subarray(t32 >> 3) : pn2(new yn2(i29, t32, e26, null, cn2)).subarray(0, n37)), r91;
    }
    return i29;
  }
  function pn2(t32) {
    const e26 = [];
    let i29 = 0, n37 = 0, r91 = 0;
    for (const s30 of t32)
      s30 && (r91 |= 1 << n37), 8 == ++n37 && (e26[i29++] = r91, r91 = n37 = 0);
    (0 === i29 || n37 > 0) && (e26[i29++] = r91);
    const s29 = new Uint8Array(e26.length + 7 & -8);
    return s29.set(e26), s29;
  }
  var yn2 = class {
    constructor(t32, e26, i29, n37, r91) {
      this.bytes = t32, this.length = i29, this.context = n37, this.get = r91, this.bit = e26 % 8, this.byteIndex = e26 >> 3, this.byte = t32[this.byteIndex++], this.index = 0;
    }
    next() {
      return this.index < this.length ? (8 === this.bit && (this.bit = 0, this.byte = this.bytes[this.byteIndex++]), { value: this.get(this.context, this.index++, this.byte, this.bit++) }) : { done: true, value: null };
    }
    [Symbol.iterator]() {
      return this;
    }
  };
  function fn2(t32, e26, i29) {
    if (i29 - e26 <= 0)
      return 0;
    if (i29 - e26 < 8) {
      let n38 = 0;
      for (const r92 of new yn2(t32, e26, i29 - e26, t32, hn2))
        n38 += r92;
      return n38;
    }
    const n37 = i29 >> 3 << 3, r91 = e26 + (e26 % 8 == 0 ? 0 : 8 - e26 % 8);
    return fn2(t32, e26, r91) + fn2(t32, n37, i29) + bn2(t32, r91 >> 3, n37 - r91 >> 3);
  }
  function bn2(t32, e26, i29) {
    let n37 = 0, r91 = Math.trunc(e26);
    const s29 = new DataView(t32.buffer, t32.byteOffset, t32.byteLength), o35 = void 0 === i29 ? t32.byteLength : r91 + i29;
    for (; o35 - r91 >= 4; )
      n37 += vn2(s29.getUint32(r91)), r91 += 4;
    for (; o35 - r91 >= 2; )
      n37 += vn2(s29.getUint16(r91)), r91 += 2;
    for (; o35 - r91 >= 1; )
      n37 += vn2(s29.getUint8(r91)), r91 += 1;
    return n37;
  }
  function vn2(t32) {
    let e26 = Math.trunc(t32);
    return e26 -= e26 >>> 1 & 1431655765, e26 = (858993459 & e26) + (e26 >>> 2 & 858993459), 16843009 * (e26 + (e26 >>> 4) & 252645135) >>> 24;
  }
  var gn2 = Object.freeze({ __proto__: null, getBool: cn2, getBit: hn2, setBool: function(t32, e26, i29) {
    return i29 ? !!(t32[e26 >> 3] |= 1 << e26 % 8) || true : !(t32[e26 >> 3] &= ~(1 << e26 % 8)) && false;
  }, truncateBitmap: dn2, packBools: pn2, BitIterator: yn2, popcnt_bit_range: fn2, popcnt_array: bn2, popcnt_uint32: vn2 });
  var mn2 = class _mn {
    get typeId() {
      return this.type.typeId;
    }
    get ArrayType() {
      return this.type.ArrayType;
    }
    get buffers() {
      return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds];
    }
    get nullable() {
      if (0 !== this._nullCount) {
        const { type: t32 } = this;
        return Et3.isSparseUnion(t32) || Et3.isDenseUnion(t32) ? this.children.some((t33) => t33.nullable) : this.nullBitmap && this.nullBitmap.byteLength > 0;
      }
      return true;
    }
    get byteLength() {
      let t32 = 0;
      const { valueOffsets: e26, values: i29, nullBitmap: n37, typeIds: r91 } = this;
      return e26 && (t32 += e26.byteLength), i29 && (t32 += i29.byteLength), n37 && (t32 += n37.byteLength), r91 && (t32 += r91.byteLength), this.children.reduce((t33, e27) => t33 + e27.byteLength, t32);
    }
    get nullCount() {
      if (Et3.isUnion(this.type))
        return this.children.reduce((t33, e27) => t33 + e27.nullCount, 0);
      let t32, e26 = this._nullCount;
      return e26 <= -1 && (t32 = this.nullBitmap) && (this._nullCount = e26 = this.length - fn2(t32, this.offset, this.offset + this.length)), e26;
    }
    constructor(t32, e26, i29, n37, r91, s29 = [], o35) {
      let a27;
      this.type = t32, this.children = s29, this.dictionary = o35, this.offset = Math.floor(Math.max(e26 || 0, 0)), this.length = Math.floor(Math.max(i29 || 0, 0)), this._nullCount = Math.floor(Math.max(n37 || 0, -1)), r91 instanceof _mn ? (this.stride = r91.stride, this.values = r91.values, this.typeIds = r91.typeIds, this.nullBitmap = r91.nullBitmap, this.valueOffsets = r91.valueOffsets) : (this.stride = Ne3(t32), r91 && ((a27 = r91[0]) && (this.valueOffsets = a27), (a27 = r91[1]) && (this.values = a27), (a27 = r91[2]) && (this.nullBitmap = a27), (a27 = r91[3]) && (this.typeIds = a27)));
    }
    getValid(t32) {
      const { type: e26 } = this;
      if (Et3.isUnion(e26)) {
        const i29 = e26, n37 = this.children[i29.typeIdToChildIndex[this.typeIds[t32]]], r91 = i29.mode === Y3.Dense ? this.valueOffsets[t32] : t32;
        return n37.getValid(r91);
      }
      if (this.nullable && this.nullCount > 0) {
        const e27 = this.offset + t32;
        return 0 != (this.nullBitmap[e27 >> 3] & 1 << e27 % 8);
      }
      return true;
    }
    setValid(t32, e26) {
      let i29;
      const { type: n37 } = this;
      if (Et3.isUnion(n37)) {
        const r91 = n37, s29 = this.children[r91.typeIdToChildIndex[this.typeIds[t32]]], o35 = r91.mode === Y3.Dense ? this.valueOffsets[t32] : t32;
        i29 = s29.getValid(o35), s29.setValid(o35, e26);
      } else {
        let { nullBitmap: n38 } = this;
        const { offset: r91, length: s29 } = this, o35 = r91 + t32, a27 = 1 << o35 % 8, l35 = o35 >> 3;
        (!n38 || n38.byteLength <= l35) && (n38 = new Uint8Array((r91 + s29 + 63 & -64) >> 3).fill(255), this.nullCount > 0 && n38.set(dn2(r91, s29, this.nullBitmap), 0), Object.assign(this, { nullBitmap: n38, _nullCount: -1 }));
        const u30 = n38[l35];
        i29 = 0 != (u30 & a27), n38[l35] = e26 ? u30 | a27 : u30 & ~a27;
      }
      return i29 !== !!e26 && (this._nullCount = this.nullCount + (e26 ? -1 : 1)), e26;
    }
    clone(t32 = this.type, e26 = this.offset, i29 = this.length, n37 = this._nullCount, r91 = this, s29 = this.children) {
      return new _mn(t32, e26, i29, n37, r91, s29, this.dictionary);
    }
    slice(t32, e26) {
      const { stride: i29, typeId: n37, children: r91 } = this, s29 = +(0 === this._nullCount) - 1, o35 = 16 === n37 ? i29 : 1, a27 = this._sliceBuffers(t32, e26, i29, n37);
      return this.clone(this.type, this.offset + t32, e26, s29, a27, 0 === r91.length || this.valueOffsets ? r91 : this._sliceChildren(r91, o35 * t32, o35 * e26));
    }
    _changeLengthAndBackfillNullBitmap(t32) {
      if (this.typeId === J3.Null)
        return this.clone(this.type, 0, t32, 0);
      const { length: e26, nullCount: i29 } = this, n37 = new Uint8Array((t32 + 63 & -64) >> 3).fill(255, 0, e26 >> 3);
      n37[e26 >> 3] = (1 << e26 - (-8 & e26)) - 1, i29 > 0 && n37.set(dn2(this.offset, e26, this.nullBitmap), 0);
      const r91 = this.buffers;
      return r91[q3.VALIDITY] = n37, this.clone(this.type, 0, t32, i29 + (t32 - e26), r91);
    }
    _sliceBuffers(t32, e26, i29, n37) {
      let r91;
      const { buffers: s29 } = this;
      return (r91 = s29[q3.TYPE]) && (s29[q3.TYPE] = r91.subarray(t32, t32 + e26)), (r91 = s29[q3.OFFSET]) && (s29[q3.OFFSET] = r91.subarray(t32, t32 + e26 + 1)) || (r91 = s29[q3.DATA]) && (s29[q3.DATA] = 6 === n37 ? r91 : r91.subarray(i29 * t32, i29 * (t32 + e26))), s29;
    }
    _sliceChildren(t32, e26, i29) {
      return t32.map((t33) => t33.slice(e26, i29));
    }
  };
  mn2.prototype.children = Object.freeze([]);
  var _n2 = class __n extends Fe2 {
    visit(t32) {
      return this.getVisitFn(t32.type).call(this, t32);
    }
    visitNull(t32) {
      const { type: e26, offset: i29 = 0, length: n37 = 0 } = t32;
      return new mn2(e26, i29, n37, n37);
    }
    visitBool(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = L3(t32.nullBitmap), r91 = M3(e26.ArrayType, t32.data), { length: s29 = r91.length >> 3, nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new mn2(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitInt(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = L3(t32.nullBitmap), r91 = M3(e26.ArrayType, t32.data), { length: s29 = r91.length, nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new mn2(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitFloat(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = L3(t32.nullBitmap), r91 = M3(e26.ArrayType, t32.data), { length: s29 = r91.length, nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new mn2(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitUtf8(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = L3(t32.data), r91 = L3(t32.nullBitmap), s29 = x3(t32.valueOffsets), { length: o35 = s29.length - 1, nullCount: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new mn2(e26, i29, o35, a27, [s29, n37, r91]);
    }
    visitBinary(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = L3(t32.data), r91 = L3(t32.nullBitmap), s29 = x3(t32.valueOffsets), { length: o35 = s29.length - 1, nullCount: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new mn2(e26, i29, o35, a27, [s29, n37, r91]);
    }
    visitFixedSizeBinary(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = L3(t32.nullBitmap), r91 = M3(e26.ArrayType, t32.data), { length: s29 = r91.length / Ne3(e26), nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new mn2(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitDate(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = L3(t32.nullBitmap), r91 = M3(e26.ArrayType, t32.data), { length: s29 = r91.length / Ne3(e26), nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new mn2(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitTimestamp(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = L3(t32.nullBitmap), r91 = M3(e26.ArrayType, t32.data), { length: s29 = r91.length / Ne3(e26), nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new mn2(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitTime(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = L3(t32.nullBitmap), r91 = M3(e26.ArrayType, t32.data), { length: s29 = r91.length / Ne3(e26), nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new mn2(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitDecimal(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = L3(t32.nullBitmap), r91 = M3(e26.ArrayType, t32.data), { length: s29 = r91.length / Ne3(e26), nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new mn2(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitList(t32) {
      const { type: e26, offset: i29 = 0, child: n37 } = t32, r91 = L3(t32.nullBitmap), s29 = x3(t32.valueOffsets), { length: o35 = s29.length - 1, nullCount: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new mn2(e26, i29, o35, a27, [s29, void 0, r91], [n37]);
    }
    visitStruct(t32) {
      const { type: e26, offset: i29 = 0, children: n37 = [] } = t32, r91 = L3(t32.nullBitmap), { length: s29 = n37.reduce((t33, { length: e27 }) => Math.max(t33, e27), 0), nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new mn2(e26, i29, s29, o35, [void 0, void 0, r91], n37);
    }
    visitUnion(t32) {
      const { type: e26, offset: i29 = 0, children: n37 = [] } = t32, r91 = M3(e26.ArrayType, t32.typeIds), { length: s29 = r91.length, nullCount: o35 = -1 } = t32;
      if (Et3.isSparseUnion(e26))
        return new mn2(e26, i29, s29, o35, [void 0, void 0, void 0, r91], n37);
      const a27 = x3(t32.valueOffsets);
      return new mn2(e26, i29, s29, o35, [a27, void 0, void 0, r91], n37);
    }
    visitDictionary(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = L3(t32.nullBitmap), r91 = M3(e26.indices.ArrayType, t32.data), { dictionary: s29 = new Zn2([new __n().visit({ type: e26.dictionary })]) } = t32, { length: o35 = r91.length, nullCount: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new mn2(e26, i29, o35, a27, [void 0, r91, n37], [], s29);
    }
    visitInterval(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = L3(t32.nullBitmap), r91 = M3(e26.ArrayType, t32.data), { length: s29 = r91.length / Ne3(e26), nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new mn2(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitDuration(t32) {
      const { type: e26, offset: i29 = 0 } = t32, n37 = L3(t32.nullBitmap), r91 = M3(e26.ArrayType, t32.data), { length: s29 = r91.length, nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new mn2(e26, i29, s29, o35, [void 0, r91, n37]);
    }
    visitFixedSizeList(t32) {
      const { type: e26, offset: i29 = 0, child: n37 = new __n().visit({ type: e26.valueType }) } = t32, r91 = L3(t32.nullBitmap), { length: s29 = n37.length / Ne3(e26), nullCount: o35 = t32.nullBitmap ? -1 : 0 } = t32;
      return new mn2(e26, i29, s29, o35, [void 0, void 0, r91], [n37]);
    }
    visitMap(t32) {
      const { type: e26, offset: i29 = 0, child: n37 = new __n().visit({ type: e26.childType }) } = t32, r91 = L3(t32.nullBitmap), s29 = x3(t32.valueOffsets), { length: o35 = s29.length - 1, nullCount: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new mn2(e26, i29, o35, a27, [s29, void 0, r91], [n37]);
    }
  };
  var wn2 = new _n2();
  function In2(t32) {
    return wn2.visit(t32);
  }
  var Sn2 = class {
    constructor(t32 = 0, e26) {
      this.numChunks = t32, this.getChunkIterator = e26, this.chunkIndex = 0, this.chunkIterator = this.getChunkIterator(0);
    }
    next() {
      for (; this.chunkIndex < this.numChunks; ) {
        const t32 = this.chunkIterator.next();
        if (!t32.done)
          return t32;
        ++this.chunkIndex < this.numChunks && (this.chunkIterator = this.getChunkIterator(this.chunkIndex));
      }
      return { done: true, value: null };
    }
    [Symbol.iterator]() {
      return this;
    }
  };
  function An2(t32) {
    return t32.reduce((t33, e26) => t33 + e26.nullCount, 0);
  }
  function Dn2(t32) {
    return t32.reduce((t33, e26, i29) => (t33[i29 + 1] = t33[i29] + e26.length, t33), new Uint32Array(t32.length + 1));
  }
  function Bn2(t32, e26, i29, n37) {
    const r91 = [];
    for (let s29 = -1, o35 = t32.length; ++s29 < o35; ) {
      const o36 = t32[s29], a27 = e26[s29], { length: l35 } = o36;
      if (a27 >= n37)
        break;
      if (i29 >= a27 + l35)
        continue;
      if (a27 >= i29 && a27 + l35 <= n37) {
        r91.push(o36);
        continue;
      }
      const u30 = Math.max(0, i29 - a27), c30 = Math.min(n37 - a27, l35);
      r91.push(o36.slice(u30, c30 - u30));
    }
    return 0 === r91.length && r91.push(t32[0].slice(0, 0)), r91;
  }
  function Tn2(t32, e26, i29, n37) {
    let r91 = 0, s29 = 0, o35 = e26.length - 1;
    do {
      if (r91 >= o35 - 1)
        return i29 < e26[o35] ? n37(t32, r91, i29 - e26[r91]) : null;
      s29 = r91 + Math.trunc(0.5 * (o35 - r91)), i29 < e26[s29] ? o35 = s29 : r91 = s29;
    } while (r91 < o35);
  }
  function On2(t32, e26) {
    return t32.getValid(e26);
  }
  function Mn2(t32) {
    function e26(e27, i29, n37) {
      return t32(e27[i29], n37);
    }
    return function(t33) {
      return Tn2(this.data, this._offsets, t33, e26);
    };
  }
  function xn2(t32) {
    let e26;
    function i29(i30, n37, r91) {
      return t32(i30[n37], r91, e26);
    }
    return function(t33, n37) {
      const r91 = this.data;
      e26 = n37;
      const s29 = Tn2(r91, this._offsets, t33, i29);
      return e26 = void 0, s29;
    };
  }
  function Ln2(t32) {
    let e26;
    function i29(i30, n37, r91) {
      let s29 = r91, o35 = 0, a27 = 0;
      for (let r92 = n37 - 1, l35 = i30.length; ++r92 < l35; ) {
        const n38 = i30[r92];
        if (~(o35 = t32(n38, e26, s29)))
          return a27 + o35;
        s29 = 0, a27 += n38.length;
      }
      return -1;
    }
    return function(t33, n37) {
      e26 = t33;
      const r91 = this.data, s29 = "number" != typeof n37 ? i29(r91, 0, 0) : Tn2(r91, this._offsets, n37, i29);
      return e26 = void 0, s29;
    };
  }
  var Nn2 = class extends Fe2 {
  };
  function Fn2(t32, e26, i29) {
    if (void 0 === e26)
      return -1;
    if (null === e26)
      switch (t32.typeId) {
        case J3.Union:
        case J3.Dictionary:
          break;
        default:
          return function(t33, e27) {
            const { nullBitmap: i30 } = t33;
            if (!i30 || t33.nullCount <= 0)
              return -1;
            let n38 = 0;
            for (const r92 of new yn2(i30, t33.offset + (e27 || 0), t33.length, i30, cn2)) {
              if (!r92)
                return n38;
              ++n38;
            }
            return -1;
          }(t32, i29);
      }
    const n37 = Ki2.getVisitFn(t32), r91 = on2(e26);
    for (let e27 = (i29 || 0) - 1, s29 = t32.length; ++e27 < s29; )
      if (r91(n37(t32, e27)))
        return e27;
    return -1;
  }
  function Un2(t32, e26, i29) {
    const n37 = Ki2.getVisitFn(t32), r91 = on2(e26);
    for (let e27 = (i29 || 0) - 1, s29 = t32.length; ++e27 < s29; )
      if (r91(n37(t32, e27)))
        return e27;
    return -1;
  }
  Nn2.prototype.visitNull = function(t32, e26) {
    return null === e26 && t32.length > 0 ? 0 : -1;
  }, Nn2.prototype.visitBool = Fn2, Nn2.prototype.visitInt = Fn2, Nn2.prototype.visitInt8 = Fn2, Nn2.prototype.visitInt16 = Fn2, Nn2.prototype.visitInt32 = Fn2, Nn2.prototype.visitInt64 = Fn2, Nn2.prototype.visitUint8 = Fn2, Nn2.prototype.visitUint16 = Fn2, Nn2.prototype.visitUint32 = Fn2, Nn2.prototype.visitUint64 = Fn2, Nn2.prototype.visitFloat = Fn2, Nn2.prototype.visitFloat16 = Fn2, Nn2.prototype.visitFloat32 = Fn2, Nn2.prototype.visitFloat64 = Fn2, Nn2.prototype.visitUtf8 = Fn2, Nn2.prototype.visitBinary = Fn2, Nn2.prototype.visitFixedSizeBinary = Fn2, Nn2.prototype.visitDate = Fn2, Nn2.prototype.visitDateDay = Fn2, Nn2.prototype.visitDateMillisecond = Fn2, Nn2.prototype.visitTimestamp = Fn2, Nn2.prototype.visitTimestampSecond = Fn2, Nn2.prototype.visitTimestampMillisecond = Fn2, Nn2.prototype.visitTimestampMicrosecond = Fn2, Nn2.prototype.visitTimestampNanosecond = Fn2, Nn2.prototype.visitTime = Fn2, Nn2.prototype.visitTimeSecond = Fn2, Nn2.prototype.visitTimeMillisecond = Fn2, Nn2.prototype.visitTimeMicrosecond = Fn2, Nn2.prototype.visitTimeNanosecond = Fn2, Nn2.prototype.visitDecimal = Fn2, Nn2.prototype.visitList = Fn2, Nn2.prototype.visitStruct = Fn2, Nn2.prototype.visitUnion = Fn2, Nn2.prototype.visitDenseUnion = Un2, Nn2.prototype.visitSparseUnion = Un2, Nn2.prototype.visitDictionary = Fn2, Nn2.prototype.visitInterval = Fn2, Nn2.prototype.visitIntervalDayTime = Fn2, Nn2.prototype.visitIntervalYearMonth = Fn2, Nn2.prototype.visitDuration = Fn2, Nn2.prototype.visitDurationSecond = Fn2, Nn2.prototype.visitDurationMillisecond = Fn2, Nn2.prototype.visitDurationMicrosecond = Fn2, Nn2.prototype.visitDurationNanosecond = Fn2, Nn2.prototype.visitFixedSizeList = Fn2, Nn2.prototype.visitMap = Fn2;
  var En2 = new Nn2();
  var Cn2 = class extends Fe2 {
  };
  function Vn2(t32) {
    const { type: e26 } = t32;
    if (0 === t32.nullCount && 1 === t32.stride && (e26.typeId === J3.Timestamp || e26 instanceof Vt3 && 64 !== e26.bitWidth || e26 instanceof ne2 && 64 !== e26.bitWidth || e26 instanceof Ht3 && e26.precision !== H3.HALF))
      return new Sn2(t32.data.length, (e27) => {
        const i30 = t32.data[e27];
        return i30.values.subarray(0, i30.length)[Symbol.iterator]();
      });
    let i29 = 0;
    return new Sn2(t32.data.length, (e27) => {
      const n37 = t32.data[e27].length, r91 = t32.slice(i29, i29 + n37);
      return i29 += n37, new Rn2(r91);
    });
  }
  var Rn2 = class {
    constructor(t32) {
      this.vector = t32, this.index = 0;
    }
    next() {
      return this.index < this.vector.length ? { value: this.vector.get(this.index++) } : { done: true, value: null };
    }
    [Symbol.iterator]() {
      return this;
    }
  };
  Cn2.prototype.visitNull = Vn2, Cn2.prototype.visitBool = Vn2, Cn2.prototype.visitInt = Vn2, Cn2.prototype.visitInt8 = Vn2, Cn2.prototype.visitInt16 = Vn2, Cn2.prototype.visitInt32 = Vn2, Cn2.prototype.visitInt64 = Vn2, Cn2.prototype.visitUint8 = Vn2, Cn2.prototype.visitUint16 = Vn2, Cn2.prototype.visitUint32 = Vn2, Cn2.prototype.visitUint64 = Vn2, Cn2.prototype.visitFloat = Vn2, Cn2.prototype.visitFloat16 = Vn2, Cn2.prototype.visitFloat32 = Vn2, Cn2.prototype.visitFloat64 = Vn2, Cn2.prototype.visitUtf8 = Vn2, Cn2.prototype.visitBinary = Vn2, Cn2.prototype.visitFixedSizeBinary = Vn2, Cn2.prototype.visitDate = Vn2, Cn2.prototype.visitDateDay = Vn2, Cn2.prototype.visitDateMillisecond = Vn2, Cn2.prototype.visitTimestamp = Vn2, Cn2.prototype.visitTimestampSecond = Vn2, Cn2.prototype.visitTimestampMillisecond = Vn2, Cn2.prototype.visitTimestampMicrosecond = Vn2, Cn2.prototype.visitTimestampNanosecond = Vn2, Cn2.prototype.visitTime = Vn2, Cn2.prototype.visitTimeSecond = Vn2, Cn2.prototype.visitTimeMillisecond = Vn2, Cn2.prototype.visitTimeMicrosecond = Vn2, Cn2.prototype.visitTimeNanosecond = Vn2, Cn2.prototype.visitDecimal = Vn2, Cn2.prototype.visitList = Vn2, Cn2.prototype.visitStruct = Vn2, Cn2.prototype.visitUnion = Vn2, Cn2.prototype.visitDenseUnion = Vn2, Cn2.prototype.visitSparseUnion = Vn2, Cn2.prototype.visitDictionary = Vn2, Cn2.prototype.visitInterval = Vn2, Cn2.prototype.visitIntervalDayTime = Vn2, Cn2.prototype.visitIntervalYearMonth = Vn2, Cn2.prototype.visitDuration = Vn2, Cn2.prototype.visitDurationSecond = Vn2, Cn2.prototype.visitDurationMillisecond = Vn2, Cn2.prototype.visitDurationMicrosecond = Vn2, Cn2.prototype.visitDurationNanosecond = Vn2, Cn2.prototype.visitFixedSizeList = Vn2, Cn2.prototype.visitMap = Vn2;
  var zn2 = new Cn2();
  var Pn2 = (t32, e26) => t32 + e26;
  var jn2 = class extends Fe2 {
    visitNull(t32, e26) {
      return 0;
    }
    visitInt(t32, e26) {
      return t32.type.bitWidth / 8;
    }
    visitFloat(t32, e26) {
      return t32.type.ArrayType.BYTES_PER_ELEMENT;
    }
    visitBool(t32, e26) {
      return 1 / 8;
    }
    visitDecimal(t32, e26) {
      return t32.type.bitWidth / 8;
    }
    visitDate(t32, e26) {
      return 4 * (t32.type.unit + 1);
    }
    visitTime(t32, e26) {
      return t32.type.bitWidth / 8;
    }
    visitTimestamp(t32, e26) {
      return t32.type.unit === Z3.SECOND ? 4 : 8;
    }
    visitInterval(t32, e26) {
      return 4 * (t32.type.unit + 1);
    }
    visitDuration(t32, e26) {
      return 8;
    }
    visitStruct(t32, e26) {
      return t32.children.reduce((t33, i29) => t33 + Wn2.visit(i29, e26), 0);
    }
    visitFixedSizeBinary(t32, e26) {
      return t32.type.byteWidth;
    }
    visitMap(t32, e26) {
      return 8 + t32.children.reduce((t33, i29) => t33 + Wn2.visit(i29, e26), 0);
    }
    visitDictionary(t32, e26) {
      var i29;
      return t32.type.indices.bitWidth / 8 + ((null === (i29 = t32.dictionary) || void 0 === i29 ? void 0 : i29.getByteLength(t32.values[e26])) || 0);
    }
  };
  var kn2 = ({ type: t32, children: e26, typeIds: i29, valueOffsets: n37 }, r91) => {
    const s29 = t32.typeIdToChildIndex[i29[r91]];
    return 8 + Wn2.visit(e26[s29], n37[r91]);
  };
  var $n2 = ({ children: t32 }, e26) => 4 + Wn2.visitMany(t32, t32.map(() => e26)).reduce(Pn2, 0);
  jn2.prototype.visitUtf8 = ({ valueOffsets: t32 }, e26) => t32[e26 + 1] - t32[e26] + 8, jn2.prototype.visitBinary = ({ valueOffsets: t32 }, e26) => t32[e26 + 1] - t32[e26] + 8, jn2.prototype.visitList = ({ valueOffsets: t32, stride: e26, children: i29 }, n37) => {
    const r91 = i29[0], { [n37 * e26]: s29 } = t32, { [n37 * e26 + 1]: o35 } = t32, a27 = Wn2.getVisitFn(r91.type), l35 = r91.slice(s29, o35 - s29);
    let u30 = 8;
    for (let t33 = -1, e27 = o35 - s29; ++t33 < e27; )
      u30 += a27(l35, t33);
    return u30;
  }, jn2.prototype.visitFixedSizeList = ({ stride: t32, children: e26 }, i29) => {
    const n37 = e26[0], r91 = n37.slice(i29 * t32, t32), s29 = Wn2.getVisitFn(n37.type);
    let o35 = 0;
    for (let t33 = -1, e27 = r91.length; ++t33 < e27; )
      o35 += s29(r91, t33);
    return o35;
  }, jn2.prototype.visitUnion = (t32, e26) => t32.type.mode === Y3.Dense ? kn2(t32, e26) : $n2(t32, e26), jn2.prototype.visitDenseUnion = kn2, jn2.prototype.visitSparseUnion = $n2;
  var Wn2 = new jn2();
  var Yn2;
  var Hn2 = {};
  var Gn2 = {};
  var Zn2 = class _Zn {
    constructor(t32) {
      var e26, i29, n37;
      const r91 = t32[0] instanceof _Zn ? t32.flatMap((t33) => t33.data) : t32;
      if (0 === r91.length || r91.some((t33) => !(t33 instanceof mn2)))
        throw new TypeError("Vector constructor expects an Array of Data instances.");
      const s29 = null === (e26 = r91[0]) || void 0 === e26 ? void 0 : e26.type;
      switch (r91.length) {
        case 0:
          this._offsets = [0];
          break;
        case 1: {
          const { get: t33, set: e27, indexOf: i30, byteLength: n38 } = Hn2[s29.typeId], o35 = r91[0];
          this.isValid = (t34) => On2(o35, t34), this.get = (e28) => t33(o35, e28), this.set = (t34, i31) => e27(o35, t34, i31), this.indexOf = (t34) => i30(o35, t34), this.getByteLength = (t34) => n38(o35, t34), this._offsets = [0, o35.length];
          break;
        }
        default:
          Object.setPrototypeOf(this, Gn2[s29.typeId]), this._offsets = Dn2(r91);
      }
      this.data = r91, this.type = s29, this.stride = Ne3(s29), this.numChildren = null !== (n37 = null === (i29 = s29.children) || void 0 === i29 ? void 0 : i29.length) && void 0 !== n37 ? n37 : 0, this.length = this._offsets.at(-1);
    }
    get byteLength() {
      return this.data.reduce((t32, e26) => t32 + e26.byteLength, 0);
    }
    get nullCount() {
      return An2(this.data);
    }
    get ArrayType() {
      return this.type.ArrayType;
    }
    get [Symbol.toStringTag]() {
      return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`;
    }
    get VectorName() {
      return `${J3[this.type.typeId]}Vector`;
    }
    isValid(t32) {
      return false;
    }
    get(t32) {
      return null;
    }
    set(t32, e26) {
    }
    indexOf(t32, e26) {
      return -1;
    }
    includes(t32, e26) {
      return this.indexOf(t32, e26) > -1;
    }
    getByteLength(t32) {
      return 0;
    }
    [Symbol.iterator]() {
      return zn2.visit(this);
    }
    concat(...t32) {
      return new _Zn(this.data.concat(t32.flatMap((t33) => t33.data).flat(Number.POSITIVE_INFINITY)));
    }
    slice(t32, e26) {
      return new _Zn(rn2(this, t32, e26, ({ data: t33, _offsets: e27 }, i29, n37) => Bn2(t33, e27, i29, n37)));
    }
    toJSON() {
      return [...this];
    }
    toArray() {
      const { type: t32, data: e26, length: i29, stride: n37, ArrayType: r91 } = this;
      switch (t32.typeId) {
        case J3.Int:
        case J3.Float:
        case J3.Decimal:
        case J3.Time:
        case J3.Timestamp:
          switch (e26.length) {
            case 0:
              return new r91();
            case 1:
              return e26[0].values.subarray(0, i29 * n37);
            default:
              return e26.reduce((t33, { values: e27, length: i30 }) => (t33.array.set(e27.subarray(0, i30 * n37), t33.offset), t33.offset += i30 * n37, t33), { array: new r91(i29 * n37), offset: 0 }).array;
          }
      }
      return [...this];
    }
    toString() {
      return `[${[...this].join(",")}]`;
    }
    getChild(t32) {
      var e26;
      return this.getChildAt(null === (e26 = this.type.children) || void 0 === e26 ? void 0 : e26.findIndex((e27) => e27.name === t32));
    }
    getChildAt(t32) {
      return t32 > -1 && t32 < this.numChildren ? new _Zn(this.data.map(({ children: e26 }) => e26[t32])) : null;
    }
    get isMemoized() {
      return !!Et3.isDictionary(this.type) && this.data[0].dictionary.isMemoized;
    }
    memoize() {
      if (Et3.isDictionary(this.type)) {
        const t32 = new Xn2(this.data[0].dictionary), e26 = this.data.map((e27) => {
          const i29 = e27.clone();
          return i29.dictionary = t32, i29;
        });
        return new _Zn(e26);
      }
      return new Xn2(this);
    }
    unmemoize() {
      if (Et3.isDictionary(this.type) && this.isMemoized) {
        const t32 = this.data[0].dictionary.unmemoize(), e26 = this.data.map((e27) => {
          const i29 = e27.clone();
          return i29.dictionary = t32, i29;
        });
        return new _Zn(e26);
      }
      return this;
    }
  };
  Yn2 = Symbol.toStringTag, Zn2[Yn2] = ((t32) => {
    t32.type = Et3.prototype, t32.data = [], t32.length = 0, t32.stride = 1, t32.numChildren = 0, t32._offsets = new Uint32Array([0]), t32[Symbol.isConcatSpreadable] = true;
    const e26 = Object.keys(J3).map((t33) => J3[t33]).filter((t33) => "number" == typeof t33 && t33 !== J3.NONE);
    for (const i29 of e26) {
      const e27 = Ki2.getVisitFnByTypeId(i29), n37 = mi2.getVisitFnByTypeId(i29), r91 = En2.getVisitFnByTypeId(i29), s29 = Wn2.getVisitFnByTypeId(i29);
      Hn2[i29] = { get: e27, set: n37, indexOf: r91, byteLength: s29 }, Gn2[i29] = Object.create(t32, { isValid: { value: Mn2(On2) }, get: { value: Mn2(Ki2.getVisitFnByTypeId(i29)) }, set: { value: xn2(mi2.getVisitFnByTypeId(i29)) }, indexOf: { value: Ln2(En2.getVisitFnByTypeId(i29)) }, getByteLength: { value: Mn2(Wn2.getVisitFnByTypeId(i29)) } });
    }
    return "Vector";
  })(Zn2.prototype);
  var Xn2 = class _Xn extends Zn2 {
    constructor(t32) {
      super(t32.data);
      const e26 = this.get, i29 = this.set, n37 = this.slice, r91 = new Array(this.length);
      Object.defineProperty(this, "get", { value(t33) {
        const i30 = r91[t33];
        if (void 0 !== i30)
          return i30;
        const n38 = e26.call(this, t33);
        return r91[t33] = n38, n38;
      } }), Object.defineProperty(this, "set", { value(t33, e27) {
        i29.call(this, t33, e27), r91[t33] = e27;
      } }), Object.defineProperty(this, "slice", { value: (t33, e27) => new _Xn(n37.call(this, t33, e27)) }), Object.defineProperty(this, "isMemoized", { value: true }), Object.defineProperty(this, "unmemoize", { value: () => new Zn2(this.data) }), Object.defineProperty(this, "memoize", { value: () => this });
    }
  };
  function Jn2(t32) {
    if (!t32 || t32.length <= 0)
      return function(t33) {
        return true;
      };
    let e26 = "";
    const i29 = t32.filter((t33) => t33 == t33);
    return i29.length > 0 && (e26 = `
    switch (x) {${i29.map((t33) => `
        case ${function(t34) {
      if ("bigint" != typeof t34)
        return tt3(t34);
      return `${tt3(t34)}n`;
    }(t33)}:`).join("")}
            return false;
    }`), t32.length !== i29.length && (e26 = `if (x !== x) return false;
${e26}`), new Function("x", `${e26}
return true;`);
  }
  var qn2 = (t32, e26) => (Math.ceil(t32) * e26 + 63 & -64 || 64) / e26;
  var Qn2 = class {
    constructor(t32, e26 = 1) {
      this.buffer = t32, this.stride = e26, this.BYTES_PER_ELEMENT = t32.BYTES_PER_ELEMENT, this.ArrayType = t32.constructor, this._resize(this.length = Math.ceil(t32.length / e26));
    }
    get byteLength() {
      return Math.ceil(this.length * this.stride) * this.BYTES_PER_ELEMENT;
    }
    get reservedLength() {
      return this.buffer.length / this.stride;
    }
    get reservedByteLength() {
      return this.buffer.byteLength;
    }
    set(t32, e26) {
      return this;
    }
    append(t32) {
      return this.set(this.length, t32);
    }
    reserve(t32) {
      if (t32 > 0) {
        this.length += t32;
        const e26 = this.stride, i29 = this.length * e26, n37 = this.buffer.length;
        i29 >= n37 && this._resize(qn2(0 === n37 ? 1 * i29 : 2 * i29, this.BYTES_PER_ELEMENT));
      }
      return this;
    }
    flush(t32 = this.length) {
      t32 = qn2(t32 * this.stride, this.BYTES_PER_ELEMENT);
      const e26 = ((t33, e27 = 0) => t33.length >= e27 ? t33.subarray(0, e27) : T3(new t33.constructor(e27), t33, 0))(this.buffer, t32);
      return this.clear(), e26;
    }
    clear() {
      return this.length = 0, this._resize(0), this;
    }
    _resize(t32) {
      return this.buffer = T3(new this.ArrayType(t32), this.buffer);
    }
  };
  Qn2.prototype.offset = 0;
  var tr2 = class extends Qn2 {
    last() {
      return this.get(this.length - 1);
    }
    get(t32) {
      return this.buffer[t32];
    }
    set(t32, e26) {
      return this.reserve(t32 - this.length + 1), this.buffer[t32 * this.stride] = e26, this;
    }
  };
  var er2 = class extends tr2 {
    constructor(t32 = new Uint8Array(0)) {
      super(t32, 1 / 8), this.numValid = 0;
    }
    get numInvalid() {
      return this.length - this.numValid;
    }
    get(t32) {
      return this.buffer[t32 >> 3] >> t32 % 8 & 1;
    }
    set(t32, e26) {
      const { buffer: i29 } = this.reserve(t32 - this.length + 1), n37 = t32 >> 3, r91 = t32 % 8, s29 = i29[n37] >> r91 & 1;
      return e26 ? 0 === s29 && (i29[n37] |= 1 << r91, ++this.numValid) : 1 === s29 && (i29[n37] &= ~(1 << r91), --this.numValid), this;
    }
    clear() {
      return this.numValid = 0, super.clear();
    }
  };
  var ir2 = class extends tr2 {
    constructor(t32 = new Int32Array(1)) {
      super(t32, 1);
    }
    append(t32) {
      return this.set(this.length - 1, t32);
    }
    set(t32, e26) {
      const i29 = this.length - 1, n37 = this.reserve(t32 - i29 + 1).buffer;
      return i29 < t32++ && n37.fill(n37[i29], i29, t32), n37[t32] = n37[t32 - 1] + e26, this;
    }
    flush(t32 = this.length - 1) {
      return t32 > this.length && this.set(t32 - 1, 0), super.flush(t32 + 1);
    }
  };
  var nr2 = class {
    static throughNode(t32) {
      throw new Error('"throughNode" not available in this environment');
    }
    static throughDOM(t32) {
      throw new Error('"throughDOM" not available in this environment');
    }
    constructor({ type: t32, nullValues: e26 }) {
      this.length = 0, this.finished = false, this.type = t32, this.children = [], this.nullValues = e26, this.stride = Ne3(t32), this._nulls = new er2(), e26 && e26.length > 0 && (this._isValid = Jn2(e26));
    }
    toVector() {
      return new Zn2([this.flush()]);
    }
    get ArrayType() {
      return this.type.ArrayType;
    }
    get nullCount() {
      return this._nulls.numInvalid;
    }
    get numChildren() {
      return this.children.length;
    }
    get byteLength() {
      let t32 = 0;
      const { _offsets: e26, _values: i29, _nulls: n37, _typeIds: r91, children: s29 } = this;
      return e26 && (t32 += e26.byteLength), i29 && (t32 += i29.byteLength), n37 && (t32 += n37.byteLength), r91 && (t32 += r91.byteLength), s29.reduce((t33, e27) => t33 + e27.byteLength, t32);
    }
    get reservedLength() {
      return this._nulls.reservedLength;
    }
    get reservedByteLength() {
      let t32 = 0;
      return this._offsets && (t32 += this._offsets.reservedByteLength), this._values && (t32 += this._values.reservedByteLength), this._nulls && (t32 += this._nulls.reservedByteLength), this._typeIds && (t32 += this._typeIds.reservedByteLength), this.children.reduce((t33, e26) => t33 + e26.reservedByteLength, t32);
    }
    get valueOffsets() {
      return this._offsets ? this._offsets.buffer : null;
    }
    get values() {
      return this._values ? this._values.buffer : null;
    }
    get nullBitmap() {
      return this._nulls ? this._nulls.buffer : null;
    }
    get typeIds() {
      return this._typeIds ? this._typeIds.buffer : null;
    }
    append(t32) {
      return this.set(this.length, t32);
    }
    isValid(t32) {
      return this._isValid(t32);
    }
    set(t32, e26) {
      return this.setValid(t32, this.isValid(e26)) && this.setValue(t32, e26), this;
    }
    setValue(t32, e26) {
      this._setValue(this, t32, e26);
    }
    setValid(t32, e26) {
      return this.length = this._nulls.set(t32, +e26).length, e26;
    }
    addChild(t32, e26 = `${this.numChildren}`) {
      throw new Error(`Cannot append children to non-nested type "${this.type}"`);
    }
    getChildAt(t32) {
      return this.children[t32] || null;
    }
    flush() {
      let t32, e26, i29, n37;
      const { type: r91, length: s29, nullCount: o35, _typeIds: a27, _offsets: l35, _values: u30, _nulls: c30 } = this;
      (e26 = null == a27 ? void 0 : a27.flush(s29)) ? n37 = null == l35 ? void 0 : l35.flush(s29) : t32 = (n37 = null == l35 ? void 0 : l35.flush(s29)) ? null == u30 ? void 0 : u30.flush(l35.last()) : null == u30 ? void 0 : u30.flush(s29), o35 > 0 && (i29 = null == c30 ? void 0 : c30.flush(s29));
      const h35 = this.children.map((t33) => t33.flush());
      return this.clear(), In2({ type: r91, length: s29, nullCount: o35, children: h35, child: h35[0], data: t32, typeIds: e26, nullBitmap: i29, valueOffsets: n37 });
    }
    finish() {
      this.finished = true;
      for (const t32 of this.children)
        t32.finish();
      return this;
    }
    clear() {
      var t32, e26, i29, n37;
      this.length = 0, null === (t32 = this._nulls) || void 0 === t32 || t32.clear(), null === (e26 = this._values) || void 0 === e26 || e26.clear(), null === (i29 = this._offsets) || void 0 === i29 || i29.clear(), null === (n37 = this._typeIds) || void 0 === n37 || n37.clear();
      for (const t33 of this.children)
        t33.clear();
      return this;
    }
  };
  nr2.prototype.length = 1, nr2.prototype.stride = 1, nr2.prototype.children = null, nr2.prototype.finished = false, nr2.prototype.nullValues = null, nr2.prototype._isValid = () => true;
  var rr2 = class extends nr2 {
    constructor(t32) {
      super(t32), this._values = new tr2(new this.ArrayType(0), this.stride);
    }
    setValue(t32, e26) {
      const i29 = this._values;
      return i29.reserve(t32 - i29.length + 1), super.setValue(t32, e26);
    }
  };
  var sr2 = class extends nr2 {
    constructor(t32) {
      super(t32), this._pendingLength = 0, this._offsets = new ir2();
    }
    setValue(t32, e26) {
      const i29 = this._pending || (this._pending = /* @__PURE__ */ new Map()), n37 = i29.get(t32);
      n37 && (this._pendingLength -= n37.length), this._pendingLength += e26 instanceof Qi2 ? e26[Ji2].length : e26.length, i29.set(t32, e26);
    }
    setValid(t32, e26) {
      return !!super.setValid(t32, e26) || ((this._pending || (this._pending = /* @__PURE__ */ new Map())).set(t32, void 0), false);
    }
    clear() {
      return this._pendingLength = 0, this._pending = void 0, super.clear();
    }
    flush() {
      return this._flush(), super.flush();
    }
    finish() {
      return this._flush(), super.finish();
    }
    _flush() {
      const t32 = this._pending, e26 = this._pendingLength;
      return this._pendingLength = 0, this._pending = void 0, t32 && t32.size > 0 && this._flushPending(t32, e26), this;
    }
  };
  var or2 = class {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    offset() {
      return this.bb.readInt64(this.bb_pos);
    }
    metaDataLength() {
      return this.bb.readInt32(this.bb_pos + 8);
    }
    bodyLength() {
      return this.bb.readInt64(this.bb_pos + 16);
    }
    static sizeOf() {
      return 24;
    }
    static createBlock(t32, e26, i29, n37) {
      return t32.prep(8, 24), t32.writeInt64(BigInt(null != n37 ? n37 : 0)), t32.pad(4), t32.writeInt32(i29), t32.writeInt64(BigInt(null != e26 ? e26 : 0)), t32.offset();
    }
  };
  var ar2 = class _ar {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsKeyValue(t32, e26) {
      return (e26 || new _ar()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsKeyValue(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _ar()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    key(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 4);
      return e26 ? this.bb.__string(this.bb_pos + e26, t32) : null;
    }
    value(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 6);
      return e26 ? this.bb.__string(this.bb_pos + e26, t32) : null;
    }
    static startKeyValue(t32) {
      t32.startObject(2);
    }
    static addKey(t32, e26) {
      t32.addFieldOffset(0, e26, 0);
    }
    static addValue(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static endKeyValue(t32) {
      return t32.endObject();
    }
    static createKeyValue(t32, e26, i29) {
      return _ar.startKeyValue(t32), _ar.addKey(t32, e26), _ar.addValue(t32, i29), _ar.endKeyValue(t32);
    }
  };
  var lr2;
  var ur2;
  var cr2;
  var hr2;
  var dr2;
  var pr2;
  var yr2;
  var fr2;
  var br2;
  !function(t32) {
    t32[t32.V1 = 0] = "V1", t32[t32.V2 = 1] = "V2", t32[t32.V3 = 2] = "V3", t32[t32.V4 = 3] = "V4", t32[t32.V5 = 4] = "V5";
  }(lr2 || (lr2 = {})), function(t32) {
    t32[t32.Little = 0] = "Little", t32[t32.Big = 1] = "Big";
  }(ur2 || (ur2 = {})), function(t32) {
    t32[t32.DenseArray = 0] = "DenseArray";
  }(cr2 || (cr2 = {}));
  var vr2 = class _vr {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsInt(t32, e26) {
      return (e26 || new _vr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsInt(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _vr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    bitWidth() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 0;
    }
    isSigned() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return !!t32 && !!this.bb.readInt8(this.bb_pos + t32);
    }
    static startInt(t32) {
      t32.startObject(2);
    }
    static addBitWidth(t32, e26) {
      t32.addFieldInt32(0, e26, 0);
    }
    static addIsSigned(t32, e26) {
      t32.addFieldInt8(1, +e26, 0);
    }
    static endInt(t32) {
      return t32.endObject();
    }
    static createInt(t32, e26, i29) {
      return _vr.startInt(t32), _vr.addBitWidth(t32, e26), _vr.addIsSigned(t32, i29), _vr.endInt(t32);
    }
  };
  var gr2 = class _gr {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsDictionaryEncoding(t32, e26) {
      return (e26 || new _gr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsDictionaryEncoding(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _gr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    id() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt64(this.bb_pos + t32) : BigInt("0");
    }
    indexType(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 6);
      return e26 ? (t32 || new vr2()).__init(this.bb.__indirect(this.bb_pos + e26), this.bb) : null;
    }
    isOrdered() {
      const t32 = this.bb.__offset(this.bb_pos, 8);
      return !!t32 && !!this.bb.readInt8(this.bb_pos + t32);
    }
    dictionaryKind() {
      const t32 = this.bb.__offset(this.bb_pos, 10);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : cr2.DenseArray;
    }
    static startDictionaryEncoding(t32) {
      t32.startObject(4);
    }
    static addId(t32, e26) {
      t32.addFieldInt64(0, e26, BigInt("0"));
    }
    static addIndexType(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static addIsOrdered(t32, e26) {
      t32.addFieldInt8(2, +e26, 0);
    }
    static addDictionaryKind(t32, e26) {
      t32.addFieldInt16(3, e26, cr2.DenseArray);
    }
    static endDictionaryEncoding(t32) {
      return t32.endObject();
    }
  };
  var mr2 = class _mr {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsBinary(t32, e26) {
      return (e26 || new _mr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsBinary(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _mr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startBinary(t32) {
      t32.startObject(0);
    }
    static endBinary(t32) {
      return t32.endObject();
    }
    static createBinary(t32) {
      return _mr.startBinary(t32), _mr.endBinary(t32);
    }
  };
  var _r2 = class __r {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsBool(t32, e26) {
      return (e26 || new __r()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsBool(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new __r()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startBool(t32) {
      t32.startObject(0);
    }
    static endBool(t32) {
      return t32.endObject();
    }
    static createBool(t32) {
      return __r.startBool(t32), __r.endBool(t32);
    }
  };
  !function(t32) {
    t32[t32.DAY = 0] = "DAY", t32[t32.MILLISECOND = 1] = "MILLISECOND";
  }(hr2 || (hr2 = {}));
  var wr2 = class _wr {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsDate(t32, e26) {
      return (e26 || new _wr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsDate(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _wr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    unit() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : hr2.MILLISECOND;
    }
    static startDate(t32) {
      t32.startObject(1);
    }
    static addUnit(t32, e26) {
      t32.addFieldInt16(0, e26, hr2.MILLISECOND);
    }
    static endDate(t32) {
      return t32.endObject();
    }
    static createDate(t32, e26) {
      return _wr.startDate(t32), _wr.addUnit(t32, e26), _wr.endDate(t32);
    }
  };
  var Ir2 = class _Ir {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsDecimal(t32, e26) {
      return (e26 || new _Ir()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsDecimal(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Ir()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    precision() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 0;
    }
    scale() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 0;
    }
    bitWidth() {
      const t32 = this.bb.__offset(this.bb_pos, 8);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 128;
    }
    static startDecimal(t32) {
      t32.startObject(3);
    }
    static addPrecision(t32, e26) {
      t32.addFieldInt32(0, e26, 0);
    }
    static addScale(t32, e26) {
      t32.addFieldInt32(1, e26, 0);
    }
    static addBitWidth(t32, e26) {
      t32.addFieldInt32(2, e26, 128);
    }
    static endDecimal(t32) {
      return t32.endObject();
    }
    static createDecimal(t32, e26, i29, n37) {
      return _Ir.startDecimal(t32), _Ir.addPrecision(t32, e26), _Ir.addScale(t32, i29), _Ir.addBitWidth(t32, n37), _Ir.endDecimal(t32);
    }
  };
  !function(t32) {
    t32[t32.SECOND = 0] = "SECOND", t32[t32.MILLISECOND = 1] = "MILLISECOND", t32[t32.MICROSECOND = 2] = "MICROSECOND", t32[t32.NANOSECOND = 3] = "NANOSECOND";
  }(dr2 || (dr2 = {}));
  var Sr2 = class _Sr {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsDuration(t32, e26) {
      return (e26 || new _Sr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsDuration(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Sr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    unit() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : dr2.MILLISECOND;
    }
    static startDuration(t32) {
      t32.startObject(1);
    }
    static addUnit(t32, e26) {
      t32.addFieldInt16(0, e26, dr2.MILLISECOND);
    }
    static endDuration(t32) {
      return t32.endObject();
    }
    static createDuration(t32, e26) {
      return _Sr.startDuration(t32), _Sr.addUnit(t32, e26), _Sr.endDuration(t32);
    }
  };
  var Ar2 = class _Ar {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsFixedSizeBinary(t32, e26) {
      return (e26 || new _Ar()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsFixedSizeBinary(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Ar()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    byteWidth() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 0;
    }
    static startFixedSizeBinary(t32) {
      t32.startObject(1);
    }
    static addByteWidth(t32, e26) {
      t32.addFieldInt32(0, e26, 0);
    }
    static endFixedSizeBinary(t32) {
      return t32.endObject();
    }
    static createFixedSizeBinary(t32, e26) {
      return _Ar.startFixedSizeBinary(t32), _Ar.addByteWidth(t32, e26), _Ar.endFixedSizeBinary(t32);
    }
  };
  var Dr2 = class _Dr {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsFixedSizeList(t32, e26) {
      return (e26 || new _Dr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsFixedSizeList(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Dr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    listSize() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 0;
    }
    static startFixedSizeList(t32) {
      t32.startObject(1);
    }
    static addListSize(t32, e26) {
      t32.addFieldInt32(0, e26, 0);
    }
    static endFixedSizeList(t32) {
      return t32.endObject();
    }
    static createFixedSizeList(t32, e26) {
      return _Dr.startFixedSizeList(t32), _Dr.addListSize(t32, e26), _Dr.endFixedSizeList(t32);
    }
  };
  !function(t32) {
    t32[t32.HALF = 0] = "HALF", t32[t32.SINGLE = 1] = "SINGLE", t32[t32.DOUBLE = 2] = "DOUBLE";
  }(pr2 || (pr2 = {}));
  var Br2 = class _Br {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsFloatingPoint(t32, e26) {
      return (e26 || new _Br()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsFloatingPoint(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Br()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    precision() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : pr2.HALF;
    }
    static startFloatingPoint(t32) {
      t32.startObject(1);
    }
    static addPrecision(t32, e26) {
      t32.addFieldInt16(0, e26, pr2.HALF);
    }
    static endFloatingPoint(t32) {
      return t32.endObject();
    }
    static createFloatingPoint(t32, e26) {
      return _Br.startFloatingPoint(t32), _Br.addPrecision(t32, e26), _Br.endFloatingPoint(t32);
    }
  };
  !function(t32) {
    t32[t32.YEAR_MONTH = 0] = "YEAR_MONTH", t32[t32.DAY_TIME = 1] = "DAY_TIME", t32[t32.MONTH_DAY_NANO = 2] = "MONTH_DAY_NANO";
  }(yr2 || (yr2 = {}));
  var Tr2 = class _Tr {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsInterval(t32, e26) {
      return (e26 || new _Tr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsInterval(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Tr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    unit() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : yr2.YEAR_MONTH;
    }
    static startInterval(t32) {
      t32.startObject(1);
    }
    static addUnit(t32, e26) {
      t32.addFieldInt16(0, e26, yr2.YEAR_MONTH);
    }
    static endInterval(t32) {
      return t32.endObject();
    }
    static createInterval(t32, e26) {
      return _Tr.startInterval(t32), _Tr.addUnit(t32, e26), _Tr.endInterval(t32);
    }
  };
  var Or2 = class _Or {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsList(t32, e26) {
      return (e26 || new _Or()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsList(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Or()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startList(t32) {
      t32.startObject(0);
    }
    static endList(t32) {
      return t32.endObject();
    }
    static createList(t32) {
      return _Or.startList(t32), _Or.endList(t32);
    }
  };
  var Mr2 = class _Mr {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsMap(t32, e26) {
      return (e26 || new _Mr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsMap(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Mr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    keysSorted() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return !!t32 && !!this.bb.readInt8(this.bb_pos + t32);
    }
    static startMap(t32) {
      t32.startObject(1);
    }
    static addKeysSorted(t32, e26) {
      t32.addFieldInt8(0, +e26, 0);
    }
    static endMap(t32) {
      return t32.endObject();
    }
    static createMap(t32, e26) {
      return _Mr.startMap(t32), _Mr.addKeysSorted(t32, e26), _Mr.endMap(t32);
    }
  };
  var xr2 = class _xr {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsNull(t32, e26) {
      return (e26 || new _xr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsNull(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _xr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startNull(t32) {
      t32.startObject(0);
    }
    static endNull(t32) {
      return t32.endObject();
    }
    static createNull(t32) {
      return _xr.startNull(t32), _xr.endNull(t32);
    }
  };
  var Lr2 = class _Lr {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsStruct_(t32, e26) {
      return (e26 || new _Lr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsStruct_(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Lr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startStruct_(t32) {
      t32.startObject(0);
    }
    static endStruct_(t32) {
      return t32.endObject();
    }
    static createStruct_(t32) {
      return _Lr.startStruct_(t32), _Lr.endStruct_(t32);
    }
  };
  var Nr2 = class _Nr {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsTime(t32, e26) {
      return (e26 || new _Nr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsTime(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Nr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    unit() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : dr2.MILLISECOND;
    }
    bitWidth() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 32;
    }
    static startTime(t32) {
      t32.startObject(2);
    }
    static addUnit(t32, e26) {
      t32.addFieldInt16(0, e26, dr2.MILLISECOND);
    }
    static addBitWidth(t32, e26) {
      t32.addFieldInt32(1, e26, 32);
    }
    static endTime(t32) {
      return t32.endObject();
    }
    static createTime(t32, e26, i29) {
      return _Nr.startTime(t32), _Nr.addUnit(t32, e26), _Nr.addBitWidth(t32, i29), _Nr.endTime(t32);
    }
  };
  var Fr2 = class _Fr {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsTimestamp(t32, e26) {
      return (e26 || new _Fr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsTimestamp(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Fr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    unit() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : dr2.SECOND;
    }
    timezone(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 6);
      return e26 ? this.bb.__string(this.bb_pos + e26, t32) : null;
    }
    static startTimestamp(t32) {
      t32.startObject(2);
    }
    static addUnit(t32, e26) {
      t32.addFieldInt16(0, e26, dr2.SECOND);
    }
    static addTimezone(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static endTimestamp(t32) {
      return t32.endObject();
    }
    static createTimestamp(t32, e26, i29) {
      return _Fr.startTimestamp(t32), _Fr.addUnit(t32, e26), _Fr.addTimezone(t32, i29), _Fr.endTimestamp(t32);
    }
  };
  !function(t32) {
    t32[t32.Sparse = 0] = "Sparse", t32[t32.Dense = 1] = "Dense";
  }(fr2 || (fr2 = {}));
  var Ur2 = class _Ur {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsUnion(t32, e26) {
      return (e26 || new _Ur()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsUnion(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Ur()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    mode() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : fr2.Sparse;
    }
    typeIds(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 6);
      return e26 ? this.bb.readInt32(this.bb.__vector(this.bb_pos + e26) + 4 * t32) : 0;
    }
    typeIdsLength() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    typeIdsArray() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t32), this.bb.__vector_len(this.bb_pos + t32)) : null;
    }
    static startUnion(t32) {
      t32.startObject(2);
    }
    static addMode(t32, e26) {
      t32.addFieldInt16(0, e26, fr2.Sparse);
    }
    static addTypeIds(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static createTypeIdsVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addInt32(e26[i29]);
      return t32.endVector();
    }
    static startTypeIdsVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static endUnion(t32) {
      return t32.endObject();
    }
    static createUnion(t32, e26, i29) {
      return _Ur.startUnion(t32), _Ur.addMode(t32, e26), _Ur.addTypeIds(t32, i29), _Ur.endUnion(t32);
    }
  };
  var Er2 = class _Er {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsUtf8(t32, e26) {
      return (e26 || new _Er()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsUtf8(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Er()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startUtf8(t32) {
      t32.startObject(0);
    }
    static endUtf8(t32) {
      return t32.endObject();
    }
    static createUtf8(t32) {
      return _Er.startUtf8(t32), _Er.endUtf8(t32);
    }
  };
  !function(t32) {
    t32[t32.NONE = 0] = "NONE", t32[t32.Null = 1] = "Null", t32[t32.Int = 2] = "Int", t32[t32.FloatingPoint = 3] = "FloatingPoint", t32[t32.Binary = 4] = "Binary", t32[t32.Utf8 = 5] = "Utf8", t32[t32.Bool = 6] = "Bool", t32[t32.Decimal = 7] = "Decimal", t32[t32.Date = 8] = "Date", t32[t32.Time = 9] = "Time", t32[t32.Timestamp = 10] = "Timestamp", t32[t32.Interval = 11] = "Interval", t32[t32.List = 12] = "List", t32[t32.Struct_ = 13] = "Struct_", t32[t32.Union = 14] = "Union", t32[t32.FixedSizeBinary = 15] = "FixedSizeBinary", t32[t32.FixedSizeList = 16] = "FixedSizeList", t32[t32.Map = 17] = "Map", t32[t32.Duration = 18] = "Duration", t32[t32.LargeBinary = 19] = "LargeBinary", t32[t32.LargeUtf8 = 20] = "LargeUtf8", t32[t32.LargeList = 21] = "LargeList", t32[t32.RunEndEncoded = 22] = "RunEndEncoded";
  }(br2 || (br2 = {}));
  var Cr2 = class _Cr {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsField(t32, e26) {
      return (e26 || new _Cr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsField(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Cr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    name(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 4);
      return e26 ? this.bb.__string(this.bb_pos + e26, t32) : null;
    }
    nullable() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return !!t32 && !!this.bb.readInt8(this.bb_pos + t32);
    }
    typeType() {
      const t32 = this.bb.__offset(this.bb_pos, 8);
      return t32 ? this.bb.readUint8(this.bb_pos + t32) : br2.NONE;
    }
    type(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 10);
      return e26 ? this.bb.__union(t32, this.bb_pos + e26) : null;
    }
    dictionary(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 12);
      return e26 ? (t32 || new gr2()).__init(this.bb.__indirect(this.bb_pos + e26), this.bb) : null;
    }
    children(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 14);
      return i29 ? (e26 || new _Cr()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + i29) + 4 * t32), this.bb) : null;
    }
    childrenLength() {
      const t32 = this.bb.__offset(this.bb_pos, 14);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    customMetadata(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 16);
      return i29 ? (e26 || new ar2()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + i29) + 4 * t32), this.bb) : null;
    }
    customMetadataLength() {
      const t32 = this.bb.__offset(this.bb_pos, 16);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    static startField(t32) {
      t32.startObject(7);
    }
    static addName(t32, e26) {
      t32.addFieldOffset(0, e26, 0);
    }
    static addNullable(t32, e26) {
      t32.addFieldInt8(1, +e26, 0);
    }
    static addTypeType(t32, e26) {
      t32.addFieldInt8(2, e26, br2.NONE);
    }
    static addType(t32, e26) {
      t32.addFieldOffset(3, e26, 0);
    }
    static addDictionary(t32, e26) {
      t32.addFieldOffset(4, e26, 0);
    }
    static addChildren(t32, e26) {
      t32.addFieldOffset(5, e26, 0);
    }
    static createChildrenVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addOffset(e26[i29]);
      return t32.endVector();
    }
    static startChildrenVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static addCustomMetadata(t32, e26) {
      t32.addFieldOffset(6, e26, 0);
    }
    static createCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addOffset(e26[i29]);
      return t32.endVector();
    }
    static startCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static endField(t32) {
      return t32.endObject();
    }
  };
  var Vr2 = class _Vr {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsSchema(t32, e26) {
      return (e26 || new _Vr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsSchema(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Vr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    endianness() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : ur2.Little;
    }
    fields(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 6);
      return i29 ? (e26 || new Cr2()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + i29) + 4 * t32), this.bb) : null;
    }
    fieldsLength() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    customMetadata(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 8);
      return i29 ? (e26 || new ar2()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + i29) + 4 * t32), this.bb) : null;
    }
    customMetadataLength() {
      const t32 = this.bb.__offset(this.bb_pos, 8);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    features(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 10);
      return e26 ? this.bb.readInt64(this.bb.__vector(this.bb_pos + e26) + 8 * t32) : BigInt(0);
    }
    featuresLength() {
      const t32 = this.bb.__offset(this.bb_pos, 10);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    static startSchema(t32) {
      t32.startObject(4);
    }
    static addEndianness(t32, e26) {
      t32.addFieldInt16(0, e26, ur2.Little);
    }
    static addFields(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static createFieldsVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addOffset(e26[i29]);
      return t32.endVector();
    }
    static startFieldsVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static addCustomMetadata(t32, e26) {
      t32.addFieldOffset(2, e26, 0);
    }
    static createCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addOffset(e26[i29]);
      return t32.endVector();
    }
    static startCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static addFeatures(t32, e26) {
      t32.addFieldOffset(3, e26, 0);
    }
    static createFeaturesVector(t32, e26) {
      t32.startVector(8, e26.length, 8);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addInt64(e26[i29]);
      return t32.endVector();
    }
    static startFeaturesVector(t32, e26) {
      t32.startVector(8, e26, 8);
    }
    static endSchema(t32) {
      return t32.endObject();
    }
    static finishSchemaBuffer(t32, e26) {
      t32.finish(e26);
    }
    static finishSizePrefixedSchemaBuffer(t32, e26) {
      t32.finish(e26, void 0, true);
    }
    static createSchema(t32, e26, i29, n37, r91) {
      return _Vr.startSchema(t32), _Vr.addEndianness(t32, e26), _Vr.addFields(t32, i29), _Vr.addCustomMetadata(t32, n37), _Vr.addFeatures(t32, r91), _Vr.endSchema(t32);
    }
  };
  var Rr = class _Rr {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsFooter(t32, e26) {
      return (e26 || new _Rr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsFooter(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Rr()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    version() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : lr2.V1;
    }
    schema(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 6);
      return e26 ? (t32 || new Vr2()).__init(this.bb.__indirect(this.bb_pos + e26), this.bb) : null;
    }
    dictionaries(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 8);
      return i29 ? (e26 || new or2()).__init(this.bb.__vector(this.bb_pos + i29) + 24 * t32, this.bb) : null;
    }
    dictionariesLength() {
      const t32 = this.bb.__offset(this.bb_pos, 8);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    recordBatches(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 10);
      return i29 ? (e26 || new or2()).__init(this.bb.__vector(this.bb_pos + i29) + 24 * t32, this.bb) : null;
    }
    recordBatchesLength() {
      const t32 = this.bb.__offset(this.bb_pos, 10);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    customMetadata(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 12);
      return i29 ? (e26 || new ar2()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + i29) + 4 * t32), this.bb) : null;
    }
    customMetadataLength() {
      const t32 = this.bb.__offset(this.bb_pos, 12);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    static startFooter(t32) {
      t32.startObject(5);
    }
    static addVersion(t32, e26) {
      t32.addFieldInt16(0, e26, lr2.V1);
    }
    static addSchema(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static addDictionaries(t32, e26) {
      t32.addFieldOffset(2, e26, 0);
    }
    static startDictionariesVector(t32, e26) {
      t32.startVector(24, e26, 8);
    }
    static addRecordBatches(t32, e26) {
      t32.addFieldOffset(3, e26, 0);
    }
    static startRecordBatchesVector(t32, e26) {
      t32.startVector(24, e26, 8);
    }
    static addCustomMetadata(t32, e26) {
      t32.addFieldOffset(4, e26, 0);
    }
    static createCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addOffset(e26[i29]);
      return t32.endVector();
    }
    static startCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static endFooter(t32) {
      return t32.endObject();
    }
    static finishFooterBuffer(t32, e26) {
      t32.finish(e26);
    }
    static finishSizePrefixedFooterBuffer(t32, e26) {
      t32.finish(e26, void 0, true);
    }
  };
  var zr2 = class _zr {
    constructor(t32 = [], e26, i29, n37 = W3.V5) {
      this.fields = t32 || [], this.metadata = e26 || /* @__PURE__ */ new Map(), i29 || (i29 = kr2(t32)), this.dictionaries = i29, this.metadataVersion = n37;
    }
    get [Symbol.toStringTag]() {
      return "Schema";
    }
    get names() {
      return this.fields.map((t32) => t32.name);
    }
    toString() {
      return `Schema<{ ${this.fields.map((t32, e26) => `${e26}: ${t32}`).join(", ")} }>`;
    }
    select(t32) {
      const e26 = new Set(t32), i29 = this.fields.filter((t33) => e26.has(t33.name));
      return new _zr(i29, this.metadata);
    }
    selectAt(t32) {
      const e26 = t32.map((t33) => this.fields[t33]).filter(Boolean);
      return new _zr(e26, this.metadata);
    }
    assign(...t32) {
      const e26 = t32[0] instanceof _zr ? t32[0] : Array.isArray(t32[0]) ? new _zr(t32[0]) : new _zr(t32), i29 = [...this.fields], n37 = jr2(jr2(/* @__PURE__ */ new Map(), this.metadata), e26.metadata), r91 = e26.fields.filter((t33) => {
        const e27 = i29.findIndex((e28) => e28.name === t33.name);
        return !~e27 || (i29[e27] = t33.clone({ metadata: jr2(jr2(/* @__PURE__ */ new Map(), i29[e27].metadata), t33.metadata) })) && false;
      }), s29 = kr2(r91, /* @__PURE__ */ new Map());
      return new _zr([...i29, ...r91], n37, new Map([...this.dictionaries, ...s29]));
    }
  };
  zr2.prototype.fields = null, zr2.prototype.metadata = null, zr2.prototype.dictionaries = null;
  var Pr2 = class _Pr {
    static new(...t32) {
      let [e26, i29, n37, r91] = t32;
      return t32[0] && "object" == typeof t32[0] && ({ name: e26 } = t32[0], void 0 === i29 && (i29 = t32[0].type), void 0 === n37 && (n37 = t32[0].nullable), void 0 === r91 && (r91 = t32[0].metadata)), new _Pr(`${e26}`, i29, n37, r91);
    }
    constructor(t32, e26, i29 = false, n37) {
      this.name = t32, this.type = e26, this.nullable = i29, this.metadata = n37 || /* @__PURE__ */ new Map();
    }
    get typeId() {
      return this.type.typeId;
    }
    get [Symbol.toStringTag]() {
      return "Field";
    }
    toString() {
      return `${this.name}: ${this.type}`;
    }
    clone(...t32) {
      let [e26, i29, n37, r91] = t32;
      return t32[0] && "object" == typeof t32[0] ? { name: e26 = this.name, type: i29 = this.type, nullable: n37 = this.nullable, metadata: r91 = this.metadata } = t32[0] : [e26 = this.name, i29 = this.type, n37 = this.nullable, r91 = this.metadata] = t32, _Pr.new(e26, i29, n37, r91);
    }
  };
  function jr2(t32, e26) {
    return new Map([...t32 || /* @__PURE__ */ new Map(), ...e26 || /* @__PURE__ */ new Map()]);
  }
  function kr2(t32, e26 = /* @__PURE__ */ new Map()) {
    for (let i29 = -1, n37 = t32.length; ++i29 < n37; ) {
      const n38 = t32[i29].type;
      if (Et3.isDictionary(n38))
        if (e26.has(n38.id)) {
          if (e26.get(n38.id) !== n38.dictionary)
            throw new Error("Cannot create Schema containing two different dictionaries with the same Id");
        } else
          e26.set(n38.id, n38.dictionary);
      n38.children && n38.children.length > 0 && kr2(n38.children, e26);
    }
    return e26;
  }
  Pr2.prototype.type = null, Pr2.prototype.name = null, Pr2.prototype.nullable = null, Pr2.prototype.metadata = null;
  var $r2 = d3;
  var Wr2 = l4;
  var Yr2 = class {
    static decode(t32) {
      t32 = new Wr2(L3(t32));
      const e26 = Rr.getRootAsFooter(t32), i29 = zr2.decode(e26.schema(), /* @__PURE__ */ new Map(), e26.version());
      return new Hr2(i29, e26);
    }
    static encode(t32) {
      const e26 = new $r2(), i29 = zr2.encode(e26, t32.schema);
      Rr.startRecordBatchesVector(e26, t32.numRecordBatches);
      for (const i30 of [...t32.recordBatches()].slice().reverse())
        Gr2.encode(e26, i30);
      const n37 = e26.endVector();
      Rr.startDictionariesVector(e26, t32.numDictionaries);
      for (const i30 of [...t32.dictionaryBatches()].slice().reverse())
        Gr2.encode(e26, i30);
      const r91 = e26.endVector();
      return Rr.startFooter(e26), Rr.addSchema(e26, i29), Rr.addVersion(e26, W3.V5), Rr.addRecordBatches(e26, n37), Rr.addDictionaries(e26, r91), Rr.finishFooterBuffer(e26, Rr.endFooter(e26)), e26.asUint8Array();
    }
    get numRecordBatches() {
      return this._recordBatches.length;
    }
    get numDictionaries() {
      return this._dictionaryBatches.length;
    }
    constructor(t32, e26 = W3.V5, i29, n37) {
      this.schema = t32, this.version = e26, i29 && (this._recordBatches = i29), n37 && (this._dictionaryBatches = n37);
    }
    *recordBatches() {
      for (let t32, e26 = -1, i29 = this.numRecordBatches; ++e26 < i29; )
        (t32 = this.getRecordBatch(e26)) && (yield t32);
    }
    *dictionaryBatches() {
      for (let t32, e26 = -1, i29 = this.numDictionaries; ++e26 < i29; )
        (t32 = this.getDictionaryBatch(e26)) && (yield t32);
    }
    getRecordBatch(t32) {
      return t32 >= 0 && t32 < this.numRecordBatches && this._recordBatches[t32] || null;
    }
    getDictionaryBatch(t32) {
      return t32 >= 0 && t32 < this.numDictionaries && this._dictionaryBatches[t32] || null;
    }
  };
  var Hr2 = class extends Yr2 {
    get numRecordBatches() {
      return this._footer.recordBatchesLength();
    }
    get numDictionaries() {
      return this._footer.dictionariesLength();
    }
    constructor(t32, e26) {
      super(t32, e26.version()), this._footer = e26;
    }
    getRecordBatch(t32) {
      if (t32 >= 0 && t32 < this.numRecordBatches) {
        const e26 = this._footer.recordBatches(t32);
        if (e26)
          return Gr2.decode(e26);
      }
      return null;
    }
    getDictionaryBatch(t32) {
      if (t32 >= 0 && t32 < this.numDictionaries) {
        const e26 = this._footer.dictionaries(t32);
        if (e26)
          return Gr2.decode(e26);
      }
      return null;
    }
  };
  var Gr2 = class _Gr {
    static decode(t32) {
      return new _Gr(t32.metaDataLength(), t32.bodyLength(), t32.offset());
    }
    static encode(t32, e26) {
      const { metaDataLength: i29 } = e26, n37 = BigInt(e26.offset), r91 = BigInt(e26.bodyLength);
      return or2.createBlock(t32, n37, i29, r91);
    }
    constructor(t32, e26, i29) {
      this.metaDataLength = t32, this.offset = Ut3(i29), this.bodyLength = Ut3(e26);
    }
  };
  var Zr2 = Object.freeze({ done: true, value: void 0 });
  var Xr2 = class {
    constructor(t32) {
      this._json = t32;
    }
    get schema() {
      return this._json.schema;
    }
    get batches() {
      return this._json.batches || [];
    }
    get dictionaries() {
      return this._json.dictionaries || [];
    }
  };
  var Kr2 = class {
    tee() {
      return this._getDOMStream().tee();
    }
    pipe(t32, e26) {
      return this._getNodeStream().pipe(t32, e26);
    }
    pipeTo(t32, e26) {
      return this._getDOMStream().pipeTo(t32, e26);
    }
    pipeThrough(t32, e26) {
      return this._getDOMStream().pipeThrough(t32, e26);
    }
    _getDOMStream() {
      return this._DOMStream || (this._DOMStream = this.toDOMStream());
    }
    _getNodeStream() {
      return this._nodeStream || (this._nodeStream = this.toNodeStream());
    }
  };
  var Jr2 = class extends Kr2 {
    constructor() {
      super(), this._values = [], this.resolvers = [], this._closedPromise = new Promise((t32) => this._closedPromiseResolve = t32);
    }
    get closed() {
      return this._closedPromise;
    }
    cancel(t32) {
      return s(this, void 0, void 0, function* () {
        yield this.return(t32);
      });
    }
    write(t32) {
      this._ensureOpen() && (this.resolvers.length <= 0 ? this._values.push(t32) : this.resolvers.shift().resolve({ done: false, value: t32 }));
    }
    abort(t32) {
      this._closedPromiseResolve && (this.resolvers.length <= 0 ? this._error = { error: t32 } : this.resolvers.shift().reject({ done: true, value: t32 }));
    }
    close() {
      if (this._closedPromiseResolve) {
        const { resolvers: t32 } = this;
        for (; t32.length > 0; )
          t32.shift().resolve(Zr2);
        this._closedPromiseResolve(), this._closedPromiseResolve = void 0;
      }
    }
    [Symbol.asyncIterator]() {
      return this;
    }
    toDOMStream(t32) {
      return P3.toDOMStream(this._closedPromiseResolve || this._error ? this : this._values, t32);
    }
    toNodeStream(t32) {
      return P3.toNodeStream(this._closedPromiseResolve || this._error ? this : this._values, t32);
    }
    throw(t32) {
      return s(this, void 0, void 0, function* () {
        return yield this.abort(t32), Zr2;
      });
    }
    return(t32) {
      return s(this, void 0, void 0, function* () {
        return yield this.close(), Zr2;
      });
    }
    read(t32) {
      return s(this, void 0, void 0, function* () {
        return (yield this.next(t32, "read")).value;
      });
    }
    peek(t32) {
      return s(this, void 0, void 0, function* () {
        return (yield this.next(t32, "peek")).value;
      });
    }
    next(...t32) {
      return this._values.length > 0 ? Promise.resolve({ done: false, value: this._values.shift() }) : this._error ? Promise.reject({ done: true, value: this._error.error }) : this._closedPromiseResolve ? new Promise((t33, e26) => {
        this.resolvers.push({ resolve: t33, reject: e26 });
      }) : Promise.resolve(Zr2);
    }
    _ensureOpen() {
      if (this._closedPromiseResolve)
        return true;
      throw new Error("AsyncQueue is closed");
    }
  };
  var qr2 = class extends Jr2 {
    write(t32) {
      if ((t32 = L3(t32)).byteLength > 0)
        return super.write(t32);
    }
    toString(t32 = false) {
      return t32 ? u2(this.toUint8Array(true)) : this.toUint8Array(false).then(u2);
    }
    toUint8Array(t32 = false) {
      return t32 ? O4(this._values)[0] : (() => s(this, void 0, void 0, function* () {
        var t33, e26, i29, r91;
        const s29 = [];
        let o35 = 0;
        try {
          for (var a27, l35 = true, u30 = j(this); !(t33 = (a27 = yield u30.next()).done); l35 = true) {
            r91 = a27.value, l35 = false;
            const t34 = r91;
            s29.push(t34), o35 += t34.byteLength;
          }
        } catch (t34) {
          e26 = { error: t34 };
        } finally {
          try {
            l35 || t33 || !(i29 = u30.return) || (yield i29.call(u30));
          } finally {
            if (e26)
              throw e26.error;
          }
        }
        return O4(s29, o35)[0];
      }))();
    }
  };
  var Qr2 = class {
    constructor(t32) {
      t32 && (this.source = new es2(P3.fromIterable(t32)));
    }
    [Symbol.iterator]() {
      return this;
    }
    next(t32) {
      return this.source.next(t32);
    }
    throw(t32) {
      return this.source.throw(t32);
    }
    return(t32) {
      return this.source.return(t32);
    }
    peek(t32) {
      return this.source.peek(t32);
    }
    read(t32) {
      return this.source.read(t32);
    }
  };
  var ts2 = class _ts {
    constructor(t32) {
      t32 instanceof _ts ? this.source = t32.source : t32 instanceof qr2 ? this.source = new is2(P3.fromAsyncIterable(t32)) : A3(t32) ? this.source = new is2(P3.fromNodeStream(t32)) : S3(t32) ? this.source = new is2(P3.fromDOMStream(t32)) : w3(t32) ? this.source = new is2(P3.fromDOMStream(t32.body)) : b4(t32) ? this.source = new is2(P3.fromIterable(t32)) : (f3(t32) || v3(t32)) && (this.source = new is2(P3.fromAsyncIterable(t32)));
    }
    [Symbol.asyncIterator]() {
      return this;
    }
    next(t32) {
      return this.source.next(t32);
    }
    throw(t32) {
      return this.source.throw(t32);
    }
    return(t32) {
      return this.source.return(t32);
    }
    get closed() {
      return this.source.closed;
    }
    cancel(t32) {
      return this.source.cancel(t32);
    }
    peek(t32) {
      return this.source.peek(t32);
    }
    read(t32) {
      return this.source.read(t32);
    }
  };
  var es2 = class {
    constructor(t32) {
      this.source = t32;
    }
    cancel(t32) {
      this.return(t32);
    }
    peek(t32) {
      return this.next(t32, "peek").value;
    }
    read(t32) {
      return this.next(t32, "read").value;
    }
    next(t32, e26 = "read") {
      return this.source.next({ cmd: e26, size: t32 });
    }
    throw(t32) {
      return Object.create(this.source.throw && this.source.throw(t32) || Zr2);
    }
    return(t32) {
      return Object.create(this.source.return && this.source.return(t32) || Zr2);
    }
  };
  var is2 = class {
    constructor(t32) {
      this.source = t32, this._closedPromise = new Promise((t33) => this._closedPromiseResolve = t33);
    }
    cancel(t32) {
      return s(this, void 0, void 0, function* () {
        yield this.return(t32);
      });
    }
    get closed() {
      return this._closedPromise;
    }
    read(t32) {
      return s(this, void 0, void 0, function* () {
        return (yield this.next(t32, "read")).value;
      });
    }
    peek(t32) {
      return s(this, void 0, void 0, function* () {
        return (yield this.next(t32, "peek")).value;
      });
    }
    next(t32, e26 = "read") {
      return s(this, void 0, void 0, function* () {
        return yield this.source.next({ cmd: e26, size: t32 });
      });
    }
    throw(t32) {
      return s(this, void 0, void 0, function* () {
        const e26 = this.source.throw && (yield this.source.throw(t32)) || Zr2;
        return this._closedPromiseResolve && this._closedPromiseResolve(), this._closedPromiseResolve = void 0, Object.create(e26);
      });
    }
    return(t32) {
      return s(this, void 0, void 0, function* () {
        const e26 = this.source.return && (yield this.source.return(t32)) || Zr2;
        return this._closedPromiseResolve && this._closedPromiseResolve(), this._closedPromiseResolve = void 0, Object.create(e26);
      });
    }
  };
  var ns2 = class extends Qr2 {
    constructor(t32, e26) {
      super(), this.position = 0, this.buffer = L3(t32), this.size = void 0 === e26 ? this.buffer.byteLength : e26;
    }
    readInt32(t32) {
      const { buffer: e26, byteOffset: i29 } = this.readAt(t32, 4);
      return new DataView(e26, i29).getInt32(0, true);
    }
    seek(t32) {
      return this.position = Math.min(t32, this.size), t32 < this.size;
    }
    read(t32) {
      const { buffer: e26, size: i29, position: n37 } = this;
      return e26 && n37 < i29 ? ("number" != typeof t32 && (t32 = Number.POSITIVE_INFINITY), this.position = Math.min(i29, n37 + Math.min(i29 - n37, t32)), e26.subarray(n37, this.position)) : null;
    }
    readAt(t32, e26) {
      const i29 = this.buffer, n37 = Math.min(this.size, t32 + e26);
      return i29 ? i29.subarray(t32, n37) : new Uint8Array(e26);
    }
    close() {
      this.buffer && (this.buffer = null);
    }
    throw(t32) {
      return this.close(), { done: true, value: t32 };
    }
    return(t32) {
      return this.close(), { done: true, value: t32 };
    }
  };
  var rs2 = class extends ts2 {
    constructor(t32, e26) {
      super(), this.position = 0, this._handle = t32, "number" == typeof e26 ? this.size = e26 : this._pending = (() => s(this, void 0, void 0, function* () {
        this.size = (yield t32.stat()).size, delete this._pending;
      }))();
    }
    readInt32(t32) {
      return s(this, void 0, void 0, function* () {
        const { buffer: e26, byteOffset: i29 } = yield this.readAt(t32, 4);
        return new DataView(e26, i29).getInt32(0, true);
      });
    }
    seek(t32) {
      return s(this, void 0, void 0, function* () {
        return this._pending && (yield this._pending), this.position = Math.min(t32, this.size), t32 < this.size;
      });
    }
    read(t32) {
      return s(this, void 0, void 0, function* () {
        this._pending && (yield this._pending);
        const { _handle: e26, size: i29, position: n37 } = this;
        if (e26 && n37 < i29) {
          "number" != typeof t32 && (t32 = Number.POSITIVE_INFINITY);
          let r91 = n37, s29 = 0, o35 = 0;
          const a27 = Math.min(i29, r91 + Math.min(i29 - r91, t32)), l35 = new Uint8Array(Math.max(0, (this.position = a27) - r91));
          for (; (r91 += o35) < a27 && (s29 += o35) < l35.byteLength; )
            ({ bytesRead: o35 } = yield e26.read(l35, s29, l35.byteLength - s29, r91));
          return l35;
        }
        return null;
      });
    }
    readAt(t32, e26) {
      return s(this, void 0, void 0, function* () {
        this._pending && (yield this._pending);
        const { _handle: i29, size: n37 } = this;
        if (i29 && t32 + e26 < n37) {
          const r91 = Math.min(n37, t32 + e26), s29 = new Uint8Array(r91 - t32);
          return (yield i29.read(s29, 0, e26, t32)).buffer;
        }
        return new Uint8Array(e26);
      });
    }
    close() {
      return s(this, void 0, void 0, function* () {
        const t32 = this._handle;
        this._handle = null, t32 && (yield t32.close());
      });
    }
    throw(t32) {
      return s(this, void 0, void 0, function* () {
        return yield this.close(), { done: true, value: t32 };
      });
    }
    return(t32) {
      return s(this, void 0, void 0, function* () {
        return yield this.close(), { done: true, value: t32 };
      });
    }
  };
  function ss2(t32) {
    return t32 < 0 && (t32 = 4294967295 + t32 + 1), `0x${t32.toString(16)}`;
  }
  var os2 = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8];
  var as2 = class {
    constructor(t32) {
      this.buffer = t32;
    }
    high() {
      return this.buffer[1];
    }
    low() {
      return this.buffer[0];
    }
    _times(t32) {
      const e26 = new Uint32Array([this.buffer[1] >>> 16, 65535 & this.buffer[1], this.buffer[0] >>> 16, 65535 & this.buffer[0]]), i29 = new Uint32Array([t32.buffer[1] >>> 16, 65535 & t32.buffer[1], t32.buffer[0] >>> 16, 65535 & t32.buffer[0]]);
      let n37 = e26[3] * i29[3];
      this.buffer[0] = 65535 & n37;
      let r91 = n37 >>> 16;
      return n37 = e26[2] * i29[3], r91 += n37, n37 = e26[3] * i29[2] >>> 0, r91 += n37, this.buffer[0] += r91 << 16, this.buffer[1] = r91 >>> 0 < n37 ? 65536 : 0, this.buffer[1] += r91 >>> 16, this.buffer[1] += e26[1] * i29[3] + e26[2] * i29[2] + e26[3] * i29[1], this.buffer[1] += e26[0] * i29[3] + e26[1] * i29[2] + e26[2] * i29[1] + e26[3] * i29[0] << 16, this;
    }
    _plus(t32) {
      const e26 = this.buffer[0] + t32.buffer[0] >>> 0;
      this.buffer[1] += t32.buffer[1], e26 < this.buffer[0] >>> 0 && ++this.buffer[1], this.buffer[0] = e26;
    }
    lessThan(t32) {
      return this.buffer[1] < t32.buffer[1] || this.buffer[1] === t32.buffer[1] && this.buffer[0] < t32.buffer[0];
    }
    equals(t32) {
      return this.buffer[1] === t32.buffer[1] && this.buffer[0] == t32.buffer[0];
    }
    greaterThan(t32) {
      return t32.lessThan(this);
    }
    hex() {
      return `${ss2(this.buffer[1])} ${ss2(this.buffer[0])}`;
    }
  };
  var ls2 = class _ls extends as2 {
    times(t32) {
      return this._times(t32), this;
    }
    plus(t32) {
      return this._plus(t32), this;
    }
    static from(t32, e26 = new Uint32Array(2)) {
      return _ls.fromString("string" == typeof t32 ? t32 : t32.toString(), e26);
    }
    static fromNumber(t32, e26 = new Uint32Array(2)) {
      return _ls.fromString(t32.toString(), e26);
    }
    static fromString(t32, e26 = new Uint32Array(2)) {
      const i29 = t32.length, n37 = new _ls(e26);
      for (let e27 = 0; e27 < i29; ) {
        const r91 = 8 < i29 - e27 ? 8 : i29 - e27, s29 = new _ls(new Uint32Array([Number.parseInt(t32.slice(e27, e27 + r91), 10), 0])), o35 = new _ls(new Uint32Array([os2[r91], 0]));
        n37.times(o35), n37.plus(s29), e27 += r91;
      }
      return n37;
    }
    static convertArray(t32) {
      const e26 = new Uint32Array(2 * t32.length);
      for (let i29 = -1, n37 = t32.length; ++i29 < n37; )
        _ls.from(t32[i29], new Uint32Array(e26.buffer, e26.byteOffset + 2 * i29 * 4, 2));
      return e26;
    }
    static multiply(t32, e26) {
      return new _ls(new Uint32Array(t32.buffer)).times(e26);
    }
    static add(t32, e26) {
      return new _ls(new Uint32Array(t32.buffer)).plus(e26);
    }
  };
  var us2 = class _us extends as2 {
    negate() {
      return this.buffer[0] = 1 + ~this.buffer[0], this.buffer[1] = ~this.buffer[1], 0 == this.buffer[0] && ++this.buffer[1], this;
    }
    times(t32) {
      return this._times(t32), this;
    }
    plus(t32) {
      return this._plus(t32), this;
    }
    lessThan(t32) {
      const e26 = this.buffer[1] << 0, i29 = t32.buffer[1] << 0;
      return e26 < i29 || e26 === i29 && this.buffer[0] < t32.buffer[0];
    }
    static from(t32, e26 = new Uint32Array(2)) {
      return _us.fromString("string" == typeof t32 ? t32 : t32.toString(), e26);
    }
    static fromNumber(t32, e26 = new Uint32Array(2)) {
      return _us.fromString(t32.toString(), e26);
    }
    static fromString(t32, e26 = new Uint32Array(2)) {
      const i29 = t32.startsWith("-"), n37 = t32.length, r91 = new _us(e26);
      for (let e27 = i29 ? 1 : 0; e27 < n37; ) {
        const i30 = 8 < n37 - e27 ? 8 : n37 - e27, s29 = new _us(new Uint32Array([Number.parseInt(t32.slice(e27, e27 + i30), 10), 0])), o35 = new _us(new Uint32Array([os2[i30], 0]));
        r91.times(o35), r91.plus(s29), e27 += i30;
      }
      return i29 ? r91.negate() : r91;
    }
    static convertArray(t32) {
      const e26 = new Uint32Array(2 * t32.length);
      for (let i29 = -1, n37 = t32.length; ++i29 < n37; )
        _us.from(t32[i29], new Uint32Array(e26.buffer, e26.byteOffset + 2 * i29 * 4, 2));
      return e26;
    }
    static multiply(t32, e26) {
      return new _us(new Uint32Array(t32.buffer)).times(e26);
    }
    static add(t32, e26) {
      return new _us(new Uint32Array(t32.buffer)).plus(e26);
    }
  };
  var cs2 = class _cs {
    constructor(t32) {
      this.buffer = t32;
    }
    high() {
      return new us2(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));
    }
    low() {
      return new us2(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));
    }
    negate() {
      return this.buffer[0] = 1 + ~this.buffer[0], this.buffer[1] = ~this.buffer[1], this.buffer[2] = ~this.buffer[2], this.buffer[3] = ~this.buffer[3], 0 == this.buffer[0] && ++this.buffer[1], 0 == this.buffer[1] && ++this.buffer[2], 0 == this.buffer[2] && ++this.buffer[3], this;
    }
    times(t32) {
      const e26 = new ls2(new Uint32Array([this.buffer[3], 0])), i29 = new ls2(new Uint32Array([this.buffer[2], 0])), n37 = new ls2(new Uint32Array([this.buffer[1], 0])), r91 = new ls2(new Uint32Array([this.buffer[0], 0])), s29 = new ls2(new Uint32Array([t32.buffer[3], 0])), o35 = new ls2(new Uint32Array([t32.buffer[2], 0])), a27 = new ls2(new Uint32Array([t32.buffer[1], 0])), l35 = new ls2(new Uint32Array([t32.buffer[0], 0]));
      let u30 = ls2.multiply(r91, l35);
      this.buffer[0] = u30.low();
      const c30 = new ls2(new Uint32Array([u30.high(), 0]));
      u30 = ls2.multiply(n37, l35), c30.plus(u30), u30 = ls2.multiply(r91, a27), c30.plus(u30), this.buffer[1] = c30.low(), this.buffer[3] = c30.lessThan(u30) ? 1 : 0, this.buffer[2] = c30.high();
      return new ls2(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2)).plus(ls2.multiply(i29, l35)).plus(ls2.multiply(n37, a27)).plus(ls2.multiply(r91, o35)), this.buffer[3] += ls2.multiply(e26, l35).plus(ls2.multiply(i29, a27)).plus(ls2.multiply(n37, o35)).plus(ls2.multiply(r91, s29)).low(), this;
    }
    plus(t32) {
      const e26 = new Uint32Array(4);
      return e26[3] = this.buffer[3] + t32.buffer[3] >>> 0, e26[2] = this.buffer[2] + t32.buffer[2] >>> 0, e26[1] = this.buffer[1] + t32.buffer[1] >>> 0, e26[0] = this.buffer[0] + t32.buffer[0] >>> 0, e26[0] < this.buffer[0] >>> 0 && ++e26[1], e26[1] < this.buffer[1] >>> 0 && ++e26[2], e26[2] < this.buffer[2] >>> 0 && ++e26[3], this.buffer[3] = e26[3], this.buffer[2] = e26[2], this.buffer[1] = e26[1], this.buffer[0] = e26[0], this;
    }
    hex() {
      return `${ss2(this.buffer[3])} ${ss2(this.buffer[2])} ${ss2(this.buffer[1])} ${ss2(this.buffer[0])}`;
    }
    static multiply(t32, e26) {
      return new _cs(new Uint32Array(t32.buffer)).times(e26);
    }
    static add(t32, e26) {
      return new _cs(new Uint32Array(t32.buffer)).plus(e26);
    }
    static from(t32, e26 = new Uint32Array(4)) {
      return _cs.fromString("string" == typeof t32 ? t32 : t32.toString(), e26);
    }
    static fromNumber(t32, e26 = new Uint32Array(4)) {
      return _cs.fromString(t32.toString(), e26);
    }
    static fromString(t32, e26 = new Uint32Array(4)) {
      const i29 = t32.startsWith("-"), n37 = t32.length, r91 = new _cs(e26);
      for (let e27 = i29 ? 1 : 0; e27 < n37; ) {
        const i30 = 8 < n37 - e27 ? 8 : n37 - e27, s29 = new _cs(new Uint32Array([Number.parseInt(t32.slice(e27, e27 + i30), 10), 0, 0, 0])), o35 = new _cs(new Uint32Array([os2[i30], 0, 0, 0]));
        r91.times(o35), r91.plus(s29), e27 += i30;
      }
      return i29 ? r91.negate() : r91;
    }
    static convertArray(t32) {
      const e26 = new Uint32Array(4 * t32.length);
      for (let i29 = -1, n37 = t32.length; ++i29 < n37; )
        _cs.from(t32[i29], new Uint32Array(e26.buffer, e26.byteOffset + 16 * i29, 4));
      return e26;
    }
  };
  var hs2 = Object.freeze({ __proto__: null, BaseInt64: as2, Uint64: ls2, Int64: us2, Int128: cs2 });
  var ds2 = class extends Fe2 {
    constructor(t32, e26, i29, n37, r91 = W3.V5) {
      super(), this.nodesIndex = -1, this.buffersIndex = -1, this.bytes = t32, this.nodes = e26, this.buffers = i29, this.dictionaries = n37, this.metadataVersion = r91;
    }
    visit(t32) {
      return super.visit(t32 instanceof Pr2 ? t32.type : t32);
    }
    visitNull(t32, { length: e26 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26 });
    }
    visitBool(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitInt(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitFloat(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitUtf8(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), valueOffsets: this.readOffsets(t32), data: this.readData(t32) });
    }
    visitBinary(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), valueOffsets: this.readOffsets(t32), data: this.readData(t32) });
    }
    visitFixedSizeBinary(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitDate(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitTimestamp(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitTime(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitDecimal(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitList(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), valueOffsets: this.readOffsets(t32), child: this.visit(t32.children[0]) });
    }
    visitStruct(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), children: this.visitMany(t32.children) });
    }
    visitUnion(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return this.metadataVersion < W3.V5 && this.readNullBitmap(t32, i29), t32.mode === Y3.Sparse ? this.visitSparseUnion(t32, { length: e26, nullCount: i29 }) : this.visitDenseUnion(t32, { length: e26, nullCount: i29 });
    }
    visitDenseUnion(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26, nullCount: i29, typeIds: this.readTypeIds(t32), valueOffsets: this.readOffsets(t32), children: this.visitMany(t32.children) });
    }
    visitSparseUnion(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26, nullCount: i29, typeIds: this.readTypeIds(t32), children: this.visitMany(t32.children) });
    }
    visitDictionary(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32.indices), dictionary: this.readDictionary(t32) });
    }
    visitInterval(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitDuration(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitFixedSizeList(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), child: this.visit(t32.children[0]) });
    }
    visitMap(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return In2({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), valueOffsets: this.readOffsets(t32), child: this.visit(t32.children[0]) });
    }
    nextFieldNode() {
      return this.nodes[++this.nodesIndex];
    }
    nextBufferRange() {
      return this.buffers[++this.buffersIndex];
    }
    readNullBitmap(t32, e26, i29 = this.nextBufferRange()) {
      return e26 > 0 && this.readData(t32, i29) || new Uint8Array(0);
    }
    readOffsets(t32, e26) {
      return this.readData(t32, e26);
    }
    readTypeIds(t32, e26) {
      return this.readData(t32, e26);
    }
    readData(t32, { length: e26, offset: i29 } = this.nextBufferRange()) {
      return this.bytes.subarray(i29, i29 + e26);
    }
    readDictionary(t32) {
      return this.dictionaries.get(t32.id);
    }
  };
  var ps2 = class extends ds2 {
    constructor(t32, e26, i29, n37, r91) {
      super(new Uint8Array(0), e26, i29, n37, r91), this.sources = t32;
    }
    readNullBitmap(t32, e26, { offset: i29 } = this.nextBufferRange()) {
      return e26 <= 0 ? new Uint8Array(0) : pn2(this.sources[i29]);
    }
    readOffsets(t32, { offset: e26 } = this.nextBufferRange()) {
      return M3(Uint8Array, M3(Int32Array, this.sources[e26]));
    }
    readTypeIds(t32, { offset: e26 } = this.nextBufferRange()) {
      return M3(Uint8Array, M3(t32.ArrayType, this.sources[e26]));
    }
    readData(t32, { offset: e26 } = this.nextBufferRange()) {
      const { sources: i29 } = this;
      return Et3.isTimestamp(t32) || (Et3.isInt(t32) || Et3.isTime(t32)) && 64 === t32.bitWidth || Et3.isDuration(t32) || Et3.isDate(t32) && t32.unit === G3.MILLISECOND ? M3(Uint8Array, us2.convertArray(i29[e26])) : Et3.isDecimal(t32) ? M3(Uint8Array, cs2.convertArray(i29[e26])) : Et3.isBinary(t32) || Et3.isFixedSizeBinary(t32) ? function(t33) {
        const e27 = t33.join(""), i30 = new Uint8Array(e27.length / 2);
        for (let t34 = 0; t34 < e27.length; t34 += 2)
          i30[t34 >> 1] = Number.parseInt(e27.slice(t34, t34 + 2), 16);
        return i30;
      }(i29[e26]) : Et3.isBool(t32) ? pn2(i29[e26]) : Et3.isUtf8(t32) ? h6(i29[e26].join("")) : M3(Uint8Array, M3(t32.ArrayType, i29[e26].map((t33) => +t33)));
    }
  };
  var ys2 = class extends sr2 {
    constructor(t32) {
      super(t32), this._values = new Qn2(new Uint8Array(0));
    }
    get byteLength() {
      let t32 = this._pendingLength + 4 * this.length;
      return this._offsets && (t32 += this._offsets.byteLength), this._values && (t32 += this._values.byteLength), this._nulls && (t32 += this._nulls.byteLength), t32;
    }
    setValue(t32, e26) {
      return super.setValue(t32, L3(e26));
    }
    _flushPending(t32, e26) {
      const i29 = this._offsets, n37 = this._values.reserve(e26).buffer;
      let r91 = 0;
      for (const [e27, s29] of t32)
        if (void 0 === s29)
          i29.set(e27, 0);
        else {
          const t33 = s29.length;
          n37.set(s29, r91), i29.set(e27, t33), r91 += t33;
        }
    }
  };
  var fs2 = class extends nr2 {
    constructor(t32) {
      super(t32), this._values = new er2();
    }
    setValue(t32, e26) {
      this._values.set(t32, +e26);
    }
  };
  var bs2 = class extends rr2 {
  };
  bs2.prototype._setValue = Je2;
  var vs2 = class extends bs2 {
  };
  vs2.prototype._setValue = Ze;
  var gs2 = class extends bs2 {
  };
  gs2.prototype._setValue = Xe;
  var ms2 = class extends rr2 {
  };
  ms2.prototype._setValue = li;
  var _s2 = class extends nr2 {
    constructor({ type: t32, nullValues: e26, dictionaryHashFunction: i29 }) {
      super({ type: new Le2(t32.dictionary, t32.indices, t32.id, t32.isOrdered) }), this._nulls = null, this._dictionaryOffset = 0, this._keysToIndices = /* @__PURE__ */ Object.create(null), this.indices = Ao2({ type: this.type.indices, nullValues: e26 }), this.dictionary = Ao2({ type: this.type.dictionary, nullValues: null }), "function" == typeof i29 && (this.valueToKey = i29);
    }
    get values() {
      return this.indices.values;
    }
    get nullCount() {
      return this.indices.nullCount;
    }
    get nullBitmap() {
      return this.indices.nullBitmap;
    }
    get byteLength() {
      return this.indices.byteLength + this.dictionary.byteLength;
    }
    get reservedLength() {
      return this.indices.reservedLength + this.dictionary.reservedLength;
    }
    get reservedByteLength() {
      return this.indices.reservedByteLength + this.dictionary.reservedByteLength;
    }
    isValid(t32) {
      return this.indices.isValid(t32);
    }
    setValid(t32, e26) {
      const i29 = this.indices;
      return e26 = i29.setValid(t32, e26), this.length = i29.length, e26;
    }
    setValue(t32, e26) {
      const i29 = this._keysToIndices, n37 = this.valueToKey(e26);
      let r91 = i29[n37];
      return void 0 === r91 && (i29[n37] = r91 = this._dictionaryOffset + this.dictionary.append(e26).length - 1), this.indices.setValue(t32, r91);
    }
    flush() {
      const t32 = this.type, e26 = this._dictionary, i29 = this.dictionary.toVector(), n37 = this.indices.flush().clone(t32);
      return n37.dictionary = e26 ? e26.concat(i29) : i29, this.finished || (this._dictionaryOffset += i29.length), this._dictionary = n37.dictionary, this.clear(), n37;
    }
    finish() {
      return this.indices.finish(), this.dictionary.finish(), this._dictionaryOffset = 0, this._keysToIndices = /* @__PURE__ */ Object.create(null), super.finish();
    }
    clear() {
      return this.indices.clear(), this.dictionary.clear(), super.clear();
    }
    valueToKey(t32) {
      return "string" == typeof t32 ? t32 : `${t32}`;
    }
  };
  var ws2 = class extends rr2 {
  };
  ws2.prototype._setValue = Ke;
  var Is2 = class extends nr2 {
    setValue(t32, e26) {
      const [i29] = this.children, n37 = t32 * this.stride;
      for (let t33 = -1, r91 = e26.length; ++t33 < r91; )
        i29.set(n37 + t33, e26[t33]);
    }
    addChild(t32, e26 = "0") {
      if (this.numChildren > 0)
        throw new Error("FixedSizeListBuilder can only have one child.");
      const i29 = this.children.push(t32);
      return this.type = new Te3(this.type.listSize, new Pr2(e26, t32.type, true)), i29;
    }
  };
  var Ss2 = class extends rr2 {
    setValue(t32, e26) {
      this._values.set(t32, e26);
    }
  };
  var As2 = class extends Ss2 {
    setValue(t32, e26) {
      super.setValue(t32, ze2(e26));
    }
  };
  var Ds2 = class extends Ss2 {
  };
  var Bs2 = class extends Ss2 {
  };
  var Ts2 = class extends rr2 {
  };
  Ts2.prototype._setValue = hi2;
  var Os2 = class extends Ts2 {
  };
  Os2.prototype._setValue = di2;
  var Ms2 = class extends Ts2 {
  };
  Ms2.prototype._setValue = pi;
  var xs2 = class extends rr2 {
  };
  xs2.prototype._setValue = gi2;
  var Ls2 = class extends xs2 {
  };
  Ls2.prototype._setValue = yi;
  var Ns2 = class extends xs2 {
  };
  Ns2.prototype._setValue = fi2;
  var Fs2 = class extends xs2 {
  };
  Fs2.prototype._setValue = bi2;
  var Us2 = class extends xs2 {
  };
  Us2.prototype._setValue = vi2;
  var Es2 = class extends rr2 {
    setValue(t32, e26) {
      this._values.set(t32, e26);
    }
  };
  var Cs2 = class extends Es2 {
  };
  var Vs2 = class extends Es2 {
  };
  var Rs2 = class extends Es2 {
  };
  var zs2 = class extends Es2 {
  };
  var Ps2 = class extends Es2 {
  };
  var js2 = class extends Es2 {
  };
  var ks2 = class extends Es2 {
  };
  var $s2 = class extends Es2 {
  };
  var Ws2 = class extends sr2 {
    constructor(t32) {
      super(t32), this._offsets = new ir2();
    }
    addChild(t32, e26 = "0") {
      if (this.numChildren > 0)
        throw new Error("ListBuilder can only have one child.");
      return this.children[this.numChildren] = t32, this.type = new we2(new Pr2(e26, t32.type, true)), this.numChildren - 1;
    }
    _flushPending(t32) {
      const e26 = this._offsets, [i29] = this.children;
      for (const [n37, r91] of t32)
        if (void 0 === r91)
          e26.set(n37, 0);
        else {
          const t33 = r91, s29 = t33.length, o35 = e26.set(n37, s29).buffer[n37];
          for (let e27 = -1; ++e27 < s29; )
            i29.set(o35 + e27, t33[e27]);
        }
    }
  };
  var Ys2 = class extends sr2 {
    set(t32, e26) {
      return super.set(t32, e26);
    }
    setValue(t32, e26) {
      const i29 = e26 instanceof Map ? e26 : new Map(Object.entries(e26)), n37 = this._pending || (this._pending = /* @__PURE__ */ new Map()), r91 = n37.get(t32);
      r91 && (this._pendingLength -= r91.size), this._pendingLength += i29.size, n37.set(t32, i29);
    }
    addChild(t32, e26 = `${this.numChildren}`) {
      if (this.numChildren > 0)
        throw new Error("ListBuilder can only have one child.");
      return this.children[this.numChildren] = t32, this.type = new Oe3(new Pr2(e26, t32.type, true), this.type.keysSorted), this.numChildren - 1;
    }
    _flushPending(t32) {
      const e26 = this._offsets, [i29] = this.children;
      for (const [n37, r91] of t32)
        if (void 0 === r91)
          e26.set(n37, 0);
        else {
          let { [n37]: t33, [n37 + 1]: s29 } = e26.set(n37, r91.size).buffer;
          for (const e27 of r91.entries())
            if (i29.set(t33, e27), ++t33 >= s29)
              break;
        }
    }
  };
  var Hs2 = class extends nr2 {
    setValue(t32, e26) {
    }
    setValid(t32, e26) {
      return this.length = Math.max(t32 + 1, this.length), e26;
    }
  };
  var Gs2 = class extends nr2 {
    setValue(t32, e26) {
      const { children: i29, type: n37 } = this;
      switch (Array.isArray(e26) || e26.constructor) {
        case true:
          return n37.children.forEach((n38, r91) => i29[r91].set(t32, e26[r91]));
        case Map:
          return n37.children.forEach((n38, r91) => i29[r91].set(t32, e26.get(n38.name)));
        default:
          return n37.children.forEach((n38, r91) => i29[r91].set(t32, e26[n38.name]));
      }
    }
    setValid(t32, e26) {
      return super.setValid(t32, e26) || this.children.forEach((i29) => i29.setValid(t32, e26)), e26;
    }
    addChild(t32, e26 = `${this.numChildren}`) {
      const i29 = this.children.push(t32);
      return this.type = new Ie2([...this.type.children, new Pr2(e26, t32.type, true)]), i29;
    }
  };
  var Zs2 = class extends rr2 {
  };
  Zs2.prototype._setValue = ii2;
  var Xs2 = class extends Zs2 {
  };
  Xs2.prototype._setValue = qe;
  var Ks2 = class extends Zs2 {
  };
  Ks2.prototype._setValue = Qe;
  var Js2 = class extends Zs2 {
  };
  Js2.prototype._setValue = ti;
  var qs2 = class extends Zs2 {
  };
  qs2.prototype._setValue = ei;
  var Qs2 = class extends rr2 {
  };
  Qs2.prototype._setValue = ai;
  var to2 = class extends Qs2 {
  };
  to2.prototype._setValue = ni;
  var eo2 = class extends Qs2 {
  };
  eo2.prototype._setValue = ri;
  var io2 = class extends Qs2 {
  };
  io2.prototype._setValue = si2;
  var no2 = class extends Qs2 {
  };
  no2.prototype._setValue = oi;
  var ro2 = class extends nr2 {
    constructor(t32) {
      super(t32), this._typeIds = new tr2(new Int8Array(0), 1), "function" == typeof t32.valueToChildTypeId && (this._valueToChildTypeId = t32.valueToChildTypeId);
    }
    get typeIdToChildIndex() {
      return this.type.typeIdToChildIndex;
    }
    append(t32, e26) {
      return this.set(this.length, t32, e26);
    }
    set(t32, e26, i29) {
      return void 0 === i29 && (i29 = this._valueToChildTypeId(this, e26, t32)), this.setValue(t32, e26, i29), this;
    }
    setValue(t32, e26, i29) {
      this._typeIds.set(t32, i29);
      const n37 = this.type.typeIdToChildIndex[i29], r91 = this.children[n37];
      null == r91 || r91.set(t32, e26);
    }
    addChild(t32, e26 = `${this.children.length}`) {
      const i29 = this.children.push(t32), { type: { children: n37, mode: r91, typeIds: s29 } } = this, o35 = [...n37, new Pr2(e26, t32.type)];
      return this.type = new Se3(r91, [...s29, i29], o35), i29;
    }
    _valueToChildTypeId(t32, e26, i29) {
      throw new Error("Cannot map UnionBuilder value to child typeId. Pass the `childTypeId` as the second argument to unionBuilder.append(), or supply a `valueToChildTypeId` function as part of the UnionBuilder constructor options.");
    }
  };
  var so2 = class extends ro2 {
  };
  var oo2 = class extends ro2 {
    constructor(t32) {
      super(t32), this._offsets = new tr2(new Int32Array(0));
    }
    setValue(t32, e26, i29) {
      const n37 = this._typeIds.set(t32, i29).buffer[t32], r91 = this.getChildAt(this.type.typeIdToChildIndex[n37]), s29 = this._offsets.set(t32, r91.length).buffer[t32];
      null == r91 || r91.set(s29, e26);
    }
  };
  var ao2 = class extends sr2 {
    constructor(t32) {
      super(t32), this._values = new Qn2(new Uint8Array(0));
    }
    get byteLength() {
      let t32 = this._pendingLength + 4 * this.length;
      return this._offsets && (t32 += this._offsets.byteLength), this._values && (t32 += this._values.byteLength), this._nulls && (t32 += this._nulls.byteLength), t32;
    }
    setValue(t32, e26) {
      return super.setValue(t32, h6(e26));
    }
    _flushPending(t32, e26) {
    }
  };
  ao2.prototype._flushPending = ys2.prototype._flushPending;
  var lo2 = new class extends Fe2 {
    visitNull() {
      return Hs2;
    }
    visitBool() {
      return fs2;
    }
    visitInt() {
      return Es2;
    }
    visitInt8() {
      return Cs2;
    }
    visitInt16() {
      return Vs2;
    }
    visitInt32() {
      return Rs2;
    }
    visitInt64() {
      return zs2;
    }
    visitUint8() {
      return Ps2;
    }
    visitUint16() {
      return js2;
    }
    visitUint32() {
      return ks2;
    }
    visitUint64() {
      return $s2;
    }
    visitFloat() {
      return Ss2;
    }
    visitFloat16() {
      return As2;
    }
    visitFloat32() {
      return Ds2;
    }
    visitFloat64() {
      return Bs2;
    }
    visitUtf8() {
      return ao2;
    }
    visitBinary() {
      return ys2;
    }
    visitFixedSizeBinary() {
      return ws2;
    }
    visitDate() {
      return bs2;
    }
    visitDateDay() {
      return vs2;
    }
    visitDateMillisecond() {
      return gs2;
    }
    visitTimestamp() {
      return Zs2;
    }
    visitTimestampSecond() {
      return Xs2;
    }
    visitTimestampMillisecond() {
      return Ks2;
    }
    visitTimestampMicrosecond() {
      return Js2;
    }
    visitTimestampNanosecond() {
      return qs2;
    }
    visitTime() {
      return Qs2;
    }
    visitTimeSecond() {
      return to2;
    }
    visitTimeMillisecond() {
      return eo2;
    }
    visitTimeMicrosecond() {
      return io2;
    }
    visitTimeNanosecond() {
      return no2;
    }
    visitDecimal() {
      return ms2;
    }
    visitList() {
      return Ws2;
    }
    visitStruct() {
      return Gs2;
    }
    visitUnion() {
      return ro2;
    }
    visitDenseUnion() {
      return oo2;
    }
    visitSparseUnion() {
      return so2;
    }
    visitDictionary() {
      return _s2;
    }
    visitInterval() {
      return Ts2;
    }
    visitIntervalDayTime() {
      return Os2;
    }
    visitIntervalYearMonth() {
      return Ms2;
    }
    visitDuration() {
      return xs2;
    }
    visitDurationSecond() {
      return Ls2;
    }
    visitDurationMillisecond() {
      return Ns2;
    }
    visitDurationMicrosecond() {
      return Fs2;
    }
    visistDurationNanosecond() {
      return Us2;
    }
    visitFixedSizeList() {
      return Is2;
    }
    visitMap() {
      return Ys2;
    }
  }();
  var uo2 = class extends Fe2 {
    compareSchemas(t32, e26) {
      return t32 === e26 || e26 instanceof t32.constructor && this.compareManyFields(t32.fields, e26.fields);
    }
    compareManyFields(t32, e26) {
      return t32 === e26 || Array.isArray(t32) && Array.isArray(e26) && t32.length === e26.length && t32.every((t33, i29) => this.compareFields(t33, e26[i29]));
    }
    compareFields(t32, e26) {
      return t32 === e26 || e26 instanceof t32.constructor && t32.name === e26.name && t32.nullable === e26.nullable && this.visit(t32.type, e26.type);
    }
  };
  function co2(t32, e26) {
    return e26 instanceof t32.constructor;
  }
  function ho2(t32, e26) {
    return t32 === e26 || co2(t32, e26);
  }
  function po2(t32, e26) {
    return t32 === e26 || co2(t32, e26) && t32.bitWidth === e26.bitWidth && t32.isSigned === e26.isSigned;
  }
  function yo2(t32, e26) {
    return t32 === e26 || co2(t32, e26) && t32.precision === e26.precision;
  }
  function fo2(t32, e26) {
    return t32 === e26 || co2(t32, e26) && t32.unit === e26.unit;
  }
  function bo2(t32, e26) {
    return t32 === e26 || co2(t32, e26) && t32.unit === e26.unit && t32.timezone === e26.timezone;
  }
  function vo2(t32, e26) {
    return t32 === e26 || co2(t32, e26) && t32.unit === e26.unit && t32.bitWidth === e26.bitWidth;
  }
  function go2(t32, e26) {
    return t32 === e26 || co2(t32, e26) && t32.mode === e26.mode && t32.typeIds.every((t33, i29) => t33 === e26.typeIds[i29]) && wo2.compareManyFields(t32.children, e26.children);
  }
  function mo2(t32, e26) {
    return t32 === e26 || co2(t32, e26) && t32.unit === e26.unit;
  }
  function _o2(t32, e26) {
    return t32 === e26 || co2(t32, e26) && t32.unit === e26.unit;
  }
  uo2.prototype.visitNull = ho2, uo2.prototype.visitBool = ho2, uo2.prototype.visitInt = po2, uo2.prototype.visitInt8 = po2, uo2.prototype.visitInt16 = po2, uo2.prototype.visitInt32 = po2, uo2.prototype.visitInt64 = po2, uo2.prototype.visitUint8 = po2, uo2.prototype.visitUint16 = po2, uo2.prototype.visitUint32 = po2, uo2.prototype.visitUint64 = po2, uo2.prototype.visitFloat = yo2, uo2.prototype.visitFloat16 = yo2, uo2.prototype.visitFloat32 = yo2, uo2.prototype.visitFloat64 = yo2, uo2.prototype.visitUtf8 = ho2, uo2.prototype.visitBinary = ho2, uo2.prototype.visitFixedSizeBinary = function(t32, e26) {
    return t32 === e26 || co2(t32, e26) && t32.byteWidth === e26.byteWidth;
  }, uo2.prototype.visitDate = fo2, uo2.prototype.visitDateDay = fo2, uo2.prototype.visitDateMillisecond = fo2, uo2.prototype.visitTimestamp = bo2, uo2.prototype.visitTimestampSecond = bo2, uo2.prototype.visitTimestampMillisecond = bo2, uo2.prototype.visitTimestampMicrosecond = bo2, uo2.prototype.visitTimestampNanosecond = bo2, uo2.prototype.visitTime = vo2, uo2.prototype.visitTimeSecond = vo2, uo2.prototype.visitTimeMillisecond = vo2, uo2.prototype.visitTimeMicrosecond = vo2, uo2.prototype.visitTimeNanosecond = vo2, uo2.prototype.visitDecimal = ho2, uo2.prototype.visitList = function(t32, e26) {
    return t32 === e26 || co2(t32, e26) && t32.children.length === e26.children.length && wo2.compareManyFields(t32.children, e26.children);
  }, uo2.prototype.visitStruct = function(t32, e26) {
    return t32 === e26 || co2(t32, e26) && t32.children.length === e26.children.length && wo2.compareManyFields(t32.children, e26.children);
  }, uo2.prototype.visitUnion = go2, uo2.prototype.visitDenseUnion = go2, uo2.prototype.visitSparseUnion = go2, uo2.prototype.visitDictionary = function(t32, e26) {
    return t32 === e26 || co2(t32, e26) && t32.id === e26.id && t32.isOrdered === e26.isOrdered && wo2.visit(t32.indices, e26.indices) && wo2.visit(t32.dictionary, e26.dictionary);
  }, uo2.prototype.visitInterval = mo2, uo2.prototype.visitIntervalDayTime = mo2, uo2.prototype.visitIntervalYearMonth = mo2, uo2.prototype.visitDuration = _o2, uo2.prototype.visitDurationSecond = _o2, uo2.prototype.visitDurationMillisecond = _o2, uo2.prototype.visitDurationMicrosecond = _o2, uo2.prototype.visitDurationNanosecond = _o2, uo2.prototype.visitFixedSizeList = function(t32, e26) {
    return t32 === e26 || co2(t32, e26) && t32.listSize === e26.listSize && t32.children.length === e26.children.length && wo2.compareManyFields(t32.children, e26.children);
  }, uo2.prototype.visitMap = function(t32, e26) {
    return t32 === e26 || co2(t32, e26) && t32.keysSorted === e26.keysSorted && t32.children.length === e26.children.length && wo2.compareManyFields(t32.children, e26.children);
  };
  var wo2 = new uo2();
  function Io2(t32, e26) {
    return wo2.compareSchemas(t32, e26);
  }
  function So2(t32, e26) {
    return wo2.visit(t32, e26);
  }
  function Ao2(t32) {
    const e26 = t32.type, i29 = new (lo2.getVisitFn(e26)())(t32);
    if (e26.children && e26.children.length > 0) {
      const n37 = t32.children || [], r91 = { nullValues: t32.nullValues }, s29 = Array.isArray(n37) ? (t33, e27) => n37[e27] || r91 : ({ name: t33 }) => n37[t33] || r91;
      for (const [t33, n38] of e26.children.entries()) {
        const { type: e27 } = n38, r92 = s29(n38, t33);
        i29.children.push(Ao2(Object.assign(Object.assign({}, r92), { type: e27 })));
      }
    }
    return i29;
  }
  function xo2(t32, e26) {
    return function(t33, e27) {
      const i29 = [...t33.fields], n37 = [], r91 = { numBatches: e27.reduce((t34, e28) => Math.max(t34, e28.length), 0) };
      let s29 = 0, o35 = 0, a27 = -1;
      const l35 = e27.length;
      let u30, c30 = [];
      for (; r91.numBatches-- > 0; ) {
        for (o35 = Number.POSITIVE_INFINITY, a27 = -1; ++a27 < l35; )
          c30[a27] = u30 = e27[a27].shift(), o35 = Math.min(o35, u30 ? u30.length : o35);
        Number.isFinite(o35) && (c30 = Lo2(i29, o35, c30, e27, r91), o35 > 0 && (n37[s29++] = In2({ type: new Ie2(i29), length: o35, nullCount: 0, children: c30.slice() })));
      }
      return [t33 = t33.assign(i29), n37.map((e28) => new ko(t33, e28))];
    }(t32, e26.map((t33) => t33.data.concat()));
  }
  function Lo2(t32, e26, i29, n37, r91) {
    var s29;
    const o35 = (e26 + 63 & -64) >> 3;
    for (let a27 = -1, l35 = n37.length; ++a27 < l35; ) {
      const l36 = i29[a27], u30 = null == l36 ? void 0 : l36.length;
      if (u30 >= e26)
        u30 === e26 ? i29[a27] = l36 : (i29[a27] = l36.slice(0, e26), r91.numBatches = Math.max(r91.numBatches, n37[a27].unshift(l36.slice(e26, u30 - e26))));
      else {
        const n38 = t32[a27];
        t32[a27] = n38.clone({ nullable: true }), i29[a27] = null !== (s29 = null == l36 ? void 0 : l36._changeLengthAndBackfillNullBitmap(e26)) && void 0 !== s29 ? s29 : In2({ type: n38.type, length: e26, nullCount: e26, nullBitmap: new Uint8Array(o35) });
      }
    }
    return i29;
  }
  var No2;
  var Fo2;
  var Uo2;
  var Eo2;
  var Co2;
  var Vo2;
  var Ro2;
  var zo = class _zo {
    constructor(...t32) {
      var e26, i29;
      if (0 === t32.length)
        return this.batches = [], this.schema = new zr2([]), this._offsets = [0], this;
      let n37, r91;
      t32[0] instanceof zr2 && (n37 = t32.shift()), t32.at(-1) instanceof Uint32Array && (r91 = t32.pop());
      const s29 = (t33) => {
        if (t33) {
          if (t33 instanceof ko)
            return [t33];
          if (t33 instanceof _zo)
            return t33.batches;
          if (t33 instanceof mn2) {
            if (t33.type instanceof Ie2)
              return [new ko(new zr2(t33.type.children), t33)];
          } else {
            if (Array.isArray(t33))
              return t33.flatMap((t34) => s29(t34));
            if ("function" == typeof t33[Symbol.iterator])
              return [...t33].flatMap((t34) => s29(t34));
            if ("object" == typeof t33) {
              const e27 = Object.keys(t33), i30 = e27.map((e28) => new Zn2([t33[e28]])), n38 = new zr2(e27.map((t34, e28) => new Pr2(String(t34), i30[e28].type))), [, r92] = xo2(n38, i30);
              return 0 === r92.length ? [new ko(t33)] : r92;
            }
          }
        }
        return [];
      }, o35 = t32.flatMap((t33) => s29(t33));
      if (n37 = null !== (i29 = null != n37 ? n37 : null === (e26 = o35[0]) || void 0 === e26 ? void 0 : e26.schema) && void 0 !== i29 ? i29 : new zr2([]), !(n37 instanceof zr2))
        throw new TypeError("Table constructor expects a [Schema, RecordBatch[]] pair.");
      for (const t33 of o35) {
        if (!(t33 instanceof ko))
          throw new TypeError("Table constructor expects a [Schema, RecordBatch[]] pair.");
        if (!Io2(n37, t33.schema))
          throw new TypeError("Table and inner RecordBatch schemas must be equivalent.");
      }
      this.schema = n37, this.batches = o35, this._offsets = null != r91 ? r91 : Dn2(this.data);
    }
    get data() {
      return this.batches.map(({ data: t32 }) => t32);
    }
    get numCols() {
      return this.schema.fields.length;
    }
    get numRows() {
      return this.data.reduce((t32, e26) => t32 + e26.length, 0);
    }
    get nullCount() {
      return -1 === this._nullCount && (this._nullCount = An2(this.data)), this._nullCount;
    }
    isValid(t32) {
      return false;
    }
    get(t32) {
      return null;
    }
    set(t32, e26) {
    }
    indexOf(t32, e26) {
      return -1;
    }
    getByteLength(t32) {
      return 0;
    }
    [Symbol.iterator]() {
      return this.batches.length > 0 ? zn2.visit(new Zn2(this.data)) : new Array(0)[Symbol.iterator]();
    }
    toArray() {
      return [...this];
    }
    toString() {
      return `[
  ${this.toArray().join(",\n  ")}
]`;
    }
    concat(...t32) {
      const e26 = this.schema, i29 = this.data.concat(t32.flatMap(({ data: t33 }) => t33));
      return new _zo(e26, i29.map((t33) => new ko(e26, t33)));
    }
    slice(t32, e26) {
      const i29 = this.schema;
      [t32, e26] = rn2({ length: this.numRows }, t32, e26);
      const n37 = Bn2(this.data, this._offsets, t32, e26);
      return new _zo(i29, n37.map((t33) => new ko(i29, t33)));
    }
    getChild(t32) {
      return this.getChildAt(this.schema.fields.findIndex((e26) => e26.name === t32));
    }
    getChildAt(t32) {
      if (t32 > -1 && t32 < this.schema.fields.length) {
        const e26 = this.data.map((e27) => e27.children[t32]);
        if (0 === e26.length) {
          const { type: i29 } = this.schema.fields[t32], n37 = In2({ type: i29, length: 0, nullCount: 0 });
          e26.push(n37._changeLengthAndBackfillNullBitmap(this.numRows));
        }
        return new Zn2(e26);
      }
      return null;
    }
    setChild(t32, e26) {
      var i29;
      return this.setChildAt(null === (i29 = this.schema.fields) || void 0 === i29 ? void 0 : i29.findIndex((e27) => e27.name === t32), e26);
    }
    setChildAt(t32, e26) {
      let i29 = this.schema, n37 = [...this.batches];
      if (t32 > -1 && t32 < this.numCols) {
        e26 || (e26 = new Zn2([In2({ type: new Ct3(), length: this.numRows })]));
        const r91 = i29.fields.slice(), s29 = r91[t32].clone({ type: e26.type }), o35 = this.schema.fields.map((t33, e27) => this.getChildAt(e27));
        [r91[t32], o35[t32]] = [s29, e26], [i29, n37] = xo2(i29, o35);
      }
      return new _zo(i29, n37);
    }
    select(t32) {
      const e26 = this.schema.fields.reduce((t33, e27, i29) => t33.set(e27.name, i29), /* @__PURE__ */ new Map());
      return this.selectAt(t32.map((t33) => e26.get(t33)).filter((t33) => t33 > -1));
    }
    selectAt(t32) {
      const e26 = this.schema.selectAt(t32), i29 = this.batches.map((e27) => e27.selectAt(t32));
      return new _zo(e26, i29);
    }
    assign(t32) {
      const e26 = this.schema.fields, [i29, n37] = t32.schema.fields.reduce((t33, i30, n38) => {
        const [r92, s30] = t33, o35 = e26.findIndex((t34) => t34.name === i30.name);
        return ~o35 ? s30[o35] = n38 : r92.push(n38), t33;
      }, [[], []]), r91 = this.schema.assign(t32.schema), s29 = [...e26.map((t33, e27) => [e27, n37[e27]]).map(([e27, i30]) => void 0 === i30 ? this.getChildAt(e27) : t32.getChildAt(i30)), ...i29.map((e27) => t32.getChildAt(e27))].filter(Boolean);
      return new _zo(...xo2(r91, s29));
    }
  };
  No2 = Symbol.toStringTag, zo[No2] = ((t32) => (t32.schema = null, t32.batches = [], t32._offsets = new Uint32Array([0]), t32._nullCount = -1, t32[Symbol.isConcatSpreadable] = true, t32.isValid = Mn2(On2), t32.get = Mn2(Ki2.getVisitFn(J3.Struct)), t32.set = xn2(mi2.getVisitFn(J3.Struct)), t32.indexOf = Ln2(En2.getVisitFn(J3.Struct)), t32.getByteLength = Mn2(Wn2.getVisitFn(J3.Struct)), "Table"))(zo.prototype);
  var ko = class _ko {
    constructor(...t32) {
      switch (t32.length) {
        case 2:
          if ([this.schema] = t32, !(this.schema instanceof zr2))
            throw new TypeError("RecordBatch constructor expects a [Schema, Data] pair.");
          if ([, this.data = In2({ nullCount: 0, type: new Ie2(this.schema.fields), children: this.schema.fields.map((t33) => In2({ type: t33.type, nullCount: 0 })) })] = t32, !(this.data instanceof mn2))
            throw new TypeError("RecordBatch constructor expects a [Schema, Data] pair.");
          [this.schema, this.data] = $o(this.schema, this.data.children);
          break;
        case 1: {
          const [e26] = t32, { fields: i29, children: n37, length: r91 } = Object.keys(e26).reduce((t33, i30, n38) => (t33.children[n38] = e26[i30], t33.length = Math.max(t33.length, e26[i30].length), t33.fields[n38] = Pr2.new({ name: i30, type: e26[i30].type, nullable: true }), t33), { length: 0, fields: new Array(), children: new Array() }), s29 = new zr2(i29), o35 = In2({ type: new Ie2(i29), length: r91, children: n37, nullCount: 0 });
          [this.schema, this.data] = $o(s29, o35.children, r91);
          break;
        }
        default:
          throw new TypeError("RecordBatch constructor expects an Object mapping names to child Data, or a [Schema, Data] pair.");
      }
    }
    get dictionaries() {
      return this._dictionaries || (this._dictionaries = Wo2(this.schema.fields, this.data.children));
    }
    get numCols() {
      return this.schema.fields.length;
    }
    get numRows() {
      return this.data.length;
    }
    get nullCount() {
      return this.data.nullCount;
    }
    isValid(t32) {
      return this.data.getValid(t32);
    }
    get(t32) {
      return Ki2.visit(this.data, t32);
    }
    set(t32, e26) {
      return mi2.visit(this.data, t32, e26);
    }
    indexOf(t32, e26) {
      return En2.visit(this.data, t32, e26);
    }
    getByteLength(t32) {
      return Wn2.visit(this.data, t32);
    }
    [Symbol.iterator]() {
      return zn2.visit(new Zn2([this.data]));
    }
    toArray() {
      return [...this];
    }
    concat(...t32) {
      return new zo(this.schema, [this, ...t32]);
    }
    slice(t32, e26) {
      const [i29] = new Zn2([this.data]).slice(t32, e26).data;
      return new _ko(this.schema, i29);
    }
    getChild(t32) {
      var e26;
      return this.getChildAt(null === (e26 = this.schema.fields) || void 0 === e26 ? void 0 : e26.findIndex((e27) => e27.name === t32));
    }
    getChildAt(t32) {
      return t32 > -1 && t32 < this.schema.fields.length ? new Zn2([this.data.children[t32]]) : null;
    }
    setChild(t32, e26) {
      var i29;
      return this.setChildAt(null === (i29 = this.schema.fields) || void 0 === i29 ? void 0 : i29.findIndex((e27) => e27.name === t32), e26);
    }
    setChildAt(t32, e26) {
      let i29 = this.schema, n37 = this.data;
      if (t32 > -1 && t32 < this.numCols) {
        e26 || (e26 = new Zn2([In2({ type: new Ct3(), length: this.numRows })]));
        const r91 = i29.fields.slice(), s29 = n37.children.slice(), o35 = r91[t32].clone({ type: e26.type });
        [r91[t32], s29[t32]] = [o35, e26.data[0]], i29 = new zr2(r91, new Map(this.schema.metadata)), n37 = In2({ type: new Ie2(r91), children: s29 });
      }
      return new _ko(i29, n37);
    }
    select(t32) {
      const e26 = this.schema.select(t32), i29 = new Ie2(e26.fields), n37 = [];
      for (const e27 of t32) {
        const t33 = this.schema.fields.findIndex((t34) => t34.name === e27);
        ~t33 && (n37[t33] = this.data.children[t33]);
      }
      return new _ko(e26, In2({ type: i29, length: this.numRows, children: n37 }));
    }
    selectAt(t32) {
      const e26 = this.schema.selectAt(t32), i29 = t32.map((t33) => this.data.children[t33]).filter(Boolean), n37 = In2({ type: new Ie2(e26.fields), length: this.numRows, children: i29 });
      return new _ko(e26, n37);
    }
  };
  function $o(t32, e26, i29 = e26.reduce((t33, e27) => Math.max(t33, e27.length), 0)) {
    var n37;
    const r91 = [...t32.fields], s29 = [...e26], o35 = (i29 + 63 & -64) >> 3;
    for (const [a27, l35] of t32.fields.entries()) {
      const t33 = e26[a27];
      t33 && t33.length === i29 || (r91[a27] = l35.clone({ nullable: true }), s29[a27] = null !== (n37 = null == t33 ? void 0 : t33._changeLengthAndBackfillNullBitmap(i29)) && void 0 !== n37 ? n37 : In2({ type: l35.type, length: i29, nullCount: i29, nullBitmap: new Uint8Array(o35) }));
    }
    return [t32.assign(r91), In2({ type: new Ie2(r91), length: i29, children: s29 })];
  }
  function Wo2(t32, e26, i29 = /* @__PURE__ */ new Map()) {
    var n37, r91;
    if ((null !== (n37 = null == t32 ? void 0 : t32.length) && void 0 !== n37 ? n37 : 0) > 0 && (null == t32 ? void 0 : t32.length) === (null == e26 ? void 0 : e26.length))
      for (let n38 = -1, s29 = t32.length; ++n38 < s29; ) {
        const { type: s30 } = t32[n38], o35 = e26[n38];
        for (const t33 of [o35, ...(null === (r91 = null == o35 ? void 0 : o35.dictionary) || void 0 === r91 ? void 0 : r91.data) || []])
          Wo2(s30.children, null == t33 ? void 0 : t33.children, i29);
        if (Et3.isDictionary(s30)) {
          const { id: t33 } = s30;
          if (i29.has(t33)) {
            if (i29.get(t33) !== o35.dictionary)
              throw new Error("Cannot create Schema containing two different dictionaries with the same Id");
          } else
            (null == o35 ? void 0 : o35.dictionary) && i29.set(t33, o35.dictionary);
        }
      }
    return i29;
  }
  Fo2 = Symbol.toStringTag, ko[Fo2] = ((t32) => (t32._nullCount = -1, t32[Symbol.isConcatSpreadable] = true, "RecordBatch"))(ko.prototype);
  var Yo2 = class extends ko {
    constructor(t32) {
      const e26 = t32.fields.map((t33) => In2({ type: t33.type }));
      super(t32, In2({ type: new Ie2(t32.fields), nullCount: 0, children: e26 }));
    }
  };
  !function(t32) {
    t32[t32.BUFFER = 0] = "BUFFER";
  }(Uo2 || (Uo2 = {})), function(t32) {
    t32[t32.LZ4_FRAME = 0] = "LZ4_FRAME", t32[t32.ZSTD = 1] = "ZSTD";
  }(Eo2 || (Eo2 = {}));
  var Ho2 = class _Ho {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsBodyCompression(t32, e26) {
      return (e26 || new _Ho()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsBodyCompression(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Ho()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    codec() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt8(this.bb_pos + t32) : Eo2.LZ4_FRAME;
    }
    method() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.readInt8(this.bb_pos + t32) : Uo2.BUFFER;
    }
    static startBodyCompression(t32) {
      t32.startObject(2);
    }
    static addCodec(t32, e26) {
      t32.addFieldInt8(0, e26, Eo2.LZ4_FRAME);
    }
    static addMethod(t32, e26) {
      t32.addFieldInt8(1, e26, Uo2.BUFFER);
    }
    static endBodyCompression(t32) {
      return t32.endObject();
    }
    static createBodyCompression(t32, e26, i29) {
      return _Ho.startBodyCompression(t32), _Ho.addCodec(t32, e26), _Ho.addMethod(t32, i29), _Ho.endBodyCompression(t32);
    }
  };
  var Go2 = class {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    offset() {
      return this.bb.readInt64(this.bb_pos);
    }
    length() {
      return this.bb.readInt64(this.bb_pos + 8);
    }
    static sizeOf() {
      return 16;
    }
    static createBuffer(t32, e26, i29) {
      return t32.prep(8, 16), t32.writeInt64(BigInt(null != i29 ? i29 : 0)), t32.writeInt64(BigInt(null != e26 ? e26 : 0)), t32.offset();
    }
  };
  var Zo2 = class {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    length() {
      return this.bb.readInt64(this.bb_pos);
    }
    nullCount() {
      return this.bb.readInt64(this.bb_pos + 8);
    }
    static sizeOf() {
      return 16;
    }
    static createFieldNode(t32, e26, i29) {
      return t32.prep(8, 16), t32.writeInt64(BigInt(null != i29 ? i29 : 0)), t32.writeInt64(BigInt(null != e26 ? e26 : 0)), t32.offset();
    }
  };
  var Xo = class _Xo {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsRecordBatch(t32, e26) {
      return (e26 || new _Xo()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsRecordBatch(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Xo()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    length() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt64(this.bb_pos + t32) : BigInt("0");
    }
    nodes(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 6);
      return i29 ? (e26 || new Zo2()).__init(this.bb.__vector(this.bb_pos + i29) + 16 * t32, this.bb) : null;
    }
    nodesLength() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    buffers(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 8);
      return i29 ? (e26 || new Go2()).__init(this.bb.__vector(this.bb_pos + i29) + 16 * t32, this.bb) : null;
    }
    buffersLength() {
      const t32 = this.bb.__offset(this.bb_pos, 8);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    compression(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 10);
      return e26 ? (t32 || new Ho2()).__init(this.bb.__indirect(this.bb_pos + e26), this.bb) : null;
    }
    static startRecordBatch(t32) {
      t32.startObject(4);
    }
    static addLength(t32, e26) {
      t32.addFieldInt64(0, e26, BigInt("0"));
    }
    static addNodes(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static startNodesVector(t32, e26) {
      t32.startVector(16, e26, 8);
    }
    static addBuffers(t32, e26) {
      t32.addFieldOffset(2, e26, 0);
    }
    static startBuffersVector(t32, e26) {
      t32.startVector(16, e26, 8);
    }
    static addCompression(t32, e26) {
      t32.addFieldOffset(3, e26, 0);
    }
    static endRecordBatch(t32) {
      return t32.endObject();
    }
  };
  var Ko = class _Ko {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsDictionaryBatch(t32, e26) {
      return (e26 || new _Ko()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsDictionaryBatch(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Ko()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    id() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt64(this.bb_pos + t32) : BigInt("0");
    }
    data(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 6);
      return e26 ? (t32 || new Xo()).__init(this.bb.__indirect(this.bb_pos + e26), this.bb) : null;
    }
    isDelta() {
      const t32 = this.bb.__offset(this.bb_pos, 8);
      return !!t32 && !!this.bb.readInt8(this.bb_pos + t32);
    }
    static startDictionaryBatch(t32) {
      t32.startObject(3);
    }
    static addId(t32, e26) {
      t32.addFieldInt64(0, e26, BigInt("0"));
    }
    static addData(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static addIsDelta(t32, e26) {
      t32.addFieldInt8(2, +e26, 0);
    }
    static endDictionaryBatch(t32) {
      return t32.endObject();
    }
  };
  !function(t32) {
    t32[t32.Row = 0] = "Row", t32[t32.Column = 1] = "Column";
  }(Co2 || (Co2 = {})), function(t32) {
    t32[t32.NONE = 0] = "NONE", t32[t32.SparseTensorIndexCOO = 1] = "SparseTensorIndexCOO", t32[t32.SparseMatrixIndexCSX = 2] = "SparseMatrixIndexCSX", t32[t32.SparseTensorIndexCSF = 3] = "SparseTensorIndexCSF";
  }(Vo2 || (Vo2 = {})), function(t32) {
    t32[t32.NONE = 0] = "NONE", t32[t32.Schema = 1] = "Schema", t32[t32.DictionaryBatch = 2] = "DictionaryBatch", t32[t32.RecordBatch = 3] = "RecordBatch", t32[t32.Tensor = 4] = "Tensor", t32[t32.SparseTensor = 5] = "SparseTensor";
  }(Ro2 || (Ro2 = {}));
  var Jo2 = class _Jo {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsMessage(t32, e26) {
      return (e26 || new _Jo()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsMessage(t32, e26) {
      return t32.setPosition(t32.position() + i3), (e26 || new _Jo()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    version() {
      const t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : lr2.V1;
    }
    headerType() {
      const t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.readUint8(this.bb_pos + t32) : Ro2.NONE;
    }
    header(t32) {
      const e26 = this.bb.__offset(this.bb_pos, 8);
      return e26 ? this.bb.__union(t32, this.bb_pos + e26) : null;
    }
    bodyLength() {
      const t32 = this.bb.__offset(this.bb_pos, 10);
      return t32 ? this.bb.readInt64(this.bb_pos + t32) : BigInt("0");
    }
    customMetadata(t32, e26) {
      const i29 = this.bb.__offset(this.bb_pos, 12);
      return i29 ? (e26 || new ar2()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + i29) + 4 * t32), this.bb) : null;
    }
    customMetadataLength() {
      const t32 = this.bb.__offset(this.bb_pos, 12);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    static startMessage(t32) {
      t32.startObject(5);
    }
    static addVersion(t32, e26) {
      t32.addFieldInt16(0, e26, lr2.V1);
    }
    static addHeaderType(t32, e26) {
      t32.addFieldInt8(1, e26, Ro2.NONE);
    }
    static addHeader(t32, e26) {
      t32.addFieldOffset(2, e26, 0);
    }
    static addBodyLength(t32, e26) {
      t32.addFieldInt64(3, e26, BigInt("0"));
    }
    static addCustomMetadata(t32, e26) {
      t32.addFieldOffset(4, e26, 0);
    }
    static createCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addOffset(e26[i29]);
      return t32.endVector();
    }
    static startCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static endMessage(t32) {
      return t32.endObject();
    }
    static finishMessageBuffer(t32, e26) {
      t32.finish(e26);
    }
    static finishSizePrefixedMessageBuffer(t32, e26) {
      t32.finish(e26, void 0, true);
    }
    static createMessage(t32, e26, i29, n37, r91, s29) {
      return _Jo.startMessage(t32), _Jo.addVersion(t32, e26), _Jo.addHeaderType(t32, i29), _Jo.addHeader(t32, n37), _Jo.addBodyLength(t32, r91), _Jo.addCustomMetadata(t32, s29), _Jo.endMessage(t32);
    }
  };
  var qo2 = new class extends Fe2 {
    visit(t32, e26) {
      return null == t32 || null == e26 ? void 0 : super.visit(t32, e26);
    }
    visitNull(t32, e26) {
      return xr2.startNull(e26), xr2.endNull(e26);
    }
    visitInt(t32, e26) {
      return vr2.startInt(e26), vr2.addBitWidth(e26, t32.bitWidth), vr2.addIsSigned(e26, t32.isSigned), vr2.endInt(e26);
    }
    visitFloat(t32, e26) {
      return Br2.startFloatingPoint(e26), Br2.addPrecision(e26, t32.precision), Br2.endFloatingPoint(e26);
    }
    visitBinary(t32, e26) {
      return mr2.startBinary(e26), mr2.endBinary(e26);
    }
    visitBool(t32, e26) {
      return _r2.startBool(e26), _r2.endBool(e26);
    }
    visitUtf8(t32, e26) {
      return Er2.startUtf8(e26), Er2.endUtf8(e26);
    }
    visitDecimal(t32, e26) {
      return Ir2.startDecimal(e26), Ir2.addScale(e26, t32.scale), Ir2.addPrecision(e26, t32.precision), Ir2.addBitWidth(e26, t32.bitWidth), Ir2.endDecimal(e26);
    }
    visitDate(t32, e26) {
      return wr2.startDate(e26), wr2.addUnit(e26, t32.unit), wr2.endDate(e26);
    }
    visitTime(t32, e26) {
      return Nr2.startTime(e26), Nr2.addUnit(e26, t32.unit), Nr2.addBitWidth(e26, t32.bitWidth), Nr2.endTime(e26);
    }
    visitTimestamp(t32, e26) {
      const i29 = t32.timezone && e26.createString(t32.timezone) || void 0;
      return Fr2.startTimestamp(e26), Fr2.addUnit(e26, t32.unit), void 0 !== i29 && Fr2.addTimezone(e26, i29), Fr2.endTimestamp(e26);
    }
    visitInterval(t32, e26) {
      return Tr2.startInterval(e26), Tr2.addUnit(e26, t32.unit), Tr2.endInterval(e26);
    }
    visitDuration(t32, e26) {
      return Sr2.startDuration(e26), Sr2.addUnit(e26, t32.unit), Sr2.endDuration(e26);
    }
    visitList(t32, e26) {
      return Or2.startList(e26), Or2.endList(e26);
    }
    visitStruct(t32, e26) {
      return Lr2.startStruct_(e26), Lr2.endStruct_(e26);
    }
    visitUnion(t32, e26) {
      Ur2.startTypeIdsVector(e26, t32.typeIds.length);
      const i29 = Ur2.createTypeIdsVector(e26, t32.typeIds);
      return Ur2.startUnion(e26), Ur2.addMode(e26, t32.mode), Ur2.addTypeIds(e26, i29), Ur2.endUnion(e26);
    }
    visitDictionary(t32, e26) {
      const i29 = this.visit(t32.indices, e26);
      return gr2.startDictionaryEncoding(e26), gr2.addId(e26, BigInt(t32.id)), gr2.addIsOrdered(e26, t32.isOrdered), void 0 !== i29 && gr2.addIndexType(e26, i29), gr2.endDictionaryEncoding(e26);
    }
    visitFixedSizeBinary(t32, e26) {
      return Ar2.startFixedSizeBinary(e26), Ar2.addByteWidth(e26, t32.byteWidth), Ar2.endFixedSizeBinary(e26);
    }
    visitFixedSizeList(t32, e26) {
      return Dr2.startFixedSizeList(e26), Dr2.addListSize(e26, t32.listSize), Dr2.endFixedSizeList(e26);
    }
    visitMap(t32, e26) {
      return Mr2.startMap(e26), Mr2.addKeysSorted(e26, t32.keysSorted), Mr2.endMap(e26);
    }
  }();
  function Qo2(t32) {
    return new ua2(t32.count, ea2(t32.columns), ia2(t32.columns));
  }
  function ta2(t32, e26) {
    return (t32.children || []).filter(Boolean).map((t33) => Pr2.fromJSON(t33, e26));
  }
  function ea2(t32) {
    return (t32 || []).reduce((t33, e26) => {
      return [...t33, new da2(e26.count, (i29 = e26.VALIDITY, (i29 || []).reduce((t34, e27) => t34 + +(0 === e27), 0))), ...ea2(e26.children)];
      var i29;
    }, []);
  }
  function ia2(t32, e26 = []) {
    for (let i29 = -1, n37 = (t32 || []).length; ++i29 < n37; ) {
      const n38 = t32[i29];
      n38.VALIDITY && e26.push(new ha2(e26.length, n38.VALIDITY.length)), n38.TYPE_ID && e26.push(new ha2(e26.length, n38.TYPE_ID.length)), n38.OFFSET && e26.push(new ha2(e26.length, n38.OFFSET.length)), n38.DATA && e26.push(new ha2(e26.length, n38.DATA.length)), e26 = ia2(n38.children, e26);
    }
    return e26;
  }
  function na2(t32 = []) {
    return new Map(t32.map(({ key: t33, value: e26 }) => [t33, e26]));
  }
  function ra2(t32) {
    return new Vt3(t32.isSigned, t32.bitWidth);
  }
  function sa2(t32, e26) {
    const i29 = t32.type.name;
    switch (i29) {
      case "NONE":
      case "null":
        return new Ct3();
      case "binary":
        return new Kt3();
      case "utf8":
        return new Jt2();
      case "bool":
        return new qt3();
      case "list":
        return new we2((e26 || [])[0]);
      case "struct":
      case "struct_":
        return new Ie2(e26 || []);
    }
    switch (i29) {
      case "int": {
        const e27 = t32.type;
        return new Vt3(e27.isSigned, e27.bitWidth);
      }
      case "floatingpoint": {
        const e27 = t32.type;
        return new Ht3(H3[e27.precision]);
      }
      case "decimal": {
        const e27 = t32.type;
        return new Qt2(e27.scale, e27.precision, e27.bitWidth);
      }
      case "date": {
        const e27 = t32.type;
        return new te3(G3[e27.unit]);
      }
      case "time": {
        const e27 = t32.type;
        return new ne2(Z3[e27.unit], e27.bitWidth);
      }
      case "timestamp": {
        const e27 = t32.type;
        return new le3(Z3[e27.unit], e27.timezone);
      }
      case "interval": {
        const e27 = t32.type;
        return new pe3(X3[e27.unit]);
      }
      case "duration": {
        const e27 = t32.type;
        return new be2(Z3[e27.unit]);
      }
      case "union": {
        const i30 = t32.type, [n37, ...r91] = (i30.mode + "").toLowerCase(), s29 = n37.toUpperCase() + r91.join("");
        return new Se3(Y3[s29], i30.typeIds || [], e26 || []);
      }
      case "fixedsizebinary": {
        const e27 = t32.type;
        return new Be2(e27.byteWidth);
      }
      case "fixedsizelist": {
        const i30 = t32.type;
        return new Te3(i30.listSize, (e26 || [])[0]);
      }
      case "map": {
        const i30 = t32.type;
        return new Oe3((e26 || [])[0], i30.keysSorted);
      }
    }
    throw new Error(`Unrecognized type: "${i29}"`);
  }
  var oa2 = d3;
  var aa2 = l4;
  var la2 = class _la {
    static fromJSON(t32, e26) {
      const i29 = new _la(0, W3.V5, e26);
      return i29._createHeader = /* @__PURE__ */ function(t33, e27) {
        return () => {
          switch (e27) {
            case K3.Schema:
              return zr2.fromJSON(t33);
            case K3.RecordBatch:
              return ua2.fromJSON(t33);
            case K3.DictionaryBatch:
              return ca2.fromJSON(t33);
          }
          throw new Error(`Unrecognized Message type: { name: ${K3[e27]}, type: ${e27} }`);
        };
      }(t32, e26), i29;
    }
    static decode(t32) {
      t32 = new aa2(L3(t32));
      const e26 = Jo2.getRootAsMessage(t32), i29 = e26.bodyLength(), n37 = e26.version(), r91 = e26.headerType(), s29 = new _la(i29, n37, r91);
      return s29._createHeader = /* @__PURE__ */ function(t33, e27) {
        return () => {
          switch (e27) {
            case K3.Schema:
              return zr2.decode(t33.header(new Vr2()), /* @__PURE__ */ new Map(), t33.version());
            case K3.RecordBatch:
              return ua2.decode(t33.header(new Xo()), t33.version());
            case K3.DictionaryBatch:
              return ca2.decode(t33.header(new Ko()), t33.version());
          }
          throw new Error(`Unrecognized Message type: { name: ${K3[e27]}, type: ${e27} }`);
        };
      }(e26, r91), s29;
    }
    static encode(t32) {
      const e26 = new oa2();
      let i29 = -1;
      return t32.isSchema() ? i29 = zr2.encode(e26, t32.header()) : t32.isRecordBatch() ? i29 = ua2.encode(e26, t32.header()) : t32.isDictionaryBatch() && (i29 = ca2.encode(e26, t32.header())), Jo2.startMessage(e26), Jo2.addVersion(e26, W3.V5), Jo2.addHeader(e26, i29), Jo2.addHeaderType(e26, t32.headerType), Jo2.addBodyLength(e26, BigInt(t32.bodyLength)), Jo2.finishMessageBuffer(e26, Jo2.endMessage(e26)), e26.asUint8Array();
    }
    static from(t32, e26 = 0) {
      if (t32 instanceof zr2)
        return new _la(0, W3.V5, K3.Schema, t32);
      if (t32 instanceof ua2)
        return new _la(e26, W3.V5, K3.RecordBatch, t32);
      if (t32 instanceof ca2)
        return new _la(e26, W3.V5, K3.DictionaryBatch, t32);
      throw new Error(`Unrecognized Message header: ${t32}`);
    }
    get type() {
      return this.headerType;
    }
    get version() {
      return this._version;
    }
    get headerType() {
      return this._headerType;
    }
    get bodyLength() {
      return this._bodyLength;
    }
    header() {
      return this._createHeader();
    }
    isSchema() {
      return this.headerType === K3.Schema;
    }
    isRecordBatch() {
      return this.headerType === K3.RecordBatch;
    }
    isDictionaryBatch() {
      return this.headerType === K3.DictionaryBatch;
    }
    constructor(t32, e26, i29, n37) {
      this._version = e26, this._headerType = i29, this.body = new Uint8Array(0), n37 && (this._createHeader = () => n37), this._bodyLength = Ut3(t32);
    }
  };
  var ua2 = class {
    get nodes() {
      return this._nodes;
    }
    get length() {
      return this._length;
    }
    get buffers() {
      return this._buffers;
    }
    constructor(t32, e26, i29) {
      this._nodes = e26, this._buffers = i29, this._length = Ut3(t32);
    }
  };
  var ca2 = class {
    get id() {
      return this._id;
    }
    get data() {
      return this._data;
    }
    get isDelta() {
      return this._isDelta;
    }
    get length() {
      return this.data.length;
    }
    get nodes() {
      return this.data.nodes;
    }
    get buffers() {
      return this.data.buffers;
    }
    constructor(t32, e26, i29 = false) {
      this._data = t32, this._isDelta = i29, this._id = Ut3(e26);
    }
  };
  var ha2 = class {
    constructor(t32, e26) {
      this.offset = Ut3(t32), this.length = Ut3(e26);
    }
  };
  var da2 = class {
    constructor(t32, e26) {
      this.length = Ut3(t32), this.nullCount = Ut3(e26);
    }
  };
  function pa2(t32, e26) {
    const i29 = [];
    for (let n37, r91 = -1, s29 = -1, o35 = t32.childrenLength(); ++r91 < o35; )
      (n37 = t32.children(r91)) && (i29[++s29] = Pr2.decode(n37, e26));
    return i29;
  }
  function ya2(t32) {
    const e26 = /* @__PURE__ */ new Map();
    if (t32)
      for (let i29, n37, r91 = -1, s29 = Math.trunc(t32.customMetadataLength()); ++r91 < s29; )
        (i29 = t32.customMetadata(r91)) && null != (n37 = i29.key()) && e26.set(n37, i29.value());
    return e26;
  }
  function fa2(t32) {
    return new Vt3(t32.isSigned(), t32.bitWidth());
  }
  function ba2(t32, e26) {
    const i29 = t32.typeType();
    switch (i29) {
      case br2.NONE:
      case br2.Null:
        return new Ct3();
      case br2.Binary:
        return new Kt3();
      case br2.Utf8:
        return new Jt2();
      case br2.Bool:
        return new qt3();
      case br2.List:
        return new we2((e26 || [])[0]);
      case br2.Struct_:
        return new Ie2(e26 || []);
    }
    switch (i29) {
      case br2.Int: {
        const e27 = t32.type(new vr2());
        return new Vt3(e27.isSigned(), e27.bitWidth());
      }
      case br2.FloatingPoint: {
        const e27 = t32.type(new Br2());
        return new Ht3(e27.precision());
      }
      case br2.Decimal: {
        const e27 = t32.type(new Ir2());
        return new Qt2(e27.scale(), e27.precision(), e27.bitWidth());
      }
      case br2.Date: {
        const e27 = t32.type(new wr2());
        return new te3(e27.unit());
      }
      case br2.Time: {
        const e27 = t32.type(new Nr2());
        return new ne2(e27.unit(), e27.bitWidth());
      }
      case br2.Timestamp: {
        const e27 = t32.type(new Fr2());
        return new le3(e27.unit(), e27.timezone());
      }
      case br2.Interval: {
        const e27 = t32.type(new Tr2());
        return new pe3(e27.unit());
      }
      case br2.Duration: {
        const e27 = t32.type(new Sr2());
        return new be2(e27.unit());
      }
      case br2.Union: {
        const i30 = t32.type(new Ur2());
        return new Se3(i30.mode(), i30.typeIdsArray() || [], e26 || []);
      }
      case br2.FixedSizeBinary: {
        const e27 = t32.type(new Ar2());
        return new Be2(e27.byteWidth());
      }
      case br2.FixedSizeList: {
        const i30 = t32.type(new Dr2());
        return new Te3(i30.listSize(), (e26 || [])[0]);
      }
      case br2.Map: {
        const i30 = t32.type(new Mr2());
        return new Oe3((e26 || [])[0], i30.keysSorted());
      }
    }
    throw new Error(`Unrecognized type: "${br2[i29]}" (${i29})`);
  }
  Pr2.encode = function(t32, e26) {
    let i29 = -1, n37 = -1, r91 = -1;
    const s29 = e26.type;
    let o35 = e26.typeId;
    Et3.isDictionary(s29) ? (o35 = s29.dictionary.typeId, r91 = qo2.visit(s29, t32), n37 = qo2.visit(s29.dictionary, t32)) : n37 = qo2.visit(s29, t32);
    const a27 = (s29.children || []).map((e27) => Pr2.encode(t32, e27)), l35 = Cr2.createChildrenVector(t32, a27), u30 = e26.metadata && e26.metadata.size > 0 ? Cr2.createCustomMetadataVector(t32, [...e26.metadata].map(([e27, i30]) => {
      const n38 = t32.createString(`${e27}`), r92 = t32.createString(`${i30}`);
      return ar2.startKeyValue(t32), ar2.addKey(t32, n38), ar2.addValue(t32, r92), ar2.endKeyValue(t32);
    })) : -1;
    e26.name && (i29 = t32.createString(e26.name));
    Cr2.startField(t32), Cr2.addType(t32, n37), Cr2.addTypeType(t32, o35), Cr2.addChildren(t32, l35), Cr2.addNullable(t32, !!e26.nullable), -1 !== i29 && Cr2.addName(t32, i29);
    -1 !== r91 && Cr2.addDictionary(t32, r91);
    -1 !== u30 && Cr2.addCustomMetadata(t32, u30);
    return Cr2.endField(t32);
  }, Pr2.decode = function(t32, e26) {
    let i29, n37, r91, s29, o35, a27;
    e26 && (a27 = t32.dictionary()) ? e26.has(i29 = Ut3(a27.id())) ? (s29 = (s29 = a27.indexType()) ? fa2(s29) : new Pt3(), o35 = new Le2(e26.get(i29), s29, i29, a27.isOrdered()), n37 = new Pr2(t32.name(), o35, t32.nullable(), ya2(t32))) : (s29 = (s29 = a27.indexType()) ? fa2(s29) : new Pt3(), e26.set(i29, r91 = ba2(t32, pa2(t32, e26))), o35 = new Le2(r91, s29, i29, a27.isOrdered()), n37 = new Pr2(t32.name(), o35, t32.nullable(), ya2(t32))) : (r91 = ba2(t32, pa2(t32, e26)), n37 = new Pr2(t32.name(), r91, t32.nullable(), ya2(t32)));
    return n37 || null;
  }, Pr2.fromJSON = function(t32, e26) {
    let i29, n37, r91, s29, o35, a27;
    return e26 && (s29 = t32.dictionary) ? e26.has(i29 = s29.id) ? (n37 = (n37 = s29.indexType) ? ra2(n37) : new Pt3(), a27 = new Le2(e26.get(i29), n37, i29, s29.isOrdered), r91 = new Pr2(t32.name, a27, t32.nullable, na2(t32.metadata))) : (n37 = (n37 = s29.indexType) ? ra2(n37) : new Pt3(), e26.set(i29, o35 = sa2(t32, ta2(t32, e26))), a27 = new Le2(o35, n37, i29, s29.isOrdered), r91 = new Pr2(t32.name, a27, t32.nullable, na2(t32.metadata))) : (o35 = sa2(t32, ta2(t32, e26)), r91 = new Pr2(t32.name, o35, t32.nullable, na2(t32.metadata))), r91 || null;
  }, zr2.encode = function(t32, e26) {
    const i29 = e26.fields.map((e27) => Pr2.encode(t32, e27));
    Vr2.startFieldsVector(t32, i29.length);
    const n37 = Vr2.createFieldsVector(t32, i29), r91 = e26.metadata && e26.metadata.size > 0 ? Vr2.createCustomMetadataVector(t32, [...e26.metadata].map(([e27, i30]) => {
      const n38 = t32.createString(`${e27}`), r92 = t32.createString(`${i30}`);
      return ar2.startKeyValue(t32), ar2.addKey(t32, n38), ar2.addValue(t32, r92), ar2.endKeyValue(t32);
    })) : -1;
    Vr2.startSchema(t32), Vr2.addFields(t32, n37), Vr2.addEndianness(t32, va2 ? ur2.Little : ur2.Big), -1 !== r91 && Vr2.addCustomMetadata(t32, r91);
    return Vr2.endSchema(t32);
  }, zr2.decode = function(t32, e26 = /* @__PURE__ */ new Map(), i29 = W3.V5) {
    const n37 = function(t33, e27) {
      const i30 = [];
      for (let n38, r91 = -1, s29 = -1, o35 = t33.fieldsLength(); ++r91 < o35; )
        (n38 = t33.fields(r91)) && (i30[++s29] = Pr2.decode(n38, e27));
      return i30;
    }(t32, e26);
    return new zr2(n37, ya2(t32), e26, i29);
  }, zr2.fromJSON = function(t32, e26 = /* @__PURE__ */ new Map()) {
    return new zr2(function(t33, e27) {
      return (t33.fields || []).filter(Boolean).map((t34) => Pr2.fromJSON(t34, e27));
    }(t32, e26), na2(t32.metadata), e26);
  }, ua2.encode = function(t32, e26) {
    const i29 = e26.nodes || [], n37 = e26.buffers || [];
    Xo.startNodesVector(t32, i29.length);
    for (const e27 of i29.slice().reverse())
      da2.encode(t32, e27);
    const r91 = t32.endVector();
    Xo.startBuffersVector(t32, n37.length);
    for (const e27 of n37.slice().reverse())
      ha2.encode(t32, e27);
    const s29 = t32.endVector();
    return Xo.startRecordBatch(t32), Xo.addLength(t32, BigInt(e26.length)), Xo.addNodes(t32, r91), Xo.addBuffers(t32, s29), Xo.endRecordBatch(t32);
  }, ua2.decode = function(t32, e26 = W3.V5) {
    if (null !== t32.compression())
      throw new Error("Record batch compression not implemented");
    return new ua2(t32.length(), function(t33) {
      const e27 = [];
      for (let i29, n37 = -1, r91 = -1, s29 = t33.nodesLength(); ++n37 < s29; )
        (i29 = t33.nodes(n37)) && (e27[++r91] = da2.decode(i29));
      return e27;
    }(t32), function(t33, e27) {
      const i29 = [];
      for (let n37, r91 = -1, s29 = -1, o35 = t33.buffersLength(); ++r91 < o35; )
        (n37 = t33.buffers(r91)) && (e27 < W3.V4 && (n37.bb_pos += 8 * (r91 + 1)), i29[++s29] = ha2.decode(n37));
      return i29;
    }(t32, e26));
  }, ua2.fromJSON = Qo2, ca2.encode = function(t32, e26) {
    const i29 = ua2.encode(t32, e26.data);
    return Ko.startDictionaryBatch(t32), Ko.addId(t32, BigInt(e26.id)), Ko.addIsDelta(t32, e26.isDelta), Ko.addData(t32, i29), Ko.endDictionaryBatch(t32);
  }, ca2.decode = function(t32, e26 = W3.V5) {
    return new ca2(ua2.decode(t32.data(), e26), t32.id(), t32.isDelta());
  }, ca2.fromJSON = function(t32) {
    return new ca2(Qo2(t32.data), t32.id, t32.isDelta);
  }, da2.encode = function(t32, e26) {
    return Zo2.createFieldNode(t32, BigInt(e26.length), BigInt(e26.nullCount));
  }, da2.decode = function(t32) {
    return new da2(t32.length(), t32.nullCount());
  }, ha2.encode = function(t32, e26) {
    return Go2.createBuffer(t32, BigInt(e26.offset), BigInt(e26.length));
  }, ha2.decode = function(t32) {
    return new ha2(t32.offset(), t32.length());
  };
  var va2 = (() => {
    const t32 = new ArrayBuffer(2);
    return new DataView(t32).setInt16(0, 256, true), 256 === new Int16Array(t32)[0];
  })();
  var ga2 = (t32) => `Expected ${K3[t32]} Message in stream, but was null or length 0.`;
  var ma2 = (t32) => `Header pointer of flatbuffer-encoded ${K3[t32]} Message is null or length 0.`;
  var _a2 = (t32, e26) => `Expected to read ${t32} metadata bytes, but only read ${e26}.`;
  var wa2 = (t32, e26) => `Expected to read ${t32} bytes for message body, but only read ${e26}.`;
  var Ia2 = class {
    constructor(t32) {
      this.source = t32 instanceof Qr2 ? t32 : new Qr2(t32);
    }
    [Symbol.iterator]() {
      return this;
    }
    next() {
      let t32;
      return (t32 = this.readMetadataLength()).done || -1 === t32.value && (t32 = this.readMetadataLength()).done || (t32 = this.readMetadata(t32.value)).done ? Zr2 : t32;
    }
    throw(t32) {
      return this.source.throw(t32);
    }
    return(t32) {
      return this.source.return(t32);
    }
    readMessage(t32) {
      let e26;
      if ((e26 = this.next()).done)
        return null;
      if (null != t32 && e26.value.headerType !== t32)
        throw new Error(ga2(t32));
      return e26.value;
    }
    readMessageBody(t32) {
      if (t32 <= 0)
        return new Uint8Array(0);
      const e26 = L3(this.source.read(t32));
      if (e26.byteLength < t32)
        throw new Error(wa2(t32, e26.byteLength));
      return e26.byteOffset % 8 == 0 && e26.byteOffset + e26.byteLength <= e26.buffer.byteLength ? e26 : e26.slice();
    }
    readSchema(t32 = false) {
      const e26 = K3.Schema, i29 = this.readMessage(e26), n37 = null == i29 ? void 0 : i29.header();
      if (t32 && !n37)
        throw new Error(ma2(e26));
      return n37;
    }
    readMetadataLength() {
      const t32 = this.source.read(Da2), e26 = t32 && new l4(t32), i29 = (null == e26 ? void 0 : e26.readInt32(0)) || 0;
      return { done: 0 === i29, value: i29 };
    }
    readMetadata(t32) {
      const e26 = this.source.read(t32);
      if (!e26)
        return Zr2;
      if (e26.byteLength < t32)
        throw new Error(_a2(t32, e26.byteLength));
      return { done: false, value: la2.decode(e26) };
    }
  };
  var Sa2 = class {
    constructor(t32, e26) {
      this.source = t32 instanceof ts2 ? t32 : _3(t32) ? new rs2(t32, e26) : new ts2(t32);
    }
    [Symbol.asyncIterator]() {
      return this;
    }
    next() {
      return s(this, void 0, void 0, function* () {
        let t32;
        return (t32 = yield this.readMetadataLength()).done || -1 === t32.value && (t32 = yield this.readMetadataLength()).done || (t32 = yield this.readMetadata(t32.value)).done ? Zr2 : t32;
      });
    }
    throw(t32) {
      return s(this, void 0, void 0, function* () {
        return yield this.source.throw(t32);
      });
    }
    return(t32) {
      return s(this, void 0, void 0, function* () {
        return yield this.source.return(t32);
      });
    }
    readMessage(t32) {
      return s(this, void 0, void 0, function* () {
        let e26;
        if ((e26 = yield this.next()).done)
          return null;
        if (null != t32 && e26.value.headerType !== t32)
          throw new Error(ga2(t32));
        return e26.value;
      });
    }
    readMessageBody(t32) {
      return s(this, void 0, void 0, function* () {
        if (t32 <= 0)
          return new Uint8Array(0);
        const e26 = L3(yield this.source.read(t32));
        if (e26.byteLength < t32)
          throw new Error(wa2(t32, e26.byteLength));
        return e26.byteOffset % 8 == 0 && e26.byteOffset + e26.byteLength <= e26.buffer.byteLength ? e26 : e26.slice();
      });
    }
    readSchema(t32 = false) {
      return s(this, void 0, void 0, function* () {
        const e26 = K3.Schema, i29 = yield this.readMessage(e26), n37 = null == i29 ? void 0 : i29.header();
        if (t32 && !n37)
          throw new Error(ma2(e26));
        return n37;
      });
    }
    readMetadataLength() {
      return s(this, void 0, void 0, function* () {
        const t32 = yield this.source.read(Da2), e26 = t32 && new l4(t32), i29 = (null == e26 ? void 0 : e26.readInt32(0)) || 0;
        return { done: 0 === i29, value: i29 };
      });
    }
    readMetadata(t32) {
      return s(this, void 0, void 0, function* () {
        const e26 = yield this.source.read(t32);
        if (!e26)
          return Zr2;
        if (e26.byteLength < t32)
          throw new Error(_a2(t32, e26.byteLength));
        return { done: false, value: la2.decode(e26) };
      });
    }
  };
  var Aa2 = class extends Ia2 {
    constructor(t32) {
      super(new Uint8Array(0)), this._schema = false, this._body = [], this._batchIndex = 0, this._dictionaryIndex = 0, this._json = t32 instanceof Xr2 ? t32 : new Xr2(t32);
    }
    next() {
      const { _json: t32 } = this;
      if (!this._schema) {
        this._schema = true;
        return { done: false, value: la2.fromJSON(t32.schema, K3.Schema) };
      }
      if (this._dictionaryIndex < t32.dictionaries.length) {
        const e26 = t32.dictionaries[this._dictionaryIndex++];
        this._body = e26.data.columns;
        return { done: false, value: la2.fromJSON(e26, K3.DictionaryBatch) };
      }
      if (this._batchIndex < t32.batches.length) {
        const e26 = t32.batches[this._batchIndex++];
        this._body = e26.columns;
        return { done: false, value: la2.fromJSON(e26, K3.RecordBatch) };
      }
      return this._body = [], Zr2;
    }
    readMessageBody(t32) {
      return function t33(e26) {
        return (e26 || []).reduce((e27, i29) => [...e27, ...i29.VALIDITY && [i29.VALIDITY] || [], ...i29.TYPE_ID && [i29.TYPE_ID] || [], ...i29.OFFSET && [i29.OFFSET] || [], ...i29.DATA && [i29.DATA] || [], ...t33(i29.children)], []);
      }(this._body);
    }
    readMessage(t32) {
      let e26;
      if ((e26 = this.next()).done)
        return null;
      if (null != t32 && e26.value.headerType !== t32)
        throw new Error(ga2(t32));
      return e26.value;
    }
    readSchema() {
      const t32 = K3.Schema, e26 = this.readMessage(t32), i29 = null == e26 ? void 0 : e26.header();
      if (!e26 || !i29)
        throw new Error(ma2(t32));
      return i29;
    }
  };
  var Da2 = 4;
  var Ba2 = "ARROW1";
  var Ta2 = new Uint8Array(6);
  for (let t32 = 0; t32 < 6; t32 += 1)
    Ta2[t32] = Ba2.codePointAt(t32);
  function Oa2(t32, e26 = 0) {
    for (let i29 = -1, n37 = Ta2.length; ++i29 < n37; )
      if (Ta2[i29] !== t32[e26 + i29])
        return false;
    return true;
  }
  var Ma2 = Ta2.length;
  var xa2 = Ma2 + Da2;
  var La2 = 2 * Ma2 + Da2;
  var Na2 = class _Na extends Kr2 {
    constructor(t32) {
      super(), this._impl = t32;
    }
    get closed() {
      return this._impl.closed;
    }
    get schema() {
      return this._impl.schema;
    }
    get autoDestroy() {
      return this._impl.autoDestroy;
    }
    get dictionaries() {
      return this._impl.dictionaries;
    }
    get numDictionaries() {
      return this._impl.numDictionaries;
    }
    get numRecordBatches() {
      return this._impl.numRecordBatches;
    }
    get footer() {
      return this._impl.isFile() ? this._impl.footer : null;
    }
    isSync() {
      return this._impl.isSync();
    }
    isAsync() {
      return this._impl.isAsync();
    }
    isFile() {
      return this._impl.isFile();
    }
    isStream() {
      return this._impl.isStream();
    }
    next() {
      return this._impl.next();
    }
    throw(t32) {
      return this._impl.throw(t32);
    }
    return(t32) {
      return this._impl.return(t32);
    }
    cancel() {
      return this._impl.cancel();
    }
    reset(t32) {
      return this._impl.reset(t32), this._DOMStream = void 0, this._nodeStream = void 0, this;
    }
    open(t32) {
      const e26 = this._impl.open(t32);
      return f3(e26) ? e26.then(() => this) : this;
    }
    readRecordBatch(t32) {
      return this._impl.isFile() ? this._impl.readRecordBatch(t32) : null;
    }
    [Symbol.iterator]() {
      return this._impl[Symbol.iterator]();
    }
    [Symbol.asyncIterator]() {
      return this._impl[Symbol.asyncIterator]();
    }
    toDOMStream() {
      return P3.toDOMStream(this.isSync() ? { [Symbol.iterator]: () => this } : { [Symbol.asyncIterator]: () => this });
    }
    toNodeStream() {
      return P3.toNodeStream(this.isSync() ? { [Symbol.iterator]: () => this } : { [Symbol.asyncIterator]: () => this }, { objectMode: true });
    }
    static throughNode(t32) {
      throw new Error('"throughNode" not available in this environment');
    }
    static throughDOM(t32, e26) {
      throw new Error('"throughDOM" not available in this environment');
    }
    static from(e26) {
      return e26 instanceof _Na ? e26 : g4(e26) ? function(t32) {
        return new Fa2(new ka2(t32));
      }(e26) : _3(e26) ? function(t32) {
        return s(this, void 0, void 0, function* () {
          const { size: e27 } = yield t32.stat(), i29 = new rs2(t32, e27);
          return e27 >= La2 && Oa2(yield i29.readAt(0, Ma2 + 7 & -8)) ? new Ca2(new ja2(i29)) : new Ua2(new za2(i29));
        });
      }(e26) : f3(e26) ? (() => s(this, void 0, void 0, function* () {
        return yield _Na.from(yield e26);
      }))() : w3(e26) || S3(e26) || A3(e26) || v3(e26) ? function(e27) {
        return s(this, void 0, void 0, function* () {
          const i29 = yield e27.peek(Ma2 + 7 & -8);
          return i29 && i29.byteLength >= 4 ? Oa2(i29) ? new Ea2(new Pa2(yield e27.read())) : new Ua2(new za2(e27)) : new Ua2(new za2(function() {
            return g(this, arguments, function* () {
            });
          }()));
        });
      }(new ts2(e26)) : function(t32) {
        const e27 = t32.peek(Ma2 + 7 & -8);
        return e27 && e27.byteLength >= 4 ? Oa2(e27) ? new Ea2(new Pa2(t32.read())) : new Fa2(new Ra2(t32)) : new Fa2(new Ra2(function* () {
        }()));
      }(new Qr2(e26));
    }
    static readAll(t32) {
      return t32 instanceof _Na ? t32.isSync() ? Wa2(t32) : Ya2(t32) : g4(t32) || ArrayBuffer.isView(t32) || b4(t32) || m4(t32) ? Wa2(t32) : Ya2(t32);
    }
  };
  var Fa2 = class extends Na2 {
    constructor(t32) {
      super(t32), this._impl = t32;
    }
    readAll() {
      return [...this];
    }
    [Symbol.iterator]() {
      return this._impl[Symbol.iterator]();
    }
    [Symbol.asyncIterator]() {
      return g(this, arguments, function* () {
        yield m(yield* O(j(this[Symbol.iterator]())));
      });
    }
  };
  var Ua2 = class extends Na2 {
    constructor(t32) {
      super(t32), this._impl = t32;
    }
    readAll() {
      var t32, e26, i29, s29;
      return s(this, void 0, void 0, function* () {
        const r91 = new Array();
        try {
          for (var o35, a27 = true, l35 = j(this); o35 = yield l35.next(), !(t32 = o35.done); a27 = true) {
            s29 = o35.value, a27 = false;
            const t33 = s29;
            r91.push(t33);
          }
        } catch (t33) {
          e26 = { error: t33 };
        } finally {
          try {
            a27 || t32 || !(i29 = l35.return) || (yield i29.call(l35));
          } finally {
            if (e26)
              throw e26.error;
          }
        }
        return r91;
      });
    }
    [Symbol.iterator]() {
      throw new Error("AsyncRecordBatchStreamReader is not Iterable");
    }
    [Symbol.asyncIterator]() {
      return this._impl[Symbol.asyncIterator]();
    }
  };
  var Ea2 = class extends Fa2 {
    constructor(t32) {
      super(t32), this._impl = t32;
    }
  };
  var Ca2 = class extends Ua2 {
    constructor(t32) {
      super(t32), this._impl = t32;
    }
  };
  var Va2 = class {
    get numDictionaries() {
      return this._dictionaryIndex;
    }
    get numRecordBatches() {
      return this._recordBatchIndex;
    }
    constructor(t32 = /* @__PURE__ */ new Map()) {
      this.closed = false, this.autoDestroy = true, this._dictionaryIndex = 0, this._recordBatchIndex = 0, this.dictionaries = t32;
    }
    isSync() {
      return false;
    }
    isAsync() {
      return false;
    }
    isFile() {
      return false;
    }
    isStream() {
      return false;
    }
    reset(t32) {
      return this._dictionaryIndex = 0, this._recordBatchIndex = 0, this.schema = t32, this.dictionaries = /* @__PURE__ */ new Map(), this;
    }
    _loadRecordBatch(t32, e26) {
      const i29 = this._loadVectors(t32, e26, this.schema.fields), n37 = In2({ type: new Ie2(this.schema.fields), length: t32.length, children: i29 });
      return new ko(this.schema, n37);
    }
    _loadDictionaryBatch(t32, e26) {
      const { id: i29, isDelta: n37 } = t32, { dictionaries: r91, schema: s29 } = this, o35 = r91.get(i29);
      if (n37 || !o35) {
        const r92 = s29.dictionaries.get(i29), a27 = this._loadVectors(t32.data, e26, [r92]);
        return (o35 && n37 ? o35.concat(new Zn2(a27)) : new Zn2(a27)).memoize();
      }
      return o35.memoize();
    }
    _loadVectors(t32, e26, i29) {
      return new ds2(e26, t32.nodes, t32.buffers, this.dictionaries, this.schema.metadataVersion).visitMany(i29);
    }
  };
  var Ra2 = class extends Va2 {
    constructor(t32, e26) {
      super(e26), this._reader = g4(t32) ? new Aa2(this._handle = t32) : new Ia2(this._handle = t32);
    }
    isSync() {
      return true;
    }
    isStream() {
      return true;
    }
    [Symbol.iterator]() {
      return this;
    }
    cancel() {
      !this.closed && (this.closed = true) && (this.reset()._reader.return(), this._reader = null, this.dictionaries = null);
    }
    open(t32) {
      return this.closed || (this.autoDestroy = $a2(this, t32), this.schema || (this.schema = this._reader.readSchema()) || this.cancel()), this;
    }
    throw(t32) {
      return !this.closed && this.autoDestroy && (this.closed = true) ? this.reset()._reader.throw(t32) : Zr2;
    }
    return(t32) {
      return !this.closed && this.autoDestroy && (this.closed = true) ? this.reset()._reader.return(t32) : Zr2;
    }
    next() {
      if (this.closed)
        return Zr2;
      let t32;
      const { _reader: e26 } = this;
      for (; t32 = this._readNextMessageAndValidate(); )
        if (t32.isSchema())
          this.reset(t32.header());
        else {
          if (t32.isRecordBatch()) {
            this._recordBatchIndex++;
            const i29 = t32.header(), n37 = e26.readMessageBody(t32.bodyLength);
            return { done: false, value: this._loadRecordBatch(i29, n37) };
          }
          if (t32.isDictionaryBatch()) {
            this._dictionaryIndex++;
            const i29 = t32.header(), n37 = e26.readMessageBody(t32.bodyLength), r91 = this._loadDictionaryBatch(i29, n37);
            this.dictionaries.set(i29.id, r91);
          }
        }
      return this.schema && 0 === this._recordBatchIndex ? (this._recordBatchIndex++, { done: false, value: new Yo2(this.schema) }) : this.return();
    }
    _readNextMessageAndValidate(t32) {
      return this._reader.readMessage(t32);
    }
  };
  var za2 = class extends Va2 {
    constructor(t32, e26) {
      super(e26), this._reader = new Sa2(this._handle = t32);
    }
    isAsync() {
      return true;
    }
    isStream() {
      return true;
    }
    [Symbol.asyncIterator]() {
      return this;
    }
    cancel() {
      return s(this, void 0, void 0, function* () {
        !this.closed && (this.closed = true) && (yield this.reset()._reader.return(), this._reader = null, this.dictionaries = null);
      });
    }
    open(t32) {
      return s(this, void 0, void 0, function* () {
        return this.closed || (this.autoDestroy = $a2(this, t32), this.schema || (this.schema = yield this._reader.readSchema()) || (yield this.cancel())), this;
      });
    }
    throw(t32) {
      return s(this, void 0, void 0, function* () {
        return !this.closed && this.autoDestroy && (this.closed = true) ? yield this.reset()._reader.throw(t32) : Zr2;
      });
    }
    return(t32) {
      return s(this, void 0, void 0, function* () {
        return !this.closed && this.autoDestroy && (this.closed = true) ? yield this.reset()._reader.return(t32) : Zr2;
      });
    }
    next() {
      return s(this, void 0, void 0, function* () {
        if (this.closed)
          return Zr2;
        let t32;
        const { _reader: e26 } = this;
        for (; t32 = yield this._readNextMessageAndValidate(); )
          if (t32.isSchema())
            yield this.reset(t32.header());
          else {
            if (t32.isRecordBatch()) {
              this._recordBatchIndex++;
              const i29 = t32.header(), n37 = yield e26.readMessageBody(t32.bodyLength);
              return { done: false, value: this._loadRecordBatch(i29, n37) };
            }
            if (t32.isDictionaryBatch()) {
              this._dictionaryIndex++;
              const i29 = t32.header(), n37 = yield e26.readMessageBody(t32.bodyLength), r91 = this._loadDictionaryBatch(i29, n37);
              this.dictionaries.set(i29.id, r91);
            }
          }
        return this.schema && 0 === this._recordBatchIndex ? (this._recordBatchIndex++, { done: false, value: new Yo2(this.schema) }) : yield this.return();
      });
    }
    _readNextMessageAndValidate(t32) {
      return s(this, void 0, void 0, function* () {
        return yield this._reader.readMessage(t32);
      });
    }
  };
  var Pa2 = class extends Ra2 {
    get footer() {
      return this._footer;
    }
    get numDictionaries() {
      return this._footer ? this._footer.numDictionaries : 0;
    }
    get numRecordBatches() {
      return this._footer ? this._footer.numRecordBatches : 0;
    }
    constructor(t32, e26) {
      super(t32 instanceof ns2 ? t32 : new ns2(t32), e26);
    }
    isSync() {
      return true;
    }
    isFile() {
      return true;
    }
    open(t32) {
      if (!this.closed && !this._footer) {
        this.schema = (this._footer = this._readFooter()).schema;
        for (const t33 of this._footer.dictionaryBatches())
          t33 && this._readDictionaryBatch(this._dictionaryIndex++);
      }
      return super.open(t32);
    }
    readRecordBatch(t32) {
      var e26;
      if (this.closed)
        return null;
      this._footer || this.open();
      const i29 = null === (e26 = this._footer) || void 0 === e26 ? void 0 : e26.getRecordBatch(t32);
      if (i29 && this._handle.seek(i29.offset)) {
        const t33 = this._reader.readMessage(K3.RecordBatch);
        if (null == t33 ? void 0 : t33.isRecordBatch()) {
          const e27 = t33.header(), i30 = this._reader.readMessageBody(t33.bodyLength);
          return this._loadRecordBatch(e27, i30);
        }
      }
      return null;
    }
    _readDictionaryBatch(t32) {
      var e26;
      const i29 = null === (e26 = this._footer) || void 0 === e26 ? void 0 : e26.getDictionaryBatch(t32);
      if (i29 && this._handle.seek(i29.offset)) {
        const t33 = this._reader.readMessage(K3.DictionaryBatch);
        if (null == t33 ? void 0 : t33.isDictionaryBatch()) {
          const e27 = t33.header(), i30 = this._reader.readMessageBody(t33.bodyLength), n37 = this._loadDictionaryBatch(e27, i30);
          this.dictionaries.set(e27.id, n37);
        }
      }
    }
    _readFooter() {
      const { _handle: t32 } = this, e26 = t32.size - xa2, i29 = t32.readInt32(e26), n37 = t32.readAt(e26 - i29, i29);
      return Yr2.decode(n37);
    }
    _readNextMessageAndValidate(t32) {
      var e26;
      if (this._footer || this.open(), this._footer && this._recordBatchIndex < this.numRecordBatches) {
        const i29 = null === (e26 = this._footer) || void 0 === e26 ? void 0 : e26.getRecordBatch(this._recordBatchIndex);
        if (i29 && this._handle.seek(i29.offset))
          return this._reader.readMessage(t32);
      }
      return null;
    }
  };
  var ja2 = class extends za2 {
    get footer() {
      return this._footer;
    }
    get numDictionaries() {
      return this._footer ? this._footer.numDictionaries : 0;
    }
    get numRecordBatches() {
      return this._footer ? this._footer.numRecordBatches : 0;
    }
    constructor(t32, ...e26) {
      const i29 = "number" != typeof e26[0] ? e26.shift() : void 0, n37 = e26[0] instanceof Map ? e26.shift() : void 0;
      super(t32 instanceof rs2 ? t32 : new rs2(t32, i29), n37);
    }
    isFile() {
      return true;
    }
    isAsync() {
      return true;
    }
    open(t32) {
      const e26 = Object.create(null, { open: { get: () => super.open } });
      return s(this, void 0, void 0, function* () {
        if (!this.closed && !this._footer) {
          this.schema = (this._footer = yield this._readFooter()).schema;
          for (const t33 of this._footer.dictionaryBatches())
            t33 && (yield this._readDictionaryBatch(this._dictionaryIndex++));
        }
        return yield e26.open.call(this, t32);
      });
    }
    readRecordBatch(t32) {
      var e26;
      return s(this, void 0, void 0, function* () {
        if (this.closed)
          return null;
        this._footer || (yield this.open());
        const i29 = null === (e26 = this._footer) || void 0 === e26 ? void 0 : e26.getRecordBatch(t32);
        if (i29 && (yield this._handle.seek(i29.offset))) {
          const t33 = yield this._reader.readMessage(K3.RecordBatch);
          if (null == t33 ? void 0 : t33.isRecordBatch()) {
            const e27 = t33.header(), i30 = yield this._reader.readMessageBody(t33.bodyLength);
            return this._loadRecordBatch(e27, i30);
          }
        }
        return null;
      });
    }
    _readDictionaryBatch(t32) {
      var e26;
      return s(this, void 0, void 0, function* () {
        const i29 = null === (e26 = this._footer) || void 0 === e26 ? void 0 : e26.getDictionaryBatch(t32);
        if (i29 && (yield this._handle.seek(i29.offset))) {
          const t33 = yield this._reader.readMessage(K3.DictionaryBatch);
          if (null == t33 ? void 0 : t33.isDictionaryBatch()) {
            const e27 = t33.header(), i30 = yield this._reader.readMessageBody(t33.bodyLength), n37 = this._loadDictionaryBatch(e27, i30);
            this.dictionaries.set(e27.id, n37);
          }
        }
      });
    }
    _readFooter() {
      return s(this, void 0, void 0, function* () {
        const { _handle: t32 } = this;
        t32._pending && (yield t32._pending);
        const e26 = t32.size - xa2, i29 = yield t32.readInt32(e26), n37 = yield t32.readAt(e26 - i29, i29);
        return Yr2.decode(n37);
      });
    }
    _readNextMessageAndValidate(t32) {
      return s(this, void 0, void 0, function* () {
        if (this._footer || (yield this.open()), this._footer && this._recordBatchIndex < this.numRecordBatches) {
          const e26 = this._footer.getRecordBatch(this._recordBatchIndex);
          if (e26 && (yield this._handle.seek(e26.offset)))
            return yield this._reader.readMessage(t32);
        }
        return null;
      });
    }
  };
  var ka2 = class extends Ra2 {
    constructor(t32, e26) {
      super(t32, e26);
    }
    _loadVectors(t32, e26, i29) {
      return new ps2(e26, t32.nodes, t32.buffers, this.dictionaries, this.schema.metadataVersion).visitMany(i29);
    }
  };
  function $a2(t32, e26) {
    return e26 && "boolean" == typeof e26.autoDestroy ? e26.autoDestroy : t32.autoDestroy;
  }
  function* Wa2(t32) {
    const e26 = Na2.from(t32);
    try {
      if (!e26.open({ autoDestroy: false }).closed)
        do {
          yield e26;
        } while (!e26.reset().open().closed);
    } finally {
      e26.cancel();
    }
  }
  function Ya2(i29) {
    return g(this, arguments, function* () {
      const t32 = yield m(Na2.from(i29));
      try {
        if (!(yield m(t32.open({ autoDestroy: false }))).closed)
          do {
            yield yield m(t32);
          } while (!(yield m(t32.reset().open())).closed);
      } finally {
        yield m(t32.cancel());
      }
    });
  }
  var Ha2 = class _Ha extends Fe2 {
    static assemble(...t32) {
      const e26 = (t33) => t33.flatMap((t34) => Array.isArray(t34) ? e26(t34) : t34 instanceof ko ? t34.data.children : t34.data), i29 = new _Ha();
      return i29.visitMany(e26(t32)), i29;
    }
    constructor() {
      super(), this._byteLength = 0, this._nodes = [], this._buffers = [], this._bufferRegions = [];
    }
    visit(t32) {
      if (t32 instanceof Zn2)
        return this.visitMany(t32.data), this;
      const { type: e26 } = t32;
      if (!Et3.isDictionary(e26)) {
        const { length: i29 } = t32;
        if (i29 > 2147483647)
          throw new RangeError("Cannot write arrays larger than 2^31 - 1 in length");
        if (Et3.isUnion(e26))
          this.nodes.push(new da2(i29, 0));
        else {
          const { nullCount: n37 } = t32;
          Et3.isNull(e26) || Ga2.call(this, n37 <= 0 ? new Uint8Array(0) : dn2(t32.offset, i29, t32.nullBitmap)), this.nodes.push(new da2(i29, n37));
        }
      }
      return super.visit(t32);
    }
    visitNull(t32) {
      return this;
    }
    visitDictionary(t32) {
      return this.visit(t32.clone(t32.type.indices));
    }
    get nodes() {
      return this._nodes;
    }
    get buffers() {
      return this._buffers;
    }
    get byteLength() {
      return this._byteLength;
    }
    get bufferRegions() {
      return this._bufferRegions;
    }
  };
  function Ga2(t32) {
    const e26 = t32.byteLength + 7 & -8;
    return this.buffers.push(t32), this.bufferRegions.push(new ha2(this._byteLength, e26)), this._byteLength += e26, this;
  }
  function Za2(t32) {
    return Ga2.call(this, t32.values.subarray(0, t32.length * t32.stride));
  }
  function Xa2(t32) {
    const { length: e26, values: i29, valueOffsets: n37 } = t32, { 0: r91, [e26]: s29 } = n37, o35 = Math.min(s29 - r91, i29.byteLength - r91);
    return Ga2.call(this, V3(-r91, e26 + 1, n37)), Ga2.call(this, i29.subarray(r91, r91 + o35)), this;
  }
  function Ka2(t32) {
    const { length: e26, valueOffsets: i29 } = t32;
    if (i29) {
      const { 0: n37, [e26]: r91 } = i29;
      return Ga2.call(this, V3(-n37, e26 + 1, i29)), this.visit(t32.children[0].slice(n37, r91 - n37));
    }
    return this.visit(t32.children[0]);
  }
  function Ja2(t32) {
    return this.visitMany(t32.type.children.map((e26, i29) => t32.children[i29]).filter(Boolean))[0];
  }
  Ha2.prototype.visitBool = function(t32) {
    let e26;
    return t32.nullCount >= t32.length ? Ga2.call(this, new Uint8Array(0)) : (e26 = t32.values) instanceof Uint8Array ? Ga2.call(this, dn2(t32.offset, t32.length, e26)) : Ga2.call(this, pn2(t32.values));
  }, Ha2.prototype.visitInt = Za2, Ha2.prototype.visitFloat = Za2, Ha2.prototype.visitUtf8 = Xa2, Ha2.prototype.visitBinary = Xa2, Ha2.prototype.visitFixedSizeBinary = Za2, Ha2.prototype.visitDate = Za2, Ha2.prototype.visitTimestamp = Za2, Ha2.prototype.visitTime = Za2, Ha2.prototype.visitDecimal = Za2, Ha2.prototype.visitList = Ka2, Ha2.prototype.visitStruct = Ja2, Ha2.prototype.visitUnion = function(t32) {
    var e26;
    const { type: i29, length: n37, typeIds: r91, valueOffsets: s29 } = t32;
    if (Ga2.call(this, r91), i29.mode === Y3.Sparse)
      return Ja2.call(this, t32);
    if (i29.mode === Y3.Dense) {
      if (t32.offset <= 0)
        return Ga2.call(this, s29), Ja2.call(this, t32);
      {
        const o35 = new Int32Array(n37), a27 = /* @__PURE__ */ Object.create(null), l35 = /* @__PURE__ */ Object.create(null);
        for (let t33, i30, u30 = -1; ++u30 < n37; )
          void 0 !== (t33 = r91[u30]) && (void 0 === (i30 = a27[t33]) && (i30 = a27[t33] = s29[u30]), o35[u30] = s29[u30] - i30, l35[t33] = (null !== (e26 = l35[t33]) && void 0 !== e26 ? e26 : 0) + 1);
        Ga2.call(this, o35), this.visitMany(t32.children.map((t33, e27) => {
          const r92 = i29.typeIds[e27], s30 = a27[r92], o36 = l35[r92];
          return t33.slice(s30, Math.min(n37, o36));
        }));
      }
    }
    return this;
  }, Ha2.prototype.visitInterval = Za2, Ha2.prototype.visitDuration = Za2, Ha2.prototype.visitFixedSizeList = Ka2, Ha2.prototype.visitMap = Ka2;
  var il = class extends Kr2 {
    static throughNode(t32) {
      throw new Error('"throughNode" not available in this environment');
    }
    static throughDOM(t32, e26) {
      throw new Error('"throughDOM" not available in this environment');
    }
    constructor(t32) {
      super(), this._position = 0, this._started = false, this._sink = new qr2(), this._schema = null, this._dictionaryBlocks = [], this._recordBatchBlocks = [], this._dictionaryDeltaOffsets = /* @__PURE__ */ new Map(), y3(t32) || (t32 = { autoDestroy: true, writeLegacyIpcFormat: false }), this._autoDestroy = "boolean" != typeof t32.autoDestroy || t32.autoDestroy, this._writeLegacyIpcFormat = "boolean" == typeof t32.writeLegacyIpcFormat && t32.writeLegacyIpcFormat;
    }
    toString(t32 = false) {
      return this._sink.toString(t32);
    }
    toUint8Array(t32 = false) {
      return this._sink.toUint8Array(t32);
    }
    writeAll(t32) {
      return f3(t32) ? t32.then((t33) => this.writeAll(t33)) : v3(t32) ? al2(this, t32) : ol2(this, t32);
    }
    get closed() {
      return this._sink.closed;
    }
    [Symbol.asyncIterator]() {
      return this._sink[Symbol.asyncIterator]();
    }
    toDOMStream(t32) {
      return this._sink.toDOMStream(t32);
    }
    toNodeStream(t32) {
      return this._sink.toNodeStream(t32);
    }
    close() {
      return this.reset()._sink.close();
    }
    abort(t32) {
      return this.reset()._sink.abort(t32);
    }
    finish() {
      return this._autoDestroy ? this.close() : this.reset(this._sink, this._schema), this;
    }
    reset(t32 = this._sink, e26 = null) {
      var i29;
      return t32 === this._sink || t32 instanceof qr2 ? this._sink = t32 : (this._sink = new qr2(), t32 && (y3(i29 = t32) && p3(i29.abort) && p3(i29.getWriter) && !I3(i29)) ? this.toDOMStream({ type: "bytes" }).pipeTo(t32) : t32 && ((t33) => y3(t33) && p3(t33.end) && p3(t33.write) && d4(t33.writable) && !I3(t33))(t32) && this.toNodeStream({ objectMode: false }).pipe(t32)), this._started && this._schema && this._writeFooter(this._schema), this._started = false, this._dictionaryBlocks = [], this._recordBatchBlocks = [], this._dictionaryDeltaOffsets = /* @__PURE__ */ new Map(), e26 && Io2(e26, this._schema) || (null == e26 ? (this._position = 0, this._schema = null) : (this._started = true, this._schema = e26, this._writeSchema(e26))), this;
    }
    write(t32) {
      let e26 = null;
      if (!this._sink)
        throw new Error("RecordBatchWriter is closed");
      if (null == t32)
        return this.finish() && void 0;
      if (t32 instanceof zo && !(e26 = t32.schema))
        return this.finish() && void 0;
      if (t32 instanceof ko && !(e26 = t32.schema))
        return this.finish() && void 0;
      if (e26 && !Io2(e26, this._schema)) {
        if (this._started && this._autoDestroy)
          return this.close();
        this.reset(this._sink, e26);
      }
      t32 instanceof ko ? t32 instanceof Yo2 || this._writeRecordBatch(t32) : t32 instanceof zo ? this.writeAll(t32.batches) : b4(t32) && this.writeAll(t32);
    }
    _writeMessage(t32, e26 = 8) {
      const i29 = e26 - 1, n37 = la2.encode(t32), r91 = n37.byteLength, s29 = this._writeLegacyIpcFormat ? 4 : 8, o35 = r91 + s29 + i29 & ~i29, a27 = o35 - r91 - s29;
      return t32.headerType === K3.RecordBatch ? this._recordBatchBlocks.push(new Gr2(o35, t32.bodyLength, this._position)) : t32.headerType === K3.DictionaryBatch && this._dictionaryBlocks.push(new Gr2(o35, t32.bodyLength, this._position)), this._writeLegacyIpcFormat || this._write(Int32Array.of(-1)), this._write(Int32Array.of(o35 - s29)), r91 > 0 && this._write(n37), this._writePadding(a27);
    }
    _write(t32) {
      if (this._started) {
        const e26 = L3(t32);
        e26 && e26.byteLength > 0 && (this._sink.write(e26), this._position += e26.byteLength);
      }
      return this;
    }
    _writeSchema(t32) {
      return this._writeMessage(la2.from(t32));
    }
    _writeFooter(t32) {
      return this._writeLegacyIpcFormat ? this._write(Int32Array.of(0)) : this._write(Int32Array.of(-1, 0));
    }
    _writeMagic() {
      return this._write(Ta2);
    }
    _writePadding(t32) {
      return t32 > 0 ? this._write(new Uint8Array(t32)) : this;
    }
    _writeRecordBatch(t32) {
      const { byteLength: e26, nodes: i29, bufferRegions: n37, buffers: r91 } = Ha2.assemble(t32), s29 = new ua2(t32.numRows, i29, n37), o35 = la2.from(s29, e26);
      return this._writeDictionaries(t32)._writeMessage(o35)._writeBodyBuffers(r91);
    }
    _writeDictionaryBatch(t32, e26, i29 = false) {
      this._dictionaryDeltaOffsets.set(e26, t32.length + (this._dictionaryDeltaOffsets.get(e26) || 0));
      const { byteLength: n37, nodes: r91, bufferRegions: s29, buffers: o35 } = Ha2.assemble(new Zn2([t32])), a27 = new ua2(t32.length, r91, s29), l35 = new ca2(a27, e26, i29), u30 = la2.from(l35, n37);
      return this._writeMessage(u30)._writeBodyBuffers(o35);
    }
    _writeBodyBuffers(t32) {
      let e26, i29, n37;
      for (let r91 = -1, s29 = t32.length; ++r91 < s29; )
        (e26 = t32[r91]) && (i29 = e26.byteLength) > 0 && (this._write(e26), (n37 = (i29 + 7 & -8) - i29) > 0 && this._writePadding(n37));
      return this;
    }
    _writeDictionaries(t32) {
      for (let [e26, i29] of t32.dictionaries) {
        let t33 = this._dictionaryDeltaOffsets.get(e26) || 0;
        if (0 === t33 || (i29 = null == i29 ? void 0 : i29.slice(t33)).length > 0)
          for (const n37 of i29.data)
            this._writeDictionaryBatch(n37, e26, t33 > 0), t33 += n37.length;
      }
      return this;
    }
  };
  var nl = class _nl extends il {
    static writeAll(t32, e26) {
      const i29 = new _nl(e26);
      return f3(t32) ? t32.then((t33) => i29.writeAll(t33)) : v3(t32) ? al2(i29, t32) : ol2(i29, t32);
    }
  };
  var rl = class _rl extends il {
    static writeAll(t32) {
      const e26 = new _rl();
      return f3(t32) ? t32.then((t33) => e26.writeAll(t33)) : v3(t32) ? al2(e26, t32) : ol2(e26, t32);
    }
    constructor() {
      super(), this._autoDestroy = true;
    }
    _writeSchema(t32) {
      return this._writeMagic()._writePadding(2);
    }
    _writeFooter(t32) {
      const e26 = Yr2.encode(new Yr2(t32, W3.V5, this._recordBatchBlocks, this._dictionaryBlocks));
      return super._writeFooter(t32)._write(e26)._write(Int32Array.of(e26.byteLength))._writeMagic();
    }
  };
  function ol2(t32, e26) {
    let i29 = e26;
    e26 instanceof zo && (i29 = e26.batches, t32.reset(void 0, e26.schema));
    for (const e27 of i29)
      t32.write(e27);
    return t32.finish();
  }
  function al2(t32, e26) {
    var i29, s29, o35, a27, l35, u30, c30;
    return s(this, void 0, void 0, function* () {
      try {
        for (i29 = true, s29 = j(e26); o35 = yield s29.next(), !(a27 = o35.done); i29 = true) {
          c30 = o35.value, i29 = false;
          const e27 = c30;
          t32.write(e27);
        }
      } catch (t33) {
        l35 = { error: t33 };
      } finally {
        try {
          i29 || a27 || !(u30 = s29.return) || (yield u30.call(s29));
        } finally {
          if (l35)
            throw l35.error;
        }
      }
      return t32.finish();
    });
  }
  var cl2 = class {
    constructor(t32) {
      this._numChunks = 0, this._finished = false, this._bufferedSize = 0;
      const { readableStrategy: e26, writableStrategy: i29, queueingStrategy: n37 = "count" } = t32, r91 = n(t32, ["readableStrategy", "writableStrategy", "queueingStrategy"]);
      this._controller = null, this._builder = Ao2(r91), this._getSize = "bytes" !== n37 ? hl2 : dl;
      const { highWaterMark: o35 = "bytes" === n37 ? Math.pow(2, 14) : 1e3 } = Object.assign({}, e26), { highWaterMark: a27 = "bytes" === n37 ? Math.pow(2, 14) : 1e3 } = Object.assign({}, i29);
      this.readable = new ReadableStream({ cancel: () => {
        this._builder.clear();
      }, pull: (t33) => {
        this._maybeFlush(this._builder, this._controller = t33);
      }, start: (t33) => {
        this._maybeFlush(this._builder, this._controller = t33);
      } }, { highWaterMark: o35, size: "bytes" !== n37 ? hl2 : dl }), this.writable = new WritableStream({ abort: () => {
        this._builder.clear();
      }, write: () => {
        this._maybeFlush(this._builder, this._controller);
      }, close: () => {
        this._maybeFlush(this._builder.finish(), this._controller);
      } }, { highWaterMark: a27, size: (t33) => this._writeValueAndReturnChunkSize(t33) });
    }
    _writeValueAndReturnChunkSize(t32) {
      const e26 = this._bufferedSize;
      return this._bufferedSize = this._getSize(this._builder.append(t32)), this._bufferedSize - e26;
    }
    _maybeFlush(t32, e26) {
      null != e26 && (this._bufferedSize >= e26.desiredSize && ++this._numChunks && this._enqueue(e26, t32.toVector()), t32.finished && ((t32.length > 0 || 0 === this._numChunks) && ++this._numChunks && this._enqueue(e26, t32.toVector()), !this._finished && (this._finished = true) && this._enqueue(e26, null)));
    }
    _enqueue(t32, e26) {
      this._bufferedSize = 0, this._controller = null, null == e26 ? t32.close() : t32.enqueue(e26);
    }
  };
  var hl2 = (t32) => {
    var e26;
    return null !== (e26 = null == t32 ? void 0 : t32.length) && void 0 !== e26 ? e26 : 0;
  };
  var dl = (t32) => {
    var e26;
    return null !== (e26 = null == t32 ? void 0 : t32.byteLength) && void 0 !== e26 ? e26 : 0;
  };
  function pl(t32, e26) {
    const i29 = new qr2();
    let n37 = null;
    const s29 = new ReadableStream({ cancel() {
      return s(this, void 0, void 0, function* () {
        yield i29.close();
      });
    }, start(t33) {
      return s(this, void 0, void 0, function* () {
        yield o35(t33, n37 || (n37 = yield function() {
          return s(this, void 0, void 0, function* () {
            return yield (yield Na2.from(i29)).open(e26);
          });
        }()));
      });
    }, pull(t33) {
      return s(this, void 0, void 0, function* () {
        n37 ? yield o35(t33, n37) : t33.close();
      });
    } });
    return { writable: new WritableStream(i29, Object.assign({ highWaterMark: Math.pow(2, 14) }, t32)), readable: s29 };
    function o35(t33, e27) {
      return s(this, void 0, void 0, function* () {
        let i30 = t33.desiredSize, n38 = null;
        for (; !(n38 = yield e27.next()).done; )
          if (t33.enqueue(n38.value), null != i30 && --i30 <= 0)
            return;
        t33.close();
      });
    }
  }
  function yl2(t32, e26) {
    const i29 = new this(t32), n37 = new ts2(i29), s29 = new ReadableStream({ cancel() {
      return s(this, void 0, void 0, function* () {
        yield n37.cancel();
      });
    }, pull(t33) {
      return s(this, void 0, void 0, function* () {
        yield o35(t33);
      });
    }, start(t33) {
      return s(this, void 0, void 0, function* () {
        yield o35(t33);
      });
    } }, Object.assign({ highWaterMark: Math.pow(2, 14) }, e26));
    return { writable: new WritableStream(i29, t32), readable: s29 };
    function o35(t33) {
      return s(this, void 0, void 0, function* () {
        let e27 = null, i30 = t33.desiredSize;
        for (; e27 = yield n37.read(i30 || null); )
          if (t33.enqueue(e27), null != i30 && (i30 -= e27.byteLength) <= 0)
            return;
        t33.close();
      });
    }
  }
  function bl2(t32, e26 = "stream") {
    return ("stream" === e26 ? nl : rl).writeAll(t32).toUint8Array(true);
  }
  var vl2 = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, Ft3), hs2), gn2), Pe2), z3), un2), et3), { compareSchemas: Io2, compareFields: function(t32, e26) {
    return wo2.compareFields(t32, e26);
  }, compareTypes: So2 });
  P3.toDOMStream = function(t32, e26) {
    if (v3(t32))
      return function(t33, e27) {
        let i29 = null;
        const n37 = "bytes" === (null == e27 ? void 0 : e27.type) || false, s29 = (null == e27 ? void 0 : e27.highWaterMark) || Math.pow(2, 24);
        return new ReadableStream(Object.assign(Object.assign({}, e27), { start(e28) {
          return s(this, void 0, void 0, function* () {
            yield o35(e28, i29 || (i29 = t33[Symbol.asyncIterator]()));
          });
        }, pull(t34) {
          return s(this, void 0, void 0, function* () {
            i29 ? yield o35(t34, i29) : t34.close();
          });
        }, cancel() {
          return s(this, void 0, void 0, function* () {
            (null == i29 ? void 0 : i29.return) && (yield i29.return()), i29 = null;
          });
        } }), Object.assign({ highWaterMark: n37 ? s29 : void 0 }, e27));
        function o35(t34, e28) {
          return s(this, void 0, void 0, function* () {
            let i30, r91 = null, s30 = t34.desiredSize || null;
            for (; !(r91 = yield e28.next(n37 ? s30 : null)).done; )
              if (ArrayBuffer.isView(r91.value) && (i30 = L3(r91.value)) && (null != s30 && n37 && (s30 = s30 - i30.byteLength + 1), r91.value = i30), t34.enqueue(r91.value), null != s30 && --s30 <= 0)
                return;
            t34.close();
          });
        }
      }(t32, e26);
    if (b4(t32))
      return function(t33, e27) {
        let i29 = null;
        const n37 = "bytes" === (null == e27 ? void 0 : e27.type) || false, r91 = (null == e27 ? void 0 : e27.highWaterMark) || Math.pow(2, 24);
        return new ReadableStream(Object.assign(Object.assign({}, e27), { start(e28) {
          s29(e28, i29 || (i29 = t33[Symbol.iterator]()));
        }, pull(t34) {
          i29 ? s29(t34, i29) : t34.close();
        }, cancel() {
          (null == i29 ? void 0 : i29.return) && i29.return(), i29 = null;
        } }), Object.assign({ highWaterMark: n37 ? r91 : void 0 }, e27));
        function s29(t34, e28) {
          let i30, r92 = null, s30 = t34.desiredSize || null;
          for (; !(r92 = e28.next(n37 ? s30 : null)).done; )
            if (ArrayBuffer.isView(r92.value) && (i30 = L3(r92.value)) && (null != s30 && n37 && (s30 = s30 - i30.byteLength + 1), r92.value = i30), t34.enqueue(r92.value), null != s30 && --s30 <= 0)
              return;
          t34.close();
        }
      }(t32, e26);
    throw new Error("toDOMStream() must be called with an Iterable or AsyncIterable");
  }, nr2.throughDOM = function(t32) {
    return new cl2(t32);
  }, Na2.throughDOM = pl, Ea2.throughDOM = pl, Fa2.throughDOM = pl, il.throughDOM = yl2, rl.throughDOM = yl2, nl.throughDOM = yl2;

  // https://cdn.jsdelivr.net/npm/@duckdb/duckdb-wasm@1.28.1-dev99.0/+esm
  var s3 = Object.create;
  var t2 = Object.defineProperty;
  var a4 = Object.getOwnPropertyDescriptor;
  var r4 = Object.getOwnPropertyNames;
  var n5 = Object.getPrototypeOf;
  var i4 = Object.prototype.hasOwnProperty;
  var o3 = (e26, s29) => () => (s29 || e26((s29 = { exports: {} }).exports, s29), s29.exports);
  var d5 = (e26, s29, n37, o35) => {
    if (s29 && typeof s29 == "object" || typeof s29 == "function")
      for (let d25 of r4(s29))
        !i4.call(e26, d25) && d25 !== n37 && t2(e26, d25, { get: () => s29[d25], enumerable: !(o35 = a4(s29, d25)) || o35.enumerable });
    return e26;
  };
  var c4 = (e26, a27, r91) => (r91 = e26 != null ? s3(n5(e26)) : {}, d5(a27 || !e26 || !e26.__esModule ? t2(r91, "default", { value: e26, enumerable: true }) : r91, e26));
  var E4 = o3((e26, s29) => {
    s29.exports = Worker;
  });
  var l6 = ((e26) => (e26[e26.UNDEFINED = 0] = "UNDEFINED", e26[e26.AUTOMATIC = 1] = "AUTOMATIC", e26[e26.READ_ONLY = 2] = "READ_ONLY", e26[e26.READ_WRITE = 3] = "READ_WRITE", e26))(l6 || {});
  var _4 = ((e26) => (e26[e26.IDENTIFIER = 0] = "IDENTIFIER", e26[e26.NUMERIC_CONSTANT = 1] = "NUMERIC_CONSTANT", e26[e26.STRING_CONSTANT = 2] = "STRING_CONSTANT", e26[e26.OPERATOR = 3] = "OPERATOR", e26[e26.KEYWORD = 4] = "KEYWORD", e26[e26.COMMENT = 5] = "COMMENT", e26))(_4 || {});
  var u3 = ((e26) => (e26[e26.NONE = 0] = "NONE", e26[e26.DEBUG = 1] = "DEBUG", e26[e26.INFO = 2] = "INFO", e26[e26.WARNING = 3] = "WARNING", e26[e26.ERROR = 4] = "ERROR", e26))(u3 || {});
  var T4 = ((e26) => (e26[e26.NONE = 0] = "NONE", e26[e26.CONNECT = 1] = "CONNECT", e26[e26.DISCONNECT = 2] = "DISCONNECT", e26[e26.OPEN = 3] = "OPEN", e26[e26.QUERY = 4] = "QUERY", e26[e26.INSTANTIATE = 5] = "INSTANTIATE", e26))(T4 || {});
  var R4 = ((e26) => (e26[e26.NONE = 0] = "NONE", e26[e26.OK = 1] = "OK", e26[e26.ERROR = 2] = "ERROR", e26[e26.START = 3] = "START", e26[e26.RUN = 4] = "RUN", e26[e26.CAPTURE = 5] = "CAPTURE", e26))(R4 || {});
  var p4 = ((e26) => (e26[e26.NONE = 0] = "NONE", e26[e26.WEB_WORKER = 1] = "WEB_WORKER", e26[e26.NODE_WORKER = 2] = "NODE_WORKER", e26[e26.BINDINGS = 3] = "BINDINGS", e26[e26.ASYNC_DUCKDB = 4] = "ASYNC_DUCKDB", e26))(p4 || {});
  var h7 = class {
    log(e26) {
    }
  };
  var I4 = class {
    constructor(e26 = 2) {
      this.level = e26;
    }
    log(e26) {
      e26.level >= this.level && console.log(e26);
    }
  };
  var y4 = ((e26) => (e26[e26.SUCCESS = 0] = "SUCCESS", e26))(y4 || {});
  var N4 = class {
    constructor(e26, s29) {
      this._bindings = e26, this._conn = s29;
    }
    get bindings() {
      return this._bindings;
    }
    async close() {
      return this._bindings.disconnect(this._conn);
    }
    useUnsafe(e26) {
      return e26(this._bindings, this._conn);
    }
    async query(s29) {
      this._bindings.logger.log({ timestamp: /* @__PURE__ */ new Date(), level: 2, origin: 4, topic: 4, event: 4, value: s29 });
      let t32 = await this._bindings.runQuery(this._conn, s29), a27 = Na2.from(t32);
      return console.assert(a27.isSync(), "Reader is not sync"), console.assert(a27.isFile(), "Reader is not file"), new zo(a27);
    }
    async send(s29) {
      this._bindings.logger.log({ timestamp: /* @__PURE__ */ new Date(), level: 2, origin: 4, topic: 4, event: 4, value: s29 });
      let t32 = await this._bindings.startPendingQuery(this._conn, s29);
      for (; t32 == null; )
        t32 = await this._bindings.pollPendingQuery(this._conn);
      let a27 = new k4(this._bindings, this._conn, t32), r91 = await Na2.from(a27);
      return console.assert(r91.isAsync()), console.assert(r91.isStream()), r91;
    }
    async cancelSent() {
      return await this._bindings.cancelPendingQuery(this._conn);
    }
    async getTableNames(e26) {
      return await this._bindings.getTableNames(this._conn, e26);
    }
    async prepare(e26) {
      let s29 = await this._bindings.createPrepared(this._conn, e26);
      return new O5(this._bindings, this._conn, s29);
    }
    async insertArrowTable(s29, t32) {
      let a27 = bl2(s29, "stream");
      await this.insertArrowFromIPCStream(a27, t32);
    }
    async insertArrowFromIPCStream(e26, s29) {
      await this._bindings.insertArrowFromIPCStream(this._conn, e26, s29);
    }
    async insertCSVFromPath(e26, s29) {
      await this._bindings.insertCSVFromPath(this._conn, e26, s29);
    }
    async insertJSONFromPath(e26, s29) {
      await this._bindings.insertJSONFromPath(this._conn, e26, s29);
    }
  };
  var k4 = class {
    constructor(e26, s29, t32) {
      this.db = e26;
      this.conn = s29;
      this.header = t32;
      this._first = true, this._depleted = false, this._inFlight = null;
    }
    async next() {
      if (this._first)
        return this._first = false, { done: false, value: this.header };
      if (this._depleted)
        return { done: true, value: null };
      let e26;
      return this._inFlight != null ? (e26 = await this._inFlight, this._inFlight = null) : e26 = await this.db.fetchQueryResults(this.conn), this._depleted = e26.length == 0, this._depleted || (this._inFlight = this.db.fetchQueryResults(this.conn)), { done: this._depleted, value: e26 };
    }
    [Symbol.asyncIterator]() {
      return this;
    }
  };
  var O5 = class {
    constructor(e26, s29, t32) {
      this.bindings = e26, this.connectionId = s29, this.statementId = t32;
    }
    async close() {
      await this.bindings.closePrepared(this.connectionId, this.statementId);
    }
    async query(...s29) {
      let t32 = await this.bindings.runPrepared(this.connectionId, this.statementId, s29), a27 = Na2.from(t32);
      return console.assert(a27.isSync()), console.assert(a27.isFile()), new zo(a27);
    }
    async send(...s29) {
      let t32 = await this.bindings.sendPrepared(this.connectionId, this.statementId, s29), a27 = new k4(this.bindings, this.connectionId, t32), r91 = await Na2.from(a27);
      return console.assert(r91.isAsync()), console.assert(r91.isStream()), r91;
    }
  };
  var w4 = ((e26) => (e26.CANCEL_PENDING_QUERY = "CANCEL_PENDING_QUERY", e26.CLOSE_PREPARED = "CLOSE_PREPARED", e26.COLLECT_FILE_STATISTICS = "COLLECT_FILE_STATISTICS", e26.CONNECT = "CONNECT", e26.COPY_FILE_TO_BUFFER = "COPY_FILE_TO_BUFFER", e26.COPY_FILE_TO_PATH = "COPY_FILE_TO_PATH", e26.CREATE_PREPARED = "CREATE_PREPARED", e26.DISCONNECT = "DISCONNECT", e26.DROP_FILE = "DROP_FILE", e26.DROP_FILES = "DROP_FILES", e26.EXPORT_FILE_STATISTICS = "EXPORT_FILE_STATISTICS", e26.FETCH_QUERY_RESULTS = "FETCH_QUERY_RESULTS", e26.FLUSH_FILES = "FLUSH_FILES", e26.GET_FEATURE_FLAGS = "GET_FEATURE_FLAGS", e26.GET_TABLE_NAMES = "GET_TABLE_NAMES", e26.GET_VERSION = "GET_VERSION", e26.GLOB_FILE_INFOS = "GLOB_FILE_INFOS", e26.INSERT_ARROW_FROM_IPC_STREAM = "INSERT_ARROW_FROM_IPC_STREAM", e26.INSERT_CSV_FROM_PATH = "IMPORT_CSV_FROM_PATH", e26.INSERT_JSON_FROM_PATH = "IMPORT_JSON_FROM_PATH", e26.INSTANTIATE = "INSTANTIATE", e26.OPEN = "OPEN", e26.PING = "PING", e26.POLL_PENDING_QUERY = "POLL_PENDING_QUERY", e26.REGISTER_FILE_BUFFER = "REGISTER_FILE_BUFFER", e26.REGISTER_FILE_HANDLE = "REGISTER_FILE_HANDLE", e26.REGISTER_FILE_URL = "REGISTER_FILE_URL", e26.RESET = "RESET", e26.RUN_PREPARED = "RUN_PREPARED", e26.RUN_QUERY = "RUN_QUERY", e26.SEND_PREPARED = "SEND_PREPARED", e26.START_PENDING_QUERY = "START_PENDING_QUERY", e26.TOKENIZE = "TOKENIZE", e26))(w4 || {});
  var F4 = ((e26) => (e26.CONNECTION_INFO = "CONNECTION_INFO", e26.ERROR = "ERROR", e26.FEATURE_FLAGS = "FEATURE_FLAGS", e26.FILE_BUFFER = "FILE_BUFFER", e26.FILE_INFOS = "FILE_INFOS", e26.FILE_SIZE = "FILE_SIZE", e26.FILE_STATISTICS = "FILE_STATISTICS", e26.INSTANTIATE_PROGRESS = "INSTANTIATE_PROGRESS", e26.LOG = "LOG", e26.OK = "OK", e26.PREPARED_STATEMENT_ID = "PREPARED_STATEMENT_ID", e26.QUERY_PLAN = "QUERY_PLAN", e26.QUERY_RESULT = "QUERY_RESULT", e26.QUERY_RESULT_CHUNK = "QUERY_RESULT_CHUNK", e26.QUERY_RESULT_HEADER = "QUERY_RESULT_HEADER", e26.QUERY_RESULT_HEADER_OR_NULL = "QUERY_RESULT_HEADER_OR_NULL", e26.REGISTERED_FILE = "REGISTERED_FILE", e26.SCRIPT_TOKENS = "SCRIPT_TOKENS", e26.SUCCESS = "SUCCESS", e26.TABLE_NAMES = "TABLE_NAMES", e26.VERSION_STRING = "VERSION_STRING", e26))(F4 || {});
  var A4 = class {
    constructor(e26, s29) {
      this.promiseResolver = () => {
      };
      this.promiseRejecter = () => {
      };
      this.type = e26, this.data = s29, this.promise = new Promise((e27, s30) => {
        this.promiseResolver = e27, this.promiseRejecter = s30;
      });
    }
  };
  function P4(s29) {
    switch (s29.typeId) {
      case J3.Binary:
        return { sqlType: "binary" };
      case J3.Bool:
        return { sqlType: "bool" };
      case J3.Date:
        return { sqlType: "date" };
      case J3.DateDay:
        return { sqlType: "date32[d]" };
      case J3.DateMillisecond:
        return { sqlType: "date64[ms]" };
      case J3.Decimal: {
        let e26 = s29;
        return { sqlType: "decimal", precision: e26.precision, scale: e26.scale };
      }
      case J3.Float:
        return { sqlType: "float" };
      case J3.Float16:
        return { sqlType: "float16" };
      case J3.Float32:
        return { sqlType: "float32" };
      case J3.Float64:
        return { sqlType: "float64" };
      case J3.Int:
        return { sqlType: "int32" };
      case J3.Int16:
        return { sqlType: "int16" };
      case J3.Int32:
        return { sqlType: "int32" };
      case J3.Int64:
        return { sqlType: "int64" };
      case J3.Uint16:
        return { sqlType: "uint16" };
      case J3.Uint32:
        return { sqlType: "uint32" };
      case J3.Uint64:
        return { sqlType: "uint64" };
      case J3.Uint8:
        return { sqlType: "uint8" };
      case J3.IntervalDayTime:
        return { sqlType: "interval[dt]" };
      case J3.IntervalYearMonth:
        return { sqlType: "interval[m]" };
      case J3.List:
        return { sqlType: "list", valueType: P4(s29.valueType) };
      case J3.FixedSizeBinary:
        return { sqlType: "fixedsizebinary", byteWidth: s29.byteWidth };
      case J3.Null:
        return { sqlType: "null" };
      case J3.Utf8:
        return { sqlType: "utf8" };
      case J3.Struct:
        return { sqlType: "struct", fields: s29.children.map((e26) => L4(e26.name, e26.type)) };
      case J3.Map: {
        let e26 = s29;
        return { sqlType: "map", keyType: P4(e26.keyType), valueType: P4(e26.valueType) };
      }
      case J3.Time:
        return { sqlType: "time[s]" };
      case J3.TimeMicrosecond:
        return { sqlType: "time[us]" };
      case J3.TimeMillisecond:
        return { sqlType: "time[ms]" };
      case J3.TimeNanosecond:
        return { sqlType: "time[ns]" };
      case J3.TimeSecond:
        return { sqlType: "time[s]" };
      case J3.Timestamp:
        return { sqlType: "timestamp", timezone: s29.timezone || void 0 };
      case J3.TimestampSecond:
        return { sqlType: "timestamp[s]", timezone: s29.timezone || void 0 };
      case J3.TimestampMicrosecond:
        return { sqlType: "timestamp[us]", timezone: s29.timezone || void 0 };
      case J3.TimestampNanosecond:
        return { sqlType: "timestamp[ns]", timezone: s29.timezone || void 0 };
      case J3.TimestampMillisecond:
        return { sqlType: "timestamp[ms]", timezone: s29.timezone || void 0 };
    }
    throw new Error("unsupported arrow type: ".concat(s29.toString()));
  }
  function L4(e26, s29) {
    let t32 = P4(s29);
    return t32.name = e26, t32;
  }
  var C3 = new TextEncoder();
  var U4 = class {
    constructor(e26, s29 = null) {
      this._onInstantiationProgress = [];
      this._worker = null;
      this._workerShutdownPromise = null;
      this._workerShutdownResolver = () => {
      };
      this._nextMessageId = 0;
      this._pendingRequests = /* @__PURE__ */ new Map();
      this._logger = e26, this._onMessageHandler = this.onMessage.bind(this), this._onErrorHandler = this.onError.bind(this), this._onCloseHandler = this.onClose.bind(this), s29 != null && this.attach(s29);
    }
    get logger() {
      return this._logger;
    }
    attach(e26) {
      this._worker = e26, this._worker.addEventListener("message", this._onMessageHandler), this._worker.addEventListener("error", this._onErrorHandler), this._worker.addEventListener("close", this._onCloseHandler), this._workerShutdownPromise = new Promise((e27, s29) => {
        this._workerShutdownResolver = e27;
      });
    }
    detach() {
      this._worker && (this._worker.removeEventListener("message", this._onMessageHandler), this._worker.removeEventListener("error", this._onErrorHandler), this._worker.removeEventListener("close", this._onCloseHandler), this._worker = null, this._workerShutdownResolver(null), this._workerShutdownPromise = null, this._workerShutdownResolver = () => {
      });
    }
    async terminate() {
      this._worker && (this._worker.terminate(), this._worker = null, this._workerShutdownPromise = null, this._workerShutdownResolver = () => {
      });
    }
    async postTask(e26, s29 = []) {
      if (!this._worker) {
        console.error("cannot send a message since the worker is not set!");
        return;
      }
      let t32 = this._nextMessageId++;
      return this._pendingRequests.set(t32, e26), this._worker.postMessage({ messageId: t32, type: e26.type, data: e26.data }, s29), await e26.promise;
    }
    onMessage(e26) {
      var s29;
      let t32 = e26.data;
      switch (t32.type) {
        case "LOG": {
          this._logger.log(t32.data);
          return;
        }
        case "INSTANTIATE_PROGRESS": {
          for (let e27 of this._onInstantiationProgress)
            e27(t32.data);
          return;
        }
      }
      let a27 = this._pendingRequests.get(t32.requestId);
      if (!a27) {
        console.warn("unassociated response: [".concat(t32.requestId, ", ").concat(t32.type.toString(), "]"));
        return;
      }
      if (this._pendingRequests.delete(t32.requestId), t32.type == "ERROR") {
        let e27 = new Error(t32.data.message);
        e27.name = t32.data.name, (s29 = Object.getOwnPropertyDescriptor(e27, "stack")) != null && s29.writable && (e27.stack = t32.data.stack), a27.promiseRejecter(e27);
        return;
      }
      switch (a27.type) {
        case "CLOSE_PREPARED":
        case "COLLECT_FILE_STATISTICS":
        case "COPY_FILE_TO_PATH":
        case "DISCONNECT":
        case "DROP_FILE":
        case "DROP_FILES":
        case "FLUSH_FILES":
        case "INSERT_ARROW_FROM_IPC_STREAM":
        case "IMPORT_CSV_FROM_PATH":
        case "IMPORT_JSON_FROM_PATH":
        case "OPEN":
        case "PING":
        case "REGISTER_FILE_BUFFER":
        case "REGISTER_FILE_HANDLE":
        case "REGISTER_FILE_URL":
        case "RESET":
          if (t32.type == "OK") {
            a27.promiseResolver(t32.data);
            return;
          }
          break;
        case "INSTANTIATE":
          if (this._onInstantiationProgress = [], t32.type == "OK") {
            a27.promiseResolver(t32.data);
            return;
          }
          break;
        case "GLOB_FILE_INFOS":
          if (t32.type == "FILE_INFOS") {
            a27.promiseResolver(t32.data);
            return;
          }
          break;
        case "GET_VERSION":
          if (t32.type == "VERSION_STRING") {
            a27.promiseResolver(t32.data);
            return;
          }
          break;
        case "GET_FEATURE_FLAGS":
          if (t32.type == "FEATURE_FLAGS") {
            a27.promiseResolver(t32.data);
            return;
          }
          break;
        case "GET_TABLE_NAMES":
          if (t32.type == "TABLE_NAMES") {
            a27.promiseResolver(t32.data);
            return;
          }
          break;
        case "TOKENIZE":
          if (t32.type == "SCRIPT_TOKENS") {
            a27.promiseResolver(t32.data);
            return;
          }
          break;
        case "COPY_FILE_TO_BUFFER":
          if (t32.type == "FILE_BUFFER") {
            a27.promiseResolver(t32.data);
            return;
          }
          break;
        case "EXPORT_FILE_STATISTICS":
          if (t32.type == "FILE_STATISTICS") {
            a27.promiseResolver(t32.data);
            return;
          }
          break;
        case "CONNECT":
          if (t32.type == "CONNECTION_INFO") {
            a27.promiseResolver(t32.data);
            return;
          }
          break;
        case "RUN_PREPARED":
        case "RUN_QUERY":
          if (t32.type == "QUERY_RESULT") {
            a27.promiseResolver(t32.data);
            return;
          }
          break;
        case "SEND_PREPARED":
          if (t32.type == "QUERY_RESULT_HEADER") {
            a27.promiseResolver(t32.data);
            return;
          }
          break;
        case "START_PENDING_QUERY":
          if (t32.type == "QUERY_RESULT_HEADER_OR_NULL") {
            a27.promiseResolver(t32.data);
            return;
          }
          break;
        case "POLL_PENDING_QUERY":
          if (t32.type == "QUERY_RESULT_HEADER_OR_NULL") {
            a27.promiseResolver(t32.data);
            return;
          }
          break;
        case "CANCEL_PENDING_QUERY":
          if (this._onInstantiationProgress = [], t32.type == "SUCCESS") {
            a27.promiseResolver(t32.data);
            return;
          }
          break;
        case "FETCH_QUERY_RESULTS":
          if (t32.type == "QUERY_RESULT_CHUNK") {
            a27.promiseResolver(t32.data);
            return;
          }
          break;
        case "CREATE_PREPARED":
          if (t32.type == "PREPARED_STATEMENT_ID") {
            a27.promiseResolver(t32.data);
            return;
          }
          break;
      }
      a27.promiseRejecter(new Error("unexpected response type: ".concat(t32.type.toString())));
    }
    onError(e26) {
      console.error(e26), console.error("error in duckdb worker: ".concat(e26.message)), this._pendingRequests.clear();
    }
    onClose() {
      if (this._workerShutdownResolver(null), this._pendingRequests.size != 0) {
        console.warn("worker terminated with ".concat(this._pendingRequests.size, " pending requests"));
        return;
      }
      this._pendingRequests.clear();
    }
    async reset() {
      let e26 = new A4("RESET", null);
      return await this.postTask(e26);
    }
    async ping() {
      let e26 = new A4("PING", null);
      await this.postTask(e26);
    }
    async dropFile(e26) {
      let s29 = new A4("DROP_FILE", e26);
      return await this.postTask(s29);
    }
    async dropFiles() {
      let e26 = new A4("DROP_FILES", null);
      return await this.postTask(e26);
    }
    async flushFiles() {
      let e26 = new A4("FLUSH_FILES", null);
      return await this.postTask(e26);
    }
    async instantiate(e26, s29 = null, t32 = (e27) => {
    }) {
      this._onInstantiationProgress.push(t32);
      let a27 = new A4("INSTANTIATE", [e26, s29]);
      return await this.postTask(a27);
    }
    async getVersion() {
      let e26 = new A4("GET_VERSION", null);
      return await this.postTask(e26);
    }
    async getFeatureFlags() {
      let e26 = new A4("GET_FEATURE_FLAGS", null);
      return await this.postTask(e26);
    }
    async open(e26) {
      let s29 = new A4("OPEN", e26);
      await this.postTask(s29);
    }
    async tokenize(e26) {
      let s29 = new A4("TOKENIZE", e26);
      return await this.postTask(s29);
    }
    async connectInternal() {
      let e26 = new A4("CONNECT", null);
      return await this.postTask(e26);
    }
    async connect() {
      let e26 = await this.connectInternal();
      return new N4(this, e26);
    }
    async disconnect(e26) {
      let s29 = new A4("DISCONNECT", e26);
      await this.postTask(s29);
    }
    async runQuery(e26, s29) {
      let t32 = new A4("RUN_QUERY", [e26, s29]);
      return await this.postTask(t32);
    }
    async startPendingQuery(e26, s29) {
      let t32 = new A4("START_PENDING_QUERY", [e26, s29]);
      return await this.postTask(t32);
    }
    async pollPendingQuery(e26) {
      let s29 = new A4("POLL_PENDING_QUERY", e26);
      return await this.postTask(s29);
    }
    async cancelPendingQuery(e26) {
      let s29 = new A4("CANCEL_PENDING_QUERY", e26);
      return await this.postTask(s29);
    }
    async fetchQueryResults(e26) {
      let s29 = new A4("FETCH_QUERY_RESULTS", e26);
      return await this.postTask(s29);
    }
    async getTableNames(e26, s29) {
      let t32 = new A4("GET_TABLE_NAMES", [e26, s29]);
      return await this.postTask(t32);
    }
    async createPrepared(e26, s29) {
      let t32 = new A4("CREATE_PREPARED", [e26, s29]);
      return await this.postTask(t32);
    }
    async closePrepared(e26, s29) {
      let t32 = new A4("CLOSE_PREPARED", [e26, s29]);
      await this.postTask(t32);
    }
    async runPrepared(e26, s29, t32) {
      let a27 = new A4("RUN_PREPARED", [e26, s29, t32]);
      return await this.postTask(a27);
    }
    async sendPrepared(e26, s29, t32) {
      let a27 = new A4("SEND_PREPARED", [e26, s29, t32]);
      return await this.postTask(a27);
    }
    async globFiles(e26) {
      let s29 = new A4("GLOB_FILE_INFOS", e26);
      return await this.postTask(s29);
    }
    async registerFileText(e26, s29) {
      let t32 = C3.encode(s29);
      await this.registerFileBuffer(e26, t32);
    }
    async registerFileURL(e26, s29, t32, a27) {
      s29 === void 0 && (s29 = e26);
      let r91 = new A4("REGISTER_FILE_URL", [e26, s29, t32, a27]);
      await this.postTask(r91);
    }
    async registerEmptyFileBuffer(e26) {
      let s29 = new A4("REGISTER_FILE_BUFFER", [e26, new Uint8Array()]);
      await this.postTask(s29);
    }
    async registerFileBuffer(e26, s29) {
      let t32 = new A4("REGISTER_FILE_BUFFER", [e26, s29]);
      await this.postTask(t32, [s29.buffer]);
    }
    async registerFileHandle(e26, s29, t32, a27) {
      let r91 = new A4("REGISTER_FILE_HANDLE", [e26, s29, t32, a27]);
      await this.postTask(r91, []);
    }
    async collectFileStatistics(e26, s29) {
      let t32 = new A4("COLLECT_FILE_STATISTICS", [e26, s29]);
      await this.postTask(t32, []);
    }
    async exportFileStatistics(e26) {
      let s29 = new A4("EXPORT_FILE_STATISTICS", e26);
      return await this.postTask(s29, []);
    }
    async copyFileToBuffer(e26) {
      let s29 = new A4("COPY_FILE_TO_BUFFER", e26);
      return await this.postTask(s29);
    }
    async copyFileToPath(e26, s29) {
      let t32 = new A4("COPY_FILE_TO_PATH", [e26, s29]);
      await this.postTask(t32);
    }
    async insertArrowFromIPCStream(e26, s29, t32) {
      if (s29.length == 0)
        return;
      let a27 = new A4("INSERT_ARROW_FROM_IPC_STREAM", [e26, s29, t32]);
      await this.postTask(a27, [s29.buffer]);
    }
    async insertCSVFromPath(e26, s29, t32) {
      if (t32.columns !== void 0) {
        let e27 = [];
        for (let s30 in t32.columns) {
          let a28 = t32.columns[s30];
          e27.push(L4(s30, a28));
        }
        t32.columnsFlat = e27, delete t32.columns;
      }
      let a27 = new A4("IMPORT_CSV_FROM_PATH", [e26, s29, t32]);
      await this.postTask(a27);
    }
    async insertJSONFromPath(e26, s29, t32) {
      if (t32.columns !== void 0) {
        let e27 = [];
        for (let s30 in t32.columns) {
          let a28 = t32.columns[s30];
          e27.push(L4(s30, a28));
        }
        t32.columnsFlat = e27, delete t32.columns;
      }
      let a27 = new A4("IMPORT_JSON_FROM_PATH", [e26, s29, t32]);
      await this.postTask(a27);
    }
  };
  var D4 = async () => WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 5, 3, 1, 0, 1, 10, 14, 1, 12, 0, 65, 0, 65, 0, 65, 0, 252, 10, 0, 0, 11]));
  var v4 = async () => WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 8, 1, 6, 0, 6, 64, 25, 11, 11]));
  var M4 = async () => WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 5, 1, 96, 0, 1, 123, 3, 2, 1, 0, 10, 10, 1, 8, 0, 65, 0, 253, 15, 253, 98, 11]));
  var G4 = () => (async (e26) => {
    try {
      return typeof MessageChannel < "u" && new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)), WebAssembly.validate(e26);
    } catch (e27) {
      return false;
    }
  })(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 5, 4, 1, 3, 1, 1, 10, 11, 1, 9, 0, 65, 0, 254, 16, 2, 0, 26, 11]));
  var j5 = { name: "@duckdb/duckdb-wasm", version: "1.28.1-dev99.0", description: "DuckDB powered by WebAssembly", license: "MIT", repository: { type: "git", url: "https://github.com/duckdb/duckdb-wasm.git" }, keywords: ["sql", "duckdb", "relational", "database", "data", "query", "wasm", "analytics", "olap", "arrow", "parquet", "json", "csv"], dependencies: { "apache-arrow": "^14.0.1" }, devDependencies: { "@types/emscripten": "^1.39.10", "@types/jasmine": "^5.1.4", "@typescript-eslint/eslint-plugin": "^6.18.0", "@typescript-eslint/parser": "^6.18.0", esbuild: "^0.19.10", eslint: "^8.56.0", "eslint-plugin-jasmine": "^4.1.3", "eslint-plugin-react": "^7.33.2", "fast-glob": "^3.3.2", jasmine: "^5.1.0", "jasmine-core": "^5.1.1", "jasmine-spec-reporter": "^7.0.0", "js-sha256": "^0.10.1", karma: "^6.4.2", "karma-chrome-launcher": "^3.2.0", "karma-coverage": "^2.2.1", "karma-firefox-launcher": "^2.1.2", "karma-jasmine": "^5.1.0", "karma-jasmine-html-reporter": "^2.1.0", "karma-sourcemap-loader": "^0.4.0", "karma-spec-reporter": "^0.0.36", "make-dir": "^4.0.0", nyc: "^15.1.0", prettier: "^3.2.2", puppeteer: "^21.7.0", rimraf: "^5.0.5", s3rver: "^3.7.1", typedoc: "^0.25.7", typescript: "^5.3.3", "wasm-feature-detect": "^1.6.1", "web-worker": "^1.2.0" }, scripts: { "build:debug": "node bundle.mjs debug && tsc --emitDeclarationOnly", "build:release": "node bundle.mjs release && tsc --emitDeclarationOnly", docs: "typedoc", report: "node ./coverage.mjs", "test:node": "node --enable-source-maps ../../node_modules/jasmine/bin/jasmine ./dist/tests-node.cjs", "test:node:debug": "node --inspect-brk --enable-source-maps ../../node_modules/jasmine/bin/jasmine ./dist/tests-node.cjs", "test:node:coverage": "nyc -r json --report-dir ./coverage/node node ../../node_modules/jasmine/bin/jasmine ./dist/tests-node.cjs", "test:firefox": "karma start ./karma/tests-firefox.cjs", "test:chrome": "karma start ./karma/tests-chrome.cjs", "test:chrome:eh": "karma start ./karma/tests-chrome-eh.cjs", "test:chrome:coverage": "karma start ./karma/tests-chrome-coverage.cjs", "test:browser": "karma start ./karma/tests-all.cjs", "test:browser:debug": "karma start ./karma/tests-debug.cjs", test: "npm run test:chrome && npm run test:node", "test:coverage": "npm run test:chrome:coverage && npm run test:node:coverage && npm run report", lint: "eslint src test" }, files: ["dist", "!dist/types/test"], main: "dist/duckdb-browser.cjs", module: "dist/duckdb-browser.mjs", types: "dist/duckdb-browser.d.ts", jsdelivr: "dist/duckdb-browser.cjs", unpkg: "dist/duckdb-browser.mjs", sideEffects: false, browser: { fs: false, path: false, perf_hooks: false, os: false, worker_threads: false }, exports: { "./dist/duckdb-mvp.wasm": "./dist/duckdb-mvp.wasm", "./dist/duckdb-eh.wasm": "./dist/duckdb-eh.wasm", "./dist/duckdb-coi.wasm": "./dist/duckdb-coi.wasm", "./dist/duckdb-browser": "./dist/duckdb-browser.mjs", "./dist/duckdb-browser.cjs": "./dist/duckdb-browser.cjs", "./dist/duckdb-browser.mjs": "./dist/duckdb-browser.mjs", "./dist/duckdb-browser-blocking": "./dist/duckdb-browser-blocking.mjs", "./dist/duckdb-browser-blocking.mjs": "./dist/duckdb-browser-blocking.mjs", "./dist/duckdb-browser-blocking.cjs": "./dist/duckdb-browser-blocking.cjs", "./dist/duckdb-browser-coi.pthread.worker.js": "./dist/duckdb-browser-coi.pthread.worker.js", "./dist/duckdb-browser-coi.worker.js": "./dist/duckdb-browser-coi.worker.js", "./dist/duckdb-browser-eh.worker.js": "./dist/duckdb-browser-eh.worker.js", "./dist/duckdb-browser-mvp.worker.js": "./dist/duckdb-browser-mvp.worker.js", "./dist/duckdb-node": "./dist/duckdb-node.cjs", "./dist/duckdb-node.cjs": "./dist/duckdb-node.cjs", "./dist/duckdb-node-blocking": "./dist/duckdb-node-blocking.cjs", "./dist/duckdb-node-blocking.cjs": "./dist/duckdb-node-blocking.cjs", "./dist/duckdb-node-eh.worker.cjs": "./dist/duckdb-node-eh.worker.cjs", "./dist/duckdb-node-mvp.worker.cjs": "./dist/duckdb-node-mvp.worker.cjs", "./blocking": { browser: { types: "./dist/duckdb-browser-blocking.d.ts", import: "./dist/duckdb-browser-blocking.mjs", require: "./dist/duckdb-browser-blocking.cjs" }, node: { types: "./dist/duckdb-node-blocking.d.ts", require: "./dist/duckdb-node-blocking.cjs", import: "./dist/duckdb-node-blocking.cjs" }, types: "./dist/duckdb-browser-blocking.d.ts", import: "./dist/duckdb-browser-blocking.mjs", require: "./dist/duckdb-browser-blocking.cjs" }, ".": { browser: { types: "./dist/duckdb-browser.d.ts", import: "./dist/duckdb-browser.mjs", require: "./dist/duckdb-browser.cjs" }, node: { types: "./dist/duckdb-node.d.ts", import: "./dist/duckdb-node.cjs", require: "./dist/duckdb-node.cjs" }, types: "./dist/duckdb-browser.d.ts", import: "./dist/duckdb-browser.mjs", require: "./dist/duckdb-browser.cjs" } } };
  var q4 = j5.name;
  var B4 = j5.version;
  var Y4 = j5.version.split(".");
  var Q4 = Y4[0];
  var H4 = Y4[1];
  var K4 = Y4[2];
  var W4 = () => typeof navigator > "u";
  function J4() {
    let e26 = "https://cdn.jsdelivr.net/npm/".concat(q4, "@").concat(B4, "/dist/");
    return { mvp: { mainModule: "".concat(e26, "duckdb-mvp.wasm"), mainWorker: "".concat(e26, "duckdb-browser-mvp.worker.js") }, eh: { mainModule: "".concat(e26, "duckdb-eh.wasm"), mainWorker: "".concat(e26, "duckdb-browser-eh.worker.js") } };
  }
  var Z4 = null;
  var X4 = null;
  var $4 = null;
  var ee2 = null;
  var se3 = null;
  async function te4() {
    return Z4 == null && (Z4 = typeof BigInt64Array < "u"), X4 == null && (X4 = await v4()), $4 == null && ($4 = await G4()), ee2 == null && (ee2 = await M4()), se3 == null && (se3 = await D4()), { bigInt64Array: Z4, crossOriginIsolated: W4() || globalThis.crossOriginIsolated || false, wasmExceptions: X4, wasmSIMD: ee2, wasmThreads: $4, wasmBulkMemory: se3 };
  }
  async function ae2(e26) {
    let s29 = await te4();
    if (s29.wasmExceptions) {
      if (s29.wasmSIMD && s29.wasmThreads && s29.crossOriginIsolated && e26.coi)
        return { mainModule: e26.coi.mainModule, mainWorker: e26.coi.mainWorker, pthreadWorker: e26.coi.pthreadWorker };
      if (e26.eh)
        return { mainModule: e26.eh.mainModule, mainWorker: e26.eh.mainWorker, pthreadWorker: null };
    }
    return { mainModule: e26.mvp.mainModule, mainWorker: e26.mvp.mainWorker, pthreadWorker: null };
  }
  var re2 = c4(E4());
  function ie3() {
    let e26 = new TextDecoder();
    return (s29) => (typeof SharedArrayBuffer < "u" && s29.buffer instanceof SharedArrayBuffer && (s29 = new Uint8Array(s29)), e26.decode(s29));
  }
  ie3();
  var oe3 = ((e26) => (e26[e26.BUFFER = 0] = "BUFFER", e26[e26.NODE_FS = 1] = "NODE_FS", e26[e26.BROWSER_FILEREADER = 2] = "BROWSER_FILEREADER", e26[e26.BROWSER_FSACCESS = 3] = "BROWSER_FSACCESS", e26[e26.HTTP = 4] = "HTTP", e26[e26.S3 = 5] = "S3", e26))(oe3 || {});

  // https://cdn.jsdelivr.net/npm/@uwdata/mosaic-core@0.10.0/+esm
  var A5 = {};
  function S4(e26, t32 = false) {
    let n37, r91, s29 = A5;
    function i29(t33) {
      n37 = e26(t33).then(() => {
        if (r91) {
          const { value: e27 } = r91;
          r91 = null, i29(e27);
        } else
          n37 = null;
      });
    }
    function c30(e27) {
      n37 ? function(e28) {
        r91 = { event: e28 };
      }(e27) : i29(e27);
    }
    return t32 ? function(e27) {
      s29 !== e27 && requestAnimationFrame(() => {
        const e28 = s29;
        s29 = A5, c30(e28);
      }), s29 = e27;
    } : c30;
  }
  var x4 = class {
    constructor(e26) {
      this._filterBy = e26, this._requestUpdate = S4(() => this.requestQuery(), true), this._coordinator = null;
    }
    get coordinator() {
      return this._coordinator;
    }
    set coordinator(e26) {
      this._coordinator = e26;
    }
    get filterBy() {
      return this._filterBy;
    }
    get filterIndexable() {
      return true;
    }
    fields() {
      return null;
    }
    fieldInfo(e26) {
      return this;
    }
    query(e26) {
      return null;
    }
    queryPending() {
      return this;
    }
    queryResult(e26) {
      return this;
    }
    queryError(e26) {
      return this;
    }
    requestQuery(e26) {
      const t32 = e26 || this.query(this.filterBy?.predicate(this));
      return this._coordinator.requestQuery(this, t32);
    }
    requestUpdate() {
      this._requestUpdate();
    }
    update() {
      return this;
    }
  };
  function R5(t32 = "ws://localhost:3000/") {
    const n37 = [];
    let r91, s29 = false, i29 = null;
    const c30 = { open() {
      s29 = true, u30();
    }, close() {
      for (s29 = false, i29 = null, r91 = null; n37.length; )
        n37.shift().reject("Socket closed");
    }, error(e26) {
      if (i29) {
        const { reject: t33 } = i29;
        i29 = null, u30(), t33(e26);
      } else
        console.error("WebSocket error: ", e26);
    }, message({ data: t33 }) {
      if (i29) {
        const { query: n38, resolve: r92, reject: s30 } = i29;
        if (i29 = null, u30(), "string" == typeof t33) {
          const e26 = JSON.parse(t33);
          e26.error ? s30(e26.error) : r92(e26);
        } else if ("exec" === n38.type)
          r92();
        else {
          if ("arrow" !== n38.type)
            throw new Error(`Unexpected socket data: ${t33}`);
          r92(_l(t33.arrayBuffer()));
        }
      } else
        console.log("WebSocket message: ", t33);
    } };
    function o35(e26, o36, l35) {
      null == r91 && function() {
        r91 = new WebSocket(t32);
        for (const e27 in c30)
          r91.addEventListener(e27, c30[e27]);
      }(), n37.push({ query: e26, resolve: o36, reject: l35 }), s29 && !i29 && u30();
    }
    function u30() {
      n37.length && (i29 = n37.shift(), r91.send(JSON.stringify(i29.query)));
    }
    return { get connected() {
      return s29;
    }, query: (e26) => new Promise((t33, n38) => o35(e26, t33, n38)) };
  }
  function k5(e26) {
    if (!e26.filterIndexable)
      return null;
    const t32 = e26.query(), r91 = I5(t32);
    if ("string" != typeof r91 || !t32.select)
      return null;
    const s29 = [], i29 = [], c30 = {};
    for (const e27 of t32.select()) {
      const { as: t33, expr: { aggregate: o35, args: u30 } } = e27, l35 = o35?.toUpperCase?.();
      switch (l35) {
        case "COUNT":
        case "SUM":
          s29.push({ [t33]: lt2`SUM("${t33}")::DOUBLE` });
          break;
        case "AVG":
          s29.push({ [t33]: U5(c30, t33, u30[0]) });
          break;
        case "ARG_MAX":
          s29.push({ [t33]: O6(c30, t33, u30) });
          break;
        case "ARG_MIN":
          s29.push({ [t33]: N5(c30, t33, u30) });
          break;
        case "VARIANCE":
        case "VAR_SAMP":
          c30[t33] = null, s29.push({ [t33]: G5(c30, u30[0], r91) });
          break;
        case "VAR_POP":
          c30[t33] = null, s29.push({ [t33]: G5(c30, u30[0], r91, false) });
          break;
        case "STDDEV":
        case "STDDEV_SAMP":
          c30[t33] = null, s29.push({ [t33]: lt2`SQRT(${G5(c30, u30[0], r91)})` });
          break;
        case "STDDEV_POP":
          c30[t33] = null, s29.push({ [t33]: lt2`SQRT(${G5(c30, u30[0], r91, false)})` });
          break;
        case "COVAR_SAMP":
          c30[t33] = null, s29.push({ [t33]: D5(c30, u30, r91) });
          break;
        case "COVAR_POP":
          c30[t33] = null, s29.push({ [t33]: D5(c30, u30, r91, false) });
          break;
        case "CORR":
          c30[t33] = null, s29.push({ [t33]: B5(c30, u30, r91) });
          break;
        case "REGR_COUNT":
          c30[t33] = null, s29.push({ [t33]: lt2`${P5(c30, u30)}::DOUBLE` });
          break;
        case "REGR_AVGX":
          c30[t33] = null, s29.push({ [t33]: V4(c30, u30) });
          break;
        case "REGR_AVGY":
          c30[t33] = null, s29.push({ [t33]: W5(c30, u30) });
          break;
        case "REGR_SYY":
          c30[t33] = null, s29.push({ [t33]: z4(c30, 0, u30, r91) });
          break;
        case "REGR_SXX":
          c30[t33] = null, s29.push({ [t33]: z4(c30, 1, u30, r91) });
          break;
        case "REGR_SXY":
          c30[t33] = null, s29.push({ [t33]: D5(c30, u30, r91, null) });
          break;
        case "REGR_SLOPE":
          c30[t33] = null, s29.push({ [t33]: Y5(c30, u30, r91) });
          break;
        case "REGR_INTERCEPT":
          c30[t33] = null, s29.push({ [t33]: X5(c30, u30, r91) });
          break;
        case "REGR_R2":
          c30[t33] = null, s29.push({ [t33]: lt2`(${B5(c30, u30, r91)}) ** 2` });
          break;
        case "MAX":
        case "MIN":
        case "BIT_AND":
        case "BIT_OR":
        case "BIT_XOR":
        case "BOOL_AND":
        case "BOOL_OR":
        case "PRODUCT":
          s29.push({ [t33]: lt2`${l35}("${t33}")` });
          break;
        default:
          if (o35)
            return null;
          i29.push(t33);
      }
    }
    return s29.length ? { from: r91, dims: i29, aggr: s29, aux: c30 } : null;
  }
  function M5(e26, ...t32) {
    return `__${e26}${t32.length ? "_" + t32.map(T5).join("_") : ""}__`;
  }
  function T5(e26) {
    return `${e26}`.replaceAll('"', "").replaceAll(" ", "_");
  }
  function I5(e26) {
    const t32 = e26.subqueries;
    if (e26.select) {
      const n38 = e26.from();
      if (!n38.length)
        return;
      if (0 === t32.length)
        return n38[0].from.table;
    }
    const n37 = I5(t32[0]);
    for (let e27 = 1; e27 < t32.length; ++e27) {
      const r91 = I5(t32[e27]);
      if (void 0 !== r91 && r91 !== n37)
        return NaN;
    }
    return n37;
  }
  function C4(e26, t32) {
    const r91 = M5("count", t32);
    return e26[r91] = lt2`COUNT(${t32})`, lt2`SUM(${r91})`.annotate({ name: r91 });
  }
  function U5(e26, t32, r91) {
    const s29 = C4(e26, r91);
    return lt2`(SUM("${t32}" * ${s29.name}) / ${s29})`;
  }
  function L5(e26, t32) {
    return p2`(SELECT AVG(${e26}) FROM "${t32}")`;
  }
  function O6(e26, t32, [, r91]) {
    const s29 = M5("max", r91);
    return e26[s29] = lt2`MAX(${r91})`, lt2`ARG_MAX("${t32}", ${s29})`;
  }
  function N5(e26, t32, [, r91]) {
    const s29 = M5("min", r91);
    return e26[s29] = lt2`MIN(${r91})`, lt2`ARG_MIN("${t32}", ${s29})`;
  }
  function G5(e26, t32, s29, i29 = true) {
    const c30 = C4(e26, t32), o35 = M5("rssq", t32), u30 = M5("rsum", t32), l35 = p2`${t32} - ${L5(t32, s29)}`;
    e26[o35] = lt2`SUM((${l35}) ** 2)`, e26[u30] = lt2`SUM(${l35})`;
    return lt2`(SUM(${o35}) - (SUM(${u30}) ** 2 / ${c30})) / (${c30}${i29 ? " - 1" : ""})`;
  }
  function D5(e26, t32, r91, s29 = true) {
    const i29 = P5(e26, t32), c30 = Q5(e26, t32, r91), o35 = j6(e26, 1, t32, r91), u30 = j6(e26, 0, t32, r91);
    return lt2`(${c30} - ${o35} * ${u30} / ${i29})${null === s29 ? "" : s29 ? ` / (${i29} - 1)` : ` / ${i29}`}`;
  }
  function B5(e26, t32, r91) {
    const s29 = P5(e26, t32), i29 = Q5(e26, t32, r91), c30 = F5(e26, 1, t32, r91), o35 = F5(e26, 0, t32, r91), u30 = j6(e26, 1, t32, r91), l35 = j6(e26, 0, t32, r91), a27 = lt2`(${c30} - (${u30} ** 2) / ${s29})`, h35 = lt2`(${o35} - (${l35} ** 2) / ${s29})`;
    return lt2`(${i29} - ${u30} * ${l35} / ${s29}) / SQRT(${a27} * ${h35})`;
  }
  function P5(e26, [t32, r91]) {
    const s29 = M5("count", t32, r91);
    return e26[s29] = lt2`REGR_COUNT(${t32}, ${r91})`, lt2`SUM(${s29})`.annotate({ name: s29 });
  }
  function j6(e26, t32, r91, s29) {
    const i29 = r91[t32], c30 = r91[1 - t32], o35 = M5("rs", i29);
    return e26[o35] = lt2`SUM(${i29} - ${L5(i29, s29)}) FILTER (${c30} IS NOT NULL)`, lt2`SUM(${o35})`;
  }
  function F5(e26, t32, r91, s29) {
    const i29 = r91[t32], c30 = r91[1 - t32], o35 = M5("rss", i29);
    return e26[o35] = lt2`SUM((${i29} - ${L5(i29, s29)}) ** 2) FILTER (${c30} IS NOT NULL)`, lt2`SUM(${o35})`;
  }
  function Q5(e26, t32, r91) {
    const [s29, i29] = t32, c30 = M5("sxy", s29, i29);
    return e26[c30] = lt2`SUM((${i29} - ${L5(i29, r91)}) * (${s29} - ${L5(s29, r91)}))`, lt2`SUM(${c30})`;
  }
  function V4(e26, t32) {
    const [r91, s29] = t32, i29 = P5(e26, t32), c30 = M5("avg", s29, r91);
    return e26[c30] = lt2`REGR_AVGX(${r91}, ${s29})`, lt2`(SUM(${c30} * ${i29.name}) / ${i29})`;
  }
  function W5(e26, t32) {
    const [r91, s29] = t32, i29 = P5(e26, t32), c30 = M5("avg", r91, s29);
    return e26[c30] = lt2`REGR_AVGY(${r91}, ${s29})`, lt2`(SUM(${c30} * ${i29.name}) / ${i29})`;
  }
  function z4(e26, t32, r91, s29) {
    const i29 = P5(e26, r91), c30 = j6(e26, t32, r91, s29), o35 = F5(e26, t32, r91, s29);
    return lt2`(${o35} - (${c30} ** 2 / ${i29}))`;
  }
  function Y5(e26, t32, r91) {
    const s29 = D5(e26, t32, r91, null), i29 = z4(e26, 1, t32, r91);
    return lt2`(${s29}) / ${i29}`;
  }
  function X5(e26, t32, r91) {
    const s29 = V4(e26, t32), i29 = W5(e26, t32), c30 = Y5(e26, t32, r91);
    return lt2`${i29} - (${c30}) * ${s29}`;
  }
  function H5(e26) {
    return e26 + (e26 << 1) + (e26 << 4) + (e26 << 7) + (e26 << 8) + (e26 << 24);
  }
  var J5 = { skip: true, result: null };
  var Z5 = class {
    constructor(e26, { enabled: t32 = true, temp: n37 = true } = {}) {
      this.indexes = /* @__PURE__ */ new Map(), this.active = null, this.temp = n37, this.mc = e26, this._enabled = t32;
    }
    enabled(e26) {
      if (void 0 === e26)
        return this._enabled;
      this._enabled !== e26 && (e26 || this.clear(), this._enabled = e26);
    }
    clear() {
      this.mc.cancel(Array.from(this.indexes.values(), (e26) => e26?.result)), this.indexes.clear(), this.active = null;
    }
    index(e26, t32, n37) {
      if (!this._enabled)
        return null;
      const { indexes: a27, mc: h35, temp: f25 } = this, { source: d25 } = n37;
      if (!d25)
        return null;
      if (this.active && (this.active.source !== d25 && this.clear(), null === this.active?.source))
        return null;
      let { active: p24 } = this;
      if (!p24 && (this.active = p24 = function(e27) {
        const { source: t33, meta: n38 } = e27, s29 = e27.predicate, l35 = s29?.columns;
        let a28, h36;
        if (!n38 || !l35)
          return { source: null, columns: h36, predicate: a28 };
        const { type: f26, scales: d26, bin: p25, pixelSize: m28 = 1 } = n38;
        if ("point" === f26)
          a28 = (e28) => e28, h36 = Object.fromEntries(l35.map((e28) => [`${e28}`, n3(e28)]));
        else if ("interval" === f26 && d26) {
          const e28 = d26.map((e29) => function(e30, t34, n39) {
            const { type: s30, domain: i29, range: c30, apply: o35, sqlApply: l36 } = Ne2(e30);
            if (!o35)
              return;
            const a29 = K5[`${n39}`.toLowerCase()] || "FLOOR", h37 = o35(Math.min(...i29)), f27 = o35(Math.max(...i29)), d27 = "identity" === s30 ? 1 : Math.abs(c30[1] - c30[0]) / (f27 - h37), p26 = d27 / t34 == 1 ? "" : d27 / t34 + "::DOUBLE * ", m29 = 0 === h37 ? "" : ` - ${h37}::DOUBLE`;
            return (e31) => p2`${a29}(${p26}(${l36(e31)}${m29}))::INTEGER`;
          }(e29, m28, p25));
          e28.some((e29) => !e29) || (1 === e28.length ? (a28 = (t34) => t34 ? G2("active0", t34.range.map(e28[0])) : [], h36 = { active0: e28[0](s29.field) }) : (a28 = (t34) => t34 ? m3(t34.children.map(({ range: t35 }, n39) => G2(`active${n39}`, t35.map(e28[n39])))) : [], h36 = Object.fromEntries(s29.children.map((t34, n39) => [`active${n39}`, e28[n39](t34.field)]))));
        }
        return { source: h36 ? t33 : null, columns: h36, predicate: a28 };
      }(n37), null === p24.source))
        return null;
      if (a27.has(e26))
        return a27.get(e26);
      const m27 = k5(e26);
      let g31;
      if (m27)
        if (t32.skip(e26, n37))
          g31 = J5;
        else {
          const n38 = t32.remove(d25).predicate(e26);
          g31 = function(e27, t33, n39) {
            const { dims: r91, aggr: s29, aux: i29 } = n39, { columns: c30 } = t33, o35 = e27.select({ ...c30, ...i29 }).groupby(Object.keys(c30)), [u30] = o35.subqueries;
            if (u30) {
              !function(e28, t34) {
                const n40 = /* @__PURE__ */ new Set(), r92 = (e29) => {
                  n40.has(e29) || (n40.add(e29), e29.select && e29.from().length && e29.select(t34), e29.subqueries.forEach(r92));
                };
                r92(e28);
              }(u30, Object.values(c30).flatMap((e28) => e28.columns));
            }
            const a28 = o35.orderby();
            o35.query.orderby = [];
            const h36 = o35.toString(), f26 = (function(e28) {
              let t34 = 2166136261;
              for (let n40 = 0, r92 = e28.length; n40 < r92; ++n40) {
                const r93 = e28.charCodeAt(n40), s30 = 65280 & r93;
                s30 && (t34 = H5(t34 ^ s30 >> 8)), t34 = H5(t34 ^ 255 & r93);
              }
              return function(e29) {
                return e29 += e29 << 13, e29 ^= e29 >>> 7, e29 += e29 << 3, e29 ^= e29 >>> 17, 4294967295 & (e29 += e29 << 5);
              }(t34);
            }(h36) >>> 0).toString(16), d26 = `cube_index_${f26}`, p25 = le2.select(r91, s29).from(d26).groupby(r91).orderby(a28);
            return new ee3({ table: d26, create: h36, active: t33, select: p25 });
          }(e26.query(n38), p24, m27), g31.result = h35.exec(Ae2(g31.table, g31.create, { temp: f25 })), g31.result.catch((e27) => h35.logger().error(e27));
        }
      else
        g31 = null;
      return a27.set(e26, g31), g31;
    }
  };
  var K5 = { ceil: "CEIL", round: "ROUND" };
  var ee3 = class {
    constructor({ table: e26, create: t32, active: n37, select: r91 } = {}) {
      this.table = e26, this.create = t32, this.result = null, this.active = n37, this.select = r91, this.skip = false;
    }
    query(e26) {
      return this.select.clone().where(this.active.predicate(e26));
    }
  };
  var te5 = class extends Promise {
    constructor() {
      let e26, t32;
      super((n37, r91) => {
        e26 = n37, t32 = r91;
      }), this._resolve = e26, this._reject = t32;
    }
    fulfill(e26) {
      return this._resolve(e26), this;
    }
    reject(e26) {
      return this._reject(e26), this;
    }
  };
  function ne3(e26, t32, n37) {
    let r91 = [], s29 = 0;
    function i29() {
      const i30 = function(e27, t33) {
        const n38 = [], r92 = /* @__PURE__ */ new Map();
        for (const s30 of e27) {
          const { entry: { request: e28 } } = s30, i31 = re3(e28.query, t33);
          if (!r92.has(i31)) {
            const e29 = [];
            n38.push(e29), r92.set(i31, e29);
          }
          r92.get(i31).push(s30);
        }
        return n38;
      }(r91, t32);
      r91 = [], s29 = 0;
      for (const r92 of i30)
        se4(r92, e26, n37), ce2(r92, t32);
    }
    return { add(t33, n38) {
      "arrow" === t33.request.type ? (s29 = s29 || ("undefined" != typeof requestAnimationFrame ? requestAnimationFrame : "undefined" != typeof setImmediate ? setImmediate : setTimeout)(() => i29()), r91.push({ entry: t33, priority: n38, index: r91.length })) : e26(t33, n38);
    } };
  }
  function re3(e26, t32) {
    const n37 = `${e26}`;
    if (e26 instanceof le2 && !t32.get(n37)) {
      if (e26.orderby().length || e26.where().length || e26.qualify().length || e26.having().length)
        return n37;
      const t33 = e26.clone().$select("*"), r91 = e26.groupby();
      if (r91.length) {
        const n38 = {};
        e26.select().forEach(({ as: e27, expr: t34 }) => n38[e27] = t34), t33.$groupby(r91.map((e27) => e27 instanceof t && n38[e27.column] || e27));
      }
      return `${t33}`;
    }
    return n37;
  }
  function se4(e26, t32, n37) {
    if (function(e27) {
      if (e27.length > 1) {
        const t33 = `${e27[0].entry.request.query}`;
        for (let n38 = 1; n38 < e27.length; ++n38)
          if (t33 !== `${e27[n38].entry.request.query}`)
            return true;
      }
      return false;
    }(e26))
      t32({ request: { type: "arrow", cache: false, record: false, query: e26.query = ie4(e26, n37) }, result: e26.result = new te5() });
    else
      for (const { entry: n38, priority: r91 } of e26)
        t32(n38, r91);
  }
  function ie4(e26, t32) {
    const n37 = e26.maps = [], r91 = /* @__PURE__ */ new Map();
    for (const s30 of e26) {
      const { query: e27 } = s30.entry.request, i30 = [];
      n37.push(i30);
      for (const { as: t33, expr: n38 } of e27.select()) {
        const e28 = `${n38}`;
        r91.has(e28) || r91.set(e28, [`col${r91.size}`, n38]);
        const [s31] = r91.get(e28);
        i30.push([s31, t33]);
      }
      t32(`${e27}`);
    }
    const s29 = e26[0].entry.request.query.clone(), i29 = s29.groupby();
    if (i29.length) {
      const t33 = {};
      e26.maps[0].forEach(([e27, n38]) => t33[n38] = e27), s29.$groupby(i29.map((e27) => e27 instanceof t && t33[e27.column] || e27));
    }
    return s29.$select(Array.from(r91.values()));
  }
  async function ce2(e26, t32) {
    const { maps: n37, query: r91, result: s29 } = e26;
    if (!n37)
      return;
    let i29;
    try {
      i29 = await s29;
    } catch (t33) {
      for (const { entry: n38 } of e26)
        n38.result.reject(t33);
      return;
    }
    const c30 = pe2(r91);
    e26.forEach(({ entry: e27 }, r92) => {
      const { request: s30, result: o35 } = e27, u30 = n37[r92], l35 = c30 && u30 ? function(e28, t33) {
        const n38 = new Map(t33), r93 = [];
        for (const t34 of e28)
          n38.has(t34.column_name) && r93.push({ ...t34, column_name: n38.get(t34.column_name) });
        return r93;
      }(i29, u30) : u30 ? function(e28, t33) {
        const n38 = {};
        for (const [r93, s31] of t33)
          n38[s31] = e28.getChild(r93);
        return new e28.constructor(n38);
      }(i29, u30) : i29;
      s30.cache && t32.set(String(s30.query), l35), o35.fulfill(l35);
    });
  }
  te5.prototype.constructor = Promise;
  var oe4 = "undefined" != typeof requestIdleCallback ? requestIdleCallback : setTimeout;
  var ue3 = { High: 0, Normal: 1, Low: 2 };
  var le4 = class {
    constructor() {
      this.queue = function(e26) {
        const t32 = Array.from({ length: e26 }, () => ({ head: null, tail: null }));
        return { isEmpty: () => t32.every((e27) => !e27.head), insert(e27, n37) {
          const r91 = t32[n37];
          if (!r91)
            throw new Error(`Invalid queue priority rank: ${n37}`);
          const s29 = { item: e27, next: null };
          null === r91.head ? r91.head = r91.tail = s29 : r91.tail = r91.tail.next = s29;
        }, remove(e27) {
          for (const n37 of t32) {
            let { head: t33, tail: r91 } = n37;
            for (let n38 = null, s29 = t33; s29; n38 = s29, s29 = s29.next)
              e27(s29.item) && (s29 === t33 ? t33 = s29.next : n38.next = s29.next, s29 === r91 && (r91 = n38 || t33));
            n37.head = t33, n37.tail = r91;
          }
        }, next() {
          for (const e27 of t32) {
            const { head: t33 } = e27;
            if (null !== t33)
              return e27.head = t33.next, e27.tail === t33 && (e27.tail = null), t33.item;
          }
        } };
      }(3), this.db = null, this.clientCache = null, this._logger = null, this._logQueries = false, this.recorders = [], this.pending = null, this._consolidate = null;
    }
    next() {
      if (this.pending || this.queue.isEmpty())
        return;
      const { request: e26, result: t32 } = this.queue.next();
      this.pending = this.submit(e26, t32), this.pending.finally(() => {
        this.pending = null, this.next();
      });
    }
    enqueue(e26, t32 = ue3.Normal) {
      this.queue.insert(e26, t32), this.next();
    }
    recordQuery(e26) {
      this.recorders.length && e26 && this.recorders.forEach((t32) => t32.add(e26));
    }
    async submit(e26, t32) {
      try {
        const { query: n37, type: r91, cache: s29 = false, record: i29 = true, options: c30 } = e26, o35 = n37 ? `${n37}` : null;
        if (i29 && this.recordQuery(o35), s29) {
          const e27 = this.clientCache.get(o35);
          if (e27)
            return this._logger.debug("Cache"), void t32.fulfill(e27);
        }
        const u30 = performance.now();
        this._logQueries && this._logger.debug("Query", { type: r91, sql: o35, ...c30 });
        const l35 = await this.db.query({ type: r91, sql: o35, ...c30 });
        s29 && this.clientCache.set(o35, l35), this._logger.debug(`Request: ${(performance.now() - u30).toFixed(1)}`), t32.fulfill(l35);
      } catch (e27) {
        t32.reject(e27);
      }
    }
    cache(e26) {
      return void 0 !== e26 ? this.clientCache = true === e26 ? function({ max: e27 = 1e3, ttl: t32 = 108e5 } = {}) {
        let n37 = /* @__PURE__ */ new Map();
        function r91() {
          const e28 = performance.now() - t32;
          let r92 = null, s29 = 1 / 0;
          for (const [t33, i29] of n37) {
            const { last: c30 } = i29;
            c30 < s29 && (r92 = t33, s29 = c30), e28 > c30 && n37.delete(t33);
          }
          r92 && n37.delete(r92);
        }
        return { get(e28) {
          const t33 = n37.get(e28);
          if (t33)
            return t33.last = performance.now(), t33.value;
        }, set: (t33, s29) => (n37.set(t33, { last: performance.now(), value: s29 }), n37.size > e27 && oe4(r91), s29), clear() {
          n37 = /* @__PURE__ */ new Map();
        } };
      }() : e26 || { get: () => {
      }, set: (e27, t32) => t32, clear: () => {
      } } : this.clientCache;
    }
    logger(e26) {
      return e26 ? this._logger = e26 : this._logger;
    }
    logQueries(e26) {
      return void 0 !== e26 ? this._logQueries = !!e26 : this._logQueries;
    }
    connector(e26) {
      return e26 ? this.db = e26 : this.db;
    }
    consolidate(e26) {
      e26 && !this._consolidate ? this._consolidate = ne3(this.enqueue.bind(this), this.clientCache, this.recordQuery.bind(this)) : !e26 && this._consolidate && (this._consolidate = null);
    }
    request(e26, t32 = ue3.Normal) {
      const n37 = new te5(), r91 = { request: e26, result: n37 };
      return this._consolidate ? this._consolidate.add(r91, t32) : this.enqueue(r91, t32), n37;
    }
    cancel(e26) {
      const t32 = new Set(e26);
      t32.size && this.queue.remove(({ result: e27 }) => t32.has(e27));
    }
    clear() {
      this.queue.remove(({ result: e26 }) => (e26.reject("Cleared"), true));
    }
    record() {
      let e26 = [];
      const t32 = { add(t33) {
        e26.push(t33);
      }, reset() {
        e26 = [];
      }, snapshot: () => e26.slice(), stop() {
        return this.recorders = this.recorders.filter((e27) => e27 !== t32), e26;
      } };
      return this.recorders.push(t32), t32;
    }
  };
  function ae3(e26) {
    switch (e26) {
      case "BIGINT":
      case "HUGEINT":
      case "INTEGER":
      case "SMALLINT":
      case "TINYINT":
      case "UBIGINT":
      case "UINTEGER":
      case "USMALLINT":
      case "UTINYINT":
      case "DOUBLE":
      case "FLOAT":
      case "REAL":
        return "number";
      case "DATE":
      case "TIMESTAMP":
      case "TIMESTAMPTZ":
      case "TIMESTAMP WITH TIME ZONE":
      case "TIME":
      case "TIMESTAMP_NS":
        return "date";
      case "BOOLEAN":
        return "boolean";
      case "VARCHAR":
      case "UUID":
      case "JSON":
        return "string";
      case "ARRAY":
      case "LIST":
        return "array";
      case "BLOB":
      case "STRUCT":
      case "MAP":
      case "GEOMETRY":
        return "object";
      default:
        if (e26.startsWith("DECIMAL"))
          return "number";
        if (e26.startsWith("STRUCT") || e26.startsWith("MAP"))
          return "object";
        if (e26.endsWith("]"))
          return "array";
        throw new Error(`Unsupported type: ${e26}`);
    }
  }
  function de2(e26) {
    if (Ie.isTimestamp(e26))
      return (e27) => null == e27 ? e27 : new Date(e27);
    if (Ie.isInt(e26) && e26.bitWidth >= 64)
      return (e27) => null == e27 ? e27 : Number(e27);
    if (Ie.isDecimal(e26)) {
      const t32 = 1 / Math.pow(10, e26.scale);
      return (e27) => null == e27 ? e27 : ge3(e27, t32);
    }
    return (e27) => e27;
  }
  var me3 = Array.from({ length: 8 }, (e26, t32) => Math.pow(2, 32 * t32));
  function ge3(e26, t32) {
    const n37 = e26.length;
    let r91 = 0;
    if (e26.signed && (0 | e26[n37 - 1]) < 0) {
      for (let t33 = 0; t33 < n37; ++t33)
        r91 += ~e26[t33] * me3[t33];
      r91 = -(r91 + 1);
    } else
      for (let t33 = 0; t33 < n37; ++t33)
        r91 += e26[t33] * me3[t33];
    return r91 * t32;
  }
  var ye3 = { count: $t2, distinct: (e26) => $t2(e26).distinct(), max: mt2, min: Nt2, nulls: (e26) => $t2().where(d2(e26)) };
  async function ve2(e26, t32) {
    return 1 === t32.length && "*" == `${t32[0].column}` ? async function(e27, t33) {
      const n37 = await e27.query(`DESCRIBE ${r2(t33)}`);
      return Array.from(n37).map((e28) => ({ table: t33, column: e28.column_name, sqlType: e28.column_type, type: ae3(e28.column_type), nullable: "YES" === e28.null }));
    }(e26, t32[0].table) : (await Promise.all(t32.map((t33) => async function(e27, { table: t34, column: n37, stats: s29 }) {
      const i29 = le2.from({ source: t34 }).select({ column: n37 }).groupby(n37.aggregate ? p2`ALL` : []), [c30] = Array.from(await e27.query(le2.describe(i29))), o35 = { table: t34, column: `${n37}`, sqlType: c30.column_type, type: ae3(c30.column_type), nullable: "YES" === c30.null };
      if (!s29?.length && !s29?.size)
        return o35;
      const u30 = await e27.query(function(e28, t35, n38) {
        return le2.from(e28).select(Array.from(n38, (e29) => [e29, ye3[e29](t35)]));
      }(t34, n37, s29), { persist: true });
      for (let e28 = 0; e28 < u30.numCols; ++e28) {
        const { name: t35 } = u30.schema.fields[e28], n38 = u30.getChildAt(e28), r91 = de2(n38.type);
        o35[t35] = r91(n38.get(0));
      }
      return o35;
    }(e26, t33)))).filter((e27) => e27);
  }
  var $e4 = class {
    constructor(e26 = R5(), { logger: t32 = console, manager: n37 = new le4(), cache: r91 = true, consolidate: s29 = true, indexes: i29 = {} } = {}) {
      this.manager = n37, this.manager.cache(r91), this.manager.consolidate(s29), this.dataCubeIndexer = new Z5(this, i29), this.logger(t32), this.databaseConnector(e26), this.clear();
    }
    clear({ clients: e26 = true, cache: t32 = true } = {}) {
      this.manager.clear(), e26 && (this.filterGroups?.forEach((e27) => e27.disconnect()), this.filterGroups = /* @__PURE__ */ new Map(), this.clients?.forEach((e27) => this.disconnect(e27)), this.clients = /* @__PURE__ */ new Set()), t32 && this.manager.cache().clear();
    }
    databaseConnector(e26) {
      return this.manager.connector(e26);
    }
    logger(e26) {
      return arguments.length && (this._logger = e26 || { debug() {
      }, info() {
      }, log() {
      }, warn() {
      }, error() {
      } }, this.manager.logger(this._logger)), this._logger;
    }
    cancel(e26) {
      this.manager.cancel(e26);
    }
    exec(e26, { priority: t32 = ue3.Normal } = {}) {
      return e26 = Array.isArray(e26) ? e26.join(";\n") : e26, this.manager.request({ type: "exec", query: e26 }, t32);
    }
    query(e26, { type: t32 = "arrow", cache: n37 = true, priority: r91 = ue3.Normal, ...s29 } = {}) {
      return this.manager.request({ type: t32, query: e26, cache: n37, options: s29 }, r91);
    }
    prefetch(e26, t32 = {}) {
      return this.query(e26, { ...t32, cache: true, priority: ue3.Low });
    }
    createBundle(e26, t32, n37 = ue3.Low) {
      const r91 = { name: e26, queries: t32 };
      return this.manager.request({ type: "create-bundle", options: r91 }, n37);
    }
    loadBundle(e26, t32 = ue3.High) {
      const n37 = { name: e26 };
      return this.manager.request({ type: "load-bundle", options: n37 }, t32);
    }
    updateClient(e26, t32, n37 = ue3.Normal) {
      return e26.queryPending(), this.query(t32, { priority: n37 }).then((t33) => e26.queryResult(t33).update(), (t33) => {
        this._logger.error(t33), e26.queryError(t33);
      }).catch((e27) => this._logger.error(e27));
    }
    requestQuery(e26, t32) {
      return this.dataCubeIndexer.clear(), t32 ? this.updateClient(e26, t32) : e26.update();
    }
    async connect(e26) {
      const { clients: t32 } = this;
      if (t32.has(e26))
        throw new Error("Client already connected.");
      t32.add(e26), e26.coordinator = this;
      const n37 = e26.fields();
      n37?.length && e26.fieldInfo(await ve2(this, n37)), function(e27, t33, n38) {
        if (!t33)
          return;
        let r91 = e27.filterGroups.get(t33);
        if (!r91) {
          const n39 = (n40) => function(e28, t34, n41) {
            const { dataCubeIndexer: r92, filterGroups: s30 } = e28, { clients: i29 } = s30.get(t34);
            for (const e29 of i29)
              r92.index(e29, t34, n41);
          }(e27, t33, n40), s29 = () => function(e28, t34) {
            const { dataCubeIndexer: n40, filterGroups: r92 } = e28, { clients: s30 } = r92.get(t34), { active: i29 } = t34;
            return Promise.allSettled(Array.from(s30, (r93) => {
              const s31 = n40.index(r93, t34, i29), c30 = s31 ? null : t34.predicate(r93);
              if (s31?.skip || !s31 && !c30)
                return;
              const o35 = s31?.query(i29.predicate) ?? r93.query(c30);
              return e28.updateClient(r93, o35);
            }));
          }(e27, t33);
          t33.addEventListener("activate", n39), t33.addEventListener("value", s29), r91 = { selection: t33, clients: /* @__PURE__ */ new Set(), disconnect() {
            t33.removeEventListener("activate", n39), t33.removeEventListener("value", s29);
          } }, e27.filterGroups.set(t33, r91);
        }
        r91.clients.add(n38);
      }(this, e26.filterBy, e26), e26.requestQuery();
    }
    disconnect(e26) {
      const { clients: t32, filterGroups: n37 } = this;
      if (!t32.has(e26))
        return;
      t32.delete(e26), e26.coordinator = null;
      const r91 = n37.get(e26.filterBy);
      r91 && r91.clients.delete(e26);
    }
  };
  var we3 = class {
    constructor() {
      this._callbacks = /* @__PURE__ */ new Map();
    }
    addEventListener(e26, t32) {
      this._callbacks.has(e26) || this._callbacks.set(e26, { callbacks: /* @__PURE__ */ new Set(), pending: null, queue: new qe2() });
      this._callbacks.get(e26).callbacks.add(t32);
    }
    removeEventListener(e26, t32) {
      const n37 = this._callbacks.get(e26);
      n37 && n37.callbacks.delete(t32);
    }
    willEmit(e26, t32) {
      return t32;
    }
    emitQueueFilter(e26, t32) {
      return null;
    }
    cancel(e26) {
      const t32 = this._callbacks.get(e26);
      t32?.queue.clear();
    }
    async pending(e26) {
      await this._callbacks.get(e26)?.pending;
    }
    emit(e26, t32) {
      const n37 = this._callbacks.get(e26) || {};
      if (n37.pending)
        n37.queue.enqueue(t32, this.emitQueueFilter(e26, t32));
      else {
        const r91 = this.willEmit(e26, t32), { callbacks: s29, queue: i29 } = n37;
        if (s29?.size) {
          const t33 = Array.from(s29, (e27) => e27(r91));
          n37.pending = Promise.allSettled(t33).then(() => {
            n37.pending = null, i29.isEmpty() || this.emit(e26, i29.dequeue());
          });
        }
      }
    }
  };
  var qe2 = class {
    constructor() {
      this.clear();
    }
    clear() {
      this.next = null;
    }
    isEmpty() {
      return !this.next;
    }
    enqueue(e26, t32) {
      const n37 = { value: e26 };
      if (t32 && this.next) {
        let e27 = this;
        for (; e27.next; )
          t32(e27.next.value) ? e27 = e27.next : e27.next = e27.next.next;
        e27.next = n37;
      } else
        this.next = n37;
    }
    dequeue() {
      const { next: e26 } = this;
      return this.next = e26?.next, e26?.value;
    }
  };
  function Ee4(e26, t32) {
    return e26 !== t32 && (e26 instanceof Date && t32 instanceof Date ? +e26 != +t32 : !Array.isArray(e26) || !Array.isArray(t32) || function(e27, t33) {
      if (e27.length !== t33.length)
        return true;
      for (let n37 = 0; n37 < e27.length; ++n37)
        if (e27[n37] !== t33[n37])
          return true;
      return false;
    }(e26, t32));
  }
  function Ae3(e26) {
    return e26 instanceof Se4;
  }
  var Se4 = class _Se extends we3 {
    constructor(e26) {
      super(), this._value = e26;
    }
    static value(e26) {
      return new _Se(e26);
    }
    static array(e26) {
      if (e26.some((e27) => Ae3(e27))) {
        const t32 = new _Se(), n37 = () => {
          t32.update(e26.map((e27) => Ae3(e27) ? e27.value : e27));
        };
        return n37(), e26.forEach((e27) => Ae3(e27) ? e27.addEventListener("value", n37) : 0), t32;
      }
      return new _Se(e26);
    }
    get value() {
      return this._value;
    }
    update(e26, { force: t32 } = {}) {
      return Ee4(this._value, e26) || t32 ? this.emit("value", e26) : this.cancel("value"), this;
    }
    willEmit(e26, t32) {
      return "value" === e26 && (this._value = t32), t32;
    }
  };
  var Re3 = class _Re extends Se4 {
    static intersect({ cross: e26 = false, empty: t32 = false } = {}) {
      return new _Re(new ke3({ cross: e26, empty: t32 }));
    }
    static union({ cross: e26 = false, empty: t32 = false } = {}) {
      return new _Re(new ke3({ cross: e26, empty: t32, union: true }));
    }
    static single({ cross: e26 = false, empty: t32 = false } = {}) {
      return new _Re(new ke3({ cross: e26, empty: t32, single: true }));
    }
    static crossfilter({ empty: e26 = false } = {}) {
      return new _Re(new ke3({ cross: true, empty: e26 }));
    }
    constructor(e26 = new ke3()) {
      super([]), this._resolved = this._value, this._resolver = e26;
    }
    clone() {
      const e26 = new _Re(this._resolver);
      return e26._value = e26._resolved = this._value, e26;
    }
    remove(e26) {
      const t32 = this.clone();
      return t32._value = t32._resolved = t32._resolver.resolve(this._resolved, { source: e26 }), t32._value.active = { source: e26 }, t32;
    }
    get resolver() {
      return this._resolver;
    }
    get single() {
      return this._resolver.single;
    }
    get clauses() {
      return super.value;
    }
    get active() {
      return this.clauses.active;
    }
    get value() {
      return this.active?.value;
    }
    valueFor(e26) {
      return this.clauses.find((t32) => t32.source === e26)?.value;
    }
    activate(e26) {
      this.emit("activate", e26);
    }
    update(e26) {
      return this._resolved = this._resolver.resolve(this._resolved, e26, true), this._resolved.active = e26, super.update(this._resolved);
    }
    willEmit(e26, t32) {
      return "value" === e26 ? (this._value = t32, this.value) : t32;
    }
    emitQueueFilter(e26, t32) {
      return "value" === e26 ? this._resolver.queueFilter(t32) : null;
    }
    skip(e26, t32) {
      return this._resolver.skip(e26, t32);
    }
    predicate(e26, t32 = false) {
      const { clauses: n37 } = this, r91 = t32 ? null : n37.active;
      return this._resolver.predicate(n37, r91, e26);
    }
  };
  var ke3 = class {
    constructor({ union: e26, cross: t32, single: n37, empty: r91 } = {}) {
      this.union = !!e26, this.cross = !!t32, this.single = !!n37, this.empty = !!r91;
    }
    resolve(e26, t32, n37 = false) {
      const { source: r91, predicate: s29 } = t32, i29 = e26.filter((e27) => r91 !== e27.source), c30 = this.single ? [] : i29;
      return this.single && n37 && i29.forEach((e27) => e27.source?.reset?.()), s29 && c30.push(t32), c30;
    }
    skip(e26, t32) {
      return this.cross && t32?.clients?.has(e26);
    }
    predicate(e26, t32, n37) {
      const { empty: r91, union: s29 } = this;
      if (r91 && !e26.length)
        return ["FALSE"];
      if (this.skip(n37, t32))
        return;
      const i29 = e26.filter((e27) => !this.skip(n37, e27)).map((e27) => e27.predicate);
      return s29 && i29.length > 1 ? N2(i29) : i29;
    }
    queueFilter(e26) {
      if (this.cross) {
        const t32 = e26.active?.source;
        return (e27) => e27.active?.source !== t32;
      }
      return null;
    }
  };
  function Te4(e26 = {}) {
    const { duckdb: t32, connection: n37, ...r91 } = e26;
    let s29, i29 = t32, c30 = n37;
    function o35() {
      return s29 || (s29 = (i29 ? Promise.resolve(i29) : Ie3(r91).then((e27) => i29 = e27)).then((e27) => e27.connect()).then((e27) => c30 = e27)), s29;
    }
    async function u30() {
      return c30 || await o35(), c30;
    }
    return { getDuckDB: async function() {
      return i29 || await o35(), i29;
    }, getConnection: u30, query: async (e27) => {
      const { type: t33, sql: n38 } = e27, r92 = await u30(), s30 = await r92.query(n38);
      return "exec" === t33 ? void 0 : "arrow" === t33 ? s30 : s30.toArray();
    } };
  }
  async function Ie3({ log: e26 = false } = {}) {
    const t32 = J4(), n37 = await ae2(t32), r91 = URL.createObjectURL(new Blob([`importScripts("${n37.mainWorker}");`], { type: "text/javascript" })), s29 = new Worker(r91), i29 = e26 ? new I4() : new h7(), c30 = new U4(i29, s29);
    return await c30.instantiate(n37.mainModule, n37.pthreadWorker), URL.revokeObjectURL(r91), c30;
  }
  function Ce3(e26, t32, { source: n37, clients: r91 = n37 ? /* @__PURE__ */ new Set([n37]) : void 0 }) {
    return { meta: { type: "point" }, source: n37, clients: r91, value: t32, predicate: void 0 !== t32 ? D2(e26, g3(t32)) : null };
  }
  function Le3(e26, t32, { source: n37, clients: r91 = n37 ? /* @__PURE__ */ new Set([n37]) : void 0, bin: s29, scale: i29, pixelSize: o35 = 1 }) {
    return { meta: { type: "interval", scales: i29 && [i29], bin: s29, pixelSize: o35 }, source: n37, clients: r91, value: t32, predicate: null != t32 ? G2(e26, t32) : null };
  }

  // https://esm.sh/v135/tslib@2.6.3/denonext/tslib.mjs
  function S5(e26, t32) {
    var n37 = {};
    for (var r91 in e26)
      Object.prototype.hasOwnProperty.call(e26, r91) && t32.indexOf(r91) < 0 && (n37[r91] = e26[r91]);
    if (e26 != null && typeof Object.getOwnPropertySymbols == "function")
      for (var i29 = 0, r91 = Object.getOwnPropertySymbols(e26); i29 < r91.length; i29++)
        t32.indexOf(r91[i29]) < 0 && Object.prototype.propertyIsEnumerable.call(e26, r91[i29]) && (n37[r91[i29]] = e26[r91[i29]]);
    return n37;
  }
  function D6(e26, t32, n37, r91) {
    function i29(o35) {
      return o35 instanceof n37 ? o35 : new n37(function(a27) {
        a27(o35);
      });
    }
    return new (n37 || (n37 = Promise))(function(o35, a27) {
      function u30(l35) {
        try {
          f25(r91.next(l35));
        } catch (s29) {
          a27(s29);
        }
      }
      function p24(l35) {
        try {
          f25(r91.throw(l35));
        } catch (s29) {
          a27(s29);
        }
      }
      function f25(l35) {
        l35.done ? o35(l35.value) : i29(l35.value).then(u30, p24);
      }
      f25((r91 = r91.apply(e26, t32 || [])).next());
    });
  }
  function g5(e26) {
    var t32 = typeof Symbol == "function" && Symbol.iterator, n37 = t32 && e26[t32], r91 = 0;
    if (n37)
      return n37.call(e26);
    if (e26 && typeof e26.length == "number")
      return { next: function() {
        return e26 && r91 >= e26.length && (e26 = void 0), { value: e26 && e26[r91++], done: !e26 };
      } };
    throw new TypeError(t32 ? "Object is not iterable." : "Symbol.iterator is not defined.");
  }
  function b5(e26) {
    return this instanceof b5 ? (this.v = e26, this) : new b5(e26);
  }
  function G6(e26, t32, n37) {
    if (!Symbol.asyncIterator)
      throw new TypeError("Symbol.asyncIterator is not defined.");
    var r91 = n37.apply(e26, t32 || []), i29, o35 = [];
    return i29 = {}, u30("next"), u30("throw"), u30("return", a27), i29[Symbol.asyncIterator] = function() {
      return this;
    }, i29;
    function a27(c30) {
      return function(y24) {
        return Promise.resolve(y24).then(c30, s29);
      };
    }
    function u30(c30, y24) {
      r91[c30] && (i29[c30] = function(h35) {
        return new Promise(function(d25, _24) {
          o35.push([c30, h35, d25, _24]) > 1 || p24(c30, h35);
        });
      }, y24 && (i29[c30] = y24(i29[c30])));
    }
    function p24(c30, y24) {
      try {
        f25(r91[c30](y24));
      } catch (h35) {
        w26(o35[0][3], h35);
      }
    }
    function f25(c30) {
      c30.value instanceof b5 ? Promise.resolve(c30.value.v).then(l35, s29) : w26(o35[0][2], c30);
    }
    function l35(c30) {
      p24("next", c30);
    }
    function s29(c30) {
      p24("throw", c30);
    }
    function w26(c30, y24) {
      c30(y24), o35.shift(), o35.length && p24(o35[0][0], o35[0][1]);
    }
  }
  function I6(e26) {
    var t32, n37;
    return t32 = {}, r91("next"), r91("throw", function(i29) {
      throw i29;
    }), r91("return"), t32[Symbol.iterator] = function() {
      return this;
    }, t32;
    function r91(i29, o35) {
      t32[i29] = e26[i29] ? function(a27) {
        return (n37 = !n37) ? { value: b5(e26[i29](a27)), done: false } : o35 ? o35(a27) : a27;
      } : o35;
    }
  }
  function V5(e26) {
    if (!Symbol.asyncIterator)
      throw new TypeError("Symbol.asyncIterator is not defined.");
    var t32 = e26[Symbol.asyncIterator], n37;
    return t32 ? t32.call(e26) : (e26 = typeof g5 == "function" ? g5(e26) : e26[Symbol.iterator](), n37 = {}, r91("next"), r91("throw"), r91("return"), n37[Symbol.asyncIterator] = function() {
      return this;
    }, n37);
    function r91(o35) {
      n37[o35] = e26[o35] && function(a27) {
        return new Promise(function(u30, p24) {
          a27 = e26[o35](a27), i29(u30, p24, a27.done, a27.value);
        });
      };
    }
    function i29(o35, a27, u30, p24) {
      Promise.resolve(p24).then(function(f25) {
        o35({ value: f25, done: u30 });
      }, a27);
    }
  }

  // https://esm.sh/v135/flatbuffers@24.3.25/denonext/flatbuffers.mjs
  var p5 = 4;
  var a5 = new Int32Array(2);
  var I7 = new Float32Array(a5.buffer);
  var u4 = new Float64Array(a5.buffer);
  var c5 = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;
  var f4;
  (function(o35) {
    o35[o35.UTF8_BYTES = 1] = "UTF8_BYTES", o35[o35.UTF16_STRING = 2] = "UTF16_STRING";
  })(f4 || (f4 = {}));
  var d6 = class o4 {
    constructor(t32) {
      this.bytes_ = t32, this.position_ = 0, this.text_decoder_ = new TextDecoder();
    }
    static allocate(t32) {
      return new o4(new Uint8Array(t32));
    }
    clear() {
      this.position_ = 0;
    }
    bytes() {
      return this.bytes_;
    }
    position() {
      return this.position_;
    }
    setPosition(t32) {
      this.position_ = t32;
    }
    capacity() {
      return this.bytes_.length;
    }
    readInt8(t32) {
      return this.readUint8(t32) << 24 >> 24;
    }
    readUint8(t32) {
      return this.bytes_[t32];
    }
    readInt16(t32) {
      return this.readUint16(t32) << 16 >> 16;
    }
    readUint16(t32) {
      return this.bytes_[t32] | this.bytes_[t32 + 1] << 8;
    }
    readInt32(t32) {
      return this.bytes_[t32] | this.bytes_[t32 + 1] << 8 | this.bytes_[t32 + 2] << 16 | this.bytes_[t32 + 3] << 24;
    }
    readUint32(t32) {
      return this.readInt32(t32) >>> 0;
    }
    readInt64(t32) {
      return BigInt.asIntN(64, BigInt(this.readUint32(t32)) + (BigInt(this.readUint32(t32 + 4)) << BigInt(32)));
    }
    readUint64(t32) {
      return BigInt.asUintN(64, BigInt(this.readUint32(t32)) + (BigInt(this.readUint32(t32 + 4)) << BigInt(32)));
    }
    readFloat32(t32) {
      return a5[0] = this.readInt32(t32), I7[0];
    }
    readFloat64(t32) {
      return a5[c5 ? 0 : 1] = this.readInt32(t32), a5[c5 ? 1 : 0] = this.readInt32(t32 + 4), u4[0];
    }
    writeInt8(t32, i29) {
      this.bytes_[t32] = i29;
    }
    writeUint8(t32, i29) {
      this.bytes_[t32] = i29;
    }
    writeInt16(t32, i29) {
      this.bytes_[t32] = i29, this.bytes_[t32 + 1] = i29 >> 8;
    }
    writeUint16(t32, i29) {
      this.bytes_[t32] = i29, this.bytes_[t32 + 1] = i29 >> 8;
    }
    writeInt32(t32, i29) {
      this.bytes_[t32] = i29, this.bytes_[t32 + 1] = i29 >> 8, this.bytes_[t32 + 2] = i29 >> 16, this.bytes_[t32 + 3] = i29 >> 24;
    }
    writeUint32(t32, i29) {
      this.bytes_[t32] = i29, this.bytes_[t32 + 1] = i29 >> 8, this.bytes_[t32 + 2] = i29 >> 16, this.bytes_[t32 + 3] = i29 >> 24;
    }
    writeInt64(t32, i29) {
      this.writeInt32(t32, Number(BigInt.asIntN(32, i29))), this.writeInt32(t32 + 4, Number(BigInt.asIntN(32, i29 >> BigInt(32))));
    }
    writeUint64(t32, i29) {
      this.writeUint32(t32, Number(BigInt.asUintN(32, i29))), this.writeUint32(t32 + 4, Number(BigInt.asUintN(32, i29 >> BigInt(32))));
    }
    writeFloat32(t32, i29) {
      I7[0] = i29, this.writeInt32(t32, a5[0]);
    }
    writeFloat64(t32, i29) {
      u4[0] = i29, this.writeInt32(t32, a5[c5 ? 0 : 1]), this.writeInt32(t32 + 4, a5[c5 ? 1 : 0]);
    }
    getBufferIdentifier() {
      if (this.bytes_.length < this.position_ + 4 + 4)
        throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");
      let t32 = "";
      for (let i29 = 0; i29 < 4; i29++)
        t32 += String.fromCharCode(this.readInt8(this.position_ + 4 + i29));
      return t32;
    }
    __offset(t32, i29) {
      let e26 = t32 - this.readInt32(t32);
      return i29 < this.readInt16(e26) ? this.readInt16(e26 + i29) : 0;
    }
    __union(t32, i29) {
      return t32.bb_pos = i29 + this.readInt32(i29), t32.bb = this, t32;
    }
    __string(t32, i29) {
      t32 += this.readInt32(t32);
      let e26 = this.readInt32(t32);
      t32 += 4;
      let s29 = this.bytes_.subarray(t32, t32 + e26);
      return i29 === f4.UTF8_BYTES ? s29 : this.text_decoder_.decode(s29);
    }
    __union_with_string(t32, i29) {
      return typeof t32 == "string" ? this.__string(i29) : this.__union(t32, i29);
    }
    __indirect(t32) {
      return t32 + this.readInt32(t32);
    }
    __vector(t32) {
      return t32 + this.readInt32(t32) + 4;
    }
    __vector_len(t32) {
      return this.readInt32(t32 + this.readInt32(t32));
    }
    __has_identifier(t32) {
      if (t32.length != 4)
        throw new Error("FlatBuffers: file identifier must be length 4");
      for (let i29 = 0; i29 < 4; i29++)
        if (t32.charCodeAt(i29) != this.readInt8(this.position() + 4 + i29))
          return false;
      return true;
    }
    createScalarList(t32, i29) {
      let e26 = [];
      for (let s29 = 0; s29 < i29; ++s29) {
        let r91 = t32(s29);
        r91 !== null && e26.push(r91);
      }
      return e26;
    }
    createObjList(t32, i29) {
      let e26 = [];
      for (let s29 = 0; s29 < i29; ++s29) {
        let r91 = t32(s29);
        r91 !== null && e26.push(r91.unpack());
      }
      return e26;
    }
  };
  var w5 = class o5 {
    constructor(t32) {
      this.minalign = 1, this.vtable = null, this.vtable_in_use = 0, this.isNested = false, this.object_start = 0, this.vtables = [], this.vector_num_elems = 0, this.force_defaults = false, this.string_maps = null, this.text_encoder = new TextEncoder();
      let i29;
      t32 ? i29 = t32 : i29 = 1024, this.bb = d6.allocate(i29), this.space = i29;
    }
    clear() {
      this.bb.clear(), this.space = this.bb.capacity(), this.minalign = 1, this.vtable = null, this.vtable_in_use = 0, this.isNested = false, this.object_start = 0, this.vtables = [], this.vector_num_elems = 0, this.force_defaults = false, this.string_maps = null;
    }
    forceDefaults(t32) {
      this.force_defaults = t32;
    }
    dataBuffer() {
      return this.bb;
    }
    asUint8Array() {
      return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());
    }
    prep(t32, i29) {
      t32 > this.minalign && (this.minalign = t32);
      let e26 = ~(this.bb.capacity() - this.space + i29) + 1 & t32 - 1;
      for (; this.space < e26 + t32 + i29; ) {
        let s29 = this.bb.capacity();
        this.bb = o5.growByteBuffer(this.bb), this.space += this.bb.capacity() - s29;
      }
      this.pad(e26);
    }
    pad(t32) {
      for (let i29 = 0; i29 < t32; i29++)
        this.bb.writeInt8(--this.space, 0);
    }
    writeInt8(t32) {
      this.bb.writeInt8(this.space -= 1, t32);
    }
    writeInt16(t32) {
      this.bb.writeInt16(this.space -= 2, t32);
    }
    writeInt32(t32) {
      this.bb.writeInt32(this.space -= 4, t32);
    }
    writeInt64(t32) {
      this.bb.writeInt64(this.space -= 8, t32);
    }
    writeFloat32(t32) {
      this.bb.writeFloat32(this.space -= 4, t32);
    }
    writeFloat64(t32) {
      this.bb.writeFloat64(this.space -= 8, t32);
    }
    addInt8(t32) {
      this.prep(1, 0), this.writeInt8(t32);
    }
    addInt16(t32) {
      this.prep(2, 0), this.writeInt16(t32);
    }
    addInt32(t32) {
      this.prep(4, 0), this.writeInt32(t32);
    }
    addInt64(t32) {
      this.prep(8, 0), this.writeInt64(t32);
    }
    addFloat32(t32) {
      this.prep(4, 0), this.writeFloat32(t32);
    }
    addFloat64(t32) {
      this.prep(8, 0), this.writeFloat64(t32);
    }
    addFieldInt8(t32, i29, e26) {
      (this.force_defaults || i29 != e26) && (this.addInt8(i29), this.slot(t32));
    }
    addFieldInt16(t32, i29, e26) {
      (this.force_defaults || i29 != e26) && (this.addInt16(i29), this.slot(t32));
    }
    addFieldInt32(t32, i29, e26) {
      (this.force_defaults || i29 != e26) && (this.addInt32(i29), this.slot(t32));
    }
    addFieldInt64(t32, i29, e26) {
      (this.force_defaults || i29 !== e26) && (this.addInt64(i29), this.slot(t32));
    }
    addFieldFloat32(t32, i29, e26) {
      (this.force_defaults || i29 != e26) && (this.addFloat32(i29), this.slot(t32));
    }
    addFieldFloat64(t32, i29, e26) {
      (this.force_defaults || i29 != e26) && (this.addFloat64(i29), this.slot(t32));
    }
    addFieldOffset(t32, i29, e26) {
      (this.force_defaults || i29 != e26) && (this.addOffset(i29), this.slot(t32));
    }
    addFieldStruct(t32, i29, e26) {
      i29 != e26 && (this.nested(i29), this.slot(t32));
    }
    nested(t32) {
      if (t32 != this.offset())
        throw new TypeError("FlatBuffers: struct must be serialized inline.");
    }
    notNested() {
      if (this.isNested)
        throw new TypeError("FlatBuffers: object serialization must not be nested.");
    }
    slot(t32) {
      this.vtable !== null && (this.vtable[t32] = this.offset());
    }
    offset() {
      return this.bb.capacity() - this.space;
    }
    static growByteBuffer(t32) {
      let i29 = t32.capacity();
      if (i29 & 3221225472)
        throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");
      let e26 = i29 << 1, s29 = d6.allocate(e26);
      return s29.setPosition(e26 - i29), s29.bytes().set(t32.bytes(), e26 - i29), s29;
    }
    addOffset(t32) {
      this.prep(4, 0), this.writeInt32(this.offset() - t32 + 4);
    }
    startObject(t32) {
      this.notNested(), this.vtable == null && (this.vtable = []), this.vtable_in_use = t32;
      for (let i29 = 0; i29 < t32; i29++)
        this.vtable[i29] = 0;
      this.isNested = true, this.object_start = this.offset();
    }
    endObject() {
      if (this.vtable == null || !this.isNested)
        throw new Error("FlatBuffers: endObject called without startObject");
      this.addInt32(0);
      let t32 = this.offset(), i29 = this.vtable_in_use - 1;
      for (; i29 >= 0 && this.vtable[i29] == 0; i29--)
        ;
      let e26 = i29 + 1;
      for (; i29 >= 0; i29--)
        this.addInt16(this.vtable[i29] != 0 ? t32 - this.vtable[i29] : 0);
      let s29 = 2;
      this.addInt16(t32 - this.object_start);
      let r91 = (e26 + s29) * 2;
      this.addInt16(r91);
      let l35 = 0, g31 = this.space;
      t:
        for (i29 = 0; i29 < this.vtables.length; i29++) {
          let y24 = this.bb.capacity() - this.vtables[i29];
          if (r91 == this.bb.readInt16(y24)) {
            for (let _24 = 2; _24 < r91; _24 += 2)
              if (this.bb.readInt16(g31 + _24) != this.bb.readInt16(y24 + _24))
                continue t;
            l35 = this.vtables[i29];
            break;
          }
        }
      return l35 ? (this.space = this.bb.capacity() - t32, this.bb.writeInt32(this.space, l35 - t32)) : (this.vtables.push(this.offset()), this.bb.writeInt32(this.bb.capacity() - t32, this.offset() - t32)), this.isNested = false, t32;
    }
    finish(t32, i29, e26) {
      let s29 = e26 ? 4 : 0;
      if (i29) {
        let r91 = i29;
        if (this.prep(this.minalign, 8 + s29), r91.length != 4)
          throw new TypeError("FlatBuffers: file identifier must be length 4");
        for (let l35 = 3; l35 >= 0; l35--)
          this.writeInt8(r91.charCodeAt(l35));
      }
      this.prep(this.minalign, 4 + s29), this.addOffset(t32), s29 && this.addInt32(this.bb.capacity() - this.space), this.bb.setPosition(this.space);
    }
    finishSizePrefixed(t32, i29) {
      this.finish(t32, i29, true);
    }
    requiredField(t32, i29) {
      let e26 = this.bb.capacity() - t32, s29 = e26 - this.bb.readInt32(e26);
      if (!(i29 < this.bb.readInt16(s29) && this.bb.readInt16(s29 + i29) != 0))
        throw new TypeError("FlatBuffers: field " + i29 + " must be set");
    }
    startVector(t32, i29, e26) {
      this.notNested(), this.vector_num_elems = i29, this.prep(4, t32 * i29), this.prep(e26, t32 * i29);
    }
    endVector() {
      return this.writeInt32(this.vector_num_elems), this.offset();
    }
    createSharedString(t32) {
      if (!t32)
        return 0;
      if (this.string_maps || (this.string_maps = /* @__PURE__ */ new Map()), this.string_maps.has(t32))
        return this.string_maps.get(t32);
      let i29 = this.createString(t32);
      return this.string_maps.set(t32, i29), i29;
    }
    createString(t32) {
      if (t32 == null)
        return 0;
      let i29;
      return t32 instanceof Uint8Array ? i29 = t32 : i29 = this.text_encoder.encode(t32), this.addInt8(0), this.startVector(1, i29.length, 1), this.bb.setPosition(this.space -= i29.length), this.bb.bytes().set(i29, this.space), this.endVector();
    }
    createByteVector(t32) {
      return t32 == null ? 0 : (this.startVector(1, t32.length, 1), this.bb.setPosition(this.space -= t32.length), this.bb.bytes().set(t32, this.space), this.endVector());
    }
    createObjectOffset(t32) {
      return t32 === null ? 0 : typeof t32 == "string" ? this.createString(t32) : t32.pack(this);
    }
    createObjectOffsetList(t32) {
      let i29 = [];
      for (let e26 = 0; e26 < t32.length; ++e26) {
        let s29 = t32[e26];
        if (s29 !== null)
          i29.push(this.createObjectOffset(s29));
        else
          throw new TypeError("FlatBuffers: Argument for createObjectOffsetList cannot contain null.");
      }
      return i29;
    }
    createStructOffsetList(t32, i29) {
      return i29(this, t32.length), this.createObjectOffsetList(t32.slice().reverse()), this.endVector();
    }
  };

  // https://esm.sh/v135/apache-arrow@16.1.0/denonext/apache-arrow.mjs
  var xl = Object.defineProperty;
  var rr3 = (r91, t32) => {
    for (var e26 in t32)
      xl(r91, e26, { get: t32[e26], enumerable: true });
  };
  var Gs3 = {};
  rr3(Gs3, { compareArrayLike: () => Js3, joinUint8Arrays: () => xt4, memcpy: () => Ci3, rebaseValueOffsets: () => Dn3, toArrayBufferView: () => O7, toArrayBufferViewAsyncIterator: () => Pt4, toArrayBufferViewIterator: () => se5, toBigInt64Array: () => Bn3, toBigUint64Array: () => El, toFloat32Array: () => Vl, toFloat32ArrayAsyncIterator: () => ql, toFloat32ArrayIterator: () => $l, toFloat64Array: () => Rl, toFloat64ArrayAsyncIterator: () => Ql, toFloat64ArrayIterator: () => Yl, toInt16Array: () => Ll, toInt16ArrayAsyncIterator: () => Gl, toInt16ArrayIterator: () => zl, toInt32Array: () => ir3, toInt32ArrayAsyncIterator: () => Kl, toInt32ArrayIterator: () => Pl, toInt8Array: () => Ml, toInt8ArrayAsyncIterator: () => Jl, toInt8ArrayIterator: () => kl, toUint16Array: () => Ul, toUint16ArrayAsyncIterator: () => Zl, toUint16ArrayIterator: () => jl, toUint32Array: () => Nl, toUint32ArrayAsyncIterator: () => Xl, toUint32ArrayIterator: () => Wl, toUint8Array: () => S6, toUint8ArrayAsyncIterator: () => Hs3, toUint8ArrayIterator: () => Ys3, toUint8ClampedArray: () => Cl, toUint8ClampedArrayAsyncIterator: () => tu, toUint8ClampedArrayIterator: () => Hl });
  var Al = new TextDecoder("utf-8");
  var Vi3 = (r91) => Al.decode(r91);
  var Fl = new TextEncoder();
  var ie5 = (r91) => Fl.encode(r91);
  var Tl = (r91) => typeof r91 == "number";
  var Zo3 = (r91) => typeof r91 == "boolean";
  var q5 = (r91) => typeof r91 == "function";
  var at4 = (r91) => r91 != null && Object(r91) === r91;
  var Dt4 = (r91) => at4(r91) && q5(r91.then);
  var zt4 = (r91) => at4(r91) && q5(r91[Symbol.iterator]);
  var Lt4 = (r91) => at4(r91) && q5(r91[Symbol.asyncIterator]);
  var gn3 = (r91) => at4(r91) && at4(r91.schema);
  var bn3 = (r91) => at4(r91) && "done" in r91 && "value" in r91;
  var _n3 = (r91) => at4(r91) && q5(r91.stat) && Tl(r91.fd);
  var vn3 = (r91) => at4(r91) && Ri3(r91.body);
  var wn3 = (r91) => "_getDOMStream" in r91 && "_getNodeStream" in r91;
  var Xo2 = (r91) => at4(r91) && q5(r91.abort) && q5(r91.getWriter) && !wn3(r91);
  var Ri3 = (r91) => at4(r91) && q5(r91.cancel) && q5(r91.getReader) && !wn3(r91);
  var qo3 = (r91) => at4(r91) && q5(r91.end) && q5(r91.write) && Zo3(r91.writable) && !wn3(r91);
  var In3 = (r91) => at4(r91) && q5(r91.read) && q5(r91.pipe) && Zo3(r91.readable) && !wn3(r91);
  var Qo3 = (r91) => at4(r91) && q5(r91.clear) && q5(r91.bytes) && q5(r91.position) && q5(r91.setPosition) && q5(r91.capacity) && q5(r91.getBufferIdentifier) && q5(r91.createLong);
  var $s3 = typeof SharedArrayBuffer < "u" ? SharedArrayBuffer : ArrayBuffer;
  function Ol(r91) {
    let t32 = r91[0] ? [r91[0]] : [], e26, i29, n37, s29;
    for (let o35, a27, c30 = 0, u30 = 0, d25 = r91.length; ++c30 < d25; ) {
      if (o35 = t32[u30], a27 = r91[c30], !o35 || !a27 || o35.buffer !== a27.buffer || a27.byteOffset < o35.byteOffset) {
        a27 && (t32[++u30] = a27);
        continue;
      }
      if ({ byteOffset: e26, byteLength: n37 } = o35, { byteOffset: i29, byteLength: s29 } = a27, e26 + n37 < i29 || i29 + s29 < e26) {
        a27 && (t32[++u30] = a27);
        continue;
      }
      t32[u30] = new Uint8Array(o35.buffer, e26, i29 - e26 + s29);
    }
    return t32;
  }
  function Ci3(r91, t32, e26 = 0, i29 = t32.byteLength) {
    let n37 = r91.byteLength, s29 = new Uint8Array(r91.buffer, r91.byteOffset, n37), o35 = new Uint8Array(t32.buffer, t32.byteOffset, Math.min(i29, n37));
    return s29.set(o35, e26), r91;
  }
  function xt4(r91, t32) {
    let e26 = Ol(r91), i29 = e26.reduce((d25, p24) => d25 + p24.byteLength, 0), n37, s29, o35, a27 = 0, c30 = -1, u30 = Math.min(t32 || Number.POSITIVE_INFINITY, i29);
    for (let d25 = e26.length; ++c30 < d25; ) {
      if (n37 = e26[c30], s29 = n37.subarray(0, Math.min(n37.length, u30 - a27)), u30 <= a27 + s29.length) {
        s29.length < n37.length ? e26[c30] = n37.subarray(s29.length) : s29.length === n37.length && c30++, o35 ? Ci3(o35, s29, a27) : o35 = s29;
        break;
      }
      Ci3(o35 || (o35 = new Uint8Array(u30)), s29, a27), a27 += s29.length;
    }
    return [o35 || new Uint8Array(0), e26.slice(c30), i29 - (o35 ? o35.byteLength : 0)];
  }
  function O7(r91, t32) {
    let e26 = bn3(t32) ? t32.value : t32;
    return e26 instanceof r91 ? r91 === Uint8Array ? new r91(e26.buffer, e26.byteOffset, e26.byteLength) : e26 : e26 ? (typeof e26 == "string" && (e26 = ie5(e26)), e26 instanceof ArrayBuffer ? new r91(e26) : e26 instanceof $s3 ? new r91(e26) : Qo3(e26) ? O7(r91, e26.bytes()) : ArrayBuffer.isView(e26) ? e26.byteLength <= 0 ? new r91(0) : new r91(e26.buffer, e26.byteOffset, e26.byteLength / r91.BYTES_PER_ELEMENT) : r91.from(e26)) : new r91(0);
  }
  var Ml = (r91) => O7(Int8Array, r91);
  var Ll = (r91) => O7(Int16Array, r91);
  var ir3 = (r91) => O7(Int32Array, r91);
  var Bn3 = (r91) => O7(BigInt64Array, r91);
  var S6 = (r91) => O7(Uint8Array, r91);
  var Ul = (r91) => O7(Uint16Array, r91);
  var Nl = (r91) => O7(Uint32Array, r91);
  var El = (r91) => O7(BigUint64Array, r91);
  var Vl = (r91) => O7(Float32Array, r91);
  var Rl = (r91) => O7(Float64Array, r91);
  var Cl = (r91) => O7(Uint8ClampedArray, r91);
  var Ws3 = (r91) => (r91.next(), r91);
  function* se5(r91, t32) {
    let e26 = function* (n37) {
      yield n37;
    }, i29 = typeof t32 == "string" || ArrayBuffer.isView(t32) || t32 instanceof ArrayBuffer || t32 instanceof $s3 ? e26(t32) : zt4(t32) ? t32 : e26(t32);
    return yield* Ws3(function* (n37) {
      let s29 = null;
      do
        s29 = n37.next(yield O7(r91, s29));
      while (!s29.done);
    }(i29[Symbol.iterator]())), new r91();
  }
  var kl = (r91) => se5(Int8Array, r91);
  var zl = (r91) => se5(Int16Array, r91);
  var Pl = (r91) => se5(Int32Array, r91);
  var Ys3 = (r91) => se5(Uint8Array, r91);
  var jl = (r91) => se5(Uint16Array, r91);
  var Wl = (r91) => se5(Uint32Array, r91);
  var $l = (r91) => se5(Float32Array, r91);
  var Yl = (r91) => se5(Float64Array, r91);
  var Hl = (r91) => se5(Uint8ClampedArray, r91);
  function Pt4(r91, t32) {
    return G6(this, arguments, function* () {
      if (Dt4(t32))
        return yield b5(yield b5(yield* I6(V5(Pt4(r91, yield b5(t32))))));
      let i29 = function(o35) {
        return G6(this, arguments, function* () {
          yield yield b5(yield b5(o35));
        });
      }, n37 = function(o35) {
        return G6(this, arguments, function* () {
          yield b5(yield* I6(V5(Ws3(function* (a27) {
            let c30 = null;
            do
              c30 = a27.next(yield c30?.value);
            while (!c30.done);
          }(o35[Symbol.iterator]())))));
        });
      }, s29 = typeof t32 == "string" || ArrayBuffer.isView(t32) || t32 instanceof ArrayBuffer || t32 instanceof $s3 ? i29(t32) : zt4(t32) ? n37(t32) : Lt4(t32) ? t32 : i29(t32);
      return yield b5(yield* I6(V5(Ws3(function(o35) {
        return G6(this, arguments, function* () {
          let a27 = null;
          do
            a27 = yield b5(o35.next(yield yield b5(O7(r91, a27))));
          while (!a27.done);
        });
      }(s29[Symbol.asyncIterator]()))))), yield b5(new r91());
    });
  }
  var Jl = (r91) => Pt4(Int8Array, r91);
  var Gl = (r91) => Pt4(Int16Array, r91);
  var Kl = (r91) => Pt4(Int32Array, r91);
  var Hs3 = (r91) => Pt4(Uint8Array, r91);
  var Zl = (r91) => Pt4(Uint16Array, r91);
  var Xl = (r91) => Pt4(Uint32Array, r91);
  var ql = (r91) => Pt4(Float32Array, r91);
  var Ql = (r91) => Pt4(Float64Array, r91);
  var tu = (r91) => Pt4(Uint8ClampedArray, r91);
  function Dn3(r91, t32, e26) {
    if (r91 !== 0) {
      e26 = e26.slice(0, t32);
      for (let i29 = -1, n37 = e26.length; ++i29 < n37; )
        e26[i29] += r91;
    }
    return e26.subarray(0, t32);
  }
  function Js3(r91, t32) {
    let e26 = 0, i29 = r91.length;
    if (i29 !== t32.length)
      return false;
    if (i29 > 0)
      do
        if (r91[e26] !== t32[e26])
          return false;
      while (++e26 < i29);
    return true;
  }
  var rt4 = { fromIterable(r91) {
    return xn3(eu(r91));
  }, fromAsyncIterable(r91) {
    return xn3(ru(r91));
  }, fromDOMStream(r91) {
    return xn3(iu(r91));
  }, fromNodeStream(r91) {
    return xn3(nu(r91));
  }, toDOMStream(r91, t32) {
    throw new Error('"toDOMStream" not available in this environment');
  }, toNodeStream(r91, t32) {
    throw new Error('"toNodeStream" not available in this environment');
  } };
  var xn3 = (r91) => (r91.next(), r91);
  function* eu(r91) {
    let t32, e26 = false, i29 = [], n37, s29, o35, a27 = 0;
    function c30() {
      return s29 === "peek" ? xt4(i29, o35)[0] : ([n37, i29, a27] = xt4(i29, o35), n37);
    }
    ({ cmd: s29, size: o35 } = (yield null) || { cmd: "read", size: 0 });
    let u30 = Ys3(r91)[Symbol.iterator]();
    try {
      do
        if ({ done: t32, value: n37 } = Number.isNaN(o35 - a27) ? u30.next() : u30.next(o35 - a27), !t32 && n37.byteLength > 0 && (i29.push(n37), a27 += n37.byteLength), t32 || o35 <= a27)
          do
            ({ cmd: s29, size: o35 } = yield c30());
          while (o35 < a27);
      while (!t32);
    } catch (d25) {
      (e26 = true) && typeof u30.throw == "function" && u30.throw(d25);
    } finally {
      e26 === false && typeof u30.return == "function" && u30.return(null);
    }
    return null;
  }
  function ru(r91) {
    return G6(this, arguments, function* () {
      let e26, i29 = false, n37 = [], s29, o35, a27, c30 = 0;
      function u30() {
        return o35 === "peek" ? xt4(n37, a27)[0] : ([s29, n37, c30] = xt4(n37, a27), s29);
      }
      ({ cmd: o35, size: a27 } = (yield yield b5(null)) || { cmd: "read", size: 0 });
      let d25 = Hs3(r91)[Symbol.asyncIterator]();
      try {
        do
          if ({ done: e26, value: s29 } = Number.isNaN(a27 - c30) ? yield b5(d25.next()) : yield b5(d25.next(a27 - c30)), !e26 && s29.byteLength > 0 && (n37.push(s29), c30 += s29.byteLength), e26 || a27 <= c30)
            do
              ({ cmd: o35, size: a27 } = yield yield b5(u30()));
            while (a27 < c30);
        while (!e26);
      } catch (p24) {
        (i29 = true) && typeof d25.throw == "function" && (yield b5(d25.throw(p24)));
      } finally {
        i29 === false && typeof d25.return == "function" && (yield b5(d25.return(new Uint8Array(0))));
      }
      return yield b5(null);
    });
  }
  function iu(r91) {
    return G6(this, arguments, function* () {
      let e26 = false, i29 = false, n37 = [], s29, o35, a27, c30 = 0;
      function u30() {
        return o35 === "peek" ? xt4(n37, a27)[0] : ([s29, n37, c30] = xt4(n37, a27), s29);
      }
      ({ cmd: o35, size: a27 } = (yield yield b5(null)) || { cmd: "read", size: 0 });
      let d25 = new Zs3(r91);
      try {
        do
          if ({ done: e26, value: s29 } = Number.isNaN(a27 - c30) ? yield b5(d25.read()) : yield b5(d25.read(a27 - c30)), !e26 && s29.byteLength > 0 && (n37.push(S6(s29)), c30 += s29.byteLength), e26 || a27 <= c30)
            do
              ({ cmd: o35, size: a27 } = yield yield b5(u30()));
            while (a27 < c30);
        while (!e26);
      } catch (p24) {
        (i29 = true) && (yield b5(d25.cancel(p24)));
      } finally {
        i29 === false ? yield b5(d25.cancel()) : r91.locked && d25.releaseLock();
      }
      return yield b5(null);
    });
  }
  var Zs3 = class {
    constructor(t32) {
      this.source = t32, this.reader = null, this.reader = this.source.getReader(), this.reader.closed.catch(() => {
      });
    }
    get closed() {
      return this.reader ? this.reader.closed.catch(() => {
      }) : Promise.resolve();
    }
    releaseLock() {
      this.reader && this.reader.releaseLock(), this.reader = null;
    }
    cancel(t32) {
      return D6(this, void 0, void 0, function* () {
        let { reader: e26, source: i29 } = this;
        e26 && (yield e26.cancel(t32).catch(() => {
        })), i29 && i29.locked && this.releaseLock();
      });
    }
    read(t32) {
      return D6(this, void 0, void 0, function* () {
        if (t32 === 0)
          return { done: this.reader == null, value: new Uint8Array(0) };
        let e26 = yield this.reader.read();
        return !e26.done && (e26.value = S6(e26)), e26;
      });
    }
  };
  var Ks3 = (r91, t32) => {
    let e26 = (n37) => i29([t32, n37]), i29;
    return [t32, e26, new Promise((n37) => (i29 = n37) && r91.once(t32, e26))];
  };
  function nu(r91) {
    return G6(this, arguments, function* () {
      let e26 = [], i29 = "error", n37 = false, s29 = null, o35, a27, c30 = 0, u30 = [], d25;
      function p24() {
        return o35 === "peek" ? xt4(u30, a27)[0] : ([d25, u30, c30] = xt4(u30, a27), d25);
      }
      if ({ cmd: o35, size: a27 } = (yield yield b5(null)) || { cmd: "read", size: 0 }, r91.isTTY)
        return yield yield b5(new Uint8Array(0)), yield b5(null);
      try {
        e26[0] = Ks3(r91, "end"), e26[1] = Ks3(r91, "error");
        do {
          if (e26[2] = Ks3(r91, "readable"), [i29, s29] = yield b5(Promise.race(e26.map((X25) => X25[2]))), i29 === "error")
            break;
          if ((n37 = i29 === "end") || (Number.isFinite(a27 - c30) ? (d25 = S6(r91.read(a27 - c30)), d25.byteLength < a27 - c30 && (d25 = S6(r91.read()))) : d25 = S6(r91.read()), d25.byteLength > 0 && (u30.push(d25), c30 += d25.byteLength)), n37 || a27 <= c30)
            do
              ({ cmd: o35, size: a27 } = yield yield b5(p24()));
            while (a27 < c30);
        } while (!n37);
      } finally {
        yield b5(W25(e26, i29 === "error" ? s29 : null));
      }
      return yield b5(null);
      function W25(X25, Bt9) {
        return d25 = u30 = null, new Promise((Sl2, Bl2) => {
          for (let [$r5, Dl2] of X25)
            r91.off($r5, Dl2);
          try {
            let $r5 = r91.destroy;
            $r5 && $r5.call(r91, Bt9), Bt9 = void 0;
          } catch ($r5) {
            Bt9 = $r5 || Bt9;
          } finally {
            Bt9 != null ? Bl2(Bt9) : Sl2();
          }
        });
      }
    });
  }
  var V6;
  (function(r91) {
    r91[r91.V1 = 0] = "V1", r91[r91.V2 = 1] = "V2", r91[r91.V3 = 2] = "V3", r91[r91.V4 = 3] = "V4", r91[r91.V5 = 4] = "V5";
  })(V6 || (V6 = {}));
  var U6;
  (function(r91) {
    r91[r91.Sparse = 0] = "Sparse", r91[r91.Dense = 1] = "Dense";
  })(U6 || (U6 = {}));
  var R6;
  (function(r91) {
    r91[r91.HALF = 0] = "HALF", r91[r91.SINGLE = 1] = "SINGLE", r91[r91.DOUBLE = 2] = "DOUBLE";
  })(R6 || (R6 = {}));
  var k6;
  (function(r91) {
    r91[r91.DAY = 0] = "DAY", r91[r91.MILLISECOND = 1] = "MILLISECOND";
  })(k6 || (k6 = {}));
  var h8;
  (function(r91) {
    r91[r91.SECOND = 0] = "SECOND", r91[r91.MILLISECOND = 1] = "MILLISECOND", r91[r91.MICROSECOND = 2] = "MICROSECOND", r91[r91.NANOSECOND = 3] = "NANOSECOND";
  })(h8 || (h8 = {}));
  var Y6;
  (function(r91) {
    r91[r91.YEAR_MONTH = 0] = "YEAR_MONTH", r91[r91.DAY_TIME = 1] = "DAY_TIME", r91[r91.MONTH_DAY_NANO = 2] = "MONTH_DAY_NANO";
  })(Y6 || (Y6 = {}));
  var ki3;
  (function(r91) {
    r91[r91.BUFFER = 0] = "BUFFER";
  })(ki3 || (ki3 = {}));
  var zi3;
  (function(r91) {
    r91[r91.LZ4_FRAME = 0] = "LZ4_FRAME", r91[r91.ZSTD = 1] = "ZSTD";
  })(zi3 || (zi3 = {}));
  var An3 = class r5 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsBodyCompression(t32, e26) {
      return (e26 || new r5()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsBodyCompression(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r5()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    codec() {
      let t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt8(this.bb_pos + t32) : zi3.LZ4_FRAME;
    }
    method() {
      let t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.readInt8(this.bb_pos + t32) : ki3.BUFFER;
    }
    static startBodyCompression(t32) {
      t32.startObject(2);
    }
    static addCodec(t32, e26) {
      t32.addFieldInt8(0, e26, zi3.LZ4_FRAME);
    }
    static addMethod(t32, e26) {
      t32.addFieldInt8(1, e26, ki3.BUFFER);
    }
    static endBodyCompression(t32) {
      return t32.endObject();
    }
    static createBodyCompression(t32, e26, i29) {
      return r5.startBodyCompression(t32), r5.addCodec(t32, e26), r5.addMethod(t32, i29), r5.endBodyCompression(t32);
    }
  };
  var Yr3 = class {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    offset() {
      return this.bb.readInt64(this.bb_pos);
    }
    length() {
      return this.bb.readInt64(this.bb_pos + 8);
    }
    static sizeOf() {
      return 16;
    }
    static createBuffer(t32, e26, i29) {
      return t32.prep(8, 16), t32.writeInt64(BigInt(i29 ?? 0)), t32.writeInt64(BigInt(e26 ?? 0)), t32.offset();
    }
  };
  var Hr3 = class {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    length() {
      return this.bb.readInt64(this.bb_pos);
    }
    nullCount() {
      return this.bb.readInt64(this.bb_pos + 8);
    }
    static sizeOf() {
      return 16;
    }
    static createFieldNode(t32, e26, i29) {
      return t32.prep(8, 16), t32.writeInt64(BigInt(i29 ?? 0)), t32.writeInt64(BigInt(e26 ?? 0)), t32.offset();
    }
  };
  var At4 = class r6 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsRecordBatch(t32, e26) {
      return (e26 || new r6()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsRecordBatch(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r6()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    length() {
      let t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt64(this.bb_pos + t32) : BigInt("0");
    }
    nodes(t32, e26) {
      let i29 = this.bb.__offset(this.bb_pos, 6);
      return i29 ? (e26 || new Hr3()).__init(this.bb.__vector(this.bb_pos + i29) + t32 * 16, this.bb) : null;
    }
    nodesLength() {
      let t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    buffers(t32, e26) {
      let i29 = this.bb.__offset(this.bb_pos, 8);
      return i29 ? (e26 || new Yr3()).__init(this.bb.__vector(this.bb_pos + i29) + t32 * 16, this.bb) : null;
    }
    buffersLength() {
      let t32 = this.bb.__offset(this.bb_pos, 8);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    compression(t32) {
      let e26 = this.bb.__offset(this.bb_pos, 10);
      return e26 ? (t32 || new An3()).__init(this.bb.__indirect(this.bb_pos + e26), this.bb) : null;
    }
    static startRecordBatch(t32) {
      t32.startObject(4);
    }
    static addLength(t32, e26) {
      t32.addFieldInt64(0, e26, BigInt("0"));
    }
    static addNodes(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static startNodesVector(t32, e26) {
      t32.startVector(16, e26, 8);
    }
    static addBuffers(t32, e26) {
      t32.addFieldOffset(2, e26, 0);
    }
    static startBuffersVector(t32, e26) {
      t32.startVector(16, e26, 8);
    }
    static addCompression(t32, e26) {
      t32.addFieldOffset(3, e26, 0);
    }
    static endRecordBatch(t32) {
      return t32.endObject();
    }
  };
  var ge4 = class r7 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsDictionaryBatch(t32, e26) {
      return (e26 || new r7()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsDictionaryBatch(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r7()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    id() {
      let t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt64(this.bb_pos + t32) : BigInt("0");
    }
    data(t32) {
      let e26 = this.bb.__offset(this.bb_pos, 6);
      return e26 ? (t32 || new At4()).__init(this.bb.__indirect(this.bb_pos + e26), this.bb) : null;
    }
    isDelta() {
      let t32 = this.bb.__offset(this.bb_pos, 8);
      return t32 ? !!this.bb.readInt8(this.bb_pos + t32) : false;
    }
    static startDictionaryBatch(t32) {
      t32.startObject(3);
    }
    static addId(t32, e26) {
      t32.addFieldInt64(0, e26, BigInt("0"));
    }
    static addData(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static addIsDelta(t32, e26) {
      t32.addFieldInt8(2, +e26, 0);
    }
    static endDictionaryBatch(t32) {
      return t32.endObject();
    }
  };
  var Ne4;
  (function(r91) {
    r91[r91.Little = 0] = "Little", r91[r91.Big = 1] = "Big";
  })(Ne4 || (Ne4 = {}));
  var Pi3;
  (function(r91) {
    r91[r91.DenseArray = 0] = "DenseArray";
  })(Pi3 || (Pi3 = {}));
  var jt4 = class r8 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsInt(t32, e26) {
      return (e26 || new r8()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsInt(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r8()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    bitWidth() {
      let t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 0;
    }
    isSigned() {
      let t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? !!this.bb.readInt8(this.bb_pos + t32) : false;
    }
    static startInt(t32) {
      t32.startObject(2);
    }
    static addBitWidth(t32, e26) {
      t32.addFieldInt32(0, e26, 0);
    }
    static addIsSigned(t32, e26) {
      t32.addFieldInt8(1, +e26, 0);
    }
    static endInt(t32) {
      return t32.endObject();
    }
    static createInt(t32, e26, i29) {
      return r8.startInt(t32), r8.addBitWidth(t32, e26), r8.addIsSigned(t32, i29), r8.endInt(t32);
    }
  };
  var oe5 = class r9 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsDictionaryEncoding(t32, e26) {
      return (e26 || new r9()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsDictionaryEncoding(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r9()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    id() {
      let t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt64(this.bb_pos + t32) : BigInt("0");
    }
    indexType(t32) {
      let e26 = this.bb.__offset(this.bb_pos, 6);
      return e26 ? (t32 || new jt4()).__init(this.bb.__indirect(this.bb_pos + e26), this.bb) : null;
    }
    isOrdered() {
      let t32 = this.bb.__offset(this.bb_pos, 8);
      return t32 ? !!this.bb.readInt8(this.bb_pos + t32) : false;
    }
    dictionaryKind() {
      let t32 = this.bb.__offset(this.bb_pos, 10);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : Pi3.DenseArray;
    }
    static startDictionaryEncoding(t32) {
      t32.startObject(4);
    }
    static addId(t32, e26) {
      t32.addFieldInt64(0, e26, BigInt("0"));
    }
    static addIndexType(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static addIsOrdered(t32, e26) {
      t32.addFieldInt8(2, +e26, 0);
    }
    static addDictionaryKind(t32, e26) {
      t32.addFieldInt16(3, e26, Pi3.DenseArray);
    }
    static endDictionaryEncoding(t32) {
      return t32.endObject();
    }
  };
  var Q6 = class r10 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsKeyValue(t32, e26) {
      return (e26 || new r10()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsKeyValue(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r10()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    key(t32) {
      let e26 = this.bb.__offset(this.bb_pos, 4);
      return e26 ? this.bb.__string(this.bb_pos + e26, t32) : null;
    }
    value(t32) {
      let e26 = this.bb.__offset(this.bb_pos, 6);
      return e26 ? this.bb.__string(this.bb_pos + e26, t32) : null;
    }
    static startKeyValue(t32) {
      t32.startObject(2);
    }
    static addKey(t32, e26) {
      t32.addFieldOffset(0, e26, 0);
    }
    static addValue(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static endKeyValue(t32) {
      return t32.endObject();
    }
    static createKeyValue(t32, e26, i29) {
      return r10.startKeyValue(t32), r10.addKey(t32, e26), r10.addValue(t32, i29), r10.endKeyValue(t32);
    }
  };
  var ji3 = class r11 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsBinary(t32, e26) {
      return (e26 || new r11()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsBinary(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r11()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startBinary(t32) {
      t32.startObject(0);
    }
    static endBinary(t32) {
      return t32.endObject();
    }
    static createBinary(t32) {
      return r11.startBinary(t32), r11.endBinary(t32);
    }
  };
  var Wi3 = class r12 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsBool(t32, e26) {
      return (e26 || new r12()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsBool(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r12()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startBool(t32) {
      t32.startObject(0);
    }
    static endBool(t32) {
      return t32.endObject();
    }
    static createBool(t32) {
      return r12.startBool(t32), r12.endBool(t32);
    }
  };
  var Ee5 = class r13 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsDate(t32, e26) {
      return (e26 || new r13()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsDate(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r13()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    unit() {
      let t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : k6.MILLISECOND;
    }
    static startDate(t32) {
      t32.startObject(1);
    }
    static addUnit(t32, e26) {
      t32.addFieldInt16(0, e26, k6.MILLISECOND);
    }
    static endDate(t32) {
      return t32.endObject();
    }
    static createDate(t32, e26) {
      return r13.startDate(t32), r13.addUnit(t32, e26), r13.endDate(t32);
    }
  };
  var ae4 = class r14 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsDecimal(t32, e26) {
      return (e26 || new r14()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsDecimal(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r14()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    precision() {
      let t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 0;
    }
    scale() {
      let t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 0;
    }
    bitWidth() {
      let t32 = this.bb.__offset(this.bb_pos, 8);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 128;
    }
    static startDecimal(t32) {
      t32.startObject(3);
    }
    static addPrecision(t32, e26) {
      t32.addFieldInt32(0, e26, 0);
    }
    static addScale(t32, e26) {
      t32.addFieldInt32(1, e26, 0);
    }
    static addBitWidth(t32, e26) {
      t32.addFieldInt32(2, e26, 128);
    }
    static endDecimal(t32) {
      return t32.endObject();
    }
    static createDecimal(t32, e26, i29, n37) {
      return r14.startDecimal(t32), r14.addPrecision(t32, e26), r14.addScale(t32, i29), r14.addBitWidth(t32, n37), r14.endDecimal(t32);
    }
  };
  var Ve3 = class r15 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsDuration(t32, e26) {
      return (e26 || new r15()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsDuration(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r15()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    unit() {
      let t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : h8.MILLISECOND;
    }
    static startDuration(t32) {
      t32.startObject(1);
    }
    static addUnit(t32, e26) {
      t32.addFieldInt16(0, e26, h8.MILLISECOND);
    }
    static endDuration(t32) {
      return t32.endObject();
    }
    static createDuration(t32, e26) {
      return r15.startDuration(t32), r15.addUnit(t32, e26), r15.endDuration(t32);
    }
  };
  var Re4 = class r16 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsFixedSizeBinary(t32, e26) {
      return (e26 || new r16()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsFixedSizeBinary(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r16()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    byteWidth() {
      let t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 0;
    }
    static startFixedSizeBinary(t32) {
      t32.startObject(1);
    }
    static addByteWidth(t32, e26) {
      t32.addFieldInt32(0, e26, 0);
    }
    static endFixedSizeBinary(t32) {
      return t32.endObject();
    }
    static createFixedSizeBinary(t32, e26) {
      return r16.startFixedSizeBinary(t32), r16.addByteWidth(t32, e26), r16.endFixedSizeBinary(t32);
    }
  };
  var Ce4 = class r17 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsFixedSizeList(t32, e26) {
      return (e26 || new r17()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsFixedSizeList(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r17()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    listSize() {
      let t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 0;
    }
    static startFixedSizeList(t32) {
      t32.startObject(1);
    }
    static addListSize(t32, e26) {
      t32.addFieldInt32(0, e26, 0);
    }
    static endFixedSizeList(t32) {
      return t32.endObject();
    }
    static createFixedSizeList(t32, e26) {
      return r17.startFixedSizeList(t32), r17.addListSize(t32, e26), r17.endFixedSizeList(t32);
    }
  };
  var ke4 = class r18 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsFloatingPoint(t32, e26) {
      return (e26 || new r18()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsFloatingPoint(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r18()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    precision() {
      let t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : R6.HALF;
    }
    static startFloatingPoint(t32) {
      t32.startObject(1);
    }
    static addPrecision(t32, e26) {
      t32.addFieldInt16(0, e26, R6.HALF);
    }
    static endFloatingPoint(t32) {
      return t32.endObject();
    }
    static createFloatingPoint(t32, e26) {
      return r18.startFloatingPoint(t32), r18.addPrecision(t32, e26), r18.endFloatingPoint(t32);
    }
  };
  var ze3 = class r19 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsInterval(t32, e26) {
      return (e26 || new r19()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsInterval(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r19()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    unit() {
      let t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : Y6.YEAR_MONTH;
    }
    static startInterval(t32) {
      t32.startObject(1);
    }
    static addUnit(t32, e26) {
      t32.addFieldInt16(0, e26, Y6.YEAR_MONTH);
    }
    static endInterval(t32) {
      return t32.endObject();
    }
    static createInterval(t32, e26) {
      return r19.startInterval(t32), r19.addUnit(t32, e26), r19.endInterval(t32);
    }
  };
  var $i3 = class r20 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsLargeBinary(t32, e26) {
      return (e26 || new r20()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsLargeBinary(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r20()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startLargeBinary(t32) {
      t32.startObject(0);
    }
    static endLargeBinary(t32) {
      return t32.endObject();
    }
    static createLargeBinary(t32) {
      return r20.startLargeBinary(t32), r20.endLargeBinary(t32);
    }
  };
  var Yi3 = class r21 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsLargeUtf8(t32, e26) {
      return (e26 || new r21()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsLargeUtf8(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r21()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startLargeUtf8(t32) {
      t32.startObject(0);
    }
    static endLargeUtf8(t32) {
      return t32.endObject();
    }
    static createLargeUtf8(t32) {
      return r21.startLargeUtf8(t32), r21.endLargeUtf8(t32);
    }
  };
  var Hi3 = class r22 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsList(t32, e26) {
      return (e26 || new r22()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsList(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r22()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startList(t32) {
      t32.startObject(0);
    }
    static endList(t32) {
      return t32.endObject();
    }
    static createList(t32) {
      return r22.startList(t32), r22.endList(t32);
    }
  };
  var Pe3 = class r23 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsMap(t32, e26) {
      return (e26 || new r23()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsMap(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r23()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    keysSorted() {
      let t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? !!this.bb.readInt8(this.bb_pos + t32) : false;
    }
    static startMap(t32) {
      t32.startObject(1);
    }
    static addKeysSorted(t32, e26) {
      t32.addFieldInt8(0, +e26, 0);
    }
    static endMap(t32) {
      return t32.endObject();
    }
    static createMap(t32, e26) {
      return r23.startMap(t32), r23.addKeysSorted(t32, e26), r23.endMap(t32);
    }
  };
  var Ji3 = class r24 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsNull(t32, e26) {
      return (e26 || new r24()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsNull(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r24()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startNull(t32) {
      t32.startObject(0);
    }
    static endNull(t32) {
      return t32.endObject();
    }
    static createNull(t32) {
      return r24.startNull(t32), r24.endNull(t32);
    }
  };
  var Gi3 = class r25 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsStruct_(t32, e26) {
      return (e26 || new r25()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsStruct_(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r25()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startStruct_(t32) {
      t32.startObject(0);
    }
    static endStruct_(t32) {
      return t32.endObject();
    }
    static createStruct_(t32) {
      return r25.startStruct_(t32), r25.endStruct_(t32);
    }
  };
  var be3 = class r26 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsTime(t32, e26) {
      return (e26 || new r26()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsTime(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r26()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    unit() {
      let t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : h8.MILLISECOND;
    }
    bitWidth() {
      let t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.readInt32(this.bb_pos + t32) : 32;
    }
    static startTime(t32) {
      t32.startObject(2);
    }
    static addUnit(t32, e26) {
      t32.addFieldInt16(0, e26, h8.MILLISECOND);
    }
    static addBitWidth(t32, e26) {
      t32.addFieldInt32(1, e26, 32);
    }
    static endTime(t32) {
      return t32.endObject();
    }
    static createTime(t32, e26, i29) {
      return r26.startTime(t32), r26.addUnit(t32, e26), r26.addBitWidth(t32, i29), r26.endTime(t32);
    }
  };
  var _e2 = class r27 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsTimestamp(t32, e26) {
      return (e26 || new r27()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsTimestamp(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r27()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    unit() {
      let t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : h8.SECOND;
    }
    timezone(t32) {
      let e26 = this.bb.__offset(this.bb_pos, 6);
      return e26 ? this.bb.__string(this.bb_pos + e26, t32) : null;
    }
    static startTimestamp(t32) {
      t32.startObject(2);
    }
    static addUnit(t32, e26) {
      t32.addFieldInt16(0, e26, h8.SECOND);
    }
    static addTimezone(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static endTimestamp(t32) {
      return t32.endObject();
    }
    static createTimestamp(t32, e26, i29) {
      return r27.startTimestamp(t32), r27.addUnit(t32, e26), r27.addTimezone(t32, i29), r27.endTimestamp(t32);
    }
  };
  var Wt4 = class r28 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsUnion(t32, e26) {
      return (e26 || new r28()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsUnion(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r28()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    mode() {
      let t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : U6.Sparse;
    }
    typeIds(t32) {
      let e26 = this.bb.__offset(this.bb_pos, 6);
      return e26 ? this.bb.readInt32(this.bb.__vector(this.bb_pos + e26) + t32 * 4) : 0;
    }
    typeIdsLength() {
      let t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    typeIdsArray() {
      let t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t32), this.bb.__vector_len(this.bb_pos + t32)) : null;
    }
    static startUnion(t32) {
      t32.startObject(2);
    }
    static addMode(t32, e26) {
      t32.addFieldInt16(0, e26, U6.Sparse);
    }
    static addTypeIds(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static createTypeIdsVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addInt32(e26[i29]);
      return t32.endVector();
    }
    static startTypeIdsVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static endUnion(t32) {
      return t32.endObject();
    }
    static createUnion(t32, e26, i29) {
      return r28.startUnion(t32), r28.addMode(t32, e26), r28.addTypeIds(t32, i29), r28.endUnion(t32);
    }
  };
  var Ki3 = class r29 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsUtf8(t32, e26) {
      return (e26 || new r29()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsUtf8(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r29()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static startUtf8(t32) {
      t32.startObject(0);
    }
    static endUtf8(t32) {
      return t32.endObject();
    }
    static createUtf8(t32) {
      return r29.startUtf8(t32), r29.endUtf8(t32);
    }
  };
  var x5;
  (function(r91) {
    r91[r91.NONE = 0] = "NONE", r91[r91.Null = 1] = "Null", r91[r91.Int = 2] = "Int", r91[r91.FloatingPoint = 3] = "FloatingPoint", r91[r91.Binary = 4] = "Binary", r91[r91.Utf8 = 5] = "Utf8", r91[r91.Bool = 6] = "Bool", r91[r91.Decimal = 7] = "Decimal", r91[r91.Date = 8] = "Date", r91[r91.Time = 9] = "Time", r91[r91.Timestamp = 10] = "Timestamp", r91[r91.Interval = 11] = "Interval", r91[r91.List = 12] = "List", r91[r91.Struct_ = 13] = "Struct_", r91[r91.Union = 14] = "Union", r91[r91.FixedSizeBinary = 15] = "FixedSizeBinary", r91[r91.FixedSizeList = 16] = "FixedSizeList", r91[r91.Map = 17] = "Map", r91[r91.Duration = 18] = "Duration", r91[r91.LargeBinary = 19] = "LargeBinary", r91[r91.LargeUtf8 = 20] = "LargeUtf8", r91[r91.LargeList = 21] = "LargeList", r91[r91.RunEndEncoded = 22] = "RunEndEncoded";
  })(x5 || (x5 = {}));
  var st4 = class r30 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsField(t32, e26) {
      return (e26 || new r30()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsField(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r30()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    name(t32) {
      let e26 = this.bb.__offset(this.bb_pos, 4);
      return e26 ? this.bb.__string(this.bb_pos + e26, t32) : null;
    }
    nullable() {
      let t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? !!this.bb.readInt8(this.bb_pos + t32) : false;
    }
    typeType() {
      let t32 = this.bb.__offset(this.bb_pos, 8);
      return t32 ? this.bb.readUint8(this.bb_pos + t32) : x5.NONE;
    }
    type(t32) {
      let e26 = this.bb.__offset(this.bb_pos, 10);
      return e26 ? this.bb.__union(t32, this.bb_pos + e26) : null;
    }
    dictionary(t32) {
      let e26 = this.bb.__offset(this.bb_pos, 12);
      return e26 ? (t32 || new oe5()).__init(this.bb.__indirect(this.bb_pos + e26), this.bb) : null;
    }
    children(t32, e26) {
      let i29 = this.bb.__offset(this.bb_pos, 14);
      return i29 ? (e26 || new r30()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + i29) + t32 * 4), this.bb) : null;
    }
    childrenLength() {
      let t32 = this.bb.__offset(this.bb_pos, 14);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    customMetadata(t32, e26) {
      let i29 = this.bb.__offset(this.bb_pos, 16);
      return i29 ? (e26 || new Q6()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + i29) + t32 * 4), this.bb) : null;
    }
    customMetadataLength() {
      let t32 = this.bb.__offset(this.bb_pos, 16);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    static startField(t32) {
      t32.startObject(7);
    }
    static addName(t32, e26) {
      t32.addFieldOffset(0, e26, 0);
    }
    static addNullable(t32, e26) {
      t32.addFieldInt8(1, +e26, 0);
    }
    static addTypeType(t32, e26) {
      t32.addFieldInt8(2, e26, x5.NONE);
    }
    static addType(t32, e26) {
      t32.addFieldOffset(3, e26, 0);
    }
    static addDictionary(t32, e26) {
      t32.addFieldOffset(4, e26, 0);
    }
    static addChildren(t32, e26) {
      t32.addFieldOffset(5, e26, 0);
    }
    static createChildrenVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addOffset(e26[i29]);
      return t32.endVector();
    }
    static startChildrenVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static addCustomMetadata(t32, e26) {
      t32.addFieldOffset(6, e26, 0);
    }
    static createCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addOffset(e26[i29]);
      return t32.endVector();
    }
    static startCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static endField(t32) {
      return t32.endObject();
    }
  };
  var ht4 = class r31 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsSchema(t32, e26) {
      return (e26 || new r31()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsSchema(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r31()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    endianness() {
      let t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : Ne4.Little;
    }
    fields(t32, e26) {
      let i29 = this.bb.__offset(this.bb_pos, 6);
      return i29 ? (e26 || new st4()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + i29) + t32 * 4), this.bb) : null;
    }
    fieldsLength() {
      let t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    customMetadata(t32, e26) {
      let i29 = this.bb.__offset(this.bb_pos, 8);
      return i29 ? (e26 || new Q6()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + i29) + t32 * 4), this.bb) : null;
    }
    customMetadataLength() {
      let t32 = this.bb.__offset(this.bb_pos, 8);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    features(t32) {
      let e26 = this.bb.__offset(this.bb_pos, 10);
      return e26 ? this.bb.readInt64(this.bb.__vector(this.bb_pos + e26) + t32 * 8) : BigInt(0);
    }
    featuresLength() {
      let t32 = this.bb.__offset(this.bb_pos, 10);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    static startSchema(t32) {
      t32.startObject(4);
    }
    static addEndianness(t32, e26) {
      t32.addFieldInt16(0, e26, Ne4.Little);
    }
    static addFields(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static createFieldsVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addOffset(e26[i29]);
      return t32.endVector();
    }
    static startFieldsVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static addCustomMetadata(t32, e26) {
      t32.addFieldOffset(2, e26, 0);
    }
    static createCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addOffset(e26[i29]);
      return t32.endVector();
    }
    static startCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static addFeatures(t32, e26) {
      t32.addFieldOffset(3, e26, 0);
    }
    static createFeaturesVector(t32, e26) {
      t32.startVector(8, e26.length, 8);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addInt64(e26[i29]);
      return t32.endVector();
    }
    static startFeaturesVector(t32, e26) {
      t32.startVector(8, e26, 8);
    }
    static endSchema(t32) {
      return t32.endObject();
    }
    static finishSchemaBuffer(t32, e26) {
      t32.finish(e26);
    }
    static finishSizePrefixedSchemaBuffer(t32, e26) {
      t32.finish(e26, void 0, true);
    }
    static createSchema(t32, e26, i29, n37, s29) {
      return r31.startSchema(t32), r31.addEndianness(t32, e26), r31.addFields(t32, i29), r31.addCustomMetadata(t32, n37), r31.addFeatures(t32, s29), r31.endSchema(t32);
    }
  };
  var M6;
  (function(r91) {
    r91[r91.NONE = 0] = "NONE", r91[r91.Schema = 1] = "Schema", r91[r91.DictionaryBatch = 2] = "DictionaryBatch", r91[r91.RecordBatch = 3] = "RecordBatch", r91[r91.Tensor = 4] = "Tensor", r91[r91.SparseTensor = 5] = "SparseTensor";
  })(M6 || (M6 = {}));
  var l7;
  (function(r91) {
    r91[r91.NONE = 0] = "NONE", r91[r91.Null = 1] = "Null", r91[r91.Int = 2] = "Int", r91[r91.Float = 3] = "Float", r91[r91.Binary = 4] = "Binary", r91[r91.Utf8 = 5] = "Utf8", r91[r91.Bool = 6] = "Bool", r91[r91.Decimal = 7] = "Decimal", r91[r91.Date = 8] = "Date", r91[r91.Time = 9] = "Time", r91[r91.Timestamp = 10] = "Timestamp", r91[r91.Interval = 11] = "Interval", r91[r91.List = 12] = "List", r91[r91.Struct = 13] = "Struct", r91[r91.Union = 14] = "Union", r91[r91.FixedSizeBinary = 15] = "FixedSizeBinary", r91[r91.FixedSizeList = 16] = "FixedSizeList", r91[r91.Map = 17] = "Map", r91[r91.Duration = 18] = "Duration", r91[r91.LargeBinary = 19] = "LargeBinary", r91[r91.LargeUtf8 = 20] = "LargeUtf8", r91[r91.Dictionary = -1] = "Dictionary", r91[r91.Int8 = -2] = "Int8", r91[r91.Int16 = -3] = "Int16", r91[r91.Int32 = -4] = "Int32", r91[r91.Int64 = -5] = "Int64", r91[r91.Uint8 = -6] = "Uint8", r91[r91.Uint16 = -7] = "Uint16", r91[r91.Uint32 = -8] = "Uint32", r91[r91.Uint64 = -9] = "Uint64", r91[r91.Float16 = -10] = "Float16", r91[r91.Float32 = -11] = "Float32", r91[r91.Float64 = -12] = "Float64", r91[r91.DateDay = -13] = "DateDay", r91[r91.DateMillisecond = -14] = "DateMillisecond", r91[r91.TimestampSecond = -15] = "TimestampSecond", r91[r91.TimestampMillisecond = -16] = "TimestampMillisecond", r91[r91.TimestampMicrosecond = -17] = "TimestampMicrosecond", r91[r91.TimestampNanosecond = -18] = "TimestampNanosecond", r91[r91.TimeSecond = -19] = "TimeSecond", r91[r91.TimeMillisecond = -20] = "TimeMillisecond", r91[r91.TimeMicrosecond = -21] = "TimeMicrosecond", r91[r91.TimeNanosecond = -22] = "TimeNanosecond", r91[r91.DenseUnion = -23] = "DenseUnion", r91[r91.SparseUnion = -24] = "SparseUnion", r91[r91.IntervalDayTime = -25] = "IntervalDayTime", r91[r91.IntervalYearMonth = -26] = "IntervalYearMonth", r91[r91.DurationSecond = -27] = "DurationSecond", r91[r91.DurationMillisecond = -28] = "DurationMillisecond", r91[r91.DurationMicrosecond = -29] = "DurationMicrosecond", r91[r91.DurationNanosecond = -30] = "DurationNanosecond";
  })(l7 || (l7 = {}));
  var ft4;
  (function(r91) {
    r91[r91.OFFSET = 0] = "OFFSET", r91[r91.DATA = 1] = "DATA", r91[r91.VALIDITY = 2] = "VALIDITY", r91[r91.TYPE = 3] = "TYPE";
  })(ft4 || (ft4 = {}));
  var bo3 = {};
  rr3(bo3, { clampRange: () => Qi3, createElementComparator: () => $e5, wrapIndex: () => hr3 });
  var qs3 = {};
  rr3(qs3, { valueToString: () => $t4 });
  function $t4(r91) {
    if (r91 === null)
      return "null";
    if (r91 === void 0)
      return "undefined";
    switch (typeof r91) {
      case "number":
        return `${r91}`;
      case "bigint":
        return `${r91}`;
      case "string":
        return `"${r91}"`;
    }
    return typeof r91[Symbol.toPrimitive] == "function" ? r91[Symbol.toPrimitive]("string") : ArrayBuffer.isView(r91) ? r91 instanceof BigInt64Array || r91 instanceof BigUint64Array ? `[${[...r91].map((t32) => $t4(t32))}]` : `[${r91}]` : ArrayBuffer.isView(r91) ? `[${r91}]` : JSON.stringify(r91, (t32, e26) => typeof e26 == "bigint" ? `${e26}` : e26);
  }
  var ro3 = {};
  rr3(ro3, { BN: () => nr3, bigNumToBigInt: () => Ta3, bigNumToNumber: () => eo3, bigNumToString: () => Kr3, isArrowBigNumSymbol: () => Fa3 });
  function N6(r91) {
    if (typeof r91 == "bigint" && (r91 < Number.MIN_SAFE_INTEGER || r91 > Number.MAX_SAFE_INTEGER))
      throw new TypeError(`${r91} is not safe to convert to a number.`);
    return Number(r91);
  }
  function Qs3(r91, t32) {
    return N6(r91 / t32) + N6(r91 % t32) / N6(t32);
  }
  var Fa3 = Symbol.for("isArrowBigNum");
  function Yt4(r91, ...t32) {
    return t32.length === 0 ? Object.setPrototypeOf(O7(this.TypedArray, r91), this.constructor.prototype) : Object.setPrototypeOf(new this.TypedArray(r91, ...t32), this.constructor.prototype);
  }
  Yt4.prototype[Fa3] = true;
  Yt4.prototype.toJSON = function() {
    return `"${Kr3(this)}"`;
  };
  Yt4.prototype.valueOf = function(r91) {
    return eo3(this, r91);
  };
  Yt4.prototype.toString = function() {
    return Kr3(this);
  };
  Yt4.prototype[Symbol.toPrimitive] = function(r91 = "default") {
    switch (r91) {
      case "number":
        return eo3(this);
      case "string":
        return Kr3(this);
      case "default":
        return Ta3(this);
    }
    return Kr3(this);
  };
  function Jr3(...r91) {
    return Yt4.apply(this, r91);
  }
  function Gr3(...r91) {
    return Yt4.apply(this, r91);
  }
  function Zi3(...r91) {
    return Yt4.apply(this, r91);
  }
  Object.setPrototypeOf(Jr3.prototype, Object.create(Int32Array.prototype));
  Object.setPrototypeOf(Gr3.prototype, Object.create(Uint32Array.prototype));
  Object.setPrototypeOf(Zi3.prototype, Object.create(Uint32Array.prototype));
  Object.assign(Jr3.prototype, Yt4.prototype, { constructor: Jr3, signed: true, TypedArray: Int32Array, BigIntArray: BigInt64Array });
  Object.assign(Gr3.prototype, Yt4.prototype, { constructor: Gr3, signed: false, TypedArray: Uint32Array, BigIntArray: BigUint64Array });
  Object.assign(Zi3.prototype, Yt4.prototype, { constructor: Zi3, signed: true, TypedArray: Uint32Array, BigIntArray: BigUint64Array });
  var su = BigInt(4294967296) * BigInt(4294967296);
  var ou = su - BigInt(1);
  function eo3(r91, t32) {
    let { buffer: e26, byteOffset: i29, byteLength: n37, signed: s29 } = r91, o35 = new BigUint64Array(e26, i29, n37 / 8), a27 = s29 && o35.at(-1) & BigInt(1) << BigInt(63), c30 = BigInt(0), u30 = 0;
    if (a27) {
      for (let d25 of o35)
        c30 |= (d25 ^ ou) * (BigInt(1) << BigInt(64 * u30++));
      c30 *= BigInt(-1), c30 -= BigInt(1);
    } else
      for (let d25 of o35)
        c30 |= d25 * (BigInt(1) << BigInt(64 * u30++));
    if (typeof t32 == "number") {
      let d25 = BigInt(Math.pow(10, t32)), p24 = c30 / d25, W25 = c30 % d25;
      return N6(p24) + N6(W25) / N6(d25);
    }
    return N6(c30);
  }
  function Kr3(r91) {
    if (r91.byteLength === 8)
      return `${new r91.BigIntArray(r91.buffer, r91.byteOffset, 1)[0]}`;
    if (!r91.signed)
      return to3(r91);
    let t32 = new Uint16Array(r91.buffer, r91.byteOffset, r91.byteLength / 2);
    if (new Int16Array([t32.at(-1)])[0] >= 0)
      return to3(r91);
    t32 = t32.slice();
    let i29 = 1;
    for (let s29 = 0; s29 < t32.length; s29++) {
      let o35 = t32[s29], a27 = ~o35 + i29;
      t32[s29] = a27, i29 &= o35 === 0 ? 1 : 0;
    }
    return `-${to3(t32)}`;
  }
  function Ta3(r91) {
    return r91.byteLength === 8 ? new r91.BigIntArray(r91.buffer, r91.byteOffset, 1)[0] : Kr3(r91);
  }
  function to3(r91) {
    let t32 = "", e26 = new Uint32Array(2), i29 = new Uint16Array(r91.buffer, r91.byteOffset, r91.byteLength / 2), n37 = new Uint32Array((i29 = new Uint16Array(i29).reverse()).buffer), s29 = -1, o35 = i29.length - 1;
    do {
      for (e26[0] = i29[s29 = 0]; s29 < o35; )
        i29[s29++] = e26[1] = e26[0] / 10, e26[0] = (e26[0] - e26[1] * 10 << 16) + i29[s29];
      i29[s29] = e26[1] = e26[0] / 10, e26[0] = e26[0] - e26[1] * 10, t32 = `${e26[0]}${t32}`;
    } while (n37[0] || n37[1] || n37[2] || n37[3]);
    return t32 ?? "0";
  }
  var nr3 = class r32 {
    static new(t32, e26) {
      switch (e26) {
        case true:
          return new Jr3(t32);
        case false:
          return new Gr3(t32);
      }
      switch (t32.constructor) {
        case Int8Array:
        case Int16Array:
        case Int32Array:
        case BigInt64Array:
          return new Jr3(t32);
      }
      return t32.byteLength === 16 ? new Zi3(t32) : new Gr3(t32);
    }
    static signed(t32) {
      return new Jr3(t32);
    }
    static unsigned(t32) {
      return new Gr3(t32);
    }
    static decimal(t32) {
      return new Zi3(t32);
    }
    constructor(t32, e26) {
      return r32.new(t32, e26);
    }
  };
  var Oa3;
  var Ma3;
  var La3;
  var Ua3;
  var Na3;
  var Ea3;
  var Va3;
  var Ra3;
  var Ca3;
  var ka3;
  var za3;
  var Pa3;
  var ja3;
  var Wa3;
  var $a3;
  var Ya3;
  var Ha3;
  var Ja3;
  var Ga3;
  var Ka3;
  var Za3;
  var Xa3;
  var f5 = class r33 {
    static isNull(t32) {
      return t32?.typeId === l7.Null;
    }
    static isInt(t32) {
      return t32?.typeId === l7.Int;
    }
    static isFloat(t32) {
      return t32?.typeId === l7.Float;
    }
    static isBinary(t32) {
      return t32?.typeId === l7.Binary;
    }
    static isLargeBinary(t32) {
      return t32?.typeId === l7.LargeBinary;
    }
    static isUtf8(t32) {
      return t32?.typeId === l7.Utf8;
    }
    static isLargeUtf8(t32) {
      return t32?.typeId === l7.LargeUtf8;
    }
    static isBool(t32) {
      return t32?.typeId === l7.Bool;
    }
    static isDecimal(t32) {
      return t32?.typeId === l7.Decimal;
    }
    static isDate(t32) {
      return t32?.typeId === l7.Date;
    }
    static isTime(t32) {
      return t32?.typeId === l7.Time;
    }
    static isTimestamp(t32) {
      return t32?.typeId === l7.Timestamp;
    }
    static isInterval(t32) {
      return t32?.typeId === l7.Interval;
    }
    static isDuration(t32) {
      return t32?.typeId === l7.Duration;
    }
    static isList(t32) {
      return t32?.typeId === l7.List;
    }
    static isStruct(t32) {
      return t32?.typeId === l7.Struct;
    }
    static isUnion(t32) {
      return t32?.typeId === l7.Union;
    }
    static isFixedSizeBinary(t32) {
      return t32?.typeId === l7.FixedSizeBinary;
    }
    static isFixedSizeList(t32) {
      return t32?.typeId === l7.FixedSizeList;
    }
    static isMap(t32) {
      return t32?.typeId === l7.Map;
    }
    static isDictionary(t32) {
      return t32?.typeId === l7.Dictionary;
    }
    static isDenseUnion(t32) {
      return r33.isUnion(t32) && t32.mode === U6.Dense;
    }
    static isSparseUnion(t32) {
      return r33.isUnion(t32) && t32.mode === U6.Sparse;
    }
    constructor(t32) {
      this.typeId = t32;
    }
  };
  Oa3 = Symbol.toStringTag;
  f5[Oa3] = ((r91) => (r91.children = null, r91.ArrayType = Array, r91.OffsetArrayType = Int32Array, r91[Symbol.toStringTag] = "DataType"))(f5.prototype);
  var et4 = class extends f5 {
    constructor() {
      super(l7.Null);
    }
    toString() {
      return "Null";
    }
  };
  Ma3 = Symbol.toStringTag;
  et4[Ma3] = ((r91) => r91[Symbol.toStringTag] = "Null")(et4.prototype);
  var G7 = class extends f5 {
    constructor(t32, e26) {
      super(l7.Int), this.isSigned = t32, this.bitWidth = e26;
    }
    get ArrayType() {
      switch (this.bitWidth) {
        case 8:
          return this.isSigned ? Int8Array : Uint8Array;
        case 16:
          return this.isSigned ? Int16Array : Uint16Array;
        case 32:
          return this.isSigned ? Int32Array : Uint32Array;
        case 64:
          return this.isSigned ? BigInt64Array : BigUint64Array;
      }
      throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);
    }
    toString() {
      return `${this.isSigned ? "I" : "Ui"}nt${this.bitWidth}`;
    }
  };
  La3 = Symbol.toStringTag;
  G7[La3] = ((r91) => (r91.isSigned = null, r91.bitWidth = null, r91[Symbol.toStringTag] = "Int"))(G7.prototype);
  var sr3 = class extends G7 {
    constructor() {
      super(true, 8);
    }
    get ArrayType() {
      return Int8Array;
    }
  };
  var or3 = class extends G7 {
    constructor() {
      super(true, 16);
    }
    get ArrayType() {
      return Int16Array;
    }
  };
  var ct4 = class extends G7 {
    constructor() {
      super(true, 32);
    }
    get ArrayType() {
      return Int32Array;
    }
  };
  var ve3 = class extends G7 {
    constructor() {
      super(true, 64);
    }
    get ArrayType() {
      return BigInt64Array;
    }
  };
  var ar3 = class extends G7 {
    constructor() {
      super(false, 8);
    }
    get ArrayType() {
      return Uint8Array;
    }
  };
  var cr3 = class extends G7 {
    constructor() {
      super(false, 16);
    }
    get ArrayType() {
      return Uint16Array;
    }
  };
  var lr3 = class extends G7 {
    constructor() {
      super(false, 32);
    }
    get ArrayType() {
      return Uint32Array;
    }
  };
  var ur3 = class extends G7 {
    constructor() {
      super(false, 64);
    }
    get ArrayType() {
      return BigUint64Array;
    }
  };
  Object.defineProperty(sr3.prototype, "ArrayType", { value: Int8Array });
  Object.defineProperty(or3.prototype, "ArrayType", { value: Int16Array });
  Object.defineProperty(ct4.prototype, "ArrayType", { value: Int32Array });
  Object.defineProperty(ve3.prototype, "ArrayType", { value: BigInt64Array });
  Object.defineProperty(ar3.prototype, "ArrayType", { value: Uint8Array });
  Object.defineProperty(cr3.prototype, "ArrayType", { value: Uint16Array });
  Object.defineProperty(lr3.prototype, "ArrayType", { value: Uint32Array });
  Object.defineProperty(ur3.prototype, "ArrayType", { value: BigUint64Array });
  var Ft4 = class extends f5 {
    constructor(t32) {
      super(l7.Float), this.precision = t32;
    }
    get ArrayType() {
      switch (this.precision) {
        case R6.HALF:
          return Uint16Array;
        case R6.SINGLE:
          return Float32Array;
        case R6.DOUBLE:
          return Float64Array;
      }
      throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);
    }
    toString() {
      return `Float${this.precision << 5 || 16}`;
    }
  };
  Ua3 = Symbol.toStringTag;
  Ft4[Ua3] = ((r91) => (r91.precision = null, r91[Symbol.toStringTag] = "Float"))(Ft4.prototype);
  var Xi3 = class extends Ft4 {
    constructor() {
      super(R6.HALF);
    }
  };
  var dr3 = class extends Ft4 {
    constructor() {
      super(R6.SINGLE);
    }
  };
  var we4 = class extends Ft4 {
    constructor() {
      super(R6.DOUBLE);
    }
  };
  Object.defineProperty(Xi3.prototype, "ArrayType", { value: Uint16Array });
  Object.defineProperty(dr3.prototype, "ArrayType", { value: Float32Array });
  Object.defineProperty(we4.prototype, "ArrayType", { value: Float64Array });
  var ce3 = class extends f5 {
    constructor() {
      super(l7.Binary);
    }
    toString() {
      return "Binary";
    }
  };
  Na3 = Symbol.toStringTag;
  ce3[Na3] = ((r91) => (r91.ArrayType = Uint8Array, r91[Symbol.toStringTag] = "Binary"))(ce3.prototype);
  var le5 = class extends f5 {
    constructor() {
      super(l7.LargeBinary);
    }
    toString() {
      return "LargeBinary";
    }
  };
  Ea3 = Symbol.toStringTag;
  le5[Ea3] = ((r91) => (r91.ArrayType = Uint8Array, r91.OffsetArrayType = BigInt64Array, r91[Symbol.toStringTag] = "LargeBinary"))(le5.prototype);
  var Ut4 = class extends f5 {
    constructor() {
      super(l7.Utf8);
    }
    toString() {
      return "Utf8";
    }
  };
  Va3 = Symbol.toStringTag;
  Ut4[Va3] = ((r91) => (r91.ArrayType = Uint8Array, r91[Symbol.toStringTag] = "Utf8"))(Ut4.prototype);
  var ue4 = class extends f5 {
    constructor() {
      super(l7.LargeUtf8);
    }
    toString() {
      return "LargeUtf8";
    }
  };
  Ra3 = Symbol.toStringTag;
  ue4[Ra3] = ((r91) => (r91.ArrayType = Uint8Array, r91.OffsetArrayType = BigInt64Array, r91[Symbol.toStringTag] = "LargeUtf8"))(ue4.prototype);
  var Nt4 = class extends f5 {
    constructor() {
      super(l7.Bool);
    }
    toString() {
      return "Bool";
    }
  };
  Ca3 = Symbol.toStringTag;
  Nt4[Ca3] = ((r91) => (r91.ArrayType = Uint8Array, r91[Symbol.toStringTag] = "Bool"))(Nt4.prototype);
  var de3 = class extends f5 {
    constructor(t32, e26, i29 = 128) {
      super(l7.Decimal), this.scale = t32, this.precision = e26, this.bitWidth = i29;
    }
    toString() {
      return `Decimal[${this.precision}e${this.scale > 0 ? "+" : ""}${this.scale}]`;
    }
  };
  ka3 = Symbol.toStringTag;
  de3[ka3] = ((r91) => (r91.scale = null, r91.precision = null, r91.ArrayType = Uint32Array, r91[Symbol.toStringTag] = "Decimal"))(de3.prototype);
  var Et4 = class extends f5 {
    constructor(t32) {
      super(l7.Date), this.unit = t32;
    }
    toString() {
      return `Date${(this.unit + 1) * 32}<${k6[this.unit]}>`;
    }
    get ArrayType() {
      return this.unit === k6.DAY ? Int32Array : BigInt64Array;
    }
  };
  za3 = Symbol.toStringTag;
  Et4[za3] = ((r91) => (r91.unit = null, r91[Symbol.toStringTag] = "Date"))(Et4.prototype);
  var pt4 = class extends f5 {
    constructor(t32, e26) {
      super(l7.Time), this.unit = t32, this.bitWidth = e26;
    }
    toString() {
      return `Time${this.bitWidth}<${h8[this.unit]}>`;
    }
    get ArrayType() {
      switch (this.bitWidth) {
        case 32:
          return Int32Array;
        case 64:
          return BigInt64Array;
      }
      throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);
    }
  };
  Pa3 = Symbol.toStringTag;
  pt4[Pa3] = ((r91) => (r91.unit = null, r91.bitWidth = null, r91[Symbol.toStringTag] = "Time"))(pt4.prototype);
  var mt4 = class extends f5 {
    constructor(t32, e26) {
      super(l7.Timestamp), this.unit = t32, this.timezone = e26;
    }
    toString() {
      return `Timestamp<${h8[this.unit]}${this.timezone ? `, ${this.timezone}` : ""}>`;
    }
  };
  ja3 = Symbol.toStringTag;
  mt4[ja3] = ((r91) => (r91.unit = null, r91.timezone = null, r91.ArrayType = BigInt64Array, r91[Symbol.toStringTag] = "Timestamp"))(mt4.prototype);
  var Vt4 = class extends f5 {
    constructor(t32) {
      super(l7.Interval), this.unit = t32;
    }
    toString() {
      return `Interval<${Y6[this.unit]}>`;
    }
  };
  Wa3 = Symbol.toStringTag;
  Vt4[Wa3] = ((r91) => (r91.unit = null, r91.ArrayType = Int32Array, r91[Symbol.toStringTag] = "Interval"))(Vt4.prototype);
  var yt4 = class extends f5 {
    constructor(t32) {
      super(l7.Duration), this.unit = t32;
    }
    toString() {
      return `Duration<${h8[this.unit]}>`;
    }
  };
  $a3 = Symbol.toStringTag;
  yt4[$a3] = ((r91) => (r91.unit = null, r91.ArrayType = BigInt64Array, r91[Symbol.toStringTag] = "Duration"))(yt4.prototype);
  var gt4 = class extends f5 {
    constructor(t32) {
      super(l7.List), this.children = [t32];
    }
    toString() {
      return `List<${this.valueType}>`;
    }
    get valueType() {
      return this.children[0].type;
    }
    get valueField() {
      return this.children[0];
    }
    get ArrayType() {
      return this.valueType.ArrayType;
    }
  };
  Ya3 = Symbol.toStringTag;
  gt4[Ya3] = ((r91) => (r91.children = null, r91[Symbol.toStringTag] = "List"))(gt4.prototype);
  var C5 = class extends f5 {
    constructor(t32) {
      super(l7.Struct), this.children = t32;
    }
    toString() {
      return `Struct<{${this.children.map((t32) => `${t32.name}:${t32.type}`).join(", ")}}>`;
    }
  };
  Ha3 = Symbol.toStringTag;
  C5[Ha3] = ((r91) => (r91.children = null, r91[Symbol.toStringTag] = "Struct"))(C5.prototype);
  var bt4 = class extends f5 {
    constructor(t32, e26, i29) {
      super(l7.Union), this.mode = t32, this.children = i29, this.typeIds = e26 = Int32Array.from(e26), this.typeIdToChildIndex = e26.reduce((n37, s29, o35) => (n37[s29] = o35) && n37 || n37, /* @__PURE__ */ Object.create(null));
    }
    toString() {
      return `${this[Symbol.toStringTag]}<${this.children.map((t32) => `${t32.type}`).join(" | ")}>`;
    }
  };
  Ja3 = Symbol.toStringTag;
  bt4[Ja3] = ((r91) => (r91.mode = null, r91.typeIds = null, r91.children = null, r91.typeIdToChildIndex = null, r91.ArrayType = Int8Array, r91[Symbol.toStringTag] = "Union"))(bt4.prototype);
  var he3 = class extends f5 {
    constructor(t32) {
      super(l7.FixedSizeBinary), this.byteWidth = t32;
    }
    toString() {
      return `FixedSizeBinary[${this.byteWidth}]`;
    }
  };
  Ga3 = Symbol.toStringTag;
  he3[Ga3] = ((r91) => (r91.byteWidth = null, r91.ArrayType = Uint8Array, r91[Symbol.toStringTag] = "FixedSizeBinary"))(he3.prototype);
  var Rt4 = class extends f5 {
    constructor(t32, e26) {
      super(l7.FixedSizeList), this.listSize = t32, this.children = [e26];
    }
    get valueType() {
      return this.children[0].type;
    }
    get valueField() {
      return this.children[0];
    }
    get ArrayType() {
      return this.valueType.ArrayType;
    }
    toString() {
      return `FixedSizeList[${this.listSize}]<${this.valueType}>`;
    }
  };
  Ka3 = Symbol.toStringTag;
  Rt4[Ka3] = ((r91) => (r91.children = null, r91.listSize = null, r91[Symbol.toStringTag] = "FixedSizeList"))(Rt4.prototype);
  var Ct4 = class extends f5 {
    constructor(t32, e26 = false) {
      var i29, n37, s29;
      if (super(l7.Map), this.children = [t32], this.keysSorted = e26, t32 && (t32.name = "entries", !((i29 = t32?.type) === null || i29 === void 0) && i29.children)) {
        let o35 = (n37 = t32?.type) === null || n37 === void 0 ? void 0 : n37.children[0];
        o35 && (o35.name = "key");
        let a27 = (s29 = t32?.type) === null || s29 === void 0 ? void 0 : s29.children[1];
        a27 && (a27.name = "value");
      }
    }
    get keyType() {
      return this.children[0].type.children[0].type;
    }
    get valueType() {
      return this.children[0].type.children[1].type;
    }
    get childType() {
      return this.children[0].type;
    }
    toString() {
      return `Map<{${this.children[0].type.children.map((t32) => `${t32.name}:${t32.type}`).join(", ")}}>`;
    }
  };
  Za3 = Symbol.toStringTag;
  Ct4[Za3] = ((r91) => (r91.children = null, r91.keysSorted = null, r91[Symbol.toStringTag] = "Map_"))(Ct4.prototype);
  var au = /* @__PURE__ */ ((r91) => () => ++r91)(-1);
  var ot4 = class extends f5 {
    constructor(t32, e26, i29, n37) {
      super(l7.Dictionary), this.indices = e26, this.dictionary = t32, this.isOrdered = n37 || false, this.id = i29 == null ? au() : N6(i29);
    }
    get children() {
      return this.dictionary.children;
    }
    get valueType() {
      return this.dictionary;
    }
    get ArrayType() {
      return this.dictionary.ArrayType;
    }
    toString() {
      return `Dictionary<${this.indices}, ${this.dictionary}>`;
    }
  };
  Xa3 = Symbol.toStringTag;
  ot4[Xa3] = ((r91) => (r91.id = null, r91.indices = null, r91.isOrdered = null, r91.dictionary = null, r91[Symbol.toStringTag] = "Dictionary"))(ot4.prototype);
  function Tt4(r91) {
    let t32 = r91;
    switch (r91.typeId) {
      case l7.Decimal:
        return r91.bitWidth / 32;
      case l7.Interval:
        return 1 + t32.unit;
      case l7.FixedSizeList:
        return t32.listSize;
      case l7.FixedSizeBinary:
        return t32.byteWidth;
      default:
        return 1;
    }
  }
  var g6 = class {
    visitMany(t32, ...e26) {
      return t32.map((i29, n37) => this.visit(i29, ...e26.map((s29) => s29[n37])));
    }
    visit(...t32) {
      return this.getVisitFn(t32[0], false).apply(this, t32);
    }
    getVisitFn(t32, e26 = true) {
      return cu(this, t32, e26);
    }
    getVisitFnByTypeId(t32, e26 = true) {
      return Xr3(this, t32, e26);
    }
    visitNull(t32, ...e26) {
      return null;
    }
    visitBool(t32, ...e26) {
      return null;
    }
    visitInt(t32, ...e26) {
      return null;
    }
    visitFloat(t32, ...e26) {
      return null;
    }
    visitUtf8(t32, ...e26) {
      return null;
    }
    visitLargeUtf8(t32, ...e26) {
      return null;
    }
    visitBinary(t32, ...e26) {
      return null;
    }
    visitLargeBinary(t32, ...e26) {
      return null;
    }
    visitFixedSizeBinary(t32, ...e26) {
      return null;
    }
    visitDate(t32, ...e26) {
      return null;
    }
    visitTimestamp(t32, ...e26) {
      return null;
    }
    visitTime(t32, ...e26) {
      return null;
    }
    visitDecimal(t32, ...e26) {
      return null;
    }
    visitList(t32, ...e26) {
      return null;
    }
    visitStruct(t32, ...e26) {
      return null;
    }
    visitUnion(t32, ...e26) {
      return null;
    }
    visitDictionary(t32, ...e26) {
      return null;
    }
    visitInterval(t32, ...e26) {
      return null;
    }
    visitDuration(t32, ...e26) {
      return null;
    }
    visitFixedSizeList(t32, ...e26) {
      return null;
    }
    visitMap(t32, ...e26) {
      return null;
    }
  };
  function cu(r91, t32, e26 = true) {
    return typeof t32 == "number" ? Xr3(r91, t32, e26) : typeof t32 == "string" && t32 in l7 ? Xr3(r91, l7[t32], e26) : t32 && t32 instanceof f5 ? Xr3(r91, Qa2(t32), e26) : t32?.type && t32.type instanceof f5 ? Xr3(r91, Qa2(t32.type), e26) : Xr3(r91, l7.NONE, e26);
  }
  function Xr3(r91, t32, e26 = true) {
    let i29 = null;
    switch (t32) {
      case l7.Null:
        i29 = r91.visitNull;
        break;
      case l7.Bool:
        i29 = r91.visitBool;
        break;
      case l7.Int:
        i29 = r91.visitInt;
        break;
      case l7.Int8:
        i29 = r91.visitInt8 || r91.visitInt;
        break;
      case l7.Int16:
        i29 = r91.visitInt16 || r91.visitInt;
        break;
      case l7.Int32:
        i29 = r91.visitInt32 || r91.visitInt;
        break;
      case l7.Int64:
        i29 = r91.visitInt64 || r91.visitInt;
        break;
      case l7.Uint8:
        i29 = r91.visitUint8 || r91.visitInt;
        break;
      case l7.Uint16:
        i29 = r91.visitUint16 || r91.visitInt;
        break;
      case l7.Uint32:
        i29 = r91.visitUint32 || r91.visitInt;
        break;
      case l7.Uint64:
        i29 = r91.visitUint64 || r91.visitInt;
        break;
      case l7.Float:
        i29 = r91.visitFloat;
        break;
      case l7.Float16:
        i29 = r91.visitFloat16 || r91.visitFloat;
        break;
      case l7.Float32:
        i29 = r91.visitFloat32 || r91.visitFloat;
        break;
      case l7.Float64:
        i29 = r91.visitFloat64 || r91.visitFloat;
        break;
      case l7.Utf8:
        i29 = r91.visitUtf8;
        break;
      case l7.LargeUtf8:
        i29 = r91.visitLargeUtf8;
        break;
      case l7.Binary:
        i29 = r91.visitBinary;
        break;
      case l7.LargeBinary:
        i29 = r91.visitLargeBinary;
        break;
      case l7.FixedSizeBinary:
        i29 = r91.visitFixedSizeBinary;
        break;
      case l7.Date:
        i29 = r91.visitDate;
        break;
      case l7.DateDay:
        i29 = r91.visitDateDay || r91.visitDate;
        break;
      case l7.DateMillisecond:
        i29 = r91.visitDateMillisecond || r91.visitDate;
        break;
      case l7.Timestamp:
        i29 = r91.visitTimestamp;
        break;
      case l7.TimestampSecond:
        i29 = r91.visitTimestampSecond || r91.visitTimestamp;
        break;
      case l7.TimestampMillisecond:
        i29 = r91.visitTimestampMillisecond || r91.visitTimestamp;
        break;
      case l7.TimestampMicrosecond:
        i29 = r91.visitTimestampMicrosecond || r91.visitTimestamp;
        break;
      case l7.TimestampNanosecond:
        i29 = r91.visitTimestampNanosecond || r91.visitTimestamp;
        break;
      case l7.Time:
        i29 = r91.visitTime;
        break;
      case l7.TimeSecond:
        i29 = r91.visitTimeSecond || r91.visitTime;
        break;
      case l7.TimeMillisecond:
        i29 = r91.visitTimeMillisecond || r91.visitTime;
        break;
      case l7.TimeMicrosecond:
        i29 = r91.visitTimeMicrosecond || r91.visitTime;
        break;
      case l7.TimeNanosecond:
        i29 = r91.visitTimeNanosecond || r91.visitTime;
        break;
      case l7.Decimal:
        i29 = r91.visitDecimal;
        break;
      case l7.List:
        i29 = r91.visitList;
        break;
      case l7.Struct:
        i29 = r91.visitStruct;
        break;
      case l7.Union:
        i29 = r91.visitUnion;
        break;
      case l7.DenseUnion:
        i29 = r91.visitDenseUnion || r91.visitUnion;
        break;
      case l7.SparseUnion:
        i29 = r91.visitSparseUnion || r91.visitUnion;
        break;
      case l7.Dictionary:
        i29 = r91.visitDictionary;
        break;
      case l7.Interval:
        i29 = r91.visitInterval;
        break;
      case l7.IntervalDayTime:
        i29 = r91.visitIntervalDayTime || r91.visitInterval;
        break;
      case l7.IntervalYearMonth:
        i29 = r91.visitIntervalYearMonth || r91.visitInterval;
        break;
      case l7.Duration:
        i29 = r91.visitDuration;
        break;
      case l7.DurationSecond:
        i29 = r91.visitDurationSecond || r91.visitDuration;
        break;
      case l7.DurationMillisecond:
        i29 = r91.visitDurationMillisecond || r91.visitDuration;
        break;
      case l7.DurationMicrosecond:
        i29 = r91.visitDurationMicrosecond || r91.visitDuration;
        break;
      case l7.DurationNanosecond:
        i29 = r91.visitDurationNanosecond || r91.visitDuration;
        break;
      case l7.FixedSizeList:
        i29 = r91.visitFixedSizeList;
        break;
      case l7.Map:
        i29 = r91.visitMap;
        break;
    }
    if (typeof i29 == "function")
      return i29;
    if (!e26)
      return () => null;
    throw new Error(`Unrecognized type '${l7[t32]}'`);
  }
  function Qa2(r91) {
    switch (r91.typeId) {
      case l7.Null:
        return l7.Null;
      case l7.Int: {
        let { bitWidth: t32, isSigned: e26 } = r91;
        switch (t32) {
          case 8:
            return e26 ? l7.Int8 : l7.Uint8;
          case 16:
            return e26 ? l7.Int16 : l7.Uint16;
          case 32:
            return e26 ? l7.Int32 : l7.Uint32;
          case 64:
            return e26 ? l7.Int64 : l7.Uint64;
        }
        return l7.Int;
      }
      case l7.Float:
        switch (r91.precision) {
          case R6.HALF:
            return l7.Float16;
          case R6.SINGLE:
            return l7.Float32;
          case R6.DOUBLE:
            return l7.Float64;
        }
        return l7.Float;
      case l7.Binary:
        return l7.Binary;
      case l7.LargeBinary:
        return l7.LargeBinary;
      case l7.Utf8:
        return l7.Utf8;
      case l7.LargeUtf8:
        return l7.LargeUtf8;
      case l7.Bool:
        return l7.Bool;
      case l7.Decimal:
        return l7.Decimal;
      case l7.Time:
        switch (r91.unit) {
          case h8.SECOND:
            return l7.TimeSecond;
          case h8.MILLISECOND:
            return l7.TimeMillisecond;
          case h8.MICROSECOND:
            return l7.TimeMicrosecond;
          case h8.NANOSECOND:
            return l7.TimeNanosecond;
        }
        return l7.Time;
      case l7.Timestamp:
        switch (r91.unit) {
          case h8.SECOND:
            return l7.TimestampSecond;
          case h8.MILLISECOND:
            return l7.TimestampMillisecond;
          case h8.MICROSECOND:
            return l7.TimestampMicrosecond;
          case h8.NANOSECOND:
            return l7.TimestampNanosecond;
        }
        return l7.Timestamp;
      case l7.Date:
        switch (r91.unit) {
          case k6.DAY:
            return l7.DateDay;
          case k6.MILLISECOND:
            return l7.DateMillisecond;
        }
        return l7.Date;
      case l7.Interval:
        switch (r91.unit) {
          case Y6.DAY_TIME:
            return l7.IntervalDayTime;
          case Y6.YEAR_MONTH:
            return l7.IntervalYearMonth;
        }
        return l7.Interval;
      case l7.Duration:
        switch (r91.unit) {
          case h8.SECOND:
            return l7.DurationSecond;
          case h8.MILLISECOND:
            return l7.DurationMillisecond;
          case h8.MICROSECOND:
            return l7.DurationMicrosecond;
          case h8.NANOSECOND:
            return l7.DurationNanosecond;
        }
        return l7.Duration;
      case l7.Map:
        return l7.Map;
      case l7.List:
        return l7.List;
      case l7.Struct:
        return l7.Struct;
      case l7.Union:
        switch (r91.mode) {
          case U6.Dense:
            return l7.DenseUnion;
          case U6.Sparse:
            return l7.SparseUnion;
        }
        return l7.Union;
      case l7.FixedSizeBinary:
        return l7.FixedSizeBinary;
      case l7.FixedSizeList:
        return l7.FixedSizeList;
      case l7.Dictionary:
        return l7.Dictionary;
    }
    throw new Error(`Unrecognized type '${l7[r91.typeId]}'`);
  }
  g6.prototype.visitInt8 = null;
  g6.prototype.visitInt16 = null;
  g6.prototype.visitInt32 = null;
  g6.prototype.visitInt64 = null;
  g6.prototype.visitUint8 = null;
  g6.prototype.visitUint16 = null;
  g6.prototype.visitUint32 = null;
  g6.prototype.visitUint64 = null;
  g6.prototype.visitFloat16 = null;
  g6.prototype.visitFloat32 = null;
  g6.prototype.visitFloat64 = null;
  g6.prototype.visitDateDay = null;
  g6.prototype.visitDateMillisecond = null;
  g6.prototype.visitTimestampSecond = null;
  g6.prototype.visitTimestampMillisecond = null;
  g6.prototype.visitTimestampMicrosecond = null;
  g6.prototype.visitTimestampNanosecond = null;
  g6.prototype.visitTimeSecond = null;
  g6.prototype.visitTimeMillisecond = null;
  g6.prototype.visitTimeMicrosecond = null;
  g6.prototype.visitTimeNanosecond = null;
  g6.prototype.visitDenseUnion = null;
  g6.prototype.visitSparseUnion = null;
  g6.prototype.visitIntervalDayTime = null;
  g6.prototype.visitIntervalYearMonth = null;
  g6.prototype.visitDuration = null;
  g6.prototype.visitDurationSecond = null;
  g6.prototype.visitDurationMillisecond = null;
  g6.prototype.visitDurationMicrosecond = null;
  g6.prototype.visitDurationNanosecond = null;
  var io3 = {};
  rr3(io3, { float64ToUint16: () => qi3, uint16ToFloat64: () => Yn3 });
  var tc = new Float64Array(1);
  var qr3 = new Uint32Array(tc.buffer);
  function Yn3(r91) {
    let t32 = (r91 & 31744) >> 10, e26 = (r91 & 1023) / 1024, i29 = Math.pow(-1, (r91 & 32768) >> 15);
    switch (t32) {
      case 31:
        return i29 * (e26 ? Number.NaN : 1 / 0);
      case 0:
        return i29 * (e26 ? 6103515625e-14 * e26 : 0);
    }
    return i29 * Math.pow(2, t32 - 15) * (1 + e26);
  }
  function qi3(r91) {
    if (r91 !== r91)
      return 32256;
    tc[0] = r91;
    let t32 = (qr3[1] & 2147483648) >> 16 & 65535, e26 = qr3[1] & 2146435072, i29 = 0;
    return e26 >= 1089470464 ? qr3[0] > 0 ? e26 = 31744 : (e26 = (e26 & 2080374784) >> 16, i29 = (qr3[1] & 1048575) >> 10) : e26 <= 1056964608 ? (i29 = 1048576 + (qr3[1] & 1048575), i29 = 1048576 + (i29 << (e26 >> 20) - 998) >> 21, e26 = 0) : (e26 = e26 - 1056964608 >> 10, i29 = (qr3[1] & 1048575) + 512 >> 10), t32 | e26 | i29 & 65535;
  }
  var I8 = class extends g6 {
  };
  function A6(r91) {
    return (t32, e26, i29) => {
      if (t32.setValid(e26, i29 != null))
        return r91(t32, e26, i29);
    };
  }
  var lu = (r91, t32, e26) => {
    r91[t32] = Math.floor(e26 / 864e5);
  };
  var ec = (r91, t32, e26, i29) => {
    if (e26 + 1 < t32.length) {
      let n37 = N6(t32[e26]), s29 = N6(t32[e26 + 1]);
      r91.set(i29.subarray(0, s29 - n37), n37);
    }
  };
  var uu = ({ offset: r91, values: t32 }, e26, i29) => {
    let n37 = r91 + e26;
    i29 ? t32[n37 >> 3] |= 1 << n37 % 8 : t32[n37 >> 3] &= ~(1 << n37 % 8);
  };
  var Ie4 = ({ values: r91 }, t32, e26) => {
    r91[t32] = e26;
  };
  var no3 = ({ values: r91 }, t32, e26) => {
    r91[t32] = e26;
  };
  var rc = ({ values: r91 }, t32, e26) => {
    r91[t32] = qi3(e26);
  };
  var du = (r91, t32, e26) => {
    switch (r91.type.precision) {
      case R6.HALF:
        return rc(r91, t32, e26);
      case R6.SINGLE:
      case R6.DOUBLE:
        return no3(r91, t32, e26);
    }
  };
  var Hn3 = ({ values: r91 }, t32, e26) => {
    lu(r91, t32, e26.valueOf());
  };
  var Jn3 = ({ values: r91 }, t32, e26) => {
    r91[t32] = BigInt(e26);
  };
  var so3 = ({ stride: r91, values: t32 }, e26, i29) => {
    t32.set(i29.subarray(0, r91), r91 * e26);
  };
  var ic = ({ values: r91, valueOffsets: t32 }, e26, i29) => ec(r91, t32, e26, i29);
  var nc = ({ values: r91, valueOffsets: t32 }, e26, i29) => ec(r91, t32, e26, ie5(i29));
  var oo3 = (r91, t32, e26) => {
    r91.type.unit === k6.DAY ? Hn3(r91, t32, e26) : Jn3(r91, t32, e26);
  };
  var Gn3 = ({ values: r91 }, t32, e26) => {
    r91[t32] = BigInt(e26 / 1e3);
  };
  var Kn2 = ({ values: r91 }, t32, e26) => {
    r91[t32] = BigInt(e26);
  };
  var Zn3 = ({ values: r91 }, t32, e26) => {
    r91[t32] = BigInt(e26 * 1e3);
  };
  var Xn3 = ({ values: r91 }, t32, e26) => {
    r91[t32] = BigInt(e26 * 1e6);
  };
  var ao3 = (r91, t32, e26) => {
    switch (r91.type.unit) {
      case h8.SECOND:
        return Gn3(r91, t32, e26);
      case h8.MILLISECOND:
        return Kn2(r91, t32, e26);
      case h8.MICROSECOND:
        return Zn3(r91, t32, e26);
      case h8.NANOSECOND:
        return Xn3(r91, t32, e26);
    }
  };
  var qn3 = ({ values: r91 }, t32, e26) => {
    r91[t32] = e26;
  };
  var Qn3 = ({ values: r91 }, t32, e26) => {
    r91[t32] = e26;
  };
  var ts3 = ({ values: r91 }, t32, e26) => {
    r91[t32] = e26;
  };
  var es3 = ({ values: r91 }, t32, e26) => {
    r91[t32] = e26;
  };
  var co3 = (r91, t32, e26) => {
    switch (r91.type.unit) {
      case h8.SECOND:
        return qn3(r91, t32, e26);
      case h8.MILLISECOND:
        return Qn3(r91, t32, e26);
      case h8.MICROSECOND:
        return ts3(r91, t32, e26);
      case h8.NANOSECOND:
        return es3(r91, t32, e26);
    }
  };
  var lo3 = ({ values: r91, stride: t32 }, e26, i29) => {
    r91.set(i29.subarray(0, t32), t32 * e26);
  };
  var hu = (r91, t32, e26) => {
    let i29 = r91.children[0], n37 = r91.valueOffsets, s29 = it5.getVisitFn(i29);
    if (Array.isArray(e26))
      for (let o35 = -1, a27 = n37[t32], c30 = n37[t32 + 1]; a27 < c30; )
        s29(i29, a27++, e26[++o35]);
    else
      for (let o35 = -1, a27 = n37[t32], c30 = n37[t32 + 1]; a27 < c30; )
        s29(i29, a27++, e26.get(++o35));
  };
  var fu = (r91, t32, e26) => {
    let i29 = r91.children[0], { valueOffsets: n37 } = r91, s29 = it5.getVisitFn(i29), { [t32]: o35, [t32 + 1]: a27 } = n37, c30 = e26 instanceof Map ? e26.entries() : Object.entries(e26);
    for (let u30 of c30)
      if (s29(i29, o35, u30), ++o35 >= a27)
        break;
  };
  var pu = (r91, t32) => (e26, i29, n37, s29) => i29 && e26(i29, r91, t32[s29]);
  var mu = (r91, t32) => (e26, i29, n37, s29) => i29 && e26(i29, r91, t32.get(s29));
  var yu = (r91, t32) => (e26, i29, n37, s29) => i29 && e26(i29, r91, t32.get(n37.name));
  var gu = (r91, t32) => (e26, i29, n37, s29) => i29 && e26(i29, r91, t32[n37.name]);
  var bu = (r91, t32, e26) => {
    let i29 = r91.type.children.map((s29) => it5.getVisitFn(s29.type)), n37 = e26 instanceof Map ? yu(t32, e26) : e26 instanceof m5 ? mu(t32, e26) : Array.isArray(e26) ? pu(t32, e26) : gu(t32, e26);
    r91.type.children.forEach((s29, o35) => n37(i29[o35], r91.children[o35], s29, o35));
  };
  var _u = (r91, t32, e26) => {
    r91.type.mode === U6.Dense ? sc(r91, t32, e26) : oc(r91, t32, e26);
  };
  var sc = (r91, t32, e26) => {
    let i29 = r91.type.typeIdToChildIndex[r91.typeIds[t32]], n37 = r91.children[i29];
    it5.visit(n37, r91.valueOffsets[t32], e26);
  };
  var oc = (r91, t32, e26) => {
    let i29 = r91.type.typeIdToChildIndex[r91.typeIds[t32]], n37 = r91.children[i29];
    it5.visit(n37, t32, e26);
  };
  var vu = (r91, t32, e26) => {
    var i29;
    (i29 = r91.dictionary) === null || i29 === void 0 || i29.set(r91.values[t32], e26);
  };
  var uo3 = (r91, t32, e26) => {
    r91.type.unit === Y6.DAY_TIME ? rs3(r91, t32, e26) : is3(r91, t32, e26);
  };
  var rs3 = ({ values: r91 }, t32, e26) => {
    r91.set(e26.subarray(0, 2), 2 * t32);
  };
  var is3 = ({ values: r91 }, t32, e26) => {
    r91[t32] = e26[0] * 12 + e26[1] % 12;
  };
  var ns3 = ({ values: r91 }, t32, e26) => {
    r91[t32] = e26;
  };
  var ss3 = ({ values: r91 }, t32, e26) => {
    r91[t32] = e26;
  };
  var os3 = ({ values: r91 }, t32, e26) => {
    r91[t32] = e26;
  };
  var as3 = ({ values: r91 }, t32, e26) => {
    r91[t32] = e26;
  };
  var ho3 = (r91, t32, e26) => {
    switch (r91.type.unit) {
      case h8.SECOND:
        return ns3(r91, t32, e26);
      case h8.MILLISECOND:
        return ss3(r91, t32, e26);
      case h8.MICROSECOND:
        return os3(r91, t32, e26);
      case h8.NANOSECOND:
        return as3(r91, t32, e26);
    }
  };
  var wu = (r91, t32, e26) => {
    let { stride: i29 } = r91, n37 = r91.children[0], s29 = it5.getVisitFn(n37);
    if (Array.isArray(e26))
      for (let o35 = -1, a27 = t32 * i29; ++o35 < i29; )
        s29(n37, a27 + o35, e26[o35]);
    else
      for (let o35 = -1, a27 = t32 * i29; ++o35 < i29; )
        s29(n37, a27 + o35, e26.get(o35));
  };
  I8.prototype.visitBool = A6(uu);
  I8.prototype.visitInt = A6(Ie4);
  I8.prototype.visitInt8 = A6(Ie4);
  I8.prototype.visitInt16 = A6(Ie4);
  I8.prototype.visitInt32 = A6(Ie4);
  I8.prototype.visitInt64 = A6(Ie4);
  I8.prototype.visitUint8 = A6(Ie4);
  I8.prototype.visitUint16 = A6(Ie4);
  I8.prototype.visitUint32 = A6(Ie4);
  I8.prototype.visitUint64 = A6(Ie4);
  I8.prototype.visitFloat = A6(du);
  I8.prototype.visitFloat16 = A6(rc);
  I8.prototype.visitFloat32 = A6(no3);
  I8.prototype.visitFloat64 = A6(no3);
  I8.prototype.visitUtf8 = A6(nc);
  I8.prototype.visitLargeUtf8 = A6(nc);
  I8.prototype.visitBinary = A6(ic);
  I8.prototype.visitLargeBinary = A6(ic);
  I8.prototype.visitFixedSizeBinary = A6(so3);
  I8.prototype.visitDate = A6(oo3);
  I8.prototype.visitDateDay = A6(Hn3);
  I8.prototype.visitDateMillisecond = A6(Jn3);
  I8.prototype.visitTimestamp = A6(ao3);
  I8.prototype.visitTimestampSecond = A6(Gn3);
  I8.prototype.visitTimestampMillisecond = A6(Kn2);
  I8.prototype.visitTimestampMicrosecond = A6(Zn3);
  I8.prototype.visitTimestampNanosecond = A6(Xn3);
  I8.prototype.visitTime = A6(co3);
  I8.prototype.visitTimeSecond = A6(qn3);
  I8.prototype.visitTimeMillisecond = A6(Qn3);
  I8.prototype.visitTimeMicrosecond = A6(ts3);
  I8.prototype.visitTimeNanosecond = A6(es3);
  I8.prototype.visitDecimal = A6(lo3);
  I8.prototype.visitList = A6(hu);
  I8.prototype.visitStruct = A6(bu);
  I8.prototype.visitUnion = A6(_u);
  I8.prototype.visitDenseUnion = A6(sc);
  I8.prototype.visitSparseUnion = A6(oc);
  I8.prototype.visitDictionary = A6(vu);
  I8.prototype.visitInterval = A6(uo3);
  I8.prototype.visitIntervalDayTime = A6(rs3);
  I8.prototype.visitIntervalYearMonth = A6(is3);
  I8.prototype.visitDuration = A6(ho3);
  I8.prototype.visitDurationSecond = A6(ns3);
  I8.prototype.visitDurationMillisecond = A6(ss3);
  I8.prototype.visitDurationMicrosecond = A6(os3);
  I8.prototype.visitDurationNanosecond = A6(as3);
  I8.prototype.visitFixedSizeList = A6(wu);
  I8.prototype.visitMap = A6(fu);
  var it5 = new I8();
  var Ht4 = Symbol.for("parent");
  var Qr3 = Symbol.for("rowIndex");
  var Se5 = class {
    constructor(t32, e26) {
      return this[Ht4] = t32, this[Qr3] = e26, new Proxy(this, new po3());
    }
    toArray() {
      return Object.values(this.toJSON());
    }
    toJSON() {
      let t32 = this[Qr3], e26 = this[Ht4], i29 = e26.type.children, n37 = {};
      for (let s29 = -1, o35 = i29.length; ++s29 < o35; )
        n37[i29[s29].name] = K6.visit(e26.children[s29], t32);
      return n37;
    }
    toString() {
      return `{${[...this].map(([t32, e26]) => `${$t4(t32)}: ${$t4(e26)}`).join(", ")}}`;
    }
    [Symbol.for("nodejs.util.inspect.custom")]() {
      return this.toString();
    }
    [Symbol.iterator]() {
      return new fo3(this[Ht4], this[Qr3]);
    }
  };
  var fo3 = class {
    constructor(t32, e26) {
      this.childIndex = 0, this.children = t32.children, this.rowIndex = e26, this.childFields = t32.type.children, this.numChildren = this.childFields.length;
    }
    [Symbol.iterator]() {
      return this;
    }
    next() {
      let t32 = this.childIndex;
      return t32 < this.numChildren ? (this.childIndex = t32 + 1, { done: false, value: [this.childFields[t32].name, K6.visit(this.children[t32], this.rowIndex)] }) : { done: true, value: null };
    }
  };
  Object.defineProperties(Se5.prototype, { [Symbol.toStringTag]: { enumerable: false, configurable: false, value: "Row" }, [Ht4]: { writable: true, enumerable: false, configurable: false, value: null }, [Qr3]: { writable: true, enumerable: false, configurable: false, value: -1 } });
  var po3 = class {
    isExtensible() {
      return false;
    }
    deleteProperty() {
      return false;
    }
    preventExtensions() {
      return true;
    }
    ownKeys(t32) {
      return t32[Ht4].type.children.map((e26) => e26.name);
    }
    has(t32, e26) {
      return t32[Ht4].type.children.findIndex((i29) => i29.name === e26) !== -1;
    }
    getOwnPropertyDescriptor(t32, e26) {
      if (t32[Ht4].type.children.findIndex((i29) => i29.name === e26) !== -1)
        return { writable: true, enumerable: true, configurable: true };
    }
    get(t32, e26) {
      if (Reflect.has(t32, e26))
        return t32[e26];
      let i29 = t32[Ht4].type.children.findIndex((n37) => n37.name === e26);
      if (i29 !== -1) {
        let n37 = K6.visit(t32[Ht4].children[i29], t32[Qr3]);
        return Reflect.set(t32, e26, n37), n37;
      }
    }
    set(t32, e26, i29) {
      let n37 = t32[Ht4].type.children.findIndex((s29) => s29.name === e26);
      return n37 !== -1 ? (it5.visit(t32[Ht4].children[n37], t32[Qr3], i29), Reflect.set(t32, e26, i29)) : Reflect.has(t32, e26) || typeof e26 == "symbol" ? Reflect.set(t32, e26, i29) : false;
    }
  };
  var b6 = class extends g6 {
  };
  function B6(r91) {
    return (t32, e26) => t32.getValid(e26) ? r91(t32, e26) : null;
  }
  var Iu = (r91, t32) => 864e5 * r91[t32];
  var Su = (r91, t32) => null;
  var ac = (r91, t32, e26) => {
    if (e26 + 1 >= t32.length)
      return null;
    let i29 = N6(t32[e26]), n37 = N6(t32[e26 + 1]);
    return r91.subarray(i29, n37);
  };
  var Bu = ({ offset: r91, values: t32 }, e26) => {
    let i29 = r91 + e26;
    return (t32[i29 >> 3] & 1 << i29 % 8) !== 0;
  };
  var cc = ({ values: r91 }, t32) => Iu(r91, t32);
  var lc = ({ values: r91 }, t32) => N6(r91[t32]);
  var je3 = ({ stride: r91, values: t32 }, e26) => t32[r91 * e26];
  var Du = ({ stride: r91, values: t32 }, e26) => Yn3(t32[r91 * e26]);
  var uc = ({ values: r91 }, t32) => r91[t32];
  var xu = ({ stride: r91, values: t32 }, e26) => t32.subarray(r91 * e26, r91 * (e26 + 1));
  var dc = ({ values: r91, valueOffsets: t32 }, e26) => ac(r91, t32, e26);
  var hc = ({ values: r91, valueOffsets: t32 }, e26) => {
    let i29 = ac(r91, t32, e26);
    return i29 !== null ? Vi3(i29) : null;
  };
  var Au = ({ values: r91 }, t32) => r91[t32];
  var Fu = ({ type: r91, values: t32 }, e26) => r91.precision !== R6.HALF ? t32[e26] : Yn3(t32[e26]);
  var Tu = (r91, t32) => r91.type.unit === k6.DAY ? cc(r91, t32) : lc(r91, t32);
  var fc = ({ values: r91 }, t32) => 1e3 * N6(r91[t32]);
  var pc = ({ values: r91 }, t32) => N6(r91[t32]);
  var mc = ({ values: r91 }, t32) => Qs3(r91[t32], BigInt(1e3));
  var yc = ({ values: r91 }, t32) => Qs3(r91[t32], BigInt(1e6));
  var Ou = (r91, t32) => {
    switch (r91.type.unit) {
      case h8.SECOND:
        return fc(r91, t32);
      case h8.MILLISECOND:
        return pc(r91, t32);
      case h8.MICROSECOND:
        return mc(r91, t32);
      case h8.NANOSECOND:
        return yc(r91, t32);
    }
  };
  var gc = ({ values: r91 }, t32) => r91[t32];
  var bc = ({ values: r91 }, t32) => r91[t32];
  var _c = ({ values: r91 }, t32) => r91[t32];
  var vc = ({ values: r91 }, t32) => r91[t32];
  var Mu = (r91, t32) => {
    switch (r91.type.unit) {
      case h8.SECOND:
        return gc(r91, t32);
      case h8.MILLISECOND:
        return bc(r91, t32);
      case h8.MICROSECOND:
        return _c(r91, t32);
      case h8.NANOSECOND:
        return vc(r91, t32);
    }
  };
  var Lu = ({ values: r91, stride: t32 }, e26) => nr3.decimal(r91.subarray(t32 * e26, t32 * (e26 + 1)));
  var Uu = (r91, t32) => {
    let { valueOffsets: e26, stride: i29, children: n37 } = r91, { [t32 * i29]: s29, [t32 * i29 + 1]: o35 } = e26, c30 = n37[0].slice(s29, o35 - s29);
    return new m5([c30]);
  };
  var Nu = (r91, t32) => {
    let { valueOffsets: e26, children: i29 } = r91, { [t32]: n37, [t32 + 1]: s29 } = e26, o35 = i29[0];
    return new Jt3(o35.slice(n37, s29 - n37));
  };
  var Eu = (r91, t32) => new Se5(r91, t32);
  var Vu = (r91, t32) => r91.type.mode === U6.Dense ? wc(r91, t32) : Ic(r91, t32);
  var wc = (r91, t32) => {
    let e26 = r91.type.typeIdToChildIndex[r91.typeIds[t32]], i29 = r91.children[e26];
    return K6.visit(i29, r91.valueOffsets[t32]);
  };
  var Ic = (r91, t32) => {
    let e26 = r91.type.typeIdToChildIndex[r91.typeIds[t32]], i29 = r91.children[e26];
    return K6.visit(i29, t32);
  };
  var Ru = (r91, t32) => {
    var e26;
    return (e26 = r91.dictionary) === null || e26 === void 0 ? void 0 : e26.get(r91.values[t32]);
  };
  var Cu = (r91, t32) => r91.type.unit === Y6.DAY_TIME ? Sc(r91, t32) : Bc(r91, t32);
  var Sc = ({ values: r91 }, t32) => r91.subarray(2 * t32, 2 * (t32 + 1));
  var Bc = ({ values: r91 }, t32) => {
    let e26 = r91[t32], i29 = new Int32Array(2);
    return i29[0] = Math.trunc(e26 / 12), i29[1] = Math.trunc(e26 % 12), i29;
  };
  var Dc = ({ values: r91 }, t32) => r91[t32];
  var xc = ({ values: r91 }, t32) => r91[t32];
  var Ac = ({ values: r91 }, t32) => r91[t32];
  var Fc = ({ values: r91 }, t32) => r91[t32];
  var ku = (r91, t32) => {
    switch (r91.type.unit) {
      case h8.SECOND:
        return Dc(r91, t32);
      case h8.MILLISECOND:
        return xc(r91, t32);
      case h8.MICROSECOND:
        return Ac(r91, t32);
      case h8.NANOSECOND:
        return Fc(r91, t32);
    }
  };
  var zu = (r91, t32) => {
    let { stride: e26, children: i29 } = r91, s29 = i29[0].slice(t32 * e26, e26);
    return new m5([s29]);
  };
  b6.prototype.visitNull = B6(Su);
  b6.prototype.visitBool = B6(Bu);
  b6.prototype.visitInt = B6(Au);
  b6.prototype.visitInt8 = B6(je3);
  b6.prototype.visitInt16 = B6(je3);
  b6.prototype.visitInt32 = B6(je3);
  b6.prototype.visitInt64 = B6(uc);
  b6.prototype.visitUint8 = B6(je3);
  b6.prototype.visitUint16 = B6(je3);
  b6.prototype.visitUint32 = B6(je3);
  b6.prototype.visitUint64 = B6(uc);
  b6.prototype.visitFloat = B6(Fu);
  b6.prototype.visitFloat16 = B6(Du);
  b6.prototype.visitFloat32 = B6(je3);
  b6.prototype.visitFloat64 = B6(je3);
  b6.prototype.visitUtf8 = B6(hc);
  b6.prototype.visitLargeUtf8 = B6(hc);
  b6.prototype.visitBinary = B6(dc);
  b6.prototype.visitLargeBinary = B6(dc);
  b6.prototype.visitFixedSizeBinary = B6(xu);
  b6.prototype.visitDate = B6(Tu);
  b6.prototype.visitDateDay = B6(cc);
  b6.prototype.visitDateMillisecond = B6(lc);
  b6.prototype.visitTimestamp = B6(Ou);
  b6.prototype.visitTimestampSecond = B6(fc);
  b6.prototype.visitTimestampMillisecond = B6(pc);
  b6.prototype.visitTimestampMicrosecond = B6(mc);
  b6.prototype.visitTimestampNanosecond = B6(yc);
  b6.prototype.visitTime = B6(Mu);
  b6.prototype.visitTimeSecond = B6(gc);
  b6.prototype.visitTimeMillisecond = B6(bc);
  b6.prototype.visitTimeMicrosecond = B6(_c);
  b6.prototype.visitTimeNanosecond = B6(vc);
  b6.prototype.visitDecimal = B6(Lu);
  b6.prototype.visitList = B6(Uu);
  b6.prototype.visitStruct = B6(Eu);
  b6.prototype.visitUnion = B6(Vu);
  b6.prototype.visitDenseUnion = B6(wc);
  b6.prototype.visitSparseUnion = B6(Ic);
  b6.prototype.visitDictionary = B6(Ru);
  b6.prototype.visitInterval = B6(Cu);
  b6.prototype.visitIntervalDayTime = B6(Sc);
  b6.prototype.visitIntervalYearMonth = B6(Bc);
  b6.prototype.visitDuration = B6(ku);
  b6.prototype.visitDurationSecond = B6(Dc);
  b6.prototype.visitDurationMillisecond = B6(xc);
  b6.prototype.visitDurationMicrosecond = B6(Ac);
  b6.prototype.visitDurationNanosecond = B6(Fc);
  b6.prototype.visitFixedSizeList = B6(zu);
  b6.prototype.visitMap = B6(Nu);
  var K6 = new b6();
  var We2 = Symbol.for("keys");
  var ei2 = Symbol.for("vals");
  var ti2 = Symbol.for("kKeysAsStrings");
  var mo3 = Symbol.for("_kKeysAsStrings");
  var Jt3 = class {
    constructor(t32) {
      return this[We2] = new m5([t32.children[0]]).memoize(), this[ei2] = t32.children[1], new Proxy(this, new go3());
    }
    get [ti2]() {
      return this[mo3] || (this[mo3] = Array.from(this[We2].toArray(), String));
    }
    [Symbol.iterator]() {
      return new yo3(this[We2], this[ei2]);
    }
    get size() {
      return this[We2].length;
    }
    toArray() {
      return Object.values(this.toJSON());
    }
    toJSON() {
      let t32 = this[We2], e26 = this[ei2], i29 = {};
      for (let n37 = -1, s29 = t32.length; ++n37 < s29; )
        i29[t32.get(n37)] = K6.visit(e26, n37);
      return i29;
    }
    toString() {
      return `{${[...this].map(([t32, e26]) => `${$t4(t32)}: ${$t4(e26)}`).join(", ")}}`;
    }
    [Symbol.for("nodejs.util.inspect.custom")]() {
      return this.toString();
    }
  };
  var yo3 = class {
    constructor(t32, e26) {
      this.keys = t32, this.vals = e26, this.keyIndex = 0, this.numKeys = t32.length;
    }
    [Symbol.iterator]() {
      return this;
    }
    next() {
      let t32 = this.keyIndex;
      return t32 === this.numKeys ? { done: true, value: null } : (this.keyIndex++, { done: false, value: [this.keys.get(t32), K6.visit(this.vals, t32)] });
    }
  };
  var go3 = class {
    isExtensible() {
      return false;
    }
    deleteProperty() {
      return false;
    }
    preventExtensions() {
      return true;
    }
    ownKeys(t32) {
      return t32[ti2];
    }
    has(t32, e26) {
      return t32[ti2].includes(e26);
    }
    getOwnPropertyDescriptor(t32, e26) {
      if (t32[ti2].indexOf(e26) !== -1)
        return { writable: true, enumerable: true, configurable: true };
    }
    get(t32, e26) {
      if (Reflect.has(t32, e26))
        return t32[e26];
      let i29 = t32[ti2].indexOf(e26);
      if (i29 !== -1) {
        let n37 = K6.visit(Reflect.get(t32, ei2), i29);
        return Reflect.set(t32, e26, n37), n37;
      }
    }
    set(t32, e26, i29) {
      let n37 = t32[ti2].indexOf(e26);
      return n37 !== -1 ? (it5.visit(Reflect.get(t32, ei2), n37, i29), Reflect.set(t32, e26, i29)) : Reflect.has(t32, e26) ? Reflect.set(t32, e26, i29) : false;
    }
  };
  Object.defineProperties(Jt3.prototype, { [Symbol.toStringTag]: { enumerable: false, configurable: false, value: "Row" }, [We2]: { writable: true, enumerable: false, configurable: false, value: null }, [ei2]: { writable: true, enumerable: false, configurable: false, value: null }, [mo3]: { writable: true, enumerable: false, configurable: false, value: null } });
  var Tc;
  function Qi3(r91, t32, e26, i29) {
    let { length: n37 = 0 } = r91, s29 = typeof t32 != "number" ? 0 : t32, o35 = typeof e26 != "number" ? n37 : e26;
    return s29 < 0 && (s29 = (s29 % n37 + n37) % n37), o35 < 0 && (o35 = (o35 % n37 + n37) % n37), o35 < s29 && (Tc = s29, s29 = o35, o35 = Tc), o35 > n37 && (o35 = n37), i29 ? i29(r91, s29, o35) : [s29, o35];
  }
  var hr3 = (r91, t32) => r91 < 0 ? t32 + r91 : r91;
  var Oc = (r91) => r91 !== r91;
  function $e5(r91) {
    if (typeof r91 !== "object" || r91 === null)
      return Oc(r91) ? Oc : (e26) => e26 === r91;
    if (r91 instanceof Date) {
      let e26 = r91.valueOf();
      return (i29) => i29 instanceof Date ? i29.valueOf() === e26 : false;
    }
    return ArrayBuffer.isView(r91) ? (e26) => e26 ? Js3(r91, e26) : false : r91 instanceof Map ? ju(r91) : Array.isArray(r91) ? Pu(r91) : r91 instanceof m5 ? Wu(r91) : $u(r91, true);
  }
  function Pu(r91) {
    let t32 = [];
    for (let e26 = -1, i29 = r91.length; ++e26 < i29; )
      t32[e26] = $e5(r91[e26]);
    return cs3(t32);
  }
  function ju(r91) {
    let t32 = -1, e26 = [];
    for (let i29 of r91.values())
      e26[++t32] = $e5(i29);
    return cs3(e26);
  }
  function Wu(r91) {
    let t32 = [];
    for (let e26 = -1, i29 = r91.length; ++e26 < i29; )
      t32[e26] = $e5(r91.get(e26));
    return cs3(t32);
  }
  function $u(r91, t32 = false) {
    let e26 = Object.keys(r91);
    if (!t32 && e26.length === 0)
      return () => false;
    let i29 = [];
    for (let n37 = -1, s29 = e26.length; ++n37 < s29; )
      i29[n37] = $e5(r91[e26[n37]]);
    return cs3(i29, e26);
  }
  function cs3(r91, t32) {
    return (e26) => {
      if (!e26 || typeof e26 != "object")
        return false;
      switch (e26.constructor) {
        case Array:
          return Yu(r91, e26);
        case Map:
          return Mc(r91, e26, e26.keys());
        case Jt3:
        case Se5:
        case Object:
        case void 0:
          return Mc(r91, e26, t32 || Object.keys(e26));
      }
      return e26 instanceof m5 ? Hu(r91, e26) : false;
    };
  }
  function Yu(r91, t32) {
    let e26 = r91.length;
    if (t32.length !== e26)
      return false;
    for (let i29 = -1; ++i29 < e26; )
      if (!r91[i29](t32[i29]))
        return false;
    return true;
  }
  function Hu(r91, t32) {
    let e26 = r91.length;
    if (t32.length !== e26)
      return false;
    for (let i29 = -1; ++i29 < e26; )
      if (!r91[i29](t32.get(i29)))
        return false;
    return true;
  }
  function Mc(r91, t32, e26) {
    let i29 = e26[Symbol.iterator](), n37 = t32 instanceof Map ? t32.keys() : Object.keys(t32)[Symbol.iterator](), s29 = t32 instanceof Map ? t32.values() : Object.values(t32)[Symbol.iterator](), o35 = 0, a27 = r91.length, c30 = s29.next(), u30 = i29.next(), d25 = n37.next();
    for (; o35 < a27 && !u30.done && !d25.done && !c30.done && !(u30.value !== d25.value || !r91[o35](c30.value)); ++o35, u30 = i29.next(), d25 = n37.next(), c30 = s29.next())
      ;
    return o35 === a27 && u30.done && d25.done && c30.done ? true : (i29.return && i29.return(), n37.return && n37.return(), s29.return && s29.return(), false);
  }
  var _o3 = {};
  rr3(_o3, { BitIterator: () => fe3, getBit: () => us3, getBool: () => ri2, packBools: () => pr3, popcnt_array: () => Lc, popcnt_bit_range: () => tn3, popcnt_uint32: () => ls3, setBool: () => Ju, truncateBitmap: () => fr3 });
  function ri2(r91, t32, e26, i29) {
    return (e26 & 1 << i29) !== 0;
  }
  function us3(r91, t32, e26, i29) {
    return (e26 & 1 << i29) >> i29;
  }
  function Ju(r91, t32, e26) {
    return e26 ? !!(r91[t32 >> 3] |= 1 << t32 % 8) || true : !(r91[t32 >> 3] &= ~(1 << t32 % 8)) && false;
  }
  function fr3(r91, t32, e26) {
    let i29 = e26.byteLength + 7 & -8;
    if (r91 > 0 || e26.byteLength < i29) {
      let n37 = new Uint8Array(i29);
      return n37.set(r91 % 8 === 0 ? e26.subarray(r91 >> 3) : pr3(new fe3(e26, r91, t32, null, ri2)).subarray(0, i29)), n37;
    }
    return e26;
  }
  function pr3(r91) {
    let t32 = [], e26 = 0, i29 = 0, n37 = 0;
    for (let o35 of r91)
      o35 && (n37 |= 1 << i29), ++i29 === 8 && (t32[e26++] = n37, n37 = i29 = 0);
    (e26 === 0 || i29 > 0) && (t32[e26++] = n37);
    let s29 = new Uint8Array(t32.length + 7 & -8);
    return s29.set(t32), s29;
  }
  var fe3 = class {
    constructor(t32, e26, i29, n37, s29) {
      this.bytes = t32, this.length = i29, this.context = n37, this.get = s29, this.bit = e26 % 8, this.byteIndex = e26 >> 3, this.byte = t32[this.byteIndex++], this.index = 0;
    }
    next() {
      return this.index < this.length ? (this.bit === 8 && (this.bit = 0, this.byte = this.bytes[this.byteIndex++]), { value: this.get(this.context, this.index++, this.byte, this.bit++) }) : { done: true, value: null };
    }
    [Symbol.iterator]() {
      return this;
    }
  };
  function tn3(r91, t32, e26) {
    if (e26 - t32 <= 0)
      return 0;
    if (e26 - t32 < 8) {
      let s29 = 0;
      for (let o35 of new fe3(r91, t32, e26 - t32, r91, us3))
        s29 += o35;
      return s29;
    }
    let i29 = e26 >> 3 << 3, n37 = t32 + (t32 % 8 === 0 ? 0 : 8 - t32 % 8);
    return tn3(r91, t32, n37) + tn3(r91, i29, e26) + Lc(r91, n37 >> 3, i29 - n37 >> 3);
  }
  function Lc(r91, t32, e26) {
    let i29 = 0, n37 = Math.trunc(t32), s29 = new DataView(r91.buffer, r91.byteOffset, r91.byteLength), o35 = e26 === void 0 ? r91.byteLength : n37 + e26;
    for (; o35 - n37 >= 4; )
      i29 += ls3(s29.getUint32(n37)), n37 += 4;
    for (; o35 - n37 >= 2; )
      i29 += ls3(s29.getUint16(n37)), n37 += 2;
    for (; o35 - n37 >= 1; )
      i29 += ls3(s29.getUint8(n37)), n37 += 1;
    return i29;
  }
  function ls3(r91) {
    let t32 = Math.trunc(r91);
    return t32 = t32 - (t32 >>> 1 & 1431655765), t32 = (t32 & 858993459) + (t32 >>> 2 & 858993459), (t32 + (t32 >>> 4) & 252645135) * 16843009 >>> 24;
  }
  var Gu = -1;
  var L6 = class r34 {
    get typeId() {
      return this.type.typeId;
    }
    get ArrayType() {
      return this.type.ArrayType;
    }
    get buffers() {
      return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds];
    }
    get nullable() {
      if (this._nullCount !== 0) {
        let { type: t32 } = this;
        return f5.isSparseUnion(t32) ? this.children.some((e26) => e26.nullable) : f5.isDenseUnion(t32) ? this.children.some((e26) => e26.nullable) : this.nullBitmap && this.nullBitmap.byteLength > 0;
      }
      return true;
    }
    get byteLength() {
      let t32 = 0, { valueOffsets: e26, values: i29, nullBitmap: n37, typeIds: s29 } = this;
      return e26 && (t32 += e26.byteLength), i29 && (t32 += i29.byteLength), n37 && (t32 += n37.byteLength), s29 && (t32 += s29.byteLength), this.children.reduce((o35, a27) => o35 + a27.byteLength, t32);
    }
    get nullCount() {
      if (f5.isUnion(this.type))
        return this.children.reduce((i29, n37) => i29 + n37.nullCount, 0);
      let t32 = this._nullCount, e26;
      return t32 <= Gu && (e26 = this.nullBitmap) && (this._nullCount = t32 = e26.length === 0 ? 0 : this.length - tn3(e26, this.offset, this.offset + this.length)), t32;
    }
    constructor(t32, e26, i29, n37, s29, o35 = [], a27) {
      this.type = t32, this.children = o35, this.dictionary = a27, this.offset = Math.floor(Math.max(e26 || 0, 0)), this.length = Math.floor(Math.max(i29 || 0, 0)), this._nullCount = Math.floor(Math.max(n37 || 0, -1));
      let c30;
      s29 instanceof r34 ? (this.stride = s29.stride, this.values = s29.values, this.typeIds = s29.typeIds, this.nullBitmap = s29.nullBitmap, this.valueOffsets = s29.valueOffsets) : (this.stride = Tt4(t32), s29 && ((c30 = s29[0]) && (this.valueOffsets = c30), (c30 = s29[1]) && (this.values = c30), (c30 = s29[2]) && (this.nullBitmap = c30), (c30 = s29[3]) && (this.typeIds = c30)));
    }
    getValid(t32) {
      let { type: e26 } = this;
      if (f5.isUnion(e26)) {
        let i29 = e26, n37 = this.children[i29.typeIdToChildIndex[this.typeIds[t32]]], s29 = i29.mode === U6.Dense ? this.valueOffsets[t32] : t32;
        return n37.getValid(s29);
      }
      if (this.nullable && this.nullCount > 0) {
        let i29 = this.offset + t32;
        return (this.nullBitmap[i29 >> 3] & 1 << i29 % 8) !== 0;
      }
      return true;
    }
    setValid(t32, e26) {
      let i29, { type: n37 } = this;
      if (f5.isUnion(n37)) {
        let s29 = n37, o35 = this.children[s29.typeIdToChildIndex[this.typeIds[t32]]], a27 = s29.mode === U6.Dense ? this.valueOffsets[t32] : t32;
        i29 = o35.getValid(a27), o35.setValid(a27, e26);
      } else {
        let { nullBitmap: s29 } = this, { offset: o35, length: a27 } = this, c30 = o35 + t32, u30 = 1 << c30 % 8, d25 = c30 >> 3;
        (!s29 || s29.byteLength <= d25) && (s29 = new Uint8Array((o35 + a27 + 63 & -64) >> 3).fill(255), this.nullCount > 0 ? (s29.set(fr3(o35, a27, this.nullBitmap), 0), Object.assign(this, { nullBitmap: s29 })) : Object.assign(this, { nullBitmap: s29, _nullCount: 0 }));
        let p24 = s29[d25];
        i29 = (p24 & u30) !== 0, s29[d25] = e26 ? p24 | u30 : p24 & ~u30;
      }
      return i29 !== !!e26 && (this._nullCount = this.nullCount + (e26 ? -1 : 1)), e26;
    }
    clone(t32 = this.type, e26 = this.offset, i29 = this.length, n37 = this._nullCount, s29 = this, o35 = this.children) {
      return new r34(t32, e26, i29, n37, s29, o35, this.dictionary);
    }
    slice(t32, e26) {
      let { stride: i29, typeId: n37, children: s29 } = this, o35 = +(this._nullCount === 0) - 1, a27 = n37 === 16 ? i29 : 1, c30 = this._sliceBuffers(t32, e26, i29, n37);
      return this.clone(this.type, this.offset + t32, e26, o35, c30, s29.length === 0 || this.valueOffsets ? s29 : this._sliceChildren(s29, a27 * t32, a27 * e26));
    }
    _changeLengthAndBackfillNullBitmap(t32) {
      if (this.typeId === l7.Null)
        return this.clone(this.type, 0, t32, 0);
      let { length: e26, nullCount: i29 } = this, n37 = new Uint8Array((t32 + 63 & -64) >> 3).fill(255, 0, e26 >> 3);
      n37[e26 >> 3] = (1 << e26 - (e26 & -8)) - 1, i29 > 0 && n37.set(fr3(this.offset, e26, this.nullBitmap), 0);
      let s29 = this.buffers;
      return s29[ft4.VALIDITY] = n37, this.clone(this.type, 0, t32, i29 + (t32 - e26), s29);
    }
    _sliceBuffers(t32, e26, i29, n37) {
      let s29, { buffers: o35 } = this;
      return (s29 = o35[ft4.TYPE]) && (o35[ft4.TYPE] = s29.subarray(t32, t32 + e26)), (s29 = o35[ft4.OFFSET]) && (o35[ft4.OFFSET] = s29.subarray(t32, t32 + e26 + 1)) || (s29 = o35[ft4.DATA]) && (o35[ft4.DATA] = n37 === 6 ? s29 : s29.subarray(i29 * t32, i29 * (t32 + e26))), o35;
    }
    _sliceChildren(t32, e26, i29) {
      return t32.map((n37) => n37.slice(e26, i29));
    }
  };
  L6.prototype.children = Object.freeze([]);
  var vo3 = class r35 extends g6 {
    visit(t32) {
      return this.getVisitFn(t32.type).call(this, t32);
    }
    visitNull(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0, ["length"]: n37 = 0 } = t32;
      return new L6(e26, i29, n37, n37);
    }
    visitBool(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0 } = t32, n37 = S6(t32.nullBitmap), s29 = O7(e26.ArrayType, t32.data), { ["length"]: o35 = s29.length >> 3, ["nullCount"]: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new L6(e26, i29, o35, a27, [void 0, s29, n37]);
    }
    visitInt(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0 } = t32, n37 = S6(t32.nullBitmap), s29 = O7(e26.ArrayType, t32.data), { ["length"]: o35 = s29.length, ["nullCount"]: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new L6(e26, i29, o35, a27, [void 0, s29, n37]);
    }
    visitFloat(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0 } = t32, n37 = S6(t32.nullBitmap), s29 = O7(e26.ArrayType, t32.data), { ["length"]: o35 = s29.length, ["nullCount"]: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new L6(e26, i29, o35, a27, [void 0, s29, n37]);
    }
    visitUtf8(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0 } = t32, n37 = S6(t32.data), s29 = S6(t32.nullBitmap), o35 = ir3(t32.valueOffsets), { ["length"]: a27 = o35.length - 1, ["nullCount"]: c30 = t32.nullBitmap ? -1 : 0 } = t32;
      return new L6(e26, i29, a27, c30, [o35, n37, s29]);
    }
    visitLargeUtf8(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0 } = t32, n37 = S6(t32.data), s29 = S6(t32.nullBitmap), o35 = Bn3(t32.valueOffsets), { ["length"]: a27 = o35.length - 1, ["nullCount"]: c30 = t32.nullBitmap ? -1 : 0 } = t32;
      return new L6(e26, i29, a27, c30, [o35, n37, s29]);
    }
    visitBinary(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0 } = t32, n37 = S6(t32.data), s29 = S6(t32.nullBitmap), o35 = ir3(t32.valueOffsets), { ["length"]: a27 = o35.length - 1, ["nullCount"]: c30 = t32.nullBitmap ? -1 : 0 } = t32;
      return new L6(e26, i29, a27, c30, [o35, n37, s29]);
    }
    visitLargeBinary(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0 } = t32, n37 = S6(t32.data), s29 = S6(t32.nullBitmap), o35 = Bn3(t32.valueOffsets), { ["length"]: a27 = o35.length - 1, ["nullCount"]: c30 = t32.nullBitmap ? -1 : 0 } = t32;
      return new L6(e26, i29, a27, c30, [o35, n37, s29]);
    }
    visitFixedSizeBinary(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0 } = t32, n37 = S6(t32.nullBitmap), s29 = O7(e26.ArrayType, t32.data), { ["length"]: o35 = s29.length / Tt4(e26), ["nullCount"]: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new L6(e26, i29, o35, a27, [void 0, s29, n37]);
    }
    visitDate(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0 } = t32, n37 = S6(t32.nullBitmap), s29 = O7(e26.ArrayType, t32.data), { ["length"]: o35 = s29.length / Tt4(e26), ["nullCount"]: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new L6(e26, i29, o35, a27, [void 0, s29, n37]);
    }
    visitTimestamp(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0 } = t32, n37 = S6(t32.nullBitmap), s29 = O7(e26.ArrayType, t32.data), { ["length"]: o35 = s29.length / Tt4(e26), ["nullCount"]: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new L6(e26, i29, o35, a27, [void 0, s29, n37]);
    }
    visitTime(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0 } = t32, n37 = S6(t32.nullBitmap), s29 = O7(e26.ArrayType, t32.data), { ["length"]: o35 = s29.length / Tt4(e26), ["nullCount"]: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new L6(e26, i29, o35, a27, [void 0, s29, n37]);
    }
    visitDecimal(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0 } = t32, n37 = S6(t32.nullBitmap), s29 = O7(e26.ArrayType, t32.data), { ["length"]: o35 = s29.length / Tt4(e26), ["nullCount"]: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new L6(e26, i29, o35, a27, [void 0, s29, n37]);
    }
    visitList(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0, ["child"]: n37 } = t32, s29 = S6(t32.nullBitmap), o35 = ir3(t32.valueOffsets), { ["length"]: a27 = o35.length - 1, ["nullCount"]: c30 = t32.nullBitmap ? -1 : 0 } = t32;
      return new L6(e26, i29, a27, c30, [o35, void 0, s29], [n37]);
    }
    visitStruct(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0, ["children"]: n37 = [] } = t32, s29 = S6(t32.nullBitmap), { length: o35 = n37.reduce((c30, { length: u30 }) => Math.max(c30, u30), 0), nullCount: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new L6(e26, i29, o35, a27, [void 0, void 0, s29], n37);
    }
    visitUnion(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0, ["children"]: n37 = [] } = t32, s29 = O7(e26.ArrayType, t32.typeIds), { ["length"]: o35 = s29.length, ["nullCount"]: a27 = -1 } = t32;
      if (f5.isSparseUnion(e26))
        return new L6(e26, i29, o35, a27, [void 0, void 0, void 0, s29], n37);
      let c30 = ir3(t32.valueOffsets);
      return new L6(e26, i29, o35, a27, [c30, void 0, void 0, s29], n37);
    }
    visitDictionary(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0 } = t32, n37 = S6(t32.nullBitmap), s29 = O7(e26.indices.ArrayType, t32.data), { ["dictionary"]: o35 = new m5([new r35().visit({ type: e26.dictionary })]) } = t32, { ["length"]: a27 = s29.length, ["nullCount"]: c30 = t32.nullBitmap ? -1 : 0 } = t32;
      return new L6(e26, i29, a27, c30, [void 0, s29, n37], [], o35);
    }
    visitInterval(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0 } = t32, n37 = S6(t32.nullBitmap), s29 = O7(e26.ArrayType, t32.data), { ["length"]: o35 = s29.length / Tt4(e26), ["nullCount"]: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new L6(e26, i29, o35, a27, [void 0, s29, n37]);
    }
    visitDuration(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0 } = t32, n37 = S6(t32.nullBitmap), s29 = O7(e26.ArrayType, t32.data), { ["length"]: o35 = s29.length, ["nullCount"]: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new L6(e26, i29, o35, a27, [void 0, s29, n37]);
    }
    visitFixedSizeList(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0, ["child"]: n37 = new r35().visit({ type: e26.valueType }) } = t32, s29 = S6(t32.nullBitmap), { ["length"]: o35 = n37.length / Tt4(e26), ["nullCount"]: a27 = t32.nullBitmap ? -1 : 0 } = t32;
      return new L6(e26, i29, o35, a27, [void 0, void 0, s29], [n37]);
    }
    visitMap(t32) {
      let { ["type"]: e26, ["offset"]: i29 = 0, ["child"]: n37 = new r35().visit({ type: e26.childType }) } = t32, s29 = S6(t32.nullBitmap), o35 = ir3(t32.valueOffsets), { ["length"]: a27 = o35.length - 1, ["nullCount"]: c30 = t32.nullBitmap ? -1 : 0 } = t32;
      return new L6(e26, i29, a27, c30, [o35, void 0, s29], [n37]);
    }
  };
  var Ku = new vo3();
  function y5(r91) {
    return Ku.visit(r91);
  }
  var en3 = class {
    constructor(t32 = 0, e26) {
      this.numChunks = t32, this.getChunkIterator = e26, this.chunkIndex = 0, this.chunkIterator = this.getChunkIterator(0);
    }
    next() {
      for (; this.chunkIndex < this.numChunks; ) {
        let t32 = this.chunkIterator.next();
        if (!t32.done)
          return t32;
        ++this.chunkIndex < this.numChunks && (this.chunkIterator = this.getChunkIterator(this.chunkIndex));
      }
      return { done: true, value: null };
    }
    [Symbol.iterator]() {
      return this;
    }
  };
  function Uc(r91) {
    return r91.some((t32) => t32.nullable);
  }
  function ds3(r91) {
    return r91.reduce((t32, e26) => t32 + e26.nullCount, 0);
  }
  function hs3(r91) {
    return r91.reduce((t32, e26, i29) => (t32[i29 + 1] = t32[i29] + e26.length, t32), new Uint32Array(r91.length + 1));
  }
  function fs3(r91, t32, e26, i29) {
    let n37 = [];
    for (let s29 = -1, o35 = r91.length; ++s29 < o35; ) {
      let a27 = r91[s29], c30 = t32[s29], { length: u30 } = a27;
      if (c30 >= i29)
        break;
      if (e26 >= c30 + u30)
        continue;
      if (c30 >= e26 && c30 + u30 <= i29) {
        n37.push(a27);
        continue;
      }
      let d25 = Math.max(0, e26 - c30), p24 = Math.min(i29 - c30, u30);
      n37.push(a27.slice(d25, p24 - d25));
    }
    return n37.length === 0 && n37.push(r91[0].slice(0, 0)), n37;
  }
  function wo3(r91, t32, e26, i29) {
    let n37 = 0, s29 = 0, o35 = t32.length - 1;
    do {
      if (n37 >= o35 - 1)
        return e26 < t32[o35] ? i29(r91, n37, e26 - t32[n37]) : null;
      s29 = n37 + Math.trunc((o35 - n37) * 0.5), e26 < t32[s29] ? o35 = s29 : n37 = s29;
    } while (n37 < o35);
  }
  function rn3(r91, t32) {
    return r91.getValid(t32);
  }
  function ii3(r91) {
    function t32(e26, i29, n37) {
      return r91(e26[i29], n37);
    }
    return function(e26) {
      let i29 = this.data;
      return wo3(i29, this._offsets, e26, t32);
    };
  }
  function ps3(r91) {
    let t32;
    function e26(i29, n37, s29) {
      return r91(i29[n37], s29, t32);
    }
    return function(i29, n37) {
      let s29 = this.data;
      t32 = n37;
      let o35 = wo3(s29, this._offsets, i29, e26);
      return t32 = void 0, o35;
    };
  }
  function ms3(r91) {
    let t32;
    function e26(i29, n37, s29) {
      let o35 = s29, a27 = 0, c30 = 0;
      for (let u30 = n37 - 1, d25 = i29.length; ++u30 < d25; ) {
        let p24 = i29[u30];
        if (~(a27 = r91(p24, t32, o35)))
          return c30 + a27;
        o35 = 0, c30 += p24.length;
      }
      return -1;
    }
    return function(i29, n37) {
      t32 = i29;
      let s29 = this.data, o35 = typeof n37 != "number" ? e26(s29, 0, 0) : wo3(s29, this._offsets, n37, e26);
      return t32 = void 0, o35;
    };
  }
  var _5 = class extends g6 {
  };
  function Zu(r91, t32) {
    return t32 === null && r91.length > 0 ? 0 : -1;
  }
  function Xu(r91, t32) {
    let { nullBitmap: e26 } = r91;
    if (!e26 || r91.nullCount <= 0)
      return -1;
    let i29 = 0;
    for (let n37 of new fe3(e26, r91.offset + (t32 || 0), r91.length, e26, ri2)) {
      if (!n37)
        return i29;
      ++i29;
    }
    return -1;
  }
  function F6(r91, t32, e26) {
    if (t32 === void 0)
      return -1;
    if (t32 === null)
      switch (r91.typeId) {
        case l7.Union:
          break;
        case l7.Dictionary:
          break;
        default:
          return Xu(r91, e26);
      }
    let i29 = K6.getVisitFn(r91), n37 = $e5(t32);
    for (let s29 = (e26 || 0) - 1, o35 = r91.length; ++s29 < o35; )
      if (n37(i29(r91, s29)))
        return s29;
    return -1;
  }
  function Nc(r91, t32, e26) {
    let i29 = K6.getVisitFn(r91), n37 = $e5(t32);
    for (let s29 = (e26 || 0) - 1, o35 = r91.length; ++s29 < o35; )
      if (n37(i29(r91, s29)))
        return s29;
    return -1;
  }
  _5.prototype.visitNull = Zu;
  _5.prototype.visitBool = F6;
  _5.prototype.visitInt = F6;
  _5.prototype.visitInt8 = F6;
  _5.prototype.visitInt16 = F6;
  _5.prototype.visitInt32 = F6;
  _5.prototype.visitInt64 = F6;
  _5.prototype.visitUint8 = F6;
  _5.prototype.visitUint16 = F6;
  _5.prototype.visitUint32 = F6;
  _5.prototype.visitUint64 = F6;
  _5.prototype.visitFloat = F6;
  _5.prototype.visitFloat16 = F6;
  _5.prototype.visitFloat32 = F6;
  _5.prototype.visitFloat64 = F6;
  _5.prototype.visitUtf8 = F6;
  _5.prototype.visitLargeUtf8 = F6;
  _5.prototype.visitBinary = F6;
  _5.prototype.visitLargeBinary = F6;
  _5.prototype.visitFixedSizeBinary = F6;
  _5.prototype.visitDate = F6;
  _5.prototype.visitDateDay = F6;
  _5.prototype.visitDateMillisecond = F6;
  _5.prototype.visitTimestamp = F6;
  _5.prototype.visitTimestampSecond = F6;
  _5.prototype.visitTimestampMillisecond = F6;
  _5.prototype.visitTimestampMicrosecond = F6;
  _5.prototype.visitTimestampNanosecond = F6;
  _5.prototype.visitTime = F6;
  _5.prototype.visitTimeSecond = F6;
  _5.prototype.visitTimeMillisecond = F6;
  _5.prototype.visitTimeMicrosecond = F6;
  _5.prototype.visitTimeNanosecond = F6;
  _5.prototype.visitDecimal = F6;
  _5.prototype.visitList = F6;
  _5.prototype.visitStruct = F6;
  _5.prototype.visitUnion = F6;
  _5.prototype.visitDenseUnion = Nc;
  _5.prototype.visitSparseUnion = Nc;
  _5.prototype.visitDictionary = F6;
  _5.prototype.visitInterval = F6;
  _5.prototype.visitIntervalDayTime = F6;
  _5.prototype.visitIntervalYearMonth = F6;
  _5.prototype.visitDuration = F6;
  _5.prototype.visitDurationSecond = F6;
  _5.prototype.visitDurationMillisecond = F6;
  _5.prototype.visitDurationMicrosecond = F6;
  _5.prototype.visitDurationNanosecond = F6;
  _5.prototype.visitFixedSizeList = F6;
  _5.prototype.visitMap = F6;
  var mr3 = new _5();
  var v5 = class extends g6 {
  };
  function D7(r91) {
    let { type: t32 } = r91;
    if (r91.nullCount === 0 && r91.stride === 1 && (f5.isInt(t32) && t32.bitWidth !== 64 || f5.isTime(t32) && t32.bitWidth !== 64 || f5.isFloat(t32) && t32.precision !== R6.HALF))
      return new en3(r91.data.length, (i29) => {
        let n37 = r91.data[i29];
        return n37.values.subarray(0, n37.length)[Symbol.iterator]();
      });
    let e26 = 0;
    return new en3(r91.data.length, (i29) => {
      let s29 = r91.data[i29].length, o35 = r91.slice(e26, e26 + s29);
      return e26 += s29, new Io3(o35);
    });
  }
  var Io3 = class {
    constructor(t32) {
      this.vector = t32, this.index = 0;
    }
    next() {
      return this.index < this.vector.length ? { value: this.vector.get(this.index++) } : { done: true, value: null };
    }
    [Symbol.iterator]() {
      return this;
    }
  };
  v5.prototype.visitNull = D7;
  v5.prototype.visitBool = D7;
  v5.prototype.visitInt = D7;
  v5.prototype.visitInt8 = D7;
  v5.prototype.visitInt16 = D7;
  v5.prototype.visitInt32 = D7;
  v5.prototype.visitInt64 = D7;
  v5.prototype.visitUint8 = D7;
  v5.prototype.visitUint16 = D7;
  v5.prototype.visitUint32 = D7;
  v5.prototype.visitUint64 = D7;
  v5.prototype.visitFloat = D7;
  v5.prototype.visitFloat16 = D7;
  v5.prototype.visitFloat32 = D7;
  v5.prototype.visitFloat64 = D7;
  v5.prototype.visitUtf8 = D7;
  v5.prototype.visitLargeUtf8 = D7;
  v5.prototype.visitBinary = D7;
  v5.prototype.visitLargeBinary = D7;
  v5.prototype.visitFixedSizeBinary = D7;
  v5.prototype.visitDate = D7;
  v5.prototype.visitDateDay = D7;
  v5.prototype.visitDateMillisecond = D7;
  v5.prototype.visitTimestamp = D7;
  v5.prototype.visitTimestampSecond = D7;
  v5.prototype.visitTimestampMillisecond = D7;
  v5.prototype.visitTimestampMicrosecond = D7;
  v5.prototype.visitTimestampNanosecond = D7;
  v5.prototype.visitTime = D7;
  v5.prototype.visitTimeSecond = D7;
  v5.prototype.visitTimeMillisecond = D7;
  v5.prototype.visitTimeMicrosecond = D7;
  v5.prototype.visitTimeNanosecond = D7;
  v5.prototype.visitDecimal = D7;
  v5.prototype.visitList = D7;
  v5.prototype.visitStruct = D7;
  v5.prototype.visitUnion = D7;
  v5.prototype.visitDenseUnion = D7;
  v5.prototype.visitSparseUnion = D7;
  v5.prototype.visitDictionary = D7;
  v5.prototype.visitInterval = D7;
  v5.prototype.visitIntervalDayTime = D7;
  v5.prototype.visitIntervalYearMonth = D7;
  v5.prototype.visitDuration = D7;
  v5.prototype.visitDurationSecond = D7;
  v5.prototype.visitDurationMillisecond = D7;
  v5.prototype.visitDurationMicrosecond = D7;
  v5.prototype.visitDurationNanosecond = D7;
  v5.prototype.visitFixedSizeList = D7;
  v5.prototype.visitMap = D7;
  var ni2 = new v5();
  var Ec;
  var Vc = {};
  var Rc = {};
  var m5 = class r36 {
    constructor(t32) {
      var e26, i29, n37;
      let s29 = t32[0] instanceof r36 ? t32.flatMap((a27) => a27.data) : t32;
      if (s29.length === 0 || s29.some((a27) => !(a27 instanceof L6)))
        throw new TypeError("Vector constructor expects an Array of Data instances.");
      let o35 = (e26 = s29[0]) === null || e26 === void 0 ? void 0 : e26.type;
      switch (s29.length) {
        case 0:
          this._offsets = [0];
          break;
        case 1: {
          let { get: a27, set: c30, indexOf: u30 } = Vc[o35.typeId], d25 = s29[0];
          this.isValid = (p24) => rn3(d25, p24), this.get = (p24) => a27(d25, p24), this.set = (p24, W25) => c30(d25, p24, W25), this.indexOf = (p24) => u30(d25, p24), this._offsets = [0, d25.length];
          break;
        }
        default:
          Object.setPrototypeOf(this, Rc[o35.typeId]), this._offsets = hs3(s29);
          break;
      }
      this.data = s29, this.type = o35, this.stride = Tt4(o35), this.numChildren = (n37 = (i29 = o35.children) === null || i29 === void 0 ? void 0 : i29.length) !== null && n37 !== void 0 ? n37 : 0, this.length = this._offsets.at(-1);
    }
    get byteLength() {
      return this.data.reduce((t32, e26) => t32 + e26.byteLength, 0);
    }
    get nullable() {
      return Uc(this.data);
    }
    get nullCount() {
      return ds3(this.data);
    }
    get ArrayType() {
      return this.type.ArrayType;
    }
    get [Symbol.toStringTag]() {
      return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`;
    }
    get VectorName() {
      return `${l7[this.type.typeId]}Vector`;
    }
    isValid(t32) {
      return false;
    }
    get(t32) {
      return null;
    }
    at(t32) {
      return this.get(hr3(t32, this.length));
    }
    set(t32, e26) {
    }
    indexOf(t32, e26) {
      return -1;
    }
    includes(t32, e26) {
      return this.indexOf(t32, e26) > -1;
    }
    [Symbol.iterator]() {
      return ni2.visit(this);
    }
    concat(...t32) {
      return new r36(this.data.concat(t32.flatMap((e26) => e26.data).flat(Number.POSITIVE_INFINITY)));
    }
    slice(t32, e26) {
      return new r36(Qi3(this, t32, e26, ({ data: i29, _offsets: n37 }, s29, o35) => fs3(i29, n37, s29, o35)));
    }
    toJSON() {
      return [...this];
    }
    toArray() {
      let { type: t32, data: e26, length: i29, stride: n37, ArrayType: s29 } = this;
      switch (t32.typeId) {
        case l7.Int:
        case l7.Float:
        case l7.Decimal:
        case l7.Time:
        case l7.Timestamp:
          switch (e26.length) {
            case 0:
              return new s29();
            case 1:
              return e26[0].values.subarray(0, i29 * n37);
            default:
              return e26.reduce((o35, { values: a27, length: c30 }) => (o35.array.set(a27.subarray(0, c30 * n37), o35.offset), o35.offset += c30 * n37, o35), { array: new s29(i29 * n37), offset: 0 }).array;
          }
      }
      return [...this];
    }
    toString() {
      return `[${[...this].join(",")}]`;
    }
    getChild(t32) {
      var e26;
      return this.getChildAt((e26 = this.type.children) === null || e26 === void 0 ? void 0 : e26.findIndex((i29) => i29.name === t32));
    }
    getChildAt(t32) {
      return t32 > -1 && t32 < this.numChildren ? new r36(this.data.map(({ children: e26 }) => e26[t32])) : null;
    }
    get isMemoized() {
      return f5.isDictionary(this.type) ? this.data[0].dictionary.isMemoized : false;
    }
    memoize() {
      if (f5.isDictionary(this.type)) {
        let t32 = new ys3(this.data[0].dictionary), e26 = this.data.map((i29) => {
          let n37 = i29.clone();
          return n37.dictionary = t32, n37;
        });
        return new r36(e26);
      }
      return new ys3(this);
    }
    unmemoize() {
      if (f5.isDictionary(this.type) && this.isMemoized) {
        let t32 = this.data[0].dictionary.unmemoize(), e26 = this.data.map((i29) => {
          let n37 = i29.clone();
          return n37.dictionary = t32, n37;
        });
        return new r36(e26);
      }
      return this;
    }
  };
  Ec = Symbol.toStringTag;
  m5[Ec] = ((r91) => {
    r91.type = f5.prototype, r91.data = [], r91.length = 0, r91.stride = 1, r91.numChildren = 0, r91._offsets = new Uint32Array([0]), r91[Symbol.isConcatSpreadable] = true;
    let t32 = Object.keys(l7).map((e26) => l7[e26]).filter((e26) => typeof e26 == "number" && e26 !== l7.NONE);
    for (let e26 of t32) {
      let i29 = K6.getVisitFnByTypeId(e26), n37 = it5.getVisitFnByTypeId(e26), s29 = mr3.getVisitFnByTypeId(e26);
      Vc[e26] = { get: i29, set: n37, indexOf: s29 }, Rc[e26] = Object.create(r91, { isValid: { value: ii3(rn3) }, get: { value: ii3(K6.getVisitFnByTypeId(e26)) }, set: { value: ps3(it5.getVisitFnByTypeId(e26)) }, indexOf: { value: ms3(mr3.getVisitFnByTypeId(e26)) } });
    }
    return "Vector";
  })(m5.prototype);
  var ys3 = class r37 extends m5 {
    constructor(t32) {
      super(t32.data);
      let e26 = this.get, i29 = this.set, n37 = this.slice, s29 = new Array(this.length);
      Object.defineProperty(this, "get", { value(o35) {
        let a27 = s29[o35];
        if (a27 !== void 0)
          return a27;
        let c30 = e26.call(this, o35);
        return s29[o35] = c30, c30;
      } }), Object.defineProperty(this, "set", { value(o35, a27) {
        i29.call(this, o35, a27), s29[o35] = a27;
      } }), Object.defineProperty(this, "slice", { value: (o35, a27) => new r37(n37.call(this, o35, a27)) }), Object.defineProperty(this, "isMemoized", { value: true }), Object.defineProperty(this, "unmemoize", { value: () => new m5(this.data) }), Object.defineProperty(this, "memoize", { value: () => this });
    }
  };
  function Cc(r91) {
    if (!r91 || r91.length <= 0)
      return function(n37) {
        return true;
      };
    let t32 = "", e26 = r91.filter((i29) => i29 === i29);
    return e26.length > 0 && (t32 = `
    switch (x) {${e26.map((i29) => `
        case ${Qu(i29)}:`).join("")}
            return false;
    }`), r91.length !== e26.length && (t32 = `if (x !== x) return false;
${t32}`), new Function("x", `${t32}
return true;`);
  }
  function Qu(r91) {
    return typeof r91 != "bigint" ? $t4(r91) : `${$t4(r91)}n`;
  }
  function So3(r91, t32) {
    let e26 = Math.ceil(r91) * t32 - 1;
    return (e26 - e26 % 64 + 64 || 64) / t32;
  }
  function kc(r91, t32 = 0) {
    return r91.length >= t32 ? r91.subarray(0, t32) : Ci3(new r91.constructor(t32), r91, 0);
  }
  var Gt4 = class {
    constructor(t32, e26 = 0, i29 = 1) {
      this.length = Math.ceil(e26 / i29), this.buffer = new t32(this.length), this.stride = i29, this.BYTES_PER_ELEMENT = t32.BYTES_PER_ELEMENT, this.ArrayType = t32;
    }
    get byteLength() {
      return Math.ceil(this.length * this.stride) * this.BYTES_PER_ELEMENT;
    }
    get reservedLength() {
      return this.buffer.length / this.stride;
    }
    get reservedByteLength() {
      return this.buffer.byteLength;
    }
    set(t32, e26) {
      return this;
    }
    append(t32) {
      return this.set(this.length, t32);
    }
    reserve(t32) {
      if (t32 > 0) {
        this.length += t32;
        let e26 = this.stride, i29 = this.length * e26, n37 = this.buffer.length;
        i29 >= n37 && this._resize(n37 === 0 ? So3(i29 * 1, this.BYTES_PER_ELEMENT) : So3(i29 * 2, this.BYTES_PER_ELEMENT));
      }
      return this;
    }
    flush(t32 = this.length) {
      t32 = So3(t32 * this.stride, this.BYTES_PER_ELEMENT);
      let e26 = kc(this.buffer, t32);
      return this.clear(), e26;
    }
    clear() {
      return this.length = 0, this.buffer = new this.ArrayType(), this;
    }
    _resize(t32) {
      return this.buffer = kc(this.buffer, t32);
    }
  };
  var Be3 = class extends Gt4 {
    last() {
      return this.get(this.length - 1);
    }
    get(t32) {
      return this.buffer[t32];
    }
    set(t32, e26) {
      return this.reserve(t32 - this.length + 1), this.buffer[t32 * this.stride] = e26, this;
    }
  };
  var si3 = class extends Be3 {
    constructor() {
      super(Uint8Array, 0, 1 / 8), this.numValid = 0;
    }
    get numInvalid() {
      return this.length - this.numValid;
    }
    get(t32) {
      return this.buffer[t32 >> 3] >> t32 % 8 & 1;
    }
    set(t32, e26) {
      let { buffer: i29 } = this.reserve(t32 - this.length + 1), n37 = t32 >> 3, s29 = t32 % 8, o35 = i29[n37] >> s29 & 1;
      return e26 ? o35 === 0 && (i29[n37] |= 1 << s29, ++this.numValid) : o35 === 1 && (i29[n37] &= ~(1 << s29), --this.numValid), this;
    }
    clear() {
      return this.numValid = 0, super.clear();
    }
  };
  var oi2 = class extends Be3 {
    constructor(t32) {
      super(t32.OffsetArrayType, 1, 1);
    }
    append(t32) {
      return this.set(this.length - 1, t32);
    }
    set(t32, e26) {
      let i29 = this.length - 1, n37 = this.reserve(t32 - i29 + 1).buffer;
      return i29 < t32++ && i29 >= 0 && n37.fill(n37[i29], i29, t32), n37[t32] = n37[t32 - 1] + e26, this;
    }
    flush(t32 = this.length - 1) {
      return t32 > this.length && this.set(t32 - 1, this.BYTES_PER_ELEMENT > 4 ? BigInt(0) : 0), super.flush(t32 + 1);
    }
  };
  var z5 = class {
    static throughNode(t32) {
      throw new Error('"throughNode" not available in this environment');
    }
    static throughDOM(t32) {
      throw new Error('"throughDOM" not available in this environment');
    }
    constructor({ type: t32, nullValues: e26 }) {
      this.length = 0, this.finished = false, this.type = t32, this.children = [], this.nullValues = e26, this.stride = Tt4(t32), this._nulls = new si3(), e26 && e26.length > 0 && (this._isValid = Cc(e26));
    }
    toVector() {
      return new m5([this.flush()]);
    }
    get ArrayType() {
      return this.type.ArrayType;
    }
    get nullCount() {
      return this._nulls.numInvalid;
    }
    get numChildren() {
      return this.children.length;
    }
    get byteLength() {
      let t32 = 0, { _offsets: e26, _values: i29, _nulls: n37, _typeIds: s29, children: o35 } = this;
      return e26 && (t32 += e26.byteLength), i29 && (t32 += i29.byteLength), n37 && (t32 += n37.byteLength), s29 && (t32 += s29.byteLength), o35.reduce((a27, c30) => a27 + c30.byteLength, t32);
    }
    get reservedLength() {
      return this._nulls.reservedLength;
    }
    get reservedByteLength() {
      let t32 = 0;
      return this._offsets && (t32 += this._offsets.reservedByteLength), this._values && (t32 += this._values.reservedByteLength), this._nulls && (t32 += this._nulls.reservedByteLength), this._typeIds && (t32 += this._typeIds.reservedByteLength), this.children.reduce((e26, i29) => e26 + i29.reservedByteLength, t32);
    }
    get valueOffsets() {
      return this._offsets ? this._offsets.buffer : null;
    }
    get values() {
      return this._values ? this._values.buffer : null;
    }
    get nullBitmap() {
      return this._nulls ? this._nulls.buffer : null;
    }
    get typeIds() {
      return this._typeIds ? this._typeIds.buffer : null;
    }
    append(t32) {
      return this.set(this.length, t32);
    }
    isValid(t32) {
      return this._isValid(t32);
    }
    set(t32, e26) {
      return this.setValid(t32, this.isValid(e26)) && this.setValue(t32, e26), this;
    }
    setValue(t32, e26) {
      this._setValue(this, t32, e26);
    }
    setValid(t32, e26) {
      return this.length = this._nulls.set(t32, +e26).length, e26;
    }
    addChild(t32, e26 = `${this.numChildren}`) {
      throw new Error(`Cannot append children to non-nested type "${this.type}"`);
    }
    getChildAt(t32) {
      return this.children[t32] || null;
    }
    flush() {
      let t32, e26, i29, n37, { type: s29, length: o35, nullCount: a27, _typeIds: c30, _offsets: u30, _values: d25, _nulls: p24 } = this;
      (e26 = c30?.flush(o35)) ? n37 = u30?.flush(o35) : (n37 = u30?.flush(o35)) ? t32 = d25?.flush(u30.last()) : t32 = d25?.flush(o35), a27 > 0 && (i29 = p24?.flush(o35));
      let W25 = this.children.map((X25) => X25.flush());
      return this.clear(), y5({ type: s29, length: o35, nullCount: a27, children: W25, child: W25[0], data: t32, typeIds: e26, nullBitmap: i29, valueOffsets: n37 });
    }
    finish() {
      this.finished = true;
      for (let t32 of this.children)
        t32.finish();
      return this;
    }
    clear() {
      var t32, e26, i29, n37;
      this.length = 0, (t32 = this._nulls) === null || t32 === void 0 || t32.clear(), (e26 = this._values) === null || e26 === void 0 || e26.clear(), (i29 = this._offsets) === null || i29 === void 0 || i29.clear(), (n37 = this._typeIds) === null || n37 === void 0 || n37.clear();
      for (let s29 of this.children)
        s29.clear();
      return this;
    }
  };
  z5.prototype.length = 1;
  z5.prototype.stride = 1;
  z5.prototype.children = null;
  z5.prototype.finished = false;
  z5.prototype.nullValues = null;
  z5.prototype._isValid = () => true;
  var Z6 = class extends z5 {
    constructor(t32) {
      super(t32), this._values = new Be3(this.ArrayType, 0, this.stride);
    }
    setValue(t32, e26) {
      let i29 = this._values;
      return i29.reserve(t32 - i29.length + 1), super.setValue(t32, e26);
    }
  };
  var _t4 = class extends z5 {
    constructor(t32) {
      super(t32), this._pendingLength = 0, this._offsets = new oi2(t32.type);
    }
    setValue(t32, e26) {
      let i29 = this._pending || (this._pending = /* @__PURE__ */ new Map()), n37 = i29.get(t32);
      n37 && (this._pendingLength -= n37.length), this._pendingLength += e26 instanceof Jt3 ? e26[We2].length : e26.length, i29.set(t32, e26);
    }
    setValid(t32, e26) {
      return super.setValid(t32, e26) ? true : ((this._pending || (this._pending = /* @__PURE__ */ new Map())).set(t32, void 0), false);
    }
    clear() {
      return this._pendingLength = 0, this._pending = void 0, super.clear();
    }
    flush() {
      return this._flush(), super.flush();
    }
    finish() {
      return this._flush(), super.finish();
    }
    _flush() {
      let t32 = this._pending, e26 = this._pendingLength;
      return this._pendingLength = 0, this._pending = void 0, t32 && t32.size > 0 && this._flushPending(t32, e26), this;
    }
  };
  var gr3 = class {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    offset() {
      return this.bb.readInt64(this.bb_pos);
    }
    metaDataLength() {
      return this.bb.readInt32(this.bb_pos + 8);
    }
    bodyLength() {
      return this.bb.readInt64(this.bb_pos + 16);
    }
    static sizeOf() {
      return 24;
    }
    static createBlock(t32, e26, i29, n37) {
      return t32.prep(8, 24), t32.writeInt64(BigInt(n37 ?? 0)), t32.pad(4), t32.writeInt32(i29), t32.writeInt64(BigInt(e26 ?? 0)), t32.offset();
    }
  };
  var Ot4 = class r38 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsFooter(t32, e26) {
      return (e26 || new r38()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsFooter(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r38()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    version() {
      let t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : V6.V1;
    }
    schema(t32) {
      let e26 = this.bb.__offset(this.bb_pos, 6);
      return e26 ? (t32 || new ht4()).__init(this.bb.__indirect(this.bb_pos + e26), this.bb) : null;
    }
    dictionaries(t32, e26) {
      let i29 = this.bb.__offset(this.bb_pos, 8);
      return i29 ? (e26 || new gr3()).__init(this.bb.__vector(this.bb_pos + i29) + t32 * 24, this.bb) : null;
    }
    dictionariesLength() {
      let t32 = this.bb.__offset(this.bb_pos, 8);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    recordBatches(t32, e26) {
      let i29 = this.bb.__offset(this.bb_pos, 10);
      return i29 ? (e26 || new gr3()).__init(this.bb.__vector(this.bb_pos + i29) + t32 * 24, this.bb) : null;
    }
    recordBatchesLength() {
      let t32 = this.bb.__offset(this.bb_pos, 10);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    customMetadata(t32, e26) {
      let i29 = this.bb.__offset(this.bb_pos, 12);
      return i29 ? (e26 || new Q6()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + i29) + t32 * 4), this.bb) : null;
    }
    customMetadataLength() {
      let t32 = this.bb.__offset(this.bb_pos, 12);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    static startFooter(t32) {
      t32.startObject(5);
    }
    static addVersion(t32, e26) {
      t32.addFieldInt16(0, e26, V6.V1);
    }
    static addSchema(t32, e26) {
      t32.addFieldOffset(1, e26, 0);
    }
    static addDictionaries(t32, e26) {
      t32.addFieldOffset(2, e26, 0);
    }
    static startDictionariesVector(t32, e26) {
      t32.startVector(24, e26, 8);
    }
    static addRecordBatches(t32, e26) {
      t32.addFieldOffset(3, e26, 0);
    }
    static startRecordBatchesVector(t32, e26) {
      t32.startVector(24, e26, 8);
    }
    static addCustomMetadata(t32, e26) {
      t32.addFieldOffset(4, e26, 0);
    }
    static createCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addOffset(e26[i29]);
      return t32.endVector();
    }
    static startCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static endFooter(t32) {
      return t32.endObject();
    }
    static finishFooterBuffer(t32, e26) {
      t32.finish(e26);
    }
    static finishSizePrefixedFooterBuffer(t32, e26) {
      t32.finish(e26, void 0, true);
    }
  };
  var E5 = class r39 {
    constructor(t32 = [], e26, i29, n37 = V6.V5) {
      this.fields = t32 || [], this.metadata = e26 || /* @__PURE__ */ new Map(), i29 || (i29 = Bo2(t32)), this.dictionaries = i29, this.metadataVersion = n37;
    }
    get [Symbol.toStringTag]() {
      return "Schema";
    }
    get names() {
      return this.fields.map((t32) => t32.name);
    }
    toString() {
      return `Schema<{ ${this.fields.map((t32, e26) => `${e26}: ${t32}`).join(", ")} }>`;
    }
    select(t32) {
      let e26 = new Set(t32), i29 = this.fields.filter((n37) => e26.has(n37.name));
      return new r39(i29, this.metadata);
    }
    selectAt(t32) {
      let e26 = t32.map((i29) => this.fields[i29]).filter(Boolean);
      return new r39(e26, this.metadata);
    }
    assign(...t32) {
      let e26 = t32[0] instanceof r39 ? t32[0] : Array.isArray(t32[0]) ? new r39(t32[0]) : new r39(t32), i29 = [...this.fields], n37 = gs3(gs3(/* @__PURE__ */ new Map(), this.metadata), e26.metadata), s29 = e26.fields.filter((a27) => {
        let c30 = i29.findIndex((u30) => u30.name === a27.name);
        return ~c30 ? (i29[c30] = a27.clone({ metadata: gs3(gs3(/* @__PURE__ */ new Map(), i29[c30].metadata), a27.metadata) })) && false : true;
      }), o35 = Bo2(s29, /* @__PURE__ */ new Map());
      return new r39([...i29, ...s29], n37, new Map([...this.dictionaries, ...o35]));
    }
  };
  E5.prototype.fields = null;
  E5.prototype.metadata = null;
  E5.prototype.dictionaries = null;
  var T6 = class r40 {
    static new(...t32) {
      let [e26, i29, n37, s29] = t32;
      return t32[0] && typeof t32[0] == "object" && ({ name: e26 } = t32[0], i29 === void 0 && (i29 = t32[0].type), n37 === void 0 && (n37 = t32[0].nullable), s29 === void 0 && (s29 = t32[0].metadata)), new r40(`${e26}`, i29, n37, s29);
    }
    constructor(t32, e26, i29 = false, n37) {
      this.name = t32, this.type = e26, this.nullable = i29, this.metadata = n37 || /* @__PURE__ */ new Map();
    }
    get typeId() {
      return this.type.typeId;
    }
    get [Symbol.toStringTag]() {
      return "Field";
    }
    toString() {
      return `${this.name}: ${this.type}`;
    }
    clone(...t32) {
      let [e26, i29, n37, s29] = t32;
      return !t32[0] || typeof t32[0] != "object" ? [e26 = this.name, i29 = this.type, n37 = this.nullable, s29 = this.metadata] = t32 : { name: e26 = this.name, type: i29 = this.type, nullable: n37 = this.nullable, metadata: s29 = this.metadata } = t32[0], r40.new(e26, i29, n37, s29);
    }
  };
  T6.prototype.type = null;
  T6.prototype.name = null;
  T6.prototype.nullable = null;
  T6.prototype.metadata = null;
  function gs3(r91, t32) {
    return new Map([...r91 || /* @__PURE__ */ new Map(), ...t32 || /* @__PURE__ */ new Map()]);
  }
  function Bo2(r91, t32 = /* @__PURE__ */ new Map()) {
    for (let e26 = -1, i29 = r91.length; ++e26 < i29; ) {
      let s29 = r91[e26].type;
      if (f5.isDictionary(s29)) {
        if (!t32.has(s29.id))
          t32.set(s29.id, s29.dictionary);
        else if (t32.get(s29.id) !== s29.dictionary)
          throw new Error("Cannot create Schema containing two different dictionaries with the same Id");
      }
      s29.children && s29.children.length > 0 && Bo2(s29.children, t32);
    }
    return t32;
  }
  var td = w5;
  var ed = d6;
  var De2 = class {
    static decode(t32) {
      t32 = new ed(S6(t32));
      let e26 = Ot4.getRootAsFooter(t32), i29 = E5.decode(e26.schema(), /* @__PURE__ */ new Map(), e26.version());
      return new Do2(i29, e26);
    }
    static encode(t32) {
      let e26 = new td(), i29 = E5.encode(e26, t32.schema);
      Ot4.startRecordBatchesVector(e26, t32.numRecordBatches);
      for (let o35 of [...t32.recordBatches()].slice().reverse())
        Kt4.encode(e26, o35);
      let n37 = e26.endVector();
      Ot4.startDictionariesVector(e26, t32.numDictionaries);
      for (let o35 of [...t32.dictionaryBatches()].slice().reverse())
        Kt4.encode(e26, o35);
      let s29 = e26.endVector();
      return Ot4.startFooter(e26), Ot4.addSchema(e26, i29), Ot4.addVersion(e26, V6.V5), Ot4.addRecordBatches(e26, n37), Ot4.addDictionaries(e26, s29), Ot4.finishFooterBuffer(e26, Ot4.endFooter(e26)), e26.asUint8Array();
    }
    get numRecordBatches() {
      return this._recordBatches.length;
    }
    get numDictionaries() {
      return this._dictionaryBatches.length;
    }
    constructor(t32, e26 = V6.V5, i29, n37) {
      this.schema = t32, this.version = e26, i29 && (this._recordBatches = i29), n37 && (this._dictionaryBatches = n37);
    }
    *recordBatches() {
      for (let t32, e26 = -1, i29 = this.numRecordBatches; ++e26 < i29; )
        (t32 = this.getRecordBatch(e26)) && (yield t32);
    }
    *dictionaryBatches() {
      for (let t32, e26 = -1, i29 = this.numDictionaries; ++e26 < i29; )
        (t32 = this.getDictionaryBatch(e26)) && (yield t32);
    }
    getRecordBatch(t32) {
      return t32 >= 0 && t32 < this.numRecordBatches && this._recordBatches[t32] || null;
    }
    getDictionaryBatch(t32) {
      return t32 >= 0 && t32 < this.numDictionaries && this._dictionaryBatches[t32] || null;
    }
  };
  var Do2 = class extends De2 {
    get numRecordBatches() {
      return this._footer.recordBatchesLength();
    }
    get numDictionaries() {
      return this._footer.dictionariesLength();
    }
    constructor(t32, e26) {
      super(t32, e26.version()), this._footer = e26;
    }
    getRecordBatch(t32) {
      if (t32 >= 0 && t32 < this.numRecordBatches) {
        let e26 = this._footer.recordBatches(t32);
        if (e26)
          return Kt4.decode(e26);
      }
      return null;
    }
    getDictionaryBatch(t32) {
      if (t32 >= 0 && t32 < this.numDictionaries) {
        let e26 = this._footer.dictionaries(t32);
        if (e26)
          return Kt4.decode(e26);
      }
      return null;
    }
  };
  var Kt4 = class r41 {
    static decode(t32) {
      return new r41(t32.metaDataLength(), t32.bodyLength(), t32.offset());
    }
    static encode(t32, e26) {
      let { metaDataLength: i29 } = e26, n37 = BigInt(e26.offset), s29 = BigInt(e26.bodyLength);
      return gr3.createBlock(t32, n37, i29, s29);
    }
    constructor(t32, e26, i29) {
      this.metaDataLength = t32, this.offset = N6(i29), this.bodyLength = N6(e26);
    }
  };
  var P6 = Object.freeze({ done: true, value: void 0 });
  var sn3 = class {
    constructor(t32) {
      this._json = t32;
    }
    get schema() {
      return this._json.schema;
    }
    get batches() {
      return this._json.batches || [];
    }
    get dictionaries() {
      return this._json.dictionaries || [];
    }
  };
  var br3 = class {
    tee() {
      return this._getDOMStream().tee();
    }
    pipe(t32, e26) {
      return this._getNodeStream().pipe(t32, e26);
    }
    pipeTo(t32, e26) {
      return this._getDOMStream().pipeTo(t32, e26);
    }
    pipeThrough(t32, e26) {
      return this._getDOMStream().pipeThrough(t32, e26);
    }
    _getDOMStream() {
      return this._DOMStream || (this._DOMStream = this.toDOMStream());
    }
    _getNodeStream() {
      return this._nodeStream || (this._nodeStream = this.toNodeStream());
    }
  };
  var _s3 = class extends br3 {
    constructor() {
      super(), this._values = [], this.resolvers = [], this._closedPromise = new Promise((t32) => this._closedPromiseResolve = t32);
    }
    get closed() {
      return this._closedPromise;
    }
    cancel(t32) {
      return D6(this, void 0, void 0, function* () {
        yield this.return(t32);
      });
    }
    write(t32) {
      this._ensureOpen() && (this.resolvers.length <= 0 ? this._values.push(t32) : this.resolvers.shift().resolve({ done: false, value: t32 }));
    }
    abort(t32) {
      this._closedPromiseResolve && (this.resolvers.length <= 0 ? this._error = { error: t32 } : this.resolvers.shift().reject({ done: true, value: t32 }));
    }
    close() {
      if (this._closedPromiseResolve) {
        let { resolvers: t32 } = this;
        for (; t32.length > 0; )
          t32.shift().resolve(P6);
        this._closedPromiseResolve(), this._closedPromiseResolve = void 0;
      }
    }
    [Symbol.asyncIterator]() {
      return this;
    }
    toDOMStream(t32) {
      return rt4.toDOMStream(this._closedPromiseResolve || this._error ? this : this._values, t32);
    }
    toNodeStream(t32) {
      return rt4.toNodeStream(this._closedPromiseResolve || this._error ? this : this._values, t32);
    }
    throw(t32) {
      return D6(this, void 0, void 0, function* () {
        return yield this.abort(t32), P6;
      });
    }
    return(t32) {
      return D6(this, void 0, void 0, function* () {
        return yield this.close(), P6;
      });
    }
    read(t32) {
      return D6(this, void 0, void 0, function* () {
        return (yield this.next(t32, "read")).value;
      });
    }
    peek(t32) {
      return D6(this, void 0, void 0, function* () {
        return (yield this.next(t32, "peek")).value;
      });
    }
    next(...t32) {
      return this._values.length > 0 ? Promise.resolve({ done: false, value: this._values.shift() }) : this._error ? Promise.reject({ done: true, value: this._error.error }) : this._closedPromiseResolve ? new Promise((e26, i29) => {
        this.resolvers.push({ resolve: e26, reject: i29 });
      }) : Promise.resolve(P6);
    }
    _ensureOpen() {
      if (this._closedPromiseResolve)
        return true;
      throw new Error("AsyncQueue is closed");
    }
  };
  var Zt4 = class extends _s3 {
    write(t32) {
      if ((t32 = S6(t32)).byteLength > 0)
        return super.write(t32);
    }
    toString(t32 = false) {
      return t32 ? Vi3(this.toUint8Array(true)) : this.toUint8Array(false).then(Vi3);
    }
    toUint8Array(t32 = false) {
      return t32 ? xt4(this._values)[0] : D6(this, void 0, void 0, function* () {
        var e26, i29, n37, s29;
        let o35 = [], a27 = 0;
        try {
          for (var c30 = true, u30 = V5(this), d25; d25 = yield u30.next(), e26 = d25.done, !e26; c30 = true) {
            s29 = d25.value, c30 = false;
            let p24 = s29;
            o35.push(p24), a27 += p24.byteLength;
          }
        } catch (p24) {
          i29 = { error: p24 };
        } finally {
          try {
            !c30 && !e26 && (n37 = u30.return) && (yield n37.call(u30));
          } finally {
            if (i29)
              throw i29.error;
          }
        }
        return xt4(o35, a27)[0];
      });
    }
  };
  var Xt4 = class {
    constructor(t32) {
      t32 && (this.source = new xo3(rt4.fromIterable(t32)));
    }
    [Symbol.iterator]() {
      return this;
    }
    next(t32) {
      return this.source.next(t32);
    }
    throw(t32) {
      return this.source.throw(t32);
    }
    return(t32) {
      return this.source.return(t32);
    }
    peek(t32) {
      return this.source.peek(t32);
    }
    read(t32) {
      return this.source.read(t32);
    }
  };
  var Mt4 = class r42 {
    constructor(t32) {
      t32 instanceof r42 ? this.source = t32.source : t32 instanceof Zt4 ? this.source = new xe3(rt4.fromAsyncIterable(t32)) : In3(t32) ? this.source = new xe3(rt4.fromNodeStream(t32)) : Ri3(t32) ? this.source = new xe3(rt4.fromDOMStream(t32)) : vn3(t32) ? this.source = new xe3(rt4.fromDOMStream(t32.body)) : zt4(t32) ? this.source = new xe3(rt4.fromIterable(t32)) : Dt4(t32) ? this.source = new xe3(rt4.fromAsyncIterable(t32)) : Lt4(t32) && (this.source = new xe3(rt4.fromAsyncIterable(t32)));
    }
    [Symbol.asyncIterator]() {
      return this;
    }
    next(t32) {
      return this.source.next(t32);
    }
    throw(t32) {
      return this.source.throw(t32);
    }
    return(t32) {
      return this.source.return(t32);
    }
    get closed() {
      return this.source.closed;
    }
    cancel(t32) {
      return this.source.cancel(t32);
    }
    peek(t32) {
      return this.source.peek(t32);
    }
    read(t32) {
      return this.source.read(t32);
    }
  };
  var xo3 = class {
    constructor(t32) {
      this.source = t32;
    }
    cancel(t32) {
      this.return(t32);
    }
    peek(t32) {
      return this.next(t32, "peek").value;
    }
    read(t32) {
      return this.next(t32, "read").value;
    }
    next(t32, e26 = "read") {
      return this.source.next({ cmd: e26, size: t32 });
    }
    throw(t32) {
      return Object.create(this.source.throw && this.source.throw(t32) || P6);
    }
    return(t32) {
      return Object.create(this.source.return && this.source.return(t32) || P6);
    }
  };
  var xe3 = class {
    constructor(t32) {
      this.source = t32, this._closedPromise = new Promise((e26) => this._closedPromiseResolve = e26);
    }
    cancel(t32) {
      return D6(this, void 0, void 0, function* () {
        yield this.return(t32);
      });
    }
    get closed() {
      return this._closedPromise;
    }
    read(t32) {
      return D6(this, void 0, void 0, function* () {
        return (yield this.next(t32, "read")).value;
      });
    }
    peek(t32) {
      return D6(this, void 0, void 0, function* () {
        return (yield this.next(t32, "peek")).value;
      });
    }
    next(t32) {
      return D6(this, arguments, void 0, function* (e26, i29 = "read") {
        return yield this.source.next({ cmd: i29, size: e26 });
      });
    }
    throw(t32) {
      return D6(this, void 0, void 0, function* () {
        let e26 = this.source.throw && (yield this.source.throw(t32)) || P6;
        return this._closedPromiseResolve && this._closedPromiseResolve(), this._closedPromiseResolve = void 0, Object.create(e26);
      });
    }
    return(t32) {
      return D6(this, void 0, void 0, function* () {
        let e26 = this.source.return && (yield this.source.return(t32)) || P6;
        return this._closedPromiseResolve && this._closedPromiseResolve(), this._closedPromiseResolve = void 0, Object.create(e26);
      });
    }
  };
  var on3 = class extends Xt4 {
    constructor(t32, e26) {
      super(), this.position = 0, this.buffer = S6(t32), this.size = e26 === void 0 ? this.buffer.byteLength : e26;
    }
    readInt32(t32) {
      let { buffer: e26, byteOffset: i29 } = this.readAt(t32, 4);
      return new DataView(e26, i29).getInt32(0, true);
    }
    seek(t32) {
      return this.position = Math.min(t32, this.size), t32 < this.size;
    }
    read(t32) {
      let { buffer: e26, size: i29, position: n37 } = this;
      return e26 && n37 < i29 ? (typeof t32 != "number" && (t32 = Number.POSITIVE_INFINITY), this.position = Math.min(i29, n37 + Math.min(i29 - n37, t32)), e26.subarray(n37, this.position)) : null;
    }
    readAt(t32, e26) {
      let i29 = this.buffer, n37 = Math.min(this.size, t32 + e26);
      return i29 ? i29.subarray(t32, n37) : new Uint8Array(e26);
    }
    close() {
      this.buffer && (this.buffer = null);
    }
    throw(t32) {
      return this.close(), { done: true, value: t32 };
    }
    return(t32) {
      return this.close(), { done: true, value: t32 };
    }
  };
  var He3 = class extends Mt4 {
    constructor(t32, e26) {
      super(), this.position = 0, this._handle = t32, typeof e26 == "number" ? this.size = e26 : this._pending = D6(this, void 0, void 0, function* () {
        this.size = (yield t32.stat()).size, delete this._pending;
      });
    }
    readInt32(t32) {
      return D6(this, void 0, void 0, function* () {
        let { buffer: e26, byteOffset: i29 } = yield this.readAt(t32, 4);
        return new DataView(e26, i29).getInt32(0, true);
      });
    }
    seek(t32) {
      return D6(this, void 0, void 0, function* () {
        return this._pending && (yield this._pending), this.position = Math.min(t32, this.size), t32 < this.size;
      });
    }
    read(t32) {
      return D6(this, void 0, void 0, function* () {
        this._pending && (yield this._pending);
        let { _handle: e26, size: i29, position: n37 } = this;
        if (e26 && n37 < i29) {
          typeof t32 != "number" && (t32 = Number.POSITIVE_INFINITY);
          let s29 = n37, o35 = 0, a27 = 0, c30 = Math.min(i29, s29 + Math.min(i29 - s29, t32)), u30 = new Uint8Array(Math.max(0, (this.position = c30) - s29));
          for (; (s29 += a27) < c30 && (o35 += a27) < u30.byteLength; )
            ({ bytesRead: a27 } = yield e26.read(u30, o35, u30.byteLength - o35, s29));
          return u30;
        }
        return null;
      });
    }
    readAt(t32, e26) {
      return D6(this, void 0, void 0, function* () {
        this._pending && (yield this._pending);
        let { _handle: i29, size: n37 } = this;
        if (i29 && t32 + e26 < n37) {
          let s29 = Math.min(n37, t32 + e26), o35 = new Uint8Array(s29 - t32);
          return (yield i29.read(o35, 0, e26, t32)).buffer;
        }
        return new Uint8Array(e26);
      });
    }
    close() {
      return D6(this, void 0, void 0, function* () {
        let t32 = this._handle;
        this._handle = null, t32 && (yield t32.close());
      });
    }
    throw(t32) {
      return D6(this, void 0, void 0, function* () {
        return yield this.close(), { done: true, value: t32 };
      });
    }
    return(t32) {
      return D6(this, void 0, void 0, function* () {
        return yield this.close(), { done: true, value: t32 };
      });
    }
  };
  var Fo3 = {};
  rr3(Fo3, { BaseInt64: () => an3, Int128: () => cn3, Int64: () => Ae4, Uint64: () => H6 });
  function ai2(r91) {
    return r91 < 0 && (r91 = 4294967295 + r91 + 1), `0x${r91.toString(16)}`;
  }
  var ci3 = 8;
  var Ao3 = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8];
  var an3 = class {
    constructor(t32) {
      this.buffer = t32;
    }
    high() {
      return this.buffer[1];
    }
    low() {
      return this.buffer[0];
    }
    _times(t32) {
      let e26 = new Uint32Array([this.buffer[1] >>> 16, this.buffer[1] & 65535, this.buffer[0] >>> 16, this.buffer[0] & 65535]), i29 = new Uint32Array([t32.buffer[1] >>> 16, t32.buffer[1] & 65535, t32.buffer[0] >>> 16, t32.buffer[0] & 65535]), n37 = e26[3] * i29[3];
      this.buffer[0] = n37 & 65535;
      let s29 = n37 >>> 16;
      return n37 = e26[2] * i29[3], s29 += n37, n37 = e26[3] * i29[2] >>> 0, s29 += n37, this.buffer[0] += s29 << 16, this.buffer[1] = s29 >>> 0 < n37 ? 65536 : 0, this.buffer[1] += s29 >>> 16, this.buffer[1] += e26[1] * i29[3] + e26[2] * i29[2] + e26[3] * i29[1], this.buffer[1] += e26[0] * i29[3] + e26[1] * i29[2] + e26[2] * i29[1] + e26[3] * i29[0] << 16, this;
    }
    _plus(t32) {
      let e26 = this.buffer[0] + t32.buffer[0] >>> 0;
      this.buffer[1] += t32.buffer[1], e26 < this.buffer[0] >>> 0 && ++this.buffer[1], this.buffer[0] = e26;
    }
    lessThan(t32) {
      return this.buffer[1] < t32.buffer[1] || this.buffer[1] === t32.buffer[1] && this.buffer[0] < t32.buffer[0];
    }
    equals(t32) {
      return this.buffer[1] === t32.buffer[1] && this.buffer[0] == t32.buffer[0];
    }
    greaterThan(t32) {
      return t32.lessThan(this);
    }
    hex() {
      return `${ai2(this.buffer[1])} ${ai2(this.buffer[0])}`;
    }
  };
  var H6 = class r43 extends an3 {
    times(t32) {
      return this._times(t32), this;
    }
    plus(t32) {
      return this._plus(t32), this;
    }
    static from(t32, e26 = new Uint32Array(2)) {
      return r43.fromString(typeof t32 == "string" ? t32 : t32.toString(), e26);
    }
    static fromNumber(t32, e26 = new Uint32Array(2)) {
      return r43.fromString(t32.toString(), e26);
    }
    static fromString(t32, e26 = new Uint32Array(2)) {
      let i29 = t32.length, n37 = new r43(e26);
      for (let s29 = 0; s29 < i29; ) {
        let o35 = ci3 < i29 - s29 ? ci3 : i29 - s29, a27 = new r43(new Uint32Array([Number.parseInt(t32.slice(s29, s29 + o35), 10), 0])), c30 = new r43(new Uint32Array([Ao3[o35], 0]));
        n37.times(c30), n37.plus(a27), s29 += o35;
      }
      return n37;
    }
    static convertArray(t32) {
      let e26 = new Uint32Array(t32.length * 2);
      for (let i29 = -1, n37 = t32.length; ++i29 < n37; )
        r43.from(t32[i29], new Uint32Array(e26.buffer, e26.byteOffset + 2 * i29 * 4, 2));
      return e26;
    }
    static multiply(t32, e26) {
      return new r43(new Uint32Array(t32.buffer)).times(e26);
    }
    static add(t32, e26) {
      return new r43(new Uint32Array(t32.buffer)).plus(e26);
    }
  };
  var Ae4 = class r44 extends an3 {
    negate() {
      return this.buffer[0] = ~this.buffer[0] + 1, this.buffer[1] = ~this.buffer[1], this.buffer[0] == 0 && ++this.buffer[1], this;
    }
    times(t32) {
      return this._times(t32), this;
    }
    plus(t32) {
      return this._plus(t32), this;
    }
    lessThan(t32) {
      let e26 = this.buffer[1] << 0, i29 = t32.buffer[1] << 0;
      return e26 < i29 || e26 === i29 && this.buffer[0] < t32.buffer[0];
    }
    static from(t32, e26 = new Uint32Array(2)) {
      return r44.fromString(typeof t32 == "string" ? t32 : t32.toString(), e26);
    }
    static fromNumber(t32, e26 = new Uint32Array(2)) {
      return r44.fromString(t32.toString(), e26);
    }
    static fromString(t32, e26 = new Uint32Array(2)) {
      let i29 = t32.startsWith("-"), n37 = t32.length, s29 = new r44(e26);
      for (let o35 = i29 ? 1 : 0; o35 < n37; ) {
        let a27 = ci3 < n37 - o35 ? ci3 : n37 - o35, c30 = new r44(new Uint32Array([Number.parseInt(t32.slice(o35, o35 + a27), 10), 0])), u30 = new r44(new Uint32Array([Ao3[a27], 0]));
        s29.times(u30), s29.plus(c30), o35 += a27;
      }
      return i29 ? s29.negate() : s29;
    }
    static convertArray(t32) {
      let e26 = new Uint32Array(t32.length * 2);
      for (let i29 = -1, n37 = t32.length; ++i29 < n37; )
        r44.from(t32[i29], new Uint32Array(e26.buffer, e26.byteOffset + 2 * i29 * 4, 2));
      return e26;
    }
    static multiply(t32, e26) {
      return new r44(new Uint32Array(t32.buffer)).times(e26);
    }
    static add(t32, e26) {
      return new r44(new Uint32Array(t32.buffer)).plus(e26);
    }
  };
  var cn3 = class r45 {
    constructor(t32) {
      this.buffer = t32;
    }
    high() {
      return new Ae4(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));
    }
    low() {
      return new Ae4(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));
    }
    negate() {
      return this.buffer[0] = ~this.buffer[0] + 1, this.buffer[1] = ~this.buffer[1], this.buffer[2] = ~this.buffer[2], this.buffer[3] = ~this.buffer[3], this.buffer[0] == 0 && ++this.buffer[1], this.buffer[1] == 0 && ++this.buffer[2], this.buffer[2] == 0 && ++this.buffer[3], this;
    }
    times(t32) {
      let e26 = new H6(new Uint32Array([this.buffer[3], 0])), i29 = new H6(new Uint32Array([this.buffer[2], 0])), n37 = new H6(new Uint32Array([this.buffer[1], 0])), s29 = new H6(new Uint32Array([this.buffer[0], 0])), o35 = new H6(new Uint32Array([t32.buffer[3], 0])), a27 = new H6(new Uint32Array([t32.buffer[2], 0])), c30 = new H6(new Uint32Array([t32.buffer[1], 0])), u30 = new H6(new Uint32Array([t32.buffer[0], 0])), d25 = H6.multiply(s29, u30);
      this.buffer[0] = d25.low();
      let p24 = new H6(new Uint32Array([d25.high(), 0]));
      return d25 = H6.multiply(n37, u30), p24.plus(d25), d25 = H6.multiply(s29, c30), p24.plus(d25), this.buffer[1] = p24.low(), this.buffer[3] = p24.lessThan(d25) ? 1 : 0, this.buffer[2] = p24.high(), new H6(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2)).plus(H6.multiply(i29, u30)).plus(H6.multiply(n37, c30)).plus(H6.multiply(s29, a27)), this.buffer[3] += H6.multiply(e26, u30).plus(H6.multiply(i29, c30)).plus(H6.multiply(n37, a27)).plus(H6.multiply(s29, o35)).low(), this;
    }
    plus(t32) {
      let e26 = new Uint32Array(4);
      return e26[3] = this.buffer[3] + t32.buffer[3] >>> 0, e26[2] = this.buffer[2] + t32.buffer[2] >>> 0, e26[1] = this.buffer[1] + t32.buffer[1] >>> 0, e26[0] = this.buffer[0] + t32.buffer[0] >>> 0, e26[0] < this.buffer[0] >>> 0 && ++e26[1], e26[1] < this.buffer[1] >>> 0 && ++e26[2], e26[2] < this.buffer[2] >>> 0 && ++e26[3], this.buffer[3] = e26[3], this.buffer[2] = e26[2], this.buffer[1] = e26[1], this.buffer[0] = e26[0], this;
    }
    hex() {
      return `${ai2(this.buffer[3])} ${ai2(this.buffer[2])} ${ai2(this.buffer[1])} ${ai2(this.buffer[0])}`;
    }
    static multiply(t32, e26) {
      return new r45(new Uint32Array(t32.buffer)).times(e26);
    }
    static add(t32, e26) {
      return new r45(new Uint32Array(t32.buffer)).plus(e26);
    }
    static from(t32, e26 = new Uint32Array(4)) {
      return r45.fromString(typeof t32 == "string" ? t32 : t32.toString(), e26);
    }
    static fromNumber(t32, e26 = new Uint32Array(4)) {
      return r45.fromString(t32.toString(), e26);
    }
    static fromString(t32, e26 = new Uint32Array(4)) {
      let i29 = t32.startsWith("-"), n37 = t32.length, s29 = new r45(e26);
      for (let o35 = i29 ? 1 : 0; o35 < n37; ) {
        let a27 = ci3 < n37 - o35 ? ci3 : n37 - o35, c30 = new r45(new Uint32Array([Number.parseInt(t32.slice(o35, o35 + a27), 10), 0, 0, 0])), u30 = new r45(new Uint32Array([Ao3[a27], 0, 0, 0]));
        s29.times(u30), s29.plus(c30), o35 += a27;
      }
      return i29 ? s29.negate() : s29;
    }
    static convertArray(t32) {
      let e26 = new Uint32Array(t32.length * 4);
      for (let i29 = -1, n37 = t32.length; ++i29 < n37; )
        r45.from(t32[i29], new Uint32Array(e26.buffer, e26.byteOffset + 4 * 4 * i29, 4));
      return e26;
    }
  };
  var ln3 = class extends g6 {
    constructor(t32, e26, i29, n37, s29 = V6.V5) {
      super(), this.nodesIndex = -1, this.buffersIndex = -1, this.bytes = t32, this.nodes = e26, this.buffers = i29, this.dictionaries = n37, this.metadataVersion = s29;
    }
    visit(t32) {
      return super.visit(t32 instanceof T6 ? t32.type : t32);
    }
    visitNull(t32, { length: e26 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26 });
    }
    visitBool(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitInt(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitFloat(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitUtf8(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), valueOffsets: this.readOffsets(t32), data: this.readData(t32) });
    }
    visitLargeUtf8(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), valueOffsets: this.readOffsets(t32), data: this.readData(t32) });
    }
    visitBinary(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), valueOffsets: this.readOffsets(t32), data: this.readData(t32) });
    }
    visitLargeBinary(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), valueOffsets: this.readOffsets(t32), data: this.readData(t32) });
    }
    visitFixedSizeBinary(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitDate(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitTimestamp(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitTime(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitDecimal(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitList(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), valueOffsets: this.readOffsets(t32), child: this.visit(t32.children[0]) });
    }
    visitStruct(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), children: this.visitMany(t32.children) });
    }
    visitUnion(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return this.metadataVersion < V6.V5 && this.readNullBitmap(t32, i29), t32.mode === U6.Sparse ? this.visitSparseUnion(t32, { length: e26, nullCount: i29 }) : this.visitDenseUnion(t32, { length: e26, nullCount: i29 });
    }
    visitDenseUnion(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, typeIds: this.readTypeIds(t32), valueOffsets: this.readOffsets(t32), children: this.visitMany(t32.children) });
    }
    visitSparseUnion(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, typeIds: this.readTypeIds(t32), children: this.visitMany(t32.children) });
    }
    visitDictionary(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32.indices), dictionary: this.readDictionary(t32) });
    }
    visitInterval(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitDuration(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), data: this.readData(t32) });
    }
    visitFixedSizeList(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), child: this.visit(t32.children[0]) });
    }
    visitMap(t32, { length: e26, nullCount: i29 } = this.nextFieldNode()) {
      return y5({ type: t32, length: e26, nullCount: i29, nullBitmap: this.readNullBitmap(t32, i29), valueOffsets: this.readOffsets(t32), child: this.visit(t32.children[0]) });
    }
    nextFieldNode() {
      return this.nodes[++this.nodesIndex];
    }
    nextBufferRange() {
      return this.buffers[++this.buffersIndex];
    }
    readNullBitmap(t32, e26, i29 = this.nextBufferRange()) {
      return e26 > 0 && this.readData(t32, i29) || new Uint8Array(0);
    }
    readOffsets(t32, e26) {
      return this.readData(t32, e26);
    }
    readTypeIds(t32, e26) {
      return this.readData(t32, e26);
    }
    readData(t32, { length: e26, offset: i29 } = this.nextBufferRange()) {
      return this.bytes.subarray(i29, i29 + e26);
    }
    readDictionary(t32) {
      return this.dictionaries.get(t32.id);
    }
  };
  var vs3 = class extends ln3 {
    constructor(t32, e26, i29, n37, s29) {
      super(new Uint8Array(0), e26, i29, n37, s29), this.sources = t32;
    }
    readNullBitmap(t32, e26, { offset: i29 } = this.nextBufferRange()) {
      return e26 <= 0 ? new Uint8Array(0) : pr3(this.sources[i29]);
    }
    readOffsets(t32, { offset: e26 } = this.nextBufferRange()) {
      return O7(Uint8Array, O7(t32.OffsetArrayType, this.sources[e26]));
    }
    readTypeIds(t32, { offset: e26 } = this.nextBufferRange()) {
      return O7(Uint8Array, O7(t32.ArrayType, this.sources[e26]));
    }
    readData(t32, { offset: e26 } = this.nextBufferRange()) {
      let { sources: i29 } = this;
      return f5.isTimestamp(t32) ? O7(Uint8Array, Ae4.convertArray(i29[e26])) : (f5.isInt(t32) || f5.isTime(t32)) && t32.bitWidth === 64 || f5.isDuration(t32) ? O7(Uint8Array, Ae4.convertArray(i29[e26])) : f5.isDate(t32) && t32.unit === k6.MILLISECOND ? O7(Uint8Array, Ae4.convertArray(i29[e26])) : f5.isDecimal(t32) ? O7(Uint8Array, cn3.convertArray(i29[e26])) : f5.isBinary(t32) || f5.isLargeBinary(t32) || f5.isFixedSizeBinary(t32) ? id(i29[e26]) : f5.isBool(t32) ? pr3(i29[e26]) : f5.isUtf8(t32) || f5.isLargeUtf8(t32) ? ie5(i29[e26].join("")) : O7(Uint8Array, O7(t32.ArrayType, i29[e26].map((n37) => +n37)));
    }
  };
  function id(r91) {
    let t32 = r91.join(""), e26 = new Uint8Array(t32.length / 2);
    for (let i29 = 0; i29 < t32.length; i29 += 2)
      e26[i29 >> 1] = Number.parseInt(t32.slice(i29, i29 + 2), 16);
    return e26;
  }
  var Je3 = class extends _t4 {
    constructor(t32) {
      super(t32), this._values = new Gt4(Uint8Array);
    }
    get byteLength() {
      let t32 = this._pendingLength + this.length * 4;
      return this._offsets && (t32 += this._offsets.byteLength), this._values && (t32 += this._values.byteLength), this._nulls && (t32 += this._nulls.byteLength), t32;
    }
    setValue(t32, e26) {
      return super.setValue(t32, S6(e26));
    }
    _flushPending(t32, e26) {
      let i29 = this._offsets, n37 = this._values.reserve(e26).buffer, s29 = 0;
      for (let [o35, a27] of t32)
        if (a27 === void 0)
          i29.set(o35, 0);
        else {
          let c30 = a27.length;
          n37.set(a27, s29), i29.set(o35, c30), s29 += c30;
        }
    }
  };
  var Ge2 = class extends _t4 {
    constructor(t32) {
      super(t32), this._values = new Gt4(Uint8Array);
    }
    get byteLength() {
      let t32 = this._pendingLength + this.length * 4;
      return this._offsets && (t32 += this._offsets.byteLength), this._values && (t32 += this._values.byteLength), this._nulls && (t32 += this._nulls.byteLength), t32;
    }
    setValue(t32, e26) {
      return super.setValue(t32, S6(e26));
    }
    _flushPending(t32, e26) {
      let i29 = this._offsets, n37 = this._values.reserve(e26).buffer, s29 = 0;
      for (let [o35, a27] of t32)
        if (a27 === void 0)
          i29.set(o35, BigInt(0));
        else {
          let c30 = a27.length;
          n37.set(a27, s29), i29.set(o35, BigInt(c30)), s29 += c30;
        }
    }
  };
  var li2 = class extends z5 {
    constructor(t32) {
      super(t32), this._values = new si3();
    }
    setValue(t32, e26) {
      this._values.set(t32, +e26);
    }
  };
  var Fe3 = class extends Z6 {
  };
  Fe3.prototype._setValue = oo3;
  var vr3 = class extends Fe3 {
  };
  vr3.prototype._setValue = Hn3;
  var wr3 = class extends Fe3 {
  };
  wr3.prototype._setValue = Jn3;
  var Ir3 = class extends Z6 {
  };
  Ir3.prototype._setValue = lo3;
  var ui2 = class extends z5 {
    constructor({ type: t32, nullValues: e26, dictionaryHashFunction: i29 }) {
      super({ type: new ot4(t32.dictionary, t32.indices, t32.id, t32.isOrdered) }), this._nulls = null, this._dictionaryOffset = 0, this._keysToIndices = /* @__PURE__ */ Object.create(null), this.indices = pe4({ type: this.type.indices, nullValues: e26 }), this.dictionary = pe4({ type: this.type.dictionary, nullValues: null }), typeof i29 == "function" && (this.valueToKey = i29);
    }
    get values() {
      return this.indices.values;
    }
    get nullCount() {
      return this.indices.nullCount;
    }
    get nullBitmap() {
      return this.indices.nullBitmap;
    }
    get byteLength() {
      return this.indices.byteLength + this.dictionary.byteLength;
    }
    get reservedLength() {
      return this.indices.reservedLength + this.dictionary.reservedLength;
    }
    get reservedByteLength() {
      return this.indices.reservedByteLength + this.dictionary.reservedByteLength;
    }
    isValid(t32) {
      return this.indices.isValid(t32);
    }
    setValid(t32, e26) {
      let i29 = this.indices;
      return e26 = i29.setValid(t32, e26), this.length = i29.length, e26;
    }
    setValue(t32, e26) {
      let i29 = this._keysToIndices, n37 = this.valueToKey(e26), s29 = i29[n37];
      return s29 === void 0 && (i29[n37] = s29 = this._dictionaryOffset + this.dictionary.append(e26).length - 1), this.indices.setValue(t32, s29);
    }
    flush() {
      let t32 = this.type, e26 = this._dictionary, i29 = this.dictionary.toVector(), n37 = this.indices.flush().clone(t32);
      return n37.dictionary = e26 ? e26.concat(i29) : i29, this.finished || (this._dictionaryOffset += i29.length), this._dictionary = n37.dictionary, this.clear(), n37;
    }
    finish() {
      return this.indices.finish(), this.dictionary.finish(), this._dictionaryOffset = 0, this._keysToIndices = /* @__PURE__ */ Object.create(null), super.finish();
    }
    clear() {
      return this.indices.clear(), this.dictionary.clear(), super.clear();
    }
    valueToKey(t32) {
      return typeof t32 == "string" ? t32 : `${t32}`;
    }
  };
  var Sr3 = class extends Z6 {
  };
  Sr3.prototype._setValue = so3;
  var di3 = class extends z5 {
    setValue(t32, e26) {
      let [i29] = this.children, n37 = t32 * this.stride;
      for (let s29 = -1, o35 = e26.length; ++s29 < o35; )
        i29.set(n37 + s29, e26[s29]);
    }
    addChild(t32, e26 = "0") {
      if (this.numChildren > 0)
        throw new Error("FixedSizeListBuilder can only have one child.");
      let i29 = this.children.push(t32);
      return this.type = new Rt4(this.type.listSize, new T6(e26, t32.type, true)), i29;
    }
  };
  var Te5 = class extends Z6 {
    setValue(t32, e26) {
      this._values.set(t32, e26);
    }
  };
  var hi3 = class extends Te5 {
    setValue(t32, e26) {
      super.setValue(t32, qi3(e26));
    }
  };
  var fi3 = class extends Te5 {
  };
  var pi2 = class extends Te5 {
  };
  var Oe4 = class extends Z6 {
  };
  Oe4.prototype._setValue = uo3;
  var Br3 = class extends Oe4 {
  };
  Br3.prototype._setValue = rs3;
  var Dr3 = class extends Oe4 {
  };
  Dr3.prototype._setValue = is3;
  var qt4 = class extends Z6 {
  };
  qt4.prototype._setValue = ho3;
  var xr3 = class extends qt4 {
  };
  xr3.prototype._setValue = ns3;
  var Ar3 = class extends qt4 {
  };
  Ar3.prototype._setValue = ss3;
  var Fr3 = class extends qt4 {
  };
  Fr3.prototype._setValue = os3;
  var Tr3 = class extends qt4 {
  };
  Tr3.prototype._setValue = as3;
  var vt4 = class extends Z6 {
    setValue(t32, e26) {
      this._values.set(t32, e26);
    }
  };
  var mi3 = class extends vt4 {
  };
  var yi2 = class extends vt4 {
  };
  var gi3 = class extends vt4 {
  };
  var bi3 = class extends vt4 {
  };
  var _i3 = class extends vt4 {
  };
  var vi3 = class extends vt4 {
  };
  var wi3 = class extends vt4 {
  };
  var Ii3 = class extends vt4 {
  };
  var Si3 = class extends _t4 {
    constructor(t32) {
      super(t32), this._offsets = new oi2(t32.type);
    }
    addChild(t32, e26 = "0") {
      if (this.numChildren > 0)
        throw new Error("ListBuilder can only have one child.");
      return this.children[this.numChildren] = t32, this.type = new gt4(new T6(e26, t32.type, true)), this.numChildren - 1;
    }
    _flushPending(t32) {
      let e26 = this._offsets, [i29] = this.children;
      for (let [n37, s29] of t32)
        if (typeof s29 > "u")
          e26.set(n37, 0);
        else {
          let o35 = s29, a27 = o35.length, c30 = e26.set(n37, a27).buffer[n37];
          for (let u30 = -1; ++u30 < a27; )
            i29.set(c30 + u30, o35[u30]);
        }
    }
  };
  var Bi3 = class extends _t4 {
    set(t32, e26) {
      return super.set(t32, e26);
    }
    setValue(t32, e26) {
      let i29 = e26 instanceof Map ? e26 : new Map(Object.entries(e26)), n37 = this._pending || (this._pending = /* @__PURE__ */ new Map()), s29 = n37.get(t32);
      s29 && (this._pendingLength -= s29.size), this._pendingLength += i29.size, n37.set(t32, i29);
    }
    addChild(t32, e26 = `${this.numChildren}`) {
      if (this.numChildren > 0)
        throw new Error("ListBuilder can only have one child.");
      return this.children[this.numChildren] = t32, this.type = new Ct4(new T6(e26, t32.type, true), this.type.keysSorted), this.numChildren - 1;
    }
    _flushPending(t32) {
      let e26 = this._offsets, [i29] = this.children;
      for (let [n37, s29] of t32)
        if (s29 === void 0)
          e26.set(n37, 0);
        else {
          let { [n37]: o35, [n37 + 1]: a27 } = e26.set(n37, s29.size).buffer;
          for (let c30 of s29.entries())
            if (i29.set(o35, c30), ++o35 >= a27)
              break;
        }
    }
  };
  var Di3 = class extends z5 {
    setValue(t32, e26) {
    }
    setValid(t32, e26) {
      return this.length = Math.max(t32 + 1, this.length), e26;
    }
  };
  var xi3 = class extends z5 {
    setValue(t32, e26) {
      let { children: i29, type: n37 } = this;
      switch (Array.isArray(e26) || e26.constructor) {
        case true:
          return n37.children.forEach((s29, o35) => i29[o35].set(t32, e26[o35]));
        case Map:
          return n37.children.forEach((s29, o35) => i29[o35].set(t32, e26.get(s29.name)));
        default:
          return n37.children.forEach((s29, o35) => i29[o35].set(t32, e26[s29.name]));
      }
    }
    setValid(t32, e26) {
      return super.setValid(t32, e26) || this.children.forEach((i29) => i29.setValid(t32, e26)), e26;
    }
    addChild(t32, e26 = `${this.numChildren}`) {
      let i29 = this.children.push(t32);
      return this.type = new C5([...this.type.children, new T6(e26, t32.type, true)]), i29;
    }
  };
  var Qt3 = class extends Z6 {
  };
  Qt3.prototype._setValue = ao3;
  var Or3 = class extends Qt3 {
  };
  Or3.prototype._setValue = Gn3;
  var Mr3 = class extends Qt3 {
  };
  Mr3.prototype._setValue = Kn2;
  var Lr3 = class extends Qt3 {
  };
  Lr3.prototype._setValue = Zn3;
  var Ur3 = class extends Qt3 {
  };
  Ur3.prototype._setValue = Xn3;
  var te6 = class extends Z6 {
  };
  te6.prototype._setValue = co3;
  var Nr3 = class extends te6 {
  };
  Nr3.prototype._setValue = qn3;
  var Er3 = class extends te6 {
  };
  Er3.prototype._setValue = Qn3;
  var Vr3 = class extends te6 {
  };
  Vr3.prototype._setValue = ts3;
  var Rr2 = class extends te6 {
  };
  Rr2.prototype._setValue = es3;
  var Ke2 = class extends z5 {
    constructor(t32) {
      super(t32), this._typeIds = new Be3(Int8Array, 0, 1), typeof t32.valueToChildTypeId == "function" && (this._valueToChildTypeId = t32.valueToChildTypeId);
    }
    get typeIdToChildIndex() {
      return this.type.typeIdToChildIndex;
    }
    append(t32, e26) {
      return this.set(this.length, t32, e26);
    }
    set(t32, e26, i29) {
      return i29 === void 0 && (i29 = this._valueToChildTypeId(this, e26, t32)), this.setValue(t32, e26, i29), this;
    }
    setValue(t32, e26, i29) {
      this._typeIds.set(t32, i29);
      let n37 = this.type.typeIdToChildIndex[i29], s29 = this.children[n37];
      s29?.set(t32, e26);
    }
    addChild(t32, e26 = `${this.children.length}`) {
      let i29 = this.children.push(t32), { type: { children: n37, mode: s29, typeIds: o35 } } = this, a27 = [...n37, new T6(e26, t32.type)];
      return this.type = new bt4(s29, [...o35, i29], a27), i29;
    }
    _valueToChildTypeId(t32, e26, i29) {
      throw new Error("Cannot map UnionBuilder value to child typeId. Pass the `childTypeId` as the second argument to unionBuilder.append(), or supply a `valueToChildTypeId` function as part of the UnionBuilder constructor options.");
    }
  };
  var Ai3 = class extends Ke2 {
  };
  var Fi3 = class extends Ke2 {
    constructor(t32) {
      super(t32), this._offsets = new Be3(Int32Array);
    }
    setValue(t32, e26, i29) {
      let n37 = this._typeIds.set(t32, i29).buffer[t32], s29 = this.getChildAt(this.type.typeIdToChildIndex[n37]), o35 = this._offsets.set(t32, s29.length).buffer[t32];
      s29?.set(o35, e26);
    }
  };
  var Cr3 = class extends _t4 {
    constructor(t32) {
      super(t32), this._values = new Gt4(Uint8Array);
    }
    get byteLength() {
      let t32 = this._pendingLength + this.length * 4;
      return this._offsets && (t32 += this._offsets.byteLength), this._values && (t32 += this._values.byteLength), this._nulls && (t32 += this._nulls.byteLength), t32;
    }
    setValue(t32, e26) {
      return super.setValue(t32, ie5(e26));
    }
    _flushPending(t32, e26) {
    }
  };
  Cr3.prototype._flushPending = Je3.prototype._flushPending;
  var kr3 = class extends _t4 {
    constructor(t32) {
      super(t32), this._values = new Gt4(Uint8Array);
    }
    get byteLength() {
      let t32 = this._pendingLength + this.length * 4;
      return this._offsets && (t32 += this._offsets.byteLength), this._values && (t32 += this._values.byteLength), this._nulls && (t32 += this._nulls.byteLength), t32;
    }
    setValue(t32, e26) {
      return super.setValue(t32, ie5(e26));
    }
    _flushPending(t32, e26) {
    }
  };
  kr3.prototype._flushPending = Ge2.prototype._flushPending;
  var To2 = class extends g6 {
    visitNull() {
      return Di3;
    }
    visitBool() {
      return li2;
    }
    visitInt() {
      return vt4;
    }
    visitInt8() {
      return mi3;
    }
    visitInt16() {
      return yi2;
    }
    visitInt32() {
      return gi3;
    }
    visitInt64() {
      return bi3;
    }
    visitUint8() {
      return _i3;
    }
    visitUint16() {
      return vi3;
    }
    visitUint32() {
      return wi3;
    }
    visitUint64() {
      return Ii3;
    }
    visitFloat() {
      return Te5;
    }
    visitFloat16() {
      return hi3;
    }
    visitFloat32() {
      return fi3;
    }
    visitFloat64() {
      return pi2;
    }
    visitUtf8() {
      return Cr3;
    }
    visitLargeUtf8() {
      return kr3;
    }
    visitBinary() {
      return Je3;
    }
    visitLargeBinary() {
      return Ge2;
    }
    visitFixedSizeBinary() {
      return Sr3;
    }
    visitDate() {
      return Fe3;
    }
    visitDateDay() {
      return vr3;
    }
    visitDateMillisecond() {
      return wr3;
    }
    visitTimestamp() {
      return Qt3;
    }
    visitTimestampSecond() {
      return Or3;
    }
    visitTimestampMillisecond() {
      return Mr3;
    }
    visitTimestampMicrosecond() {
      return Lr3;
    }
    visitTimestampNanosecond() {
      return Ur3;
    }
    visitTime() {
      return te6;
    }
    visitTimeSecond() {
      return Nr3;
    }
    visitTimeMillisecond() {
      return Er3;
    }
    visitTimeMicrosecond() {
      return Vr3;
    }
    visitTimeNanosecond() {
      return Rr2;
    }
    visitDecimal() {
      return Ir3;
    }
    visitList() {
      return Si3;
    }
    visitStruct() {
      return xi3;
    }
    visitUnion() {
      return Ke2;
    }
    visitDenseUnion() {
      return Fi3;
    }
    visitSparseUnion() {
      return Ai3;
    }
    visitDictionary() {
      return ui2;
    }
    visitInterval() {
      return Oe4;
    }
    visitIntervalDayTime() {
      return Br3;
    }
    visitIntervalYearMonth() {
      return Dr3;
    }
    visitDuration() {
      return qt4;
    }
    visitDurationSecond() {
      return xr3;
    }
    visitDurationMillisecond() {
      return Ar3;
    }
    visitDurationMicrosecond() {
      return Fr3;
    }
    visitDurationNanosecond() {
      return Tr3;
    }
    visitFixedSizeList() {
      return di3;
    }
    visitMap() {
      return Bi3;
    }
  };
  var Pc = new To2();
  var w6 = class extends g6 {
    compareSchemas(t32, e26) {
      return t32 === e26 || e26 instanceof t32.constructor && this.compareManyFields(t32.fields, e26.fields);
    }
    compareManyFields(t32, e26) {
      return t32 === e26 || Array.isArray(t32) && Array.isArray(e26) && t32.length === e26.length && t32.every((i29, n37) => this.compareFields(i29, e26[n37]));
    }
    compareFields(t32, e26) {
      return t32 === e26 || e26 instanceof t32.constructor && t32.name === e26.name && t32.nullable === e26.nullable && this.visit(t32.type, e26.type);
    }
  };
  function lt4(r91, t32) {
    return t32 instanceof r91.constructor;
  }
  function zr3(r91, t32) {
    return r91 === t32 || lt4(r91, t32);
  }
  function Me3(r91, t32) {
    return r91 === t32 || lt4(r91, t32) && r91.bitWidth === t32.bitWidth && r91.isSigned === t32.isSigned;
  }
  function ws3(r91, t32) {
    return r91 === t32 || lt4(r91, t32) && r91.precision === t32.precision;
  }
  function nd(r91, t32) {
    return r91 === t32 || lt4(r91, t32) && r91.byteWidth === t32.byteWidth;
  }
  function Oo2(r91, t32) {
    return r91 === t32 || lt4(r91, t32) && r91.unit === t32.unit;
  }
  function un3(r91, t32) {
    return r91 === t32 || lt4(r91, t32) && r91.unit === t32.unit && r91.timezone === t32.timezone;
  }
  function dn3(r91, t32) {
    return r91 === t32 || lt4(r91, t32) && r91.unit === t32.unit && r91.bitWidth === t32.bitWidth;
  }
  function sd(r91, t32) {
    return r91 === t32 || lt4(r91, t32) && r91.children.length === t32.children.length && me4.compareManyFields(r91.children, t32.children);
  }
  function od(r91, t32) {
    return r91 === t32 || lt4(r91, t32) && r91.children.length === t32.children.length && me4.compareManyFields(r91.children, t32.children);
  }
  function Mo2(r91, t32) {
    return r91 === t32 || lt4(r91, t32) && r91.mode === t32.mode && r91.typeIds.every((e26, i29) => e26 === t32.typeIds[i29]) && me4.compareManyFields(r91.children, t32.children);
  }
  function ad(r91, t32) {
    return r91 === t32 || lt4(r91, t32) && r91.id === t32.id && r91.isOrdered === t32.isOrdered && me4.visit(r91.indices, t32.indices) && me4.visit(r91.dictionary, t32.dictionary);
  }
  function Lo3(r91, t32) {
    return r91 === t32 || lt4(r91, t32) && r91.unit === t32.unit;
  }
  function hn3(r91, t32) {
    return r91 === t32 || lt4(r91, t32) && r91.unit === t32.unit;
  }
  function cd(r91, t32) {
    return r91 === t32 || lt4(r91, t32) && r91.listSize === t32.listSize && r91.children.length === t32.children.length && me4.compareManyFields(r91.children, t32.children);
  }
  function ld(r91, t32) {
    return r91 === t32 || lt4(r91, t32) && r91.keysSorted === t32.keysSorted && r91.children.length === t32.children.length && me4.compareManyFields(r91.children, t32.children);
  }
  w6.prototype.visitNull = zr3;
  w6.prototype.visitBool = zr3;
  w6.prototype.visitInt = Me3;
  w6.prototype.visitInt8 = Me3;
  w6.prototype.visitInt16 = Me3;
  w6.prototype.visitInt32 = Me3;
  w6.prototype.visitInt64 = Me3;
  w6.prototype.visitUint8 = Me3;
  w6.prototype.visitUint16 = Me3;
  w6.prototype.visitUint32 = Me3;
  w6.prototype.visitUint64 = Me3;
  w6.prototype.visitFloat = ws3;
  w6.prototype.visitFloat16 = ws3;
  w6.prototype.visitFloat32 = ws3;
  w6.prototype.visitFloat64 = ws3;
  w6.prototype.visitUtf8 = zr3;
  w6.prototype.visitLargeUtf8 = zr3;
  w6.prototype.visitBinary = zr3;
  w6.prototype.visitLargeBinary = zr3;
  w6.prototype.visitFixedSizeBinary = nd;
  w6.prototype.visitDate = Oo2;
  w6.prototype.visitDateDay = Oo2;
  w6.prototype.visitDateMillisecond = Oo2;
  w6.prototype.visitTimestamp = un3;
  w6.prototype.visitTimestampSecond = un3;
  w6.prototype.visitTimestampMillisecond = un3;
  w6.prototype.visitTimestampMicrosecond = un3;
  w6.prototype.visitTimestampNanosecond = un3;
  w6.prototype.visitTime = dn3;
  w6.prototype.visitTimeSecond = dn3;
  w6.prototype.visitTimeMillisecond = dn3;
  w6.prototype.visitTimeMicrosecond = dn3;
  w6.prototype.visitTimeNanosecond = dn3;
  w6.prototype.visitDecimal = zr3;
  w6.prototype.visitList = sd;
  w6.prototype.visitStruct = od;
  w6.prototype.visitUnion = Mo2;
  w6.prototype.visitDenseUnion = Mo2;
  w6.prototype.visitSparseUnion = Mo2;
  w6.prototype.visitDictionary = ad;
  w6.prototype.visitInterval = Lo3;
  w6.prototype.visitIntervalDayTime = Lo3;
  w6.prototype.visitIntervalYearMonth = Lo3;
  w6.prototype.visitDuration = hn3;
  w6.prototype.visitDurationSecond = hn3;
  w6.prototype.visitDurationMillisecond = hn3;
  w6.prototype.visitDurationMicrosecond = hn3;
  w6.prototype.visitDurationNanosecond = hn3;
  w6.prototype.visitFixedSizeList = cd;
  w6.prototype.visitMap = ld;
  var me4 = new w6();
  function Pr3(r91, t32) {
    return me4.compareSchemas(r91, t32);
  }
  function jc(r91, t32) {
    return me4.compareFields(r91, t32);
  }
  function Is3(r91, t32) {
    return me4.visit(r91, t32);
  }
  function pe4(r91) {
    let t32 = r91.type, e26 = new (Pc.getVisitFn(t32)())(r91);
    if (t32.children && t32.children.length > 0) {
      let i29 = r91.children || [], n37 = { nullValues: r91.nullValues }, s29 = Array.isArray(i29) ? (o35, a27) => i29[a27] || n37 : ({ name: o35 }) => i29[o35] || n37;
      for (let [o35, a27] of t32.children.entries()) {
        let { type: c30 } = a27, u30 = s29(a27, o35);
        e26.children.push(pe4(Object.assign(Object.assign({}, u30), { type: c30 })));
      }
    }
    return e26;
  }
  function Ds3(r91, t32) {
    return hd(r91, t32.map((e26) => e26.data.concat()));
  }
  function hd(r91, t32) {
    let e26 = [...r91.fields], i29 = [], n37 = { numBatches: t32.reduce((p24, W25) => Math.max(p24, W25.length), 0) }, s29 = 0, o35 = 0, a27 = -1, c30 = t32.length, u30, d25 = [];
    for (; n37.numBatches-- > 0; ) {
      for (o35 = Number.POSITIVE_INFINITY, a27 = -1; ++a27 < c30; )
        d25[a27] = u30 = t32[a27].shift(), o35 = Math.min(o35, u30 ? u30.length : o35);
      Number.isFinite(o35) && (d25 = fd(e26, o35, d25, t32, n37), o35 > 0 && (i29[s29++] = y5({ type: new C5(e26), length: o35, nullCount: 0, children: d25.slice() })));
    }
    return [r91 = r91.assign(e26), i29.map((p24) => new j7(r91, p24))];
  }
  function fd(r91, t32, e26, i29, n37) {
    var s29;
    let o35 = (t32 + 63 & -64) >> 3;
    for (let a27 = -1, c30 = i29.length; ++a27 < c30; ) {
      let u30 = e26[a27], d25 = u30?.length;
      if (d25 >= t32)
        d25 === t32 ? e26[a27] = u30 : (e26[a27] = u30.slice(0, t32), n37.numBatches = Math.max(n37.numBatches, i29[a27].unshift(u30.slice(t32, d25 - t32))));
      else {
        let p24 = r91[a27];
        r91[a27] = p24.clone({ nullable: true }), e26[a27] = (s29 = u30?._changeLengthAndBackfillNullBitmap(t32)) !== null && s29 !== void 0 ? s29 : y5({ type: p24.type, length: t32, nullCount: t32, nullBitmap: new Uint8Array(o35) });
      }
    }
    return e26;
  }
  var Yc;
  var tt4 = class r46 {
    constructor(...t32) {
      var e26, i29;
      if (t32.length === 0)
        return this.batches = [], this.schema = new E5([]), this._offsets = [0], this;
      let n37, s29;
      t32[0] instanceof E5 && (n37 = t32.shift()), t32.at(-1) instanceof Uint32Array && (s29 = t32.pop());
      let o35 = (c30) => {
        if (c30) {
          if (c30 instanceof j7)
            return [c30];
          if (c30 instanceof r46)
            return c30.batches;
          if (c30 instanceof L6) {
            if (c30.type instanceof C5)
              return [new j7(new E5(c30.type.children), c30)];
          } else {
            if (Array.isArray(c30))
              return c30.flatMap((u30) => o35(u30));
            if (typeof c30[Symbol.iterator] == "function")
              return [...c30].flatMap((u30) => o35(u30));
            if (typeof c30 == "object") {
              let u30 = Object.keys(c30), d25 = u30.map((X25) => new m5([c30[X25]])), p24 = n37 ?? new E5(u30.map((X25, Bt9) => new T6(String(X25), d25[Bt9].type, d25[Bt9].nullable))), [, W25] = Ds3(p24, d25);
              return W25.length === 0 ? [new j7(c30)] : W25;
            }
          }
        }
        return [];
      }, a27 = t32.flatMap((c30) => o35(c30));
      if (n37 = (i29 = n37 ?? ((e26 = a27[0]) === null || e26 === void 0 ? void 0 : e26.schema)) !== null && i29 !== void 0 ? i29 : new E5([]), !(n37 instanceof E5))
        throw new TypeError("Table constructor expects a [Schema, RecordBatch[]] pair.");
      for (let c30 of a27) {
        if (!(c30 instanceof j7))
          throw new TypeError("Table constructor expects a [Schema, RecordBatch[]] pair.");
        if (!Pr3(n37, c30.schema))
          throw new TypeError("Table and inner RecordBatch schemas must be equivalent.");
      }
      this.schema = n37, this.batches = a27, this._offsets = s29 ?? hs3(this.data);
    }
    get data() {
      return this.batches.map(({ data: t32 }) => t32);
    }
    get numCols() {
      return this.schema.fields.length;
    }
    get numRows() {
      return this.data.reduce((t32, e26) => t32 + e26.length, 0);
    }
    get nullCount() {
      return this._nullCount === -1 && (this._nullCount = ds3(this.data)), this._nullCount;
    }
    isValid(t32) {
      return false;
    }
    get(t32) {
      return null;
    }
    at(t32) {
      return this.get(hr3(t32, this.numRows));
    }
    set(t32, e26) {
    }
    indexOf(t32, e26) {
      return -1;
    }
    [Symbol.iterator]() {
      return this.batches.length > 0 ? ni2.visit(new m5(this.data)) : new Array(0)[Symbol.iterator]();
    }
    toArray() {
      return [...this];
    }
    toString() {
      return `[
  ${this.toArray().join(`,
  `)}
]`;
    }
    concat(...t32) {
      let e26 = this.schema, i29 = this.data.concat(t32.flatMap(({ data: n37 }) => n37));
      return new r46(e26, i29.map((n37) => new j7(e26, n37)));
    }
    slice(t32, e26) {
      let i29 = this.schema;
      [t32, e26] = Qi3({ length: this.numRows }, t32, e26);
      let n37 = fs3(this.data, this._offsets, t32, e26);
      return new r46(i29, n37.map((s29) => new j7(i29, s29)));
    }
    getChild(t32) {
      return this.getChildAt(this.schema.fields.findIndex((e26) => e26.name === t32));
    }
    getChildAt(t32) {
      if (t32 > -1 && t32 < this.schema.fields.length) {
        let e26 = this.data.map((i29) => i29.children[t32]);
        if (e26.length === 0) {
          let { type: i29 } = this.schema.fields[t32], n37 = y5({ type: i29, length: 0, nullCount: 0 });
          e26.push(n37._changeLengthAndBackfillNullBitmap(this.numRows));
        }
        return new m5(e26);
      }
      return null;
    }
    setChild(t32, e26) {
      var i29;
      return this.setChildAt((i29 = this.schema.fields) === null || i29 === void 0 ? void 0 : i29.findIndex((n37) => n37.name === t32), e26);
    }
    setChildAt(t32, e26) {
      let i29 = this.schema, n37 = [...this.batches];
      if (t32 > -1 && t32 < this.numCols) {
        e26 || (e26 = new m5([y5({ type: new et4(), length: this.numRows })]));
        let s29 = i29.fields.slice(), o35 = s29[t32].clone({ type: e26.type }), a27 = this.schema.fields.map((c30, u30) => this.getChildAt(u30));
        [s29[t32], a27[t32]] = [o35, e26], [i29, n37] = Ds3(i29, a27);
      }
      return new r46(i29, n37);
    }
    select(t32) {
      let e26 = this.schema.fields.reduce((i29, n37, s29) => i29.set(n37.name, s29), /* @__PURE__ */ new Map());
      return this.selectAt(t32.map((i29) => e26.get(i29)).filter((i29) => i29 > -1));
    }
    selectAt(t32) {
      let e26 = this.schema.selectAt(t32), i29 = this.batches.map((n37) => n37.selectAt(t32));
      return new r46(e26, i29);
    }
    assign(t32) {
      let e26 = this.schema.fields, [i29, n37] = t32.schema.fields.reduce((a27, c30, u30) => {
        let [d25, p24] = a27, W25 = e26.findIndex((X25) => X25.name === c30.name);
        return ~W25 ? p24[W25] = u30 : d25.push(u30), a27;
      }, [[], []]), s29 = this.schema.assign(t32.schema), o35 = [...e26.map((a27, c30) => [c30, n37[c30]]).map(([a27, c30]) => c30 === void 0 ? this.getChildAt(a27) : t32.getChildAt(c30)), ...i29.map((a27) => t32.getChildAt(a27))].filter(Boolean);
      return new r46(...Ds3(s29, o35));
    }
  };
  Yc = Symbol.toStringTag;
  tt4[Yc] = ((r91) => (r91.schema = null, r91.batches = [], r91._offsets = new Uint32Array([0]), r91._nullCount = -1, r91[Symbol.isConcatSpreadable] = true, r91.isValid = ii3(rn3), r91.get = ii3(K6.getVisitFn(l7.Struct)), r91.set = ps3(it5.getVisitFn(l7.Struct)), r91.indexOf = ms3(mr3.getVisitFn(l7.Struct)), "Table"))(tt4.prototype);
  var Kc;
  var j7 = class r47 {
    constructor(...t32) {
      switch (t32.length) {
        case 2: {
          if ([this.schema] = t32, !(this.schema instanceof E5))
            throw new TypeError("RecordBatch constructor expects a [Schema, Data] pair.");
          if ([, this.data = y5({ nullCount: 0, type: new C5(this.schema.fields), children: this.schema.fields.map((e26) => y5({ type: e26.type, nullCount: 0 })) })] = t32, !(this.data instanceof L6))
            throw new TypeError("RecordBatch constructor expects a [Schema, Data] pair.");
          [this.schema, this.data] = Gc(this.schema, this.data.children);
          break;
        }
        case 1: {
          let [e26] = t32, { fields: i29, children: n37, length: s29 } = Object.keys(e26).reduce((c30, u30, d25) => (c30.children[d25] = e26[u30], c30.length = Math.max(c30.length, e26[u30].length), c30.fields[d25] = T6.new({ name: u30, type: e26[u30].type, nullable: true }), c30), { length: 0, fields: new Array(), children: new Array() }), o35 = new E5(i29), a27 = y5({ type: new C5(i29), length: s29, children: n37, nullCount: 0 });
          [this.schema, this.data] = Gc(o35, a27.children, s29);
          break;
        }
        default:
          throw new TypeError("RecordBatch constructor expects an Object mapping names to child Data, or a [Schema, Data] pair.");
      }
    }
    get dictionaries() {
      return this._dictionaries || (this._dictionaries = Zc(this.schema.fields, this.data.children));
    }
    get numCols() {
      return this.schema.fields.length;
    }
    get numRows() {
      return this.data.length;
    }
    get nullCount() {
      return this.data.nullCount;
    }
    isValid(t32) {
      return this.data.getValid(t32);
    }
    get(t32) {
      return K6.visit(this.data, t32);
    }
    at(t32) {
      return this.get(hr3(t32, this.numRows));
    }
    set(t32, e26) {
      return it5.visit(this.data, t32, e26);
    }
    indexOf(t32, e26) {
      return mr3.visit(this.data, t32, e26);
    }
    [Symbol.iterator]() {
      return ni2.visit(new m5([this.data]));
    }
    toArray() {
      return [...this];
    }
    concat(...t32) {
      return new tt4(this.schema, [this, ...t32]);
    }
    slice(t32, e26) {
      let [i29] = new m5([this.data]).slice(t32, e26).data;
      return new r47(this.schema, i29);
    }
    getChild(t32) {
      var e26;
      return this.getChildAt((e26 = this.schema.fields) === null || e26 === void 0 ? void 0 : e26.findIndex((i29) => i29.name === t32));
    }
    getChildAt(t32) {
      return t32 > -1 && t32 < this.schema.fields.length ? new m5([this.data.children[t32]]) : null;
    }
    setChild(t32, e26) {
      var i29;
      return this.setChildAt((i29 = this.schema.fields) === null || i29 === void 0 ? void 0 : i29.findIndex((n37) => n37.name === t32), e26);
    }
    setChildAt(t32, e26) {
      let i29 = this.schema, n37 = this.data;
      if (t32 > -1 && t32 < this.numCols) {
        e26 || (e26 = new m5([y5({ type: new et4(), length: this.numRows })]));
        let s29 = i29.fields.slice(), o35 = n37.children.slice(), a27 = s29[t32].clone({ type: e26.type });
        [s29[t32], o35[t32]] = [a27, e26.data[0]], i29 = new E5(s29, new Map(this.schema.metadata)), n37 = y5({ type: new C5(s29), children: o35 });
      }
      return new r47(i29, n37);
    }
    select(t32) {
      let e26 = this.schema.select(t32), i29 = new C5(e26.fields), n37 = [];
      for (let s29 of t32) {
        let o35 = this.schema.fields.findIndex((a27) => a27.name === s29);
        ~o35 && (n37[o35] = this.data.children[o35]);
      }
      return new r47(e26, y5({ type: i29, length: this.numRows, children: n37 }));
    }
    selectAt(t32) {
      let e26 = this.schema.selectAt(t32), i29 = t32.map((s29) => this.data.children[s29]).filter(Boolean), n37 = y5({ type: new C5(e26.fields), length: this.numRows, children: i29 });
      return new r47(e26, n37);
    }
  };
  Kc = Symbol.toStringTag;
  j7[Kc] = ((r91) => (r91._nullCount = -1, r91[Symbol.isConcatSpreadable] = true, "RecordBatch"))(j7.prototype);
  function Gc(r91, t32, e26 = t32.reduce((i29, n37) => Math.max(i29, n37.length), 0)) {
    var i29;
    let n37 = [...r91.fields], s29 = [...t32], o35 = (e26 + 63 & -64) >> 3;
    for (let [a27, c30] of r91.fields.entries()) {
      let u30 = t32[a27];
      (!u30 || u30.length !== e26) && (n37[a27] = c30.clone({ nullable: true }), s29[a27] = (i29 = u30?._changeLengthAndBackfillNullBitmap(e26)) !== null && i29 !== void 0 ? i29 : y5({ type: c30.type, length: e26, nullCount: e26, nullBitmap: new Uint8Array(o35) }));
    }
    return [r91.assign(n37), y5({ type: new C5(n37), length: e26, children: s29 })];
  }
  function Zc(r91, t32, e26 = /* @__PURE__ */ new Map()) {
    var i29, n37;
    if (((i29 = r91?.length) !== null && i29 !== void 0 ? i29 : 0) > 0 && r91?.length === t32?.length)
      for (let s29 = -1, o35 = r91.length; ++s29 < o35; ) {
        let { type: a27 } = r91[s29], c30 = t32[s29];
        for (let u30 of [c30, ...((n37 = c30?.dictionary) === null || n37 === void 0 ? void 0 : n37.data) || []])
          Zc(a27.children, u30?.children, e26);
        if (f5.isDictionary(a27)) {
          let { id: u30 } = a27;
          if (!e26.has(u30))
            c30?.dictionary && e26.set(u30, c30.dictionary);
          else if (e26.get(u30) !== c30.dictionary)
            throw new Error("Cannot create Schema containing two different dictionaries with the same Id");
        }
      }
    return e26;
  }
  var jr3 = class extends j7 {
    constructor(t32) {
      let e26 = t32.fields.map((n37) => y5({ type: n37.type })), i29 = y5({ type: new C5(t32.fields), nullCount: 0, children: e26 });
      super(t32, i29);
    }
  };
  var ee4 = class r48 {
    constructor() {
      this.bb = null, this.bb_pos = 0;
    }
    __init(t32, e26) {
      return this.bb_pos = t32, this.bb = e26, this;
    }
    static getRootAsMessage(t32, e26) {
      return (e26 || new r48()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    static getSizePrefixedRootAsMessage(t32, e26) {
      return t32.setPosition(t32.position() + p5), (e26 || new r48()).__init(t32.readInt32(t32.position()) + t32.position(), t32);
    }
    version() {
      let t32 = this.bb.__offset(this.bb_pos, 4);
      return t32 ? this.bb.readInt16(this.bb_pos + t32) : V6.V1;
    }
    headerType() {
      let t32 = this.bb.__offset(this.bb_pos, 6);
      return t32 ? this.bb.readUint8(this.bb_pos + t32) : M6.NONE;
    }
    header(t32) {
      let e26 = this.bb.__offset(this.bb_pos, 8);
      return e26 ? this.bb.__union(t32, this.bb_pos + e26) : null;
    }
    bodyLength() {
      let t32 = this.bb.__offset(this.bb_pos, 10);
      return t32 ? this.bb.readInt64(this.bb_pos + t32) : BigInt("0");
    }
    customMetadata(t32, e26) {
      let i29 = this.bb.__offset(this.bb_pos, 12);
      return i29 ? (e26 || new Q6()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + i29) + t32 * 4), this.bb) : null;
    }
    customMetadataLength() {
      let t32 = this.bb.__offset(this.bb_pos, 12);
      return t32 ? this.bb.__vector_len(this.bb_pos + t32) : 0;
    }
    static startMessage(t32) {
      t32.startObject(5);
    }
    static addVersion(t32, e26) {
      t32.addFieldInt16(0, e26, V6.V1);
    }
    static addHeaderType(t32, e26) {
      t32.addFieldInt8(1, e26, M6.NONE);
    }
    static addHeader(t32, e26) {
      t32.addFieldOffset(2, e26, 0);
    }
    static addBodyLength(t32, e26) {
      t32.addFieldInt64(3, e26, BigInt("0"));
    }
    static addCustomMetadata(t32, e26) {
      t32.addFieldOffset(4, e26, 0);
    }
    static createCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26.length, 4);
      for (let i29 = e26.length - 1; i29 >= 0; i29--)
        t32.addOffset(e26[i29]);
      return t32.endVector();
    }
    static startCustomMetadataVector(t32, e26) {
      t32.startVector(4, e26, 4);
    }
    static endMessage(t32) {
      return t32.endObject();
    }
    static finishMessageBuffer(t32, e26) {
      t32.finish(e26);
    }
    static finishSizePrefixedMessageBuffer(t32, e26) {
      t32.finish(e26, void 0, true);
    }
    static createMessage(t32, e26, i29, n37, s29, o35) {
      return r48.startMessage(t32), r48.addVersion(t32, e26), r48.addHeaderType(t32, i29), r48.addHeader(t32, n37), r48.addBodyLength(t32, s29), r48.addCustomMetadata(t32, o35), r48.endMessage(t32);
    }
  };
  var No3 = class extends g6 {
    visit(t32, e26) {
      return t32 == null || e26 == null ? void 0 : super.visit(t32, e26);
    }
    visitNull(t32, e26) {
      return Ji3.startNull(e26), Ji3.endNull(e26);
    }
    visitInt(t32, e26) {
      return jt4.startInt(e26), jt4.addBitWidth(e26, t32.bitWidth), jt4.addIsSigned(e26, t32.isSigned), jt4.endInt(e26);
    }
    visitFloat(t32, e26) {
      return ke4.startFloatingPoint(e26), ke4.addPrecision(e26, t32.precision), ke4.endFloatingPoint(e26);
    }
    visitBinary(t32, e26) {
      return ji3.startBinary(e26), ji3.endBinary(e26);
    }
    visitLargeBinary(t32, e26) {
      return $i3.startLargeBinary(e26), $i3.endLargeBinary(e26);
    }
    visitBool(t32, e26) {
      return Wi3.startBool(e26), Wi3.endBool(e26);
    }
    visitUtf8(t32, e26) {
      return Ki3.startUtf8(e26), Ki3.endUtf8(e26);
    }
    visitLargeUtf8(t32, e26) {
      return Yi3.startLargeUtf8(e26), Yi3.endLargeUtf8(e26);
    }
    visitDecimal(t32, e26) {
      return ae4.startDecimal(e26), ae4.addScale(e26, t32.scale), ae4.addPrecision(e26, t32.precision), ae4.addBitWidth(e26, t32.bitWidth), ae4.endDecimal(e26);
    }
    visitDate(t32, e26) {
      return Ee5.startDate(e26), Ee5.addUnit(e26, t32.unit), Ee5.endDate(e26);
    }
    visitTime(t32, e26) {
      return be3.startTime(e26), be3.addUnit(e26, t32.unit), be3.addBitWidth(e26, t32.bitWidth), be3.endTime(e26);
    }
    visitTimestamp(t32, e26) {
      let i29 = t32.timezone && e26.createString(t32.timezone) || void 0;
      return _e2.startTimestamp(e26), _e2.addUnit(e26, t32.unit), i29 !== void 0 && _e2.addTimezone(e26, i29), _e2.endTimestamp(e26);
    }
    visitInterval(t32, e26) {
      return ze3.startInterval(e26), ze3.addUnit(e26, t32.unit), ze3.endInterval(e26);
    }
    visitDuration(t32, e26) {
      return Ve3.startDuration(e26), Ve3.addUnit(e26, t32.unit), Ve3.endDuration(e26);
    }
    visitList(t32, e26) {
      return Hi3.startList(e26), Hi3.endList(e26);
    }
    visitStruct(t32, e26) {
      return Gi3.startStruct_(e26), Gi3.endStruct_(e26);
    }
    visitUnion(t32, e26) {
      Wt4.startTypeIdsVector(e26, t32.typeIds.length);
      let i29 = Wt4.createTypeIdsVector(e26, t32.typeIds);
      return Wt4.startUnion(e26), Wt4.addMode(e26, t32.mode), Wt4.addTypeIds(e26, i29), Wt4.endUnion(e26);
    }
    visitDictionary(t32, e26) {
      let i29 = this.visit(t32.indices, e26);
      return oe5.startDictionaryEncoding(e26), oe5.addId(e26, BigInt(t32.id)), oe5.addIsOrdered(e26, t32.isOrdered), i29 !== void 0 && oe5.addIndexType(e26, i29), oe5.endDictionaryEncoding(e26);
    }
    visitFixedSizeBinary(t32, e26) {
      return Re4.startFixedSizeBinary(e26), Re4.addByteWidth(e26, t32.byteWidth), Re4.endFixedSizeBinary(e26);
    }
    visitFixedSizeList(t32, e26) {
      return Ce4.startFixedSizeList(e26), Ce4.addListSize(e26, t32.listSize), Ce4.endFixedSizeList(e26);
    }
    visitMap(t32, e26) {
      return Pe3.startMap(e26), Pe3.addKeysSorted(e26, t32.keysSorted), Pe3.endMap(e26);
    }
  };
  var xs3 = new No3();
  function el2(r91, t32 = /* @__PURE__ */ new Map()) {
    return new E5(pd(r91, t32), As3(r91.metadata), t32);
  }
  function Eo3(r91) {
    return new nt4(r91.count, il2(r91.columns), nl2(r91.columns));
  }
  function rl2(r91) {
    return new It4(Eo3(r91.data), r91.id, r91.isDelta);
  }
  function pd(r91, t32) {
    return (r91.fields || []).filter(Boolean).map((e26) => T6.fromJSON(e26, t32));
  }
  function qc(r91, t32) {
    return (r91.children || []).filter(Boolean).map((e26) => T6.fromJSON(e26, t32));
  }
  function il2(r91) {
    return (r91 || []).reduce((t32, e26) => [...t32, new kt3(e26.count, md(e26.VALIDITY)), ...il2(e26.children)], []);
  }
  function nl2(r91, t32 = []) {
    for (let e26 = -1, i29 = (r91 || []).length; ++e26 < i29; ) {
      let n37 = r91[e26];
      n37.VALIDITY && t32.push(new wt4(t32.length, n37.VALIDITY.length)), n37.TYPE_ID && t32.push(new wt4(t32.length, n37.TYPE_ID.length)), n37.OFFSET && t32.push(new wt4(t32.length, n37.OFFSET.length)), n37.DATA && t32.push(new wt4(t32.length, n37.DATA.length)), t32 = nl2(n37.children, t32);
    }
    return t32;
  }
  function md(r91) {
    return (r91 || []).reduce((t32, e26) => t32 + +(e26 === 0), 0);
  }
  function sl(r91, t32) {
    let e26, i29, n37, s29, o35, a27;
    return !t32 || !(s29 = r91.dictionary) ? (o35 = tl2(r91, qc(r91, t32)), n37 = new T6(r91.name, o35, r91.nullable, As3(r91.metadata))) : t32.has(e26 = s29.id) ? (i29 = (i29 = s29.indexType) ? Qc(i29) : new ct4(), a27 = new ot4(t32.get(e26), i29, e26, s29.isOrdered), n37 = new T6(r91.name, a27, r91.nullable, As3(r91.metadata))) : (i29 = (i29 = s29.indexType) ? Qc(i29) : new ct4(), t32.set(e26, o35 = tl2(r91, qc(r91, t32))), a27 = new ot4(o35, i29, e26, s29.isOrdered), n37 = new T6(r91.name, a27, r91.nullable, As3(r91.metadata))), n37 || null;
  }
  function As3(r91 = []) {
    return new Map(r91.map(({ key: t32, value: e26 }) => [t32, e26]));
  }
  function Qc(r91) {
    return new G7(r91.isSigned, r91.bitWidth);
  }
  function tl2(r91, t32) {
    let e26 = r91.type.name;
    switch (e26) {
      case "NONE":
        return new et4();
      case "null":
        return new et4();
      case "binary":
        return new ce3();
      case "largebinary":
        return new le5();
      case "utf8":
        return new Ut4();
      case "largeutf8":
        return new ue4();
      case "bool":
        return new Nt4();
      case "list":
        return new gt4((t32 || [])[0]);
      case "struct":
        return new C5(t32 || []);
      case "struct_":
        return new C5(t32 || []);
    }
    switch (e26) {
      case "int": {
        let i29 = r91.type;
        return new G7(i29.isSigned, i29.bitWidth);
      }
      case "floatingpoint": {
        let i29 = r91.type;
        return new Ft4(R6[i29.precision]);
      }
      case "decimal": {
        let i29 = r91.type;
        return new de3(i29.scale, i29.precision, i29.bitWidth);
      }
      case "date": {
        let i29 = r91.type;
        return new Et4(k6[i29.unit]);
      }
      case "time": {
        let i29 = r91.type;
        return new pt4(h8[i29.unit], i29.bitWidth);
      }
      case "timestamp": {
        let i29 = r91.type;
        return new mt4(h8[i29.unit], i29.timezone);
      }
      case "interval": {
        let i29 = r91.type;
        return new Vt4(Y6[i29.unit]);
      }
      case "duration": {
        let i29 = r91.type;
        return new yt4(h8[i29.unit]);
      }
      case "union": {
        let i29 = r91.type, [n37, ...s29] = (i29.mode + "").toLowerCase(), o35 = n37.toUpperCase() + s29.join("");
        return new bt4(U6[o35], i29.typeIds || [], t32 || []);
      }
      case "fixedsizebinary": {
        let i29 = r91.type;
        return new he3(i29.byteWidth);
      }
      case "fixedsizelist": {
        let i29 = r91.type;
        return new Rt4(i29.listSize, (t32 || [])[0]);
      }
      case "map": {
        let i29 = r91.type;
        return new Ct4((t32 || [])[0], i29.keysSorted);
      }
    }
    throw new Error(`Unrecognized type: "${e26}"`);
  }
  var yd = w5;
  var gd = d6;
  var ut4 = class r49 {
    static fromJSON(t32, e26) {
      let i29 = new r49(0, V6.V5, e26);
      return i29._createHeader = bd(t32, e26), i29;
    }
    static decode(t32) {
      t32 = new gd(S6(t32));
      let e26 = ee4.getRootAsMessage(t32), i29 = e26.bodyLength(), n37 = e26.version(), s29 = e26.headerType(), o35 = new r49(i29, n37, s29);
      return o35._createHeader = _d(e26, s29), o35;
    }
    static encode(t32) {
      let e26 = new yd(), i29 = -1;
      return t32.isSchema() ? i29 = E5.encode(e26, t32.header()) : t32.isRecordBatch() ? i29 = nt4.encode(e26, t32.header()) : t32.isDictionaryBatch() && (i29 = It4.encode(e26, t32.header())), ee4.startMessage(e26), ee4.addVersion(e26, V6.V5), ee4.addHeader(e26, i29), ee4.addHeaderType(e26, t32.headerType), ee4.addBodyLength(e26, BigInt(t32.bodyLength)), ee4.finishMessageBuffer(e26, ee4.endMessage(e26)), e26.asUint8Array();
    }
    static from(t32, e26 = 0) {
      if (t32 instanceof E5)
        return new r49(0, V6.V5, M6.Schema, t32);
      if (t32 instanceof nt4)
        return new r49(e26, V6.V5, M6.RecordBatch, t32);
      if (t32 instanceof It4)
        return new r49(e26, V6.V5, M6.DictionaryBatch, t32);
      throw new Error(`Unrecognized Message header: ${t32}`);
    }
    get type() {
      return this.headerType;
    }
    get version() {
      return this._version;
    }
    get headerType() {
      return this._headerType;
    }
    get bodyLength() {
      return this._bodyLength;
    }
    header() {
      return this._createHeader();
    }
    isSchema() {
      return this.headerType === M6.Schema;
    }
    isRecordBatch() {
      return this.headerType === M6.RecordBatch;
    }
    isDictionaryBatch() {
      return this.headerType === M6.DictionaryBatch;
    }
    constructor(t32, e26, i29, n37) {
      this._version = e26, this._headerType = i29, this.body = new Uint8Array(0), n37 && (this._createHeader = () => n37), this._bodyLength = N6(t32);
    }
  };
  var nt4 = class {
    get nodes() {
      return this._nodes;
    }
    get length() {
      return this._length;
    }
    get buffers() {
      return this._buffers;
    }
    constructor(t32, e26, i29) {
      this._nodes = e26, this._buffers = i29, this._length = N6(t32);
    }
  };
  var It4 = class {
    get id() {
      return this._id;
    }
    get data() {
      return this._data;
    }
    get isDelta() {
      return this._isDelta;
    }
    get length() {
      return this.data.length;
    }
    get nodes() {
      return this.data.nodes;
    }
    get buffers() {
      return this.data.buffers;
    }
    constructor(t32, e26, i29 = false) {
      this._data = t32, this._isDelta = i29, this._id = N6(e26);
    }
  };
  var wt4 = class {
    constructor(t32, e26) {
      this.offset = N6(t32), this.length = N6(e26);
    }
  };
  var kt3 = class {
    constructor(t32, e26) {
      this.length = N6(t32), this.nullCount = N6(e26);
    }
  };
  function bd(r91, t32) {
    return () => {
      switch (t32) {
        case M6.Schema:
          return E5.fromJSON(r91);
        case M6.RecordBatch:
          return nt4.fromJSON(r91);
        case M6.DictionaryBatch:
          return It4.fromJSON(r91);
      }
      throw new Error(`Unrecognized Message type: { name: ${M6[t32]}, type: ${t32} }`);
    };
  }
  function _d(r91, t32) {
    return () => {
      switch (t32) {
        case M6.Schema:
          return E5.decode(r91.header(new ht4()), /* @__PURE__ */ new Map(), r91.version());
        case M6.RecordBatch:
          return nt4.decode(r91.header(new At4()), r91.version());
        case M6.DictionaryBatch:
          return It4.decode(r91.header(new ge4()), r91.version());
      }
      throw new Error(`Unrecognized Message type: { name: ${M6[t32]}, type: ${t32} }`);
    };
  }
  T6.encode = Od;
  T6.decode = Fd;
  T6.fromJSON = sl;
  E5.encode = Td;
  E5.decode = vd;
  E5.fromJSON = el2;
  nt4.encode = Md;
  nt4.decode = wd;
  nt4.fromJSON = Eo3;
  It4.encode = Ld;
  It4.decode = Id;
  It4.fromJSON = rl2;
  kt3.encode = Ud;
  kt3.decode = Bd;
  wt4.encode = Nd;
  wt4.decode = Sd;
  function vd(r91, t32 = /* @__PURE__ */ new Map(), e26 = V6.V5) {
    let i29 = Ad(r91, t32);
    return new E5(i29, Fs3(r91), t32, e26);
  }
  function wd(r91, t32 = V6.V5) {
    if (r91.compression() !== null)
      throw new Error("Record batch compression not implemented");
    return new nt4(r91.length(), Dd(r91), xd(r91, t32));
  }
  function Id(r91, t32 = V6.V5) {
    return new It4(nt4.decode(r91.data(), t32), r91.id(), r91.isDelta());
  }
  function Sd(r91) {
    return new wt4(r91.offset(), r91.length());
  }
  function Bd(r91) {
    return new kt3(r91.length(), r91.nullCount());
  }
  function Dd(r91) {
    let t32 = [];
    for (let e26, i29 = -1, n37 = -1, s29 = r91.nodesLength(); ++i29 < s29; )
      (e26 = r91.nodes(i29)) && (t32[++n37] = kt3.decode(e26));
    return t32;
  }
  function xd(r91, t32) {
    let e26 = [];
    for (let i29, n37 = -1, s29 = -1, o35 = r91.buffersLength(); ++n37 < o35; )
      (i29 = r91.buffers(n37)) && (t32 < V6.V4 && (i29.bb_pos += 8 * (n37 + 1)), e26[++s29] = wt4.decode(i29));
    return e26;
  }
  function Ad(r91, t32) {
    let e26 = [];
    for (let i29, n37 = -1, s29 = -1, o35 = r91.fieldsLength(); ++n37 < o35; )
      (i29 = r91.fields(n37)) && (e26[++s29] = T6.decode(i29, t32));
    return e26;
  }
  function ol3(r91, t32) {
    let e26 = [];
    for (let i29, n37 = -1, s29 = -1, o35 = r91.childrenLength(); ++n37 < o35; )
      (i29 = r91.children(n37)) && (e26[++s29] = T6.decode(i29, t32));
    return e26;
  }
  function Fd(r91, t32) {
    let e26, i29, n37, s29, o35, a27;
    return !t32 || !(a27 = r91.dictionary()) ? (n37 = cl3(r91, ol3(r91, t32)), i29 = new T6(r91.name(), n37, r91.nullable(), Fs3(r91))) : t32.has(e26 = N6(a27.id())) ? (s29 = (s29 = a27.indexType()) ? al3(s29) : new ct4(), o35 = new ot4(t32.get(e26), s29, e26, a27.isOrdered()), i29 = new T6(r91.name(), o35, r91.nullable(), Fs3(r91))) : (s29 = (s29 = a27.indexType()) ? al3(s29) : new ct4(), t32.set(e26, n37 = cl3(r91, ol3(r91, t32))), o35 = new ot4(n37, s29, e26, a27.isOrdered()), i29 = new T6(r91.name(), o35, r91.nullable(), Fs3(r91))), i29 || null;
  }
  function Fs3(r91) {
    let t32 = /* @__PURE__ */ new Map();
    if (r91)
      for (let e26, i29, n37 = -1, s29 = Math.trunc(r91.customMetadataLength()); ++n37 < s29; )
        (e26 = r91.customMetadata(n37)) && (i29 = e26.key()) != null && t32.set(i29, e26.value());
    return t32;
  }
  function al3(r91) {
    return new G7(r91.isSigned(), r91.bitWidth());
  }
  function cl3(r91, t32) {
    let e26 = r91.typeType();
    switch (e26) {
      case x5.NONE:
        return new et4();
      case x5.Null:
        return new et4();
      case x5.Binary:
        return new ce3();
      case x5.LargeBinary:
        return new le5();
      case x5.Utf8:
        return new Ut4();
      case x5.LargeUtf8:
        return new ue4();
      case x5.Bool:
        return new Nt4();
      case x5.List:
        return new gt4((t32 || [])[0]);
      case x5.Struct_:
        return new C5(t32 || []);
    }
    switch (e26) {
      case x5.Int: {
        let i29 = r91.type(new jt4());
        return new G7(i29.isSigned(), i29.bitWidth());
      }
      case x5.FloatingPoint: {
        let i29 = r91.type(new ke4());
        return new Ft4(i29.precision());
      }
      case x5.Decimal: {
        let i29 = r91.type(new ae4());
        return new de3(i29.scale(), i29.precision(), i29.bitWidth());
      }
      case x5.Date: {
        let i29 = r91.type(new Ee5());
        return new Et4(i29.unit());
      }
      case x5.Time: {
        let i29 = r91.type(new be3());
        return new pt4(i29.unit(), i29.bitWidth());
      }
      case x5.Timestamp: {
        let i29 = r91.type(new _e2());
        return new mt4(i29.unit(), i29.timezone());
      }
      case x5.Interval: {
        let i29 = r91.type(new ze3());
        return new Vt4(i29.unit());
      }
      case x5.Duration: {
        let i29 = r91.type(new Ve3());
        return new yt4(i29.unit());
      }
      case x5.Union: {
        let i29 = r91.type(new Wt4());
        return new bt4(i29.mode(), i29.typeIdsArray() || [], t32 || []);
      }
      case x5.FixedSizeBinary: {
        let i29 = r91.type(new Re4());
        return new he3(i29.byteWidth());
      }
      case x5.FixedSizeList: {
        let i29 = r91.type(new Ce4());
        return new Rt4(i29.listSize(), (t32 || [])[0]);
      }
      case x5.Map: {
        let i29 = r91.type(new Pe3());
        return new Ct4((t32 || [])[0], i29.keysSorted());
      }
    }
    throw new Error(`Unrecognized type: "${x5[e26]}" (${e26})`);
  }
  function Td(r91, t32) {
    let e26 = t32.fields.map((s29) => T6.encode(r91, s29));
    ht4.startFieldsVector(r91, e26.length);
    let i29 = ht4.createFieldsVector(r91, e26), n37 = t32.metadata && t32.metadata.size > 0 ? ht4.createCustomMetadataVector(r91, [...t32.metadata].map(([s29, o35]) => {
      let a27 = r91.createString(`${s29}`), c30 = r91.createString(`${o35}`);
      return Q6.startKeyValue(r91), Q6.addKey(r91, a27), Q6.addValue(r91, c30), Q6.endKeyValue(r91);
    })) : -1;
    return ht4.startSchema(r91), ht4.addFields(r91, i29), ht4.addEndianness(r91, Ed ? Ne4.Little : Ne4.Big), n37 !== -1 && ht4.addCustomMetadata(r91, n37), ht4.endSchema(r91);
  }
  function Od(r91, t32) {
    let e26 = -1, i29 = -1, n37 = -1, s29 = t32.type, o35 = t32.typeId;
    f5.isDictionary(s29) ? (o35 = s29.dictionary.typeId, n37 = xs3.visit(s29, r91), i29 = xs3.visit(s29.dictionary, r91)) : i29 = xs3.visit(s29, r91);
    let a27 = (s29.children || []).map((d25) => T6.encode(r91, d25)), c30 = st4.createChildrenVector(r91, a27), u30 = t32.metadata && t32.metadata.size > 0 ? st4.createCustomMetadataVector(r91, [...t32.metadata].map(([d25, p24]) => {
      let W25 = r91.createString(`${d25}`), X25 = r91.createString(`${p24}`);
      return Q6.startKeyValue(r91), Q6.addKey(r91, W25), Q6.addValue(r91, X25), Q6.endKeyValue(r91);
    })) : -1;
    return t32.name && (e26 = r91.createString(t32.name)), st4.startField(r91), st4.addType(r91, i29), st4.addTypeType(r91, o35), st4.addChildren(r91, c30), st4.addNullable(r91, !!t32.nullable), e26 !== -1 && st4.addName(r91, e26), n37 !== -1 && st4.addDictionary(r91, n37), u30 !== -1 && st4.addCustomMetadata(r91, u30), st4.endField(r91);
  }
  function Md(r91, t32) {
    let e26 = t32.nodes || [], i29 = t32.buffers || [];
    At4.startNodesVector(r91, e26.length);
    for (let o35 of e26.slice().reverse())
      kt3.encode(r91, o35);
    let n37 = r91.endVector();
    At4.startBuffersVector(r91, i29.length);
    for (let o35 of i29.slice().reverse())
      wt4.encode(r91, o35);
    let s29 = r91.endVector();
    return At4.startRecordBatch(r91), At4.addLength(r91, BigInt(t32.length)), At4.addNodes(r91, n37), At4.addBuffers(r91, s29), At4.endRecordBatch(r91);
  }
  function Ld(r91, t32) {
    let e26 = nt4.encode(r91, t32.data);
    return ge4.startDictionaryBatch(r91), ge4.addId(r91, BigInt(t32.id)), ge4.addIsDelta(r91, t32.isDelta), ge4.addData(r91, e26), ge4.endDictionaryBatch(r91);
  }
  function Ud(r91, t32) {
    return Hr3.createFieldNode(r91, BigInt(t32.length), BigInt(t32.nullCount));
  }
  function Nd(r91, t32) {
    return Yr3.createBuffer(r91, BigInt(t32.offset), BigInt(t32.length));
  }
  var Ed = (() => {
    let r91 = new ArrayBuffer(2);
    return new DataView(r91).setInt16(0, 256, true), new Int16Array(r91)[0] === 256;
  })();
  var Ro3 = (r91) => `Expected ${M6[r91]} Message in stream, but was null or length 0.`;
  var Co3 = (r91) => `Header pointer of flatbuffer-encoded ${M6[r91]} Message is null or length 0.`;
  var ul = (r91, t32) => `Expected to read ${r91} metadata bytes, but only read ${t32}.`;
  var dl2 = (r91, t32) => `Expected to read ${r91} bytes for message body, but only read ${t32}.`;
  var Wr3 = class {
    constructor(t32) {
      this.source = t32 instanceof Xt4 ? t32 : new Xt4(t32);
    }
    [Symbol.iterator]() {
      return this;
    }
    next() {
      let t32;
      return (t32 = this.readMetadataLength()).done ? P6 : t32.value === -1 && (t32 = this.readMetadataLength()).done ? P6 : (t32 = this.readMetadata(t32.value)).done ? P6 : t32;
    }
    throw(t32) {
      return this.source.throw(t32);
    }
    return(t32) {
      return this.source.return(t32);
    }
    readMessage(t32) {
      let e26;
      if ((e26 = this.next()).done)
        return null;
      if (t32 != null && e26.value.headerType !== t32)
        throw new Error(Ro3(t32));
      return e26.value;
    }
    readMessageBody(t32) {
      if (t32 <= 0)
        return new Uint8Array(0);
      let e26 = S6(this.source.read(t32));
      if (e26.byteLength < t32)
        throw new Error(dl2(t32, e26.byteLength));
      return e26.byteOffset % 8 === 0 && e26.byteOffset + e26.byteLength <= e26.buffer.byteLength ? e26 : e26.slice();
    }
    readSchema(t32 = false) {
      let e26 = M6.Schema, i29 = this.readMessage(e26), n37 = i29?.header();
      if (t32 && !n37)
        throw new Error(Co3(e26));
      return n37;
    }
    readMetadataLength() {
      let t32 = this.source.read(Os3), e26 = t32 && new d6(t32), i29 = e26?.readInt32(0) || 0;
      return { done: i29 === 0, value: i29 };
    }
    readMetadata(t32) {
      let e26 = this.source.read(t32);
      if (!e26)
        return P6;
      if (e26.byteLength < t32)
        throw new Error(ul(t32, e26.byteLength));
      return { done: false, value: ut4.decode(e26) };
    }
  };
  var Ti3 = class {
    constructor(t32, e26) {
      this.source = t32 instanceof Mt4 ? t32 : _n3(t32) ? new He3(t32, e26) : new Mt4(t32);
    }
    [Symbol.asyncIterator]() {
      return this;
    }
    next() {
      return D6(this, void 0, void 0, function* () {
        let t32;
        return (t32 = yield this.readMetadataLength()).done ? P6 : t32.value === -1 && (t32 = yield this.readMetadataLength()).done ? P6 : (t32 = yield this.readMetadata(t32.value)).done ? P6 : t32;
      });
    }
    throw(t32) {
      return D6(this, void 0, void 0, function* () {
        return yield this.source.throw(t32);
      });
    }
    return(t32) {
      return D6(this, void 0, void 0, function* () {
        return yield this.source.return(t32);
      });
    }
    readMessage(t32) {
      return D6(this, void 0, void 0, function* () {
        let e26;
        if ((e26 = yield this.next()).done)
          return null;
        if (t32 != null && e26.value.headerType !== t32)
          throw new Error(Ro3(t32));
        return e26.value;
      });
    }
    readMessageBody(t32) {
      return D6(this, void 0, void 0, function* () {
        if (t32 <= 0)
          return new Uint8Array(0);
        let e26 = S6(yield this.source.read(t32));
        if (e26.byteLength < t32)
          throw new Error(dl2(t32, e26.byteLength));
        return e26.byteOffset % 8 === 0 && e26.byteOffset + e26.byteLength <= e26.buffer.byteLength ? e26 : e26.slice();
      });
    }
    readSchema() {
      return D6(this, arguments, void 0, function* (t32 = false) {
        let e26 = M6.Schema, i29 = yield this.readMessage(e26), n37 = i29?.header();
        if (t32 && !n37)
          throw new Error(Co3(e26));
        return n37;
      });
    }
    readMetadataLength() {
      return D6(this, void 0, void 0, function* () {
        let t32 = yield this.source.read(Os3), e26 = t32 && new d6(t32), i29 = e26?.readInt32(0) || 0;
        return { done: i29 === 0, value: i29 };
      });
    }
    readMetadata(t32) {
      return D6(this, void 0, void 0, function* () {
        let e26 = yield this.source.read(t32);
        if (!e26)
          return P6;
        if (e26.byteLength < t32)
          throw new Error(ul(t32, e26.byteLength));
        return { done: false, value: ut4.decode(e26) };
      });
    }
  };
  var Oi3 = class extends Wr3 {
    constructor(t32) {
      super(new Uint8Array(0)), this._schema = false, this._body = [], this._batchIndex = 0, this._dictionaryIndex = 0, this._json = t32 instanceof sn3 ? t32 : new sn3(t32);
    }
    next() {
      let { _json: t32 } = this;
      if (!this._schema)
        return this._schema = true, { done: false, value: ut4.fromJSON(t32.schema, M6.Schema) };
      if (this._dictionaryIndex < t32.dictionaries.length) {
        let e26 = t32.dictionaries[this._dictionaryIndex++];
        return this._body = e26.data.columns, { done: false, value: ut4.fromJSON(e26, M6.DictionaryBatch) };
      }
      if (this._batchIndex < t32.batches.length) {
        let e26 = t32.batches[this._batchIndex++];
        return this._body = e26.columns, { done: false, value: ut4.fromJSON(e26, M6.RecordBatch) };
      }
      return this._body = [], P6;
    }
    readMessageBody(t32) {
      return e26(this._body);
      function e26(i29) {
        return (i29 || []).reduce((n37, s29) => [...n37, ...s29.VALIDITY && [s29.VALIDITY] || [], ...s29.TYPE_ID && [s29.TYPE_ID] || [], ...s29.OFFSET && [s29.OFFSET] || [], ...s29.DATA && [s29.DATA] || [], ...e26(s29.children)], []);
      }
    }
    readMessage(t32) {
      let e26;
      if ((e26 = this.next()).done)
        return null;
      if (t32 != null && e26.value.headerType !== t32)
        throw new Error(Ro3(t32));
      return e26.value;
    }
    readSchema() {
      let t32 = M6.Schema, e26 = this.readMessage(t32), i29 = e26?.header();
      if (!e26 || !i29)
        throw new Error(Co3(t32));
      return i29;
    }
  };
  var Os3 = 4;
  var Vo3 = "ARROW1";
  var Mi3 = new Uint8Array(Vo3.length);
  for (let r91 = 0; r91 < Vo3.length; r91 += 1)
    Mi3[r91] = Vo3.codePointAt(r91);
  function Ms3(r91, t32 = 0) {
    for (let e26 = -1, i29 = Mi3.length; ++e26 < i29; )
      if (Mi3[e26] !== r91[t32 + e26])
        return false;
    return true;
  }
  var Li3 = Mi3.length;
  var ko2 = Li3 + Os3;
  var hl3 = Li3 * 2 + Os3;
  var St4 = class r50 extends br3 {
    constructor(t32) {
      super(), this._impl = t32;
    }
    get closed() {
      return this._impl.closed;
    }
    get schema() {
      return this._impl.schema;
    }
    get autoDestroy() {
      return this._impl.autoDestroy;
    }
    get dictionaries() {
      return this._impl.dictionaries;
    }
    get numDictionaries() {
      return this._impl.numDictionaries;
    }
    get numRecordBatches() {
      return this._impl.numRecordBatches;
    }
    get footer() {
      return this._impl.isFile() ? this._impl.footer : null;
    }
    isSync() {
      return this._impl.isSync();
    }
    isAsync() {
      return this._impl.isAsync();
    }
    isFile() {
      return this._impl.isFile();
    }
    isStream() {
      return this._impl.isStream();
    }
    next() {
      return this._impl.next();
    }
    throw(t32) {
      return this._impl.throw(t32);
    }
    return(t32) {
      return this._impl.return(t32);
    }
    cancel() {
      return this._impl.cancel();
    }
    reset(t32) {
      return this._impl.reset(t32), this._DOMStream = void 0, this._nodeStream = void 0, this;
    }
    open(t32) {
      let e26 = this._impl.open(t32);
      return Dt4(e26) ? e26.then(() => this) : this;
    }
    readRecordBatch(t32) {
      return this._impl.isFile() ? this._impl.readRecordBatch(t32) : null;
    }
    [Symbol.iterator]() {
      return this._impl[Symbol.iterator]();
    }
    [Symbol.asyncIterator]() {
      return this._impl[Symbol.asyncIterator]();
    }
    toDOMStream() {
      return rt4.toDOMStream(this.isSync() ? { [Symbol.iterator]: () => this } : { [Symbol.asyncIterator]: () => this });
    }
    toNodeStream() {
      return rt4.toNodeStream(this.isSync() ? { [Symbol.iterator]: () => this } : { [Symbol.asyncIterator]: () => this }, { objectMode: true });
    }
    static throughNode(t32) {
      throw new Error('"throughNode" not available in this environment');
    }
    static throughDOM(t32, e26) {
      throw new Error('"throughDOM" not available in this environment');
    }
    static from(t32) {
      return t32 instanceof r50 ? t32 : gn3(t32) ? Cd(t32) : _n3(t32) ? Pd(t32) : Dt4(t32) ? D6(this, void 0, void 0, function* () {
        return yield r50.from(yield t32);
      }) : vn3(t32) || Ri3(t32) || In3(t32) || Lt4(t32) ? zd(new Mt4(t32)) : kd(new Xt4(t32));
    }
    static readAll(t32) {
      return t32 instanceof r50 ? t32.isSync() ? fl2(t32) : pl2(t32) : gn3(t32) || ArrayBuffer.isView(t32) || zt4(t32) || bn3(t32) ? fl2(t32) : pl2(t32);
    }
  };
  var ye4 = class extends St4 {
    constructor(t32) {
      super(t32), this._impl = t32;
    }
    readAll() {
      return [...this];
    }
    [Symbol.iterator]() {
      return this._impl[Symbol.iterator]();
    }
    [Symbol.asyncIterator]() {
      return G6(this, arguments, function* () {
        yield b5(yield* I6(V5(this[Symbol.iterator]())));
      });
    }
  };
  var Xe2 = class extends St4 {
    constructor(t32) {
      super(t32), this._impl = t32;
    }
    readAll() {
      return D6(this, void 0, void 0, function* () {
        var t32, e26, i29, n37;
        let s29 = new Array();
        try {
          for (var o35 = true, a27 = V5(this), c30; c30 = yield a27.next(), t32 = c30.done, !t32; o35 = true) {
            n37 = c30.value, o35 = false;
            let u30 = n37;
            s29.push(u30);
          }
        } catch (u30) {
          e26 = { error: u30 };
        } finally {
          try {
            !o35 && !t32 && (i29 = a27.return) && (yield i29.call(a27));
          } finally {
            if (e26)
              throw e26.error;
          }
        }
        return s29;
      });
    }
    [Symbol.iterator]() {
      throw new Error("AsyncRecordBatchStreamReader is not Iterable");
    }
    [Symbol.asyncIterator]() {
      return this._impl[Symbol.asyncIterator]();
    }
  };
  var qe3 = class extends ye4 {
    constructor(t32) {
      super(t32), this._impl = t32;
    }
  };
  var pn3 = class extends Xe2 {
    constructor(t32) {
      super(t32), this._impl = t32;
    }
  };
  var Ls3 = class {
    get numDictionaries() {
      return this._dictionaryIndex;
    }
    get numRecordBatches() {
      return this._recordBatchIndex;
    }
    constructor(t32 = /* @__PURE__ */ new Map()) {
      this.closed = false, this.autoDestroy = true, this._dictionaryIndex = 0, this._recordBatchIndex = 0, this.dictionaries = t32;
    }
    isSync() {
      return false;
    }
    isAsync() {
      return false;
    }
    isFile() {
      return false;
    }
    isStream() {
      return false;
    }
    reset(t32) {
      return this._dictionaryIndex = 0, this._recordBatchIndex = 0, this.schema = t32, this.dictionaries = /* @__PURE__ */ new Map(), this;
    }
    _loadRecordBatch(t32, e26) {
      let i29 = this._loadVectors(t32, e26, this.schema.fields), n37 = y5({ type: new C5(this.schema.fields), length: t32.length, children: i29 });
      return new j7(this.schema, n37);
    }
    _loadDictionaryBatch(t32, e26) {
      let { id: i29, isDelta: n37 } = t32, { dictionaries: s29, schema: o35 } = this, a27 = s29.get(i29);
      if (n37 || !a27) {
        let c30 = o35.dictionaries.get(i29), u30 = this._loadVectors(t32.data, e26, [c30]);
        return (a27 && n37 ? a27.concat(new m5(u30)) : new m5(u30)).memoize();
      }
      return a27.memoize();
    }
    _loadVectors(t32, e26, i29) {
      return new ln3(e26, t32.nodes, t32.buffers, this.dictionaries, this.schema.metadataVersion).visitMany(i29);
    }
  };
  var Ni3 = class extends Ls3 {
    constructor(t32, e26) {
      super(e26), this._reader = gn3(t32) ? new Oi3(this._handle = t32) : new Wr3(this._handle = t32);
    }
    isSync() {
      return true;
    }
    isStream() {
      return true;
    }
    [Symbol.iterator]() {
      return this;
    }
    cancel() {
      !this.closed && (this.closed = true) && (this.reset()._reader.return(), this._reader = null, this.dictionaries = null);
    }
    open(t32) {
      return this.closed || (this.autoDestroy = yl3(this, t32), this.schema || (this.schema = this._reader.readSchema()) || this.cancel()), this;
    }
    throw(t32) {
      return !this.closed && this.autoDestroy && (this.closed = true) ? this.reset()._reader.throw(t32) : P6;
    }
    return(t32) {
      return !this.closed && this.autoDestroy && (this.closed = true) ? this.reset()._reader.return(t32) : P6;
    }
    next() {
      if (this.closed)
        return P6;
      let t32, { _reader: e26 } = this;
      for (; t32 = this._readNextMessageAndValidate(); )
        if (t32.isSchema())
          this.reset(t32.header());
        else if (t32.isRecordBatch()) {
          this._recordBatchIndex++;
          let i29 = t32.header(), n37 = e26.readMessageBody(t32.bodyLength);
          return { done: false, value: this._loadRecordBatch(i29, n37) };
        } else if (t32.isDictionaryBatch()) {
          this._dictionaryIndex++;
          let i29 = t32.header(), n37 = e26.readMessageBody(t32.bodyLength), s29 = this._loadDictionaryBatch(i29, n37);
          this.dictionaries.set(i29.id, s29);
        }
      return this.schema && this._recordBatchIndex === 0 ? (this._recordBatchIndex++, { done: false, value: new jr3(this.schema) }) : this.return();
    }
    _readNextMessageAndValidate(t32) {
      return this._reader.readMessage(t32);
    }
  };
  var Ei3 = class extends Ls3 {
    constructor(t32, e26) {
      super(e26), this._reader = new Ti3(this._handle = t32);
    }
    isAsync() {
      return true;
    }
    isStream() {
      return true;
    }
    [Symbol.asyncIterator]() {
      return this;
    }
    cancel() {
      return D6(this, void 0, void 0, function* () {
        !this.closed && (this.closed = true) && (yield this.reset()._reader.return(), this._reader = null, this.dictionaries = null);
      });
    }
    open(t32) {
      return D6(this, void 0, void 0, function* () {
        return this.closed || (this.autoDestroy = yl3(this, t32), this.schema || (this.schema = yield this._reader.readSchema()) || (yield this.cancel())), this;
      });
    }
    throw(t32) {
      return D6(this, void 0, void 0, function* () {
        return !this.closed && this.autoDestroy && (this.closed = true) ? yield this.reset()._reader.throw(t32) : P6;
      });
    }
    return(t32) {
      return D6(this, void 0, void 0, function* () {
        return !this.closed && this.autoDestroy && (this.closed = true) ? yield this.reset()._reader.return(t32) : P6;
      });
    }
    next() {
      return D6(this, void 0, void 0, function* () {
        if (this.closed)
          return P6;
        let t32, { _reader: e26 } = this;
        for (; t32 = yield this._readNextMessageAndValidate(); )
          if (t32.isSchema())
            yield this.reset(t32.header());
          else if (t32.isRecordBatch()) {
            this._recordBatchIndex++;
            let i29 = t32.header(), n37 = yield e26.readMessageBody(t32.bodyLength);
            return { done: false, value: this._loadRecordBatch(i29, n37) };
          } else if (t32.isDictionaryBatch()) {
            this._dictionaryIndex++;
            let i29 = t32.header(), n37 = yield e26.readMessageBody(t32.bodyLength), s29 = this._loadDictionaryBatch(i29, n37);
            this.dictionaries.set(i29.id, s29);
          }
        return this.schema && this._recordBatchIndex === 0 ? (this._recordBatchIndex++, { done: false, value: new jr3(this.schema) }) : yield this.return();
      });
    }
    _readNextMessageAndValidate(t32) {
      return D6(this, void 0, void 0, function* () {
        return yield this._reader.readMessage(t32);
      });
    }
  };
  var Us3 = class extends Ni3 {
    get footer() {
      return this._footer;
    }
    get numDictionaries() {
      return this._footer ? this._footer.numDictionaries : 0;
    }
    get numRecordBatches() {
      return this._footer ? this._footer.numRecordBatches : 0;
    }
    constructor(t32, e26) {
      super(t32 instanceof on3 ? t32 : new on3(t32), e26);
    }
    isSync() {
      return true;
    }
    isFile() {
      return true;
    }
    open(t32) {
      if (!this.closed && !this._footer) {
        this.schema = (this._footer = this._readFooter()).schema;
        for (let e26 of this._footer.dictionaryBatches())
          e26 && this._readDictionaryBatch(this._dictionaryIndex++);
      }
      return super.open(t32);
    }
    readRecordBatch(t32) {
      var e26;
      if (this.closed)
        return null;
      this._footer || this.open();
      let i29 = (e26 = this._footer) === null || e26 === void 0 ? void 0 : e26.getRecordBatch(t32);
      if (i29 && this._handle.seek(i29.offset)) {
        let n37 = this._reader.readMessage(M6.RecordBatch);
        if (n37?.isRecordBatch()) {
          let s29 = n37.header(), o35 = this._reader.readMessageBody(n37.bodyLength);
          return this._loadRecordBatch(s29, o35);
        }
      }
      return null;
    }
    _readDictionaryBatch(t32) {
      var e26;
      let i29 = (e26 = this._footer) === null || e26 === void 0 ? void 0 : e26.getDictionaryBatch(t32);
      if (i29 && this._handle.seek(i29.offset)) {
        let n37 = this._reader.readMessage(M6.DictionaryBatch);
        if (n37?.isDictionaryBatch()) {
          let s29 = n37.header(), o35 = this._reader.readMessageBody(n37.bodyLength), a27 = this._loadDictionaryBatch(s29, o35);
          this.dictionaries.set(s29.id, a27);
        }
      }
    }
    _readFooter() {
      let { _handle: t32 } = this, e26 = t32.size - ko2, i29 = t32.readInt32(e26), n37 = t32.readAt(e26 - i29, i29);
      return De2.decode(n37);
    }
    _readNextMessageAndValidate(t32) {
      var e26;
      if (this._footer || this.open(), this._footer && this._recordBatchIndex < this.numRecordBatches) {
        let i29 = (e26 = this._footer) === null || e26 === void 0 ? void 0 : e26.getRecordBatch(this._recordBatchIndex);
        if (i29 && this._handle.seek(i29.offset))
          return this._reader.readMessage(t32);
      }
      return null;
    }
  };
  var zo2 = class extends Ei3 {
    get footer() {
      return this._footer;
    }
    get numDictionaries() {
      return this._footer ? this._footer.numDictionaries : 0;
    }
    get numRecordBatches() {
      return this._footer ? this._footer.numRecordBatches : 0;
    }
    constructor(t32, ...e26) {
      let i29 = typeof e26[0] != "number" ? e26.shift() : void 0, n37 = e26[0] instanceof Map ? e26.shift() : void 0;
      super(t32 instanceof He3 ? t32 : new He3(t32, i29), n37);
    }
    isFile() {
      return true;
    }
    isAsync() {
      return true;
    }
    open(t32) {
      let e26 = Object.create(null, { open: { get: () => super.open } });
      return D6(this, void 0, void 0, function* () {
        if (!this.closed && !this._footer) {
          this.schema = (this._footer = yield this._readFooter()).schema;
          for (let i29 of this._footer.dictionaryBatches())
            i29 && (yield this._readDictionaryBatch(this._dictionaryIndex++));
        }
        return yield e26.open.call(this, t32);
      });
    }
    readRecordBatch(t32) {
      return D6(this, void 0, void 0, function* () {
        var e26;
        if (this.closed)
          return null;
        this._footer || (yield this.open());
        let i29 = (e26 = this._footer) === null || e26 === void 0 ? void 0 : e26.getRecordBatch(t32);
        if (i29 && (yield this._handle.seek(i29.offset))) {
          let n37 = yield this._reader.readMessage(M6.RecordBatch);
          if (n37?.isRecordBatch()) {
            let s29 = n37.header(), o35 = yield this._reader.readMessageBody(n37.bodyLength);
            return this._loadRecordBatch(s29, o35);
          }
        }
        return null;
      });
    }
    _readDictionaryBatch(t32) {
      return D6(this, void 0, void 0, function* () {
        var e26;
        let i29 = (e26 = this._footer) === null || e26 === void 0 ? void 0 : e26.getDictionaryBatch(t32);
        if (i29 && (yield this._handle.seek(i29.offset))) {
          let n37 = yield this._reader.readMessage(M6.DictionaryBatch);
          if (n37?.isDictionaryBatch()) {
            let s29 = n37.header(), o35 = yield this._reader.readMessageBody(n37.bodyLength), a27 = this._loadDictionaryBatch(s29, o35);
            this.dictionaries.set(s29.id, a27);
          }
        }
      });
    }
    _readFooter() {
      return D6(this, void 0, void 0, function* () {
        let { _handle: t32 } = this;
        t32._pending && (yield t32._pending);
        let e26 = t32.size - ko2, i29 = yield t32.readInt32(e26), n37 = yield t32.readAt(e26 - i29, i29);
        return De2.decode(n37);
      });
    }
    _readNextMessageAndValidate(t32) {
      return D6(this, void 0, void 0, function* () {
        if (this._footer || (yield this.open()), this._footer && this._recordBatchIndex < this.numRecordBatches) {
          let e26 = this._footer.getRecordBatch(this._recordBatchIndex);
          if (e26 && (yield this._handle.seek(e26.offset)))
            return yield this._reader.readMessage(t32);
        }
        return null;
      });
    }
  };
  var Po = class extends Ni3 {
    constructor(t32, e26) {
      super(t32, e26);
    }
    _loadVectors(t32, e26, i29) {
      return new vs3(e26, t32.nodes, t32.buffers, this.dictionaries, this.schema.metadataVersion).visitMany(i29);
    }
  };
  function yl3(r91, t32) {
    return t32 && typeof t32.autoDestroy == "boolean" ? t32.autoDestroy : r91.autoDestroy;
  }
  function* fl2(r91) {
    let t32 = St4.from(r91);
    try {
      if (!t32.open({ autoDestroy: false }).closed)
        do
          yield t32;
        while (!t32.reset().open().closed);
    } finally {
      t32.cancel();
    }
  }
  function pl2(r91) {
    return G6(this, arguments, function* () {
      let e26 = yield b5(St4.from(r91));
      try {
        if (!(yield b5(e26.open({ autoDestroy: false }))).closed)
          do
            yield yield b5(e26);
          while (!(yield b5(e26.reset().open())).closed);
      } finally {
        yield b5(e26.cancel());
      }
    });
  }
  function Cd(r91) {
    return new ye4(new Po(r91));
  }
  function kd(r91) {
    let t32 = r91.peek(Li3 + 7 & -8);
    return t32 && t32.byteLength >= 4 ? Ms3(t32) ? new qe3(new Us3(r91.read())) : new ye4(new Ni3(r91)) : new ye4(new Ni3(function* () {
    }()));
  }
  function zd(r91) {
    return D6(this, void 0, void 0, function* () {
      let t32 = yield r91.peek(Li3 + 7 & -8);
      return t32 && t32.byteLength >= 4 ? Ms3(t32) ? new qe3(new Us3(yield r91.read())) : new Xe2(new Ei3(r91)) : new Xe2(new Ei3(function() {
        return G6(this, arguments, function* () {
        });
      }()));
    });
  }
  function Pd(r91) {
    return D6(this, void 0, void 0, function* () {
      let { size: t32 } = yield r91.stat(), e26 = new He3(r91, t32);
      return t32 >= hl3 && Ms3(yield e26.readAt(0, Li3 + 7 & -8)) ? new pn3(new zo2(e26)) : new Xe2(new Ei3(e26));
    });
  }
  var $5 = class r51 extends g6 {
    static assemble(...t32) {
      let e26 = (n37) => n37.flatMap((s29) => Array.isArray(s29) ? e26(s29) : s29 instanceof j7 ? s29.data.children : s29.data), i29 = new r51();
      return i29.visitMany(e26(t32)), i29;
    }
    constructor() {
      super(), this._byteLength = 0, this._nodes = [], this._buffers = [], this._bufferRegions = [];
    }
    visit(t32) {
      if (t32 instanceof m5)
        return this.visitMany(t32.data), this;
      let { type: e26 } = t32;
      if (!f5.isDictionary(e26)) {
        let { length: i29 } = t32;
        if (i29 > 2147483647)
          throw new RangeError("Cannot write arrays larger than 2^31 - 1 in length");
        if (f5.isUnion(e26))
          this.nodes.push(new kt3(i29, 0));
        else {
          let { nullCount: n37 } = t32;
          f5.isNull(e26) || re4.call(this, n37 <= 0 ? new Uint8Array(0) : fr3(t32.offset, i29, t32.nullBitmap)), this.nodes.push(new kt3(i29, n37));
        }
      }
      return super.visit(t32);
    }
    visitNull(t32) {
      return this;
    }
    visitDictionary(t32) {
      return this.visit(t32.clone(t32.type.indices));
    }
    get nodes() {
      return this._nodes;
    }
    get buffers() {
      return this._buffers;
    }
    get byteLength() {
      return this._byteLength;
    }
    get bufferRegions() {
      return this._bufferRegions;
    }
  };
  function re4(r91) {
    let t32 = r91.byteLength + 7 & -8;
    return this.buffers.push(r91), this.bufferRegions.push(new wt4(this._byteLength, t32)), this._byteLength += t32, this;
  }
  function jd(r91) {
    var t32;
    let { type: e26, length: i29, typeIds: n37, valueOffsets: s29 } = r91;
    if (re4.call(this, n37), e26.mode === U6.Sparse)
      return Wo3.call(this, r91);
    if (e26.mode === U6.Dense) {
      if (r91.offset <= 0)
        return re4.call(this, s29), Wo3.call(this, r91);
      {
        let o35 = new Int32Array(i29), a27 = /* @__PURE__ */ Object.create(null), c30 = /* @__PURE__ */ Object.create(null);
        for (let u30, d25, p24 = -1; ++p24 < i29; )
          (u30 = n37[p24]) !== void 0 && ((d25 = a27[u30]) === void 0 && (d25 = a27[u30] = s29[p24]), o35[p24] = s29[p24] - d25, c30[u30] = ((t32 = c30[u30]) !== null && t32 !== void 0 ? t32 : 0) + 1);
        re4.call(this, o35), this.visitMany(r91.children.map((u30, d25) => {
          let p24 = e26.typeIds[d25], W25 = a27[p24], X25 = c30[p24];
          return u30.slice(W25, Math.min(i29, X25));
        }));
      }
    }
    return this;
  }
  function Wd(r91) {
    let t32;
    return r91.nullCount >= r91.length ? re4.call(this, new Uint8Array(0)) : (t32 = r91.values) instanceof Uint8Array ? re4.call(this, fr3(r91.offset, r91.length, t32)) : re4.call(this, pr3(r91.values));
  }
  function Le4(r91) {
    return re4.call(this, r91.values.subarray(0, r91.length * r91.stride));
  }
  function Ns3(r91) {
    let { length: t32, values: e26, valueOffsets: i29 } = r91, n37 = N6(i29[0]), s29 = N6(i29[t32]), o35 = Math.min(s29 - n37, e26.byteLength - n37);
    return re4.call(this, Dn3(-n37, t32 + 1, i29)), re4.call(this, e26.subarray(n37, n37 + o35)), this;
  }
  function $o2(r91) {
    let { length: t32, valueOffsets: e26 } = r91;
    if (e26) {
      let { [0]: i29, [t32]: n37 } = e26;
      return re4.call(this, Dn3(-i29, t32 + 1, e26)), this.visit(r91.children[0].slice(i29, n37 - i29));
    }
    return this.visit(r91.children[0]);
  }
  function Wo3(r91) {
    return this.visitMany(r91.type.children.map((t32, e26) => r91.children[e26]).filter(Boolean))[0];
  }
  $5.prototype.visitBool = Wd;
  $5.prototype.visitInt = Le4;
  $5.prototype.visitFloat = Le4;
  $5.prototype.visitUtf8 = Ns3;
  $5.prototype.visitLargeUtf8 = Ns3;
  $5.prototype.visitBinary = Ns3;
  $5.prototype.visitLargeBinary = Ns3;
  $5.prototype.visitFixedSizeBinary = Le4;
  $5.prototype.visitDate = Le4;
  $5.prototype.visitTimestamp = Le4;
  $5.prototype.visitTime = Le4;
  $5.prototype.visitDecimal = Le4;
  $5.prototype.visitList = $o2;
  $5.prototype.visitStruct = Wo3;
  $5.prototype.visitUnion = jd;
  $5.prototype.visitInterval = Le4;
  $5.prototype.visitDuration = Le4;
  $5.prototype.visitFixedSizeList = $o2;
  $5.prototype.visitMap = $o2;
  var Ue3 = class extends br3 {
    static throughNode(t32) {
      throw new Error('"throughNode" not available in this environment');
    }
    static throughDOM(t32, e26) {
      throw new Error('"throughDOM" not available in this environment');
    }
    constructor(t32) {
      super(), this._position = 0, this._started = false, this._sink = new Zt4(), this._schema = null, this._dictionaryBlocks = [], this._recordBatchBlocks = [], this._dictionaryDeltaOffsets = /* @__PURE__ */ new Map(), at4(t32) || (t32 = { autoDestroy: true, writeLegacyIpcFormat: false }), this._autoDestroy = typeof t32.autoDestroy == "boolean" ? t32.autoDestroy : true, this._writeLegacyIpcFormat = typeof t32.writeLegacyIpcFormat == "boolean" ? t32.writeLegacyIpcFormat : false;
    }
    toString(t32 = false) {
      return this._sink.toString(t32);
    }
    toUint8Array(t32 = false) {
      return this._sink.toUint8Array(t32);
    }
    writeAll(t32) {
      return Dt4(t32) ? t32.then((e26) => this.writeAll(e26)) : Lt4(t32) ? Jo3(this, t32) : Ho3(this, t32);
    }
    get closed() {
      return this._sink.closed;
    }
    [Symbol.asyncIterator]() {
      return this._sink[Symbol.asyncIterator]();
    }
    toDOMStream(t32) {
      return this._sink.toDOMStream(t32);
    }
    toNodeStream(t32) {
      return this._sink.toNodeStream(t32);
    }
    close() {
      return this.reset()._sink.close();
    }
    abort(t32) {
      return this.reset()._sink.abort(t32);
    }
    finish() {
      return this._autoDestroy ? this.close() : this.reset(this._sink, this._schema), this;
    }
    reset(t32 = this._sink, e26 = null) {
      return t32 === this._sink || t32 instanceof Zt4 ? this._sink = t32 : (this._sink = new Zt4(), t32 && Xo2(t32) ? this.toDOMStream({ type: "bytes" }).pipeTo(t32) : t32 && qo3(t32) && this.toNodeStream({ objectMode: false }).pipe(t32)), this._started && this._schema && this._writeFooter(this._schema), this._started = false, this._dictionaryBlocks = [], this._recordBatchBlocks = [], this._dictionaryDeltaOffsets = /* @__PURE__ */ new Map(), (!e26 || !Pr3(e26, this._schema)) && (e26 == null ? (this._position = 0, this._schema = null) : (this._started = true, this._schema = e26, this._writeSchema(e26))), this;
    }
    write(t32) {
      let e26 = null;
      if (this._sink) {
        if (t32 == null)
          return this.finish() && void 0;
        if (t32 instanceof tt4 && !(e26 = t32.schema))
          return this.finish() && void 0;
        if (t32 instanceof j7 && !(e26 = t32.schema))
          return this.finish() && void 0;
      } else
        throw new Error("RecordBatchWriter is closed");
      if (e26 && !Pr3(e26, this._schema)) {
        if (this._started && this._autoDestroy)
          return this.close();
        this.reset(this._sink, e26);
      }
      t32 instanceof j7 ? t32 instanceof jr3 || this._writeRecordBatch(t32) : t32 instanceof tt4 ? this.writeAll(t32.batches) : zt4(t32) && this.writeAll(t32);
    }
    _writeMessage(t32, e26 = 8) {
      let i29 = e26 - 1, n37 = ut4.encode(t32), s29 = n37.byteLength, o35 = this._writeLegacyIpcFormat ? 4 : 8, a27 = s29 + o35 + i29 & ~i29, c30 = a27 - s29 - o35;
      return t32.headerType === M6.RecordBatch ? this._recordBatchBlocks.push(new Kt4(a27, t32.bodyLength, this._position)) : t32.headerType === M6.DictionaryBatch && this._dictionaryBlocks.push(new Kt4(a27, t32.bodyLength, this._position)), this._writeLegacyIpcFormat || this._write(Int32Array.of(-1)), this._write(Int32Array.of(a27 - o35)), s29 > 0 && this._write(n37), this._writePadding(c30);
    }
    _write(t32) {
      if (this._started) {
        let e26 = S6(t32);
        e26 && e26.byteLength > 0 && (this._sink.write(e26), this._position += e26.byteLength);
      }
      return this;
    }
    _writeSchema(t32) {
      return this._writeMessage(ut4.from(t32));
    }
    _writeFooter(t32) {
      return this._writeLegacyIpcFormat ? this._write(Int32Array.of(0)) : this._write(Int32Array.of(-1, 0));
    }
    _writeMagic() {
      return this._write(Mi3);
    }
    _writePadding(t32) {
      return t32 > 0 ? this._write(new Uint8Array(t32)) : this;
    }
    _writeRecordBatch(t32) {
      let { byteLength: e26, nodes: i29, bufferRegions: n37, buffers: s29 } = $5.assemble(t32), o35 = new nt4(t32.numRows, i29, n37), a27 = ut4.from(o35, e26);
      return this._writeDictionaries(t32)._writeMessage(a27)._writeBodyBuffers(s29);
    }
    _writeDictionaryBatch(t32, e26, i29 = false) {
      this._dictionaryDeltaOffsets.set(e26, t32.length + (this._dictionaryDeltaOffsets.get(e26) || 0));
      let { byteLength: n37, nodes: s29, bufferRegions: o35, buffers: a27 } = $5.assemble(new m5([t32])), c30 = new nt4(t32.length, s29, o35), u30 = new It4(c30, e26, i29), d25 = ut4.from(u30, n37);
      return this._writeMessage(d25)._writeBodyBuffers(a27);
    }
    _writeBodyBuffers(t32) {
      let e26, i29, n37;
      for (let s29 = -1, o35 = t32.length; ++s29 < o35; )
        (e26 = t32[s29]) && (i29 = e26.byteLength) > 0 && (this._write(e26), (n37 = (i29 + 7 & -8) - i29) > 0 && this._writePadding(n37));
      return this;
    }
    _writeDictionaries(t32) {
      for (let [e26, i29] of t32.dictionaries) {
        let n37 = this._dictionaryDeltaOffsets.get(e26) || 0;
        if (n37 === 0 || (i29 = i29?.slice(n37)).length > 0)
          for (let s29 of i29.data)
            this._writeDictionaryBatch(s29, e26, n37 > 0), n37 += s29.length;
      }
      return this;
    }
  };
  var tr3 = class r52 extends Ue3 {
    static writeAll(t32, e26) {
      let i29 = new r52(e26);
      return Dt4(t32) ? t32.then((n37) => i29.writeAll(n37)) : Lt4(t32) ? Jo3(i29, t32) : Ho3(i29, t32);
    }
  };
  var er3 = class r53 extends Ue3 {
    static writeAll(t32) {
      let e26 = new r53();
      return Dt4(t32) ? t32.then((i29) => e26.writeAll(i29)) : Lt4(t32) ? Jo3(e26, t32) : Ho3(e26, t32);
    }
    constructor() {
      super(), this._autoDestroy = true;
    }
    _writeSchema(t32) {
      return this._writeMagic()._writePadding(2);
    }
    _writeFooter(t32) {
      let e26 = De2.encode(new De2(t32, V6.V5, this._recordBatchBlocks, this._dictionaryBlocks));
      return super._writeFooter(t32)._write(e26)._write(Int32Array.of(e26.byteLength))._writeMagic();
    }
  };
  function Ho3(r91, t32) {
    let e26 = t32;
    t32 instanceof tt4 && (e26 = t32.batches, r91.reset(void 0, t32.schema));
    for (let i29 of e26)
      r91.write(i29);
    return r91.finish();
  }
  function Jo3(r91, t32) {
    return D6(this, void 0, void 0, function* () {
      var e26, i29, n37, s29, o35, a27, c30;
      try {
        for (e26 = true, i29 = V5(t32); n37 = yield i29.next(), s29 = n37.done, !s29; e26 = true) {
          c30 = n37.value, e26 = false;
          let u30 = c30;
          r91.write(u30);
        }
      } catch (u30) {
        o35 = { error: u30 };
      } finally {
        try {
          !e26 && !s29 && (a27 = i29.return) && (yield a27.call(i29));
        } finally {
          if (o35)
            throw o35.error;
        }
      }
      return r91.finish();
    });
  }
  function bl3(r91, t32) {
    if (Lt4(r91))
      return Kd(r91, t32);
    if (zt4(r91))
      return Gd(r91, t32);
    throw new Error("toDOMStream() must be called with an Iterable or AsyncIterable");
  }
  function Gd(r91, t32) {
    let e26 = null, i29 = t32?.type === "bytes" || false, n37 = t32?.highWaterMark || Math.pow(2, 24);
    return new ReadableStream(Object.assign(Object.assign({}, t32), { start(o35) {
      s29(o35, e26 || (e26 = r91[Symbol.iterator]()));
    }, pull(o35) {
      e26 ? s29(o35, e26) : o35.close();
    }, cancel() {
      (e26?.return && e26.return() || true) && (e26 = null);
    } }), Object.assign({ highWaterMark: i29 ? n37 : void 0 }, t32));
    function s29(o35, a27) {
      let c30, u30 = null, d25 = o35.desiredSize || null;
      for (; !(u30 = a27.next(i29 ? d25 : null)).done; )
        if (ArrayBuffer.isView(u30.value) && (c30 = S6(u30.value)) && (d25 != null && i29 && (d25 = d25 - c30.byteLength + 1), u30.value = c30), o35.enqueue(u30.value), d25 != null && --d25 <= 0)
          return;
      o35.close();
    }
  }
  function Kd(r91, t32) {
    let e26 = null, i29 = t32?.type === "bytes" || false, n37 = t32?.highWaterMark || Math.pow(2, 24);
    return new ReadableStream(Object.assign(Object.assign({}, t32), { start(o35) {
      return D6(this, void 0, void 0, function* () {
        yield s29(o35, e26 || (e26 = r91[Symbol.asyncIterator]()));
      });
    }, pull(o35) {
      return D6(this, void 0, void 0, function* () {
        e26 ? yield s29(o35, e26) : o35.close();
      });
    }, cancel() {
      return D6(this, void 0, void 0, function* () {
        (e26?.return && (yield e26.return()) || true) && (e26 = null);
      });
    } }), Object.assign({ highWaterMark: i29 ? n37 : void 0 }, t32));
    function s29(o35, a27) {
      return D6(this, void 0, void 0, function* () {
        let c30, u30 = null, d25 = o35.desiredSize || null;
        for (; !(u30 = yield a27.next(i29 ? d25 : null)).done; )
          if (ArrayBuffer.isView(u30.value) && (c30 = S6(u30.value)) && (d25 != null && i29 && (d25 = d25 - c30.byteLength + 1), u30.value = c30), o35.enqueue(u30.value), d25 != null && --d25 <= 0)
            return;
        o35.close();
      });
    }
  }
  function wl2(r91) {
    return new Go3(r91);
  }
  var Go3 = class {
    constructor(t32) {
      this._numChunks = 0, this._finished = false, this._bufferedSize = 0;
      let { ["readableStrategy"]: e26, ["writableStrategy"]: i29, ["queueingStrategy"]: n37 = "count" } = t32, s29 = S5(t32, ["readableStrategy", "writableStrategy", "queueingStrategy"]);
      this._controller = null, this._builder = pe4(s29), this._getSize = n37 !== "bytes" ? _l2 : vl3;
      let { ["highWaterMark"]: o35 = n37 === "bytes" ? Math.pow(2, 14) : 1e3 } = Object.assign({}, e26), { ["highWaterMark"]: a27 = n37 === "bytes" ? Math.pow(2, 14) : 1e3 } = Object.assign({}, i29);
      this.readable = new ReadableStream({ cancel: () => {
        this._builder.clear();
      }, pull: (c30) => {
        this._maybeFlush(this._builder, this._controller = c30);
      }, start: (c30) => {
        this._maybeFlush(this._builder, this._controller = c30);
      } }, { highWaterMark: o35, size: n37 !== "bytes" ? _l2 : vl3 }), this.writable = new WritableStream({ abort: () => {
        this._builder.clear();
      }, write: () => {
        this._maybeFlush(this._builder, this._controller);
      }, close: () => {
        this._maybeFlush(this._builder.finish(), this._controller);
      } }, { highWaterMark: a27, size: (c30) => this._writeValueAndReturnChunkSize(c30) });
    }
    _writeValueAndReturnChunkSize(t32) {
      let e26 = this._bufferedSize;
      return this._bufferedSize = this._getSize(this._builder.append(t32)), this._bufferedSize - e26;
    }
    _maybeFlush(t32, e26) {
      e26 != null && (this._bufferedSize >= e26.desiredSize && ++this._numChunks && this._enqueue(e26, t32.toVector()), t32.finished && ((t32.length > 0 || this._numChunks === 0) && ++this._numChunks && this._enqueue(e26, t32.toVector()), !this._finished && (this._finished = true) && this._enqueue(e26, null)));
    }
    _enqueue(t32, e26) {
      this._bufferedSize = 0, this._controller = null, e26 == null ? t32.close() : t32.enqueue(e26);
    }
  };
  var _l2 = (r91) => {
    var t32;
    return (t32 = r91?.length) !== null && t32 !== void 0 ? t32 : 0;
  };
  var vl3 = (r91) => {
    var t32;
    return (t32 = r91?.byteLength) !== null && t32 !== void 0 ? t32 : 0;
  };
  function Cs3(r91, t32) {
    let e26 = new Zt4(), i29 = null, n37 = new ReadableStream({ cancel() {
      return D6(this, void 0, void 0, function* () {
        yield e26.close();
      });
    }, start(a27) {
      return D6(this, void 0, void 0, function* () {
        yield o35(a27, i29 || (i29 = yield s29()));
      });
    }, pull(a27) {
      return D6(this, void 0, void 0, function* () {
        i29 ? yield o35(a27, i29) : a27.close();
      });
    } });
    return { writable: new WritableStream(e26, Object.assign({ highWaterMark: Math.pow(2, 14) }, r91)), readable: n37 };
    function s29() {
      return D6(this, void 0, void 0, function* () {
        return yield (yield St4.from(e26)).open(t32);
      });
    }
    function o35(a27, c30) {
      return D6(this, void 0, void 0, function* () {
        let u30 = a27.desiredSize, d25 = null;
        for (; !(d25 = yield c30.next()).done; )
          if (a27.enqueue(d25.value), u30 != null && --u30 <= 0)
            return;
        a27.close();
      });
    }
  }
  function zs3(r91, t32) {
    let e26 = new this(r91), i29 = new Mt4(e26), n37 = new ReadableStream({ cancel() {
      return D6(this, void 0, void 0, function* () {
        yield i29.cancel();
      });
    }, pull(o35) {
      return D6(this, void 0, void 0, function* () {
        yield s29(o35);
      });
    }, start(o35) {
      return D6(this, void 0, void 0, function* () {
        yield s29(o35);
      });
    } }, Object.assign({ highWaterMark: Math.pow(2, 14) }, t32));
    return { writable: new WritableStream(e26, r91), readable: n37 };
    function s29(o35) {
      return D6(this, void 0, void 0, function* () {
        let a27 = null, c30 = o35.desiredSize;
        for (; a27 = yield i29.read(c30 || null); )
          if (o35.enqueue(a27), c30 != null && (c30 -= a27.byteLength) <= 0)
            return;
        o35.close();
      });
    }
  }
  var Xd = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, ro3), Fo3), _o3), io3), Gs3), bo3), qs3), { compareSchemas: Pr3, compareFields: jc, compareTypes: Is3 });
  rt4.toDOMStream = bl3;
  z5.throughDOM = wl2;
  St4.throughDOM = Cs3;
  qe3.throughDOM = Cs3;
  ye4.throughDOM = Cs3;
  Ue3.throughDOM = zs3;
  er3.throughDOM = zs3;
  tr3.throughDOM = zs3;

  // https://esm.sh/v135/@preact/signals-core@1.6.1/denonext/signals-core.mjs
  var b7 = Symbol.for("preact-signals");
  function d7() {
    if (r54 > 1) {
      r54--;
      return;
    }
    let i29, t32 = false;
    for (; h9 !== void 0; ) {
      let o35 = h9;
      for (h9 = void 0, v6++; o35 !== void 0; ) {
        let f25 = o35.o;
        if (o35.o = void 0, o35.f &= -3, !(8 & o35.f) && y6(o35))
          try {
            o35.c();
          } catch (x22) {
            t32 || (i29 = x22, t32 = true);
          }
        o35 = f25;
      }
    }
    if (v6 = 0, r54--, t32)
      throw i29;
  }
  var n6;
  var h9;
  var r54 = 0;
  var v6 = 0;
  var u5 = 0;
  function l8(i29) {
    if (n6 === void 0)
      return;
    let t32 = i29.n;
    if (t32 === void 0 || t32.t !== n6)
      return t32 = { i: 0, S: i29, p: n6.s, n: void 0, t: n6, e: void 0, x: void 0, r: t32 }, n6.s !== void 0 && (n6.s.n = t32), n6.s = t32, i29.n = t32, 32 & n6.f && i29.S(t32), t32;
    if (t32.i === -1)
      return t32.i = 0, t32.n !== void 0 && (t32.n.p = t32.p, t32.p !== void 0 && (t32.p.n = t32.n), t32.p = n6.s, t32.n = void 0, n6.s.n = t32, n6.s = t32), t32;
  }
  function s4(i29) {
    this.v = i29, this.i = 0, this.n = void 0, this.t = void 0;
  }
  s4.prototype.brand = b7;
  s4.prototype.h = function() {
    return true;
  };
  s4.prototype.S = function(i29) {
    this.t !== i29 && i29.e === void 0 && (i29.x = this.t, this.t !== void 0 && (this.t.e = i29), this.t = i29);
  };
  s4.prototype.U = function(i29) {
    if (this.t !== void 0) {
      let t32 = i29.e, o35 = i29.x;
      t32 !== void 0 && (t32.x = o35, i29.e = void 0), o35 !== void 0 && (o35.e = t32, i29.x = void 0), i29 === this.t && (this.t = o35);
    }
  };
  s4.prototype.subscribe = function(i29) {
    return U7(() => {
      let t32 = this.value, o35 = n6;
      n6 = void 0;
      try {
        i29(t32);
      } finally {
        n6 = o35;
      }
    });
  };
  s4.prototype.valueOf = function() {
    return this.value;
  };
  s4.prototype.toString = function() {
    return this.value + "";
  };
  s4.prototype.toJSON = function() {
    return this.value;
  };
  s4.prototype.peek = function() {
    let i29 = n6;
    n6 = void 0;
    try {
      return this.value;
    } finally {
      n6 = i29;
    }
  };
  Object.defineProperty(s4.prototype, "value", { get() {
    let i29 = l8(this);
    return i29 !== void 0 && (i29.i = this.i), this.v;
  }, set(i29) {
    if (i29 !== this.v) {
      if (v6 > 100)
        throw new Error("Cycle detected");
      this.v = i29, this.i++, u5++, r54++;
      try {
        for (let t32 = this.t; t32 !== void 0; t32 = t32.x)
          t32.t.N();
      } finally {
        d7();
      }
    }
  } });
  function O8(i29) {
    return new s4(i29);
  }
  function y6(i29) {
    for (let t32 = i29.s; t32 !== void 0; t32 = t32.n)
      if (t32.S.i !== t32.i || !t32.S.h() || t32.S.i !== t32.i)
        return true;
    return false;
  }
  function a6(i29) {
    for (let t32 = i29.s; t32 !== void 0; t32 = t32.n) {
      let o35 = t32.S.n;
      if (o35 !== void 0 && (t32.r = o35), t32.S.n = t32, t32.i = -1, t32.n === void 0) {
        i29.s = t32;
        break;
      }
    }
  }
  function S7(i29) {
    let t32, o35 = i29.s;
    for (; o35 !== void 0; ) {
      let f25 = o35.p;
      o35.i === -1 ? (o35.S.U(o35), f25 !== void 0 && (f25.n = o35.n), o35.n !== void 0 && (o35.n.p = f25)) : t32 = o35, o35.S.n = o35.r, o35.r !== void 0 && (o35.r = void 0), o35 = f25;
    }
    i29.s = t32;
  }
  function e2(i29) {
    s4.call(this, void 0), this.x = i29, this.s = void 0, this.g = u5 - 1, this.f = 4;
  }
  (e2.prototype = new s4()).h = function() {
    if (this.f &= -3, 1 & this.f)
      return false;
    if ((36 & this.f) == 32 || (this.f &= -5, this.g === u5))
      return true;
    if (this.g = u5, this.f |= 1, this.i > 0 && !y6(this))
      return this.f &= -2, true;
    let i29 = n6;
    try {
      a6(this), n6 = this;
      let t32 = this.x();
      (16 & this.f || this.v !== t32 || this.i === 0) && (this.v = t32, this.f &= -17, this.i++);
    } catch (t32) {
      this.v = t32, this.f |= 16, this.i++;
    }
    return n6 = i29, S7(this), this.f &= -2, true;
  };
  e2.prototype.S = function(i29) {
    if (this.t === void 0) {
      this.f |= 36;
      for (let t32 = this.s; t32 !== void 0; t32 = t32.n)
        t32.S.S(t32);
    }
    s4.prototype.S.call(this, i29);
  };
  e2.prototype.U = function(i29) {
    if (this.t !== void 0 && (s4.prototype.U.call(this, i29), this.t === void 0)) {
      this.f &= -33;
      for (let t32 = this.s; t32 !== void 0; t32 = t32.n)
        t32.S.U(t32);
    }
  };
  e2.prototype.N = function() {
    if (!(2 & this.f)) {
      this.f |= 6;
      for (let i29 = this.t; i29 !== void 0; i29 = i29.x)
        i29.t.N();
    }
  };
  Object.defineProperty(e2.prototype, "value", { get() {
    if (1 & this.f)
      throw new Error("Cycle detected");
    let i29 = l8(this);
    if (this.h(), i29 !== void 0 && (i29.i = this.i), 16 & this.f)
      throw this.v;
    return this.v;
  } });
  function w7(i29) {
    let t32 = i29.u;
    if (i29.u = void 0, typeof t32 == "function") {
      r54++;
      let o35 = n6;
      n6 = void 0;
      try {
        t32();
      } catch (f25) {
        throw i29.f &= -2, i29.f |= 8, p6(i29), f25;
      } finally {
        n6 = o35, d7();
      }
    }
  }
  function p6(i29) {
    for (let t32 = i29.s; t32 !== void 0; t32 = t32.n)
      t32.S.U(t32);
    i29.x = void 0, i29.s = void 0, w7(i29);
  }
  function g7(i29) {
    if (n6 !== this)
      throw new Error("Out-of-order effect");
    S7(this), n6 = i29, this.f &= -2, 8 & this.f && p6(this), d7();
  }
  function c6(i29) {
    this.x = i29, this.u = void 0, this.s = void 0, this.o = void 0, this.f = 32;
  }
  c6.prototype.c = function() {
    let i29 = this.S();
    try {
      if (8 & this.f || this.x === void 0)
        return;
      let t32 = this.x();
      typeof t32 == "function" && (this.u = t32);
    } finally {
      i29();
    }
  };
  c6.prototype.S = function() {
    if (1 & this.f)
      throw new Error("Cycle detected");
    this.f |= 1, this.f &= -9, w7(this), a6(this), r54++;
    let i29 = n6;
    return n6 = this, g7.bind(this, i29);
  };
  c6.prototype.N = function() {
    2 & this.f || (this.f |= 2, this.o = h9, h9 = this);
  };
  c6.prototype.d = function() {
    this.f |= 8, 1 & this.f || p6(this);
  };
  function U7(i29) {
    let t32 = new c6(i29);
    try {
      t32.c();
    } catch (o35) {
      throw t32.d(), o35;
    }
    return t32.d.bind(t32);
  }

  // https://esm.sh/v135/htl@0.3.1/denonext/htl.mjs
  function J6(s29) {
    let i29 = document.createElement("template");
    return i29.innerHTML = s29, document.importNode(i29.content, true);
  }
  function ee5(s29) {
    let i29 = document.createElementNS("http://www.w3.org/2000/svg", "g");
    return i29.innerHTML = s29, i29;
  }
  var Ie5 = Object.assign(P7(J6, (s29) => {
    if (s29.firstChild === null)
      return null;
    if (s29.firstChild === s29.lastChild)
      return s29.removeChild(s29.firstChild);
    let i29 = document.createElement("span");
    return i29.appendChild(s29), i29;
  }), { fragment: P7(J6, (s29) => s29) });
  var He4 = Object.assign(P7(ee5, (s29) => s29.firstChild === null ? null : s29.firstChild === s29.lastChild ? s29.removeChild(s29.firstChild) : s29), { fragment: P7(ee5, (s29) => {
    let i29 = document.createDocumentFragment();
    for (; s29.firstChild; )
      i29.appendChild(s29.firstChild);
    return i29;
  }) });
  var Oe5 = 9;
  var ge5 = 10;
  var we5 = 12;
  var Me4 = 13;
  var me5 = 32;
  var De3 = 65;
  var Le5 = 90;
  var Ue4 = 97;
  var xe4 = 122;
  var R7 = 60;
  var T7 = 62;
  var p7 = 47;
  var _6 = 45;
  var F7 = 33;
  var W6 = 61;
  var te7 = 34;
  var se6 = 39;
  var Re5 = 63;
  var o6 = 1;
  var re5 = 2;
  var ie6 = 3;
  var X6 = 4;
  var v7 = 5;
  var N7 = 6;
  var $6 = 7;
  var y7 = 8;
  var B7 = 9;
  var Q7 = 10;
  var V7 = 11;
  var G8 = 12;
  var j8 = 13;
  var m6 = 14;
  var ne4 = 15;
  var ae5 = 16;
  var S8 = 17;
  var le6 = 18;
  var oe6 = 19;
  var fe4 = 20;
  var Te6 = 21;
  var Y7 = 22;
  var D8 = 23;
  var ce4 = 24;
  var Ee6 = 25;
  var u6 = 26;
  var _e3 = 27;
  var ue5 = 28;
  var Ae5 = 29;
  var ve4 = 128;
  var Se6 = 1;
  var ye5 = 8;
  var Be4 = 1;
  var Ce5 = "http://www.w3.org/2000/svg";
  var k7 = "http://www.w3.org/1999/xlink";
  var de4 = "http://www.w3.org/XML/1998/namespace";
  var pe5 = "http://www.w3.org/2000/xmlns/";
  var ke5 = new Map(["attributeName", "attributeType", "baseFrequency", "baseProfile", "calcMode", "clipPathUnits", "diffuseConstant", "edgeMode", "filterUnits", "glyphRef", "gradientTransform", "gradientUnits", "kernelMatrix", "kernelUnitLength", "keyPoints", "keySplines", "keyTimes", "lengthAdjust", "limitingConeAngle", "markerHeight", "markerUnits", "markerWidth", "maskContentUnits", "maskUnits", "numOctaves", "pathLength", "patternContentUnits", "patternTransform", "patternUnits", "pointsAtX", "pointsAtY", "pointsAtZ", "preserveAlpha", "preserveAspectRatio", "primitiveUnits", "refX", "refY", "repeatCount", "repeatDur", "requiredExtensions", "requiredFeatures", "specularConstant", "specularExponent", "spreadMethod", "startOffset", "stdDeviation", "stitchTiles", "surfaceScale", "systemLanguage", "tableValues", "targetX", "targetY", "textLength", "viewBox", "viewTarget", "xChannelSelector", "yChannelSelector", "zoomAndPan"].map((s29) => [s29.toLowerCase(), s29]));
  var H7 = /* @__PURE__ */ new Map([["xlink:actuate", k7], ["xlink:arcrole", k7], ["xlink:href", k7], ["xlink:role", k7], ["xlink:show", k7], ["xlink:title", k7], ["xlink:type", k7], ["xml:lang", de4], ["xml:space", de4], ["xmlns", pe5], ["xmlns:xlink", pe5]]);
  function P7(s29, i29) {
    return function({ raw: c30 }) {
      let e26 = o6, f25 = "", C24, E24, w26, h35, x22 = 0;
      for (let n37 = 0, A27 = arguments.length; n37 < A27; ++n37) {
        let a27 = c30[n37];
        if (n37 > 0) {
          let t32 = arguments[n37];
          switch (e26) {
            case u6: {
              if (t32 != null) {
                let l35 = `${t32}`;
                if (he4(E24))
                  f25 += l35.replace(/[<]/g, g8);
                else {
                  if (new RegExp(`</${E24}[\\s>/]`, "i").test(f25.slice(-E24.length - 2) + l35))
                    throw new Error("unsafe raw text");
                  f25 += l35;
                }
              }
              break;
            }
            case o6: {
              t32 == null || (t32 instanceof Node || typeof t32 != "string" && t32[Symbol.iterator] || /(?:^|>)$/.test(c30[n37 - 1]) && /^(?:<|$)/.test(a27) ? (f25 += "<!--::" + n37 + "-->", x22 |= ve4) : f25 += `${t32}`.replace(/[<&]/g, g8));
              break;
            }
            case B7: {
              e26 = G8;
              let l35;
              if (/^[\s>]/.test(a27)) {
                if (t32 == null || t32 === false) {
                  f25 = f25.slice(0, w26 - c30[n37 - 1].length);
                  break;
                }
                if (t32 === true || (l35 = `${t32}`) == "") {
                  f25 += "''";
                  break;
                }
                if (c30[n37 - 1].slice(w26, h35) === "style" && q6(t32) || typeof t32 == "function") {
                  f25 += "::" + n37, x22 |= Se6;
                  break;
                }
              }
              if (l35 === void 0 && (l35 = `${t32}`), l35 === "")
                throw new Error("unsafe unquoted empty string");
              f25 += l35.replace(/^['"]|[\s>&]/g, g8);
              break;
            }
            case G8: {
              f25 += `${t32}`.replace(/[\s>&]/g, g8);
              break;
            }
            case V7: {
              f25 += `${t32}`.replace(/['&]/g, g8);
              break;
            }
            case Q7: {
              f25 += `${t32}`.replace(/["&]/g, g8);
              break;
            }
            case N7: {
              if (q6(t32)) {
                f25 += "::" + n37 + "=''", x22 |= Se6;
                break;
              }
              throw new Error("invalid binding");
            }
            case S8:
              break;
            default:
              throw new Error("invalid binding");
          }
        }
        for (let t32 = 0, l35 = a27.length; t32 < l35; ++t32) {
          let r91 = a27.charCodeAt(t32);
          switch (e26) {
            case o6: {
              r91 === R7 && (e26 = re5);
              break;
            }
            case re5: {
              r91 === F7 ? e26 = Ee6 : r91 === p7 ? e26 = ie6 : I9(r91) ? (C24 = t32, E24 = void 0, e26 = X6, --t32) : r91 === Re5 ? (e26 = v7, --t32) : (e26 = o6, --t32);
              break;
            }
            case ie6: {
              I9(r91) ? (e26 = X6, --t32) : r91 === T7 ? e26 = o6 : (e26 = v7, --t32);
              break;
            }
            case X6: {
              b8(r91) ? (e26 = N7, E24 = U8(a27, C24, t32)) : r91 === p7 ? e26 = m6 : r91 === T7 && (E24 = U8(a27, C24, t32), e26 = L7(E24) ? u6 : o6);
              break;
            }
            case N7: {
              b8(r91) || (r91 === p7 || r91 === T7 ? (e26 = $6, --t32) : r91 === W6 ? (e26 = y7, w26 = t32 + 1, h35 = void 0) : (e26 = y7, --t32, w26 = t32 + 1, h35 = void 0));
              break;
            }
            case y7: {
              b8(r91) || r91 === p7 || r91 === T7 ? (e26 = $6, --t32, h35 = t32) : r91 === W6 && (e26 = B7, h35 = t32);
              break;
            }
            case $6: {
              b8(r91) || (r91 === p7 ? e26 = m6 : r91 === W6 ? e26 = B7 : r91 === T7 ? e26 = L7(E24) ? u6 : o6 : (e26 = y7, --t32, w26 = t32 + 1, h35 = void 0));
              break;
            }
            case B7: {
              b8(r91) || (r91 === te7 ? e26 = Q7 : r91 === se6 ? e26 = V7 : r91 === T7 ? e26 = L7(E24) ? u6 : o6 : (e26 = G8, --t32));
              break;
            }
            case Q7: {
              r91 === te7 && (e26 = j8);
              break;
            }
            case V7: {
              r91 === se6 && (e26 = j8);
              break;
            }
            case G8: {
              b8(r91) ? e26 = N7 : r91 === T7 && (e26 = L7(E24) ? u6 : o6);
              break;
            }
            case j8: {
              b8(r91) ? e26 = N7 : r91 === p7 ? e26 = m6 : r91 === T7 ? e26 = L7(E24) ? u6 : o6 : (e26 = N7, --t32);
              break;
            }
            case m6: {
              r91 === T7 ? e26 = o6 : (e26 = N7, --t32);
              break;
            }
            case v7: {
              r91 === T7 && (e26 = o6);
              break;
            }
            case ne4: {
              r91 === _6 ? e26 = ae5 : r91 === T7 ? e26 = o6 : (e26 = S8, --t32);
              break;
            }
            case ae5: {
              r91 === _6 ? e26 = D8 : r91 === T7 ? e26 = o6 : (e26 = S8, --t32);
              break;
            }
            case S8: {
              r91 === R7 ? e26 = le6 : r91 === _6 && (e26 = Y7);
              break;
            }
            case le6: {
              r91 === F7 ? e26 = oe6 : r91 !== R7 && (e26 = S8, --t32);
              break;
            }
            case oe6: {
              r91 === _6 ? e26 = fe4 : (e26 = S8, --t32);
              break;
            }
            case fe4: {
              r91 === _6 ? e26 = Te6 : (e26 = D8, --t32);
              break;
            }
            case Te6: {
              e26 = D8, --t32;
              break;
            }
            case Y7: {
              r91 === _6 ? e26 = D8 : (e26 = S8, --t32);
              break;
            }
            case D8: {
              r91 === T7 ? e26 = o6 : r91 === F7 ? e26 = ce4 : r91 !== _6 && (e26 = S8, --t32);
              break;
            }
            case ce4: {
              r91 === _6 ? e26 = Y7 : r91 === T7 ? e26 = o6 : (e26 = S8, --t32);
              break;
            }
            case Ee6: {
              r91 === _6 && a27.charCodeAt(t32 + 1) === _6 ? (e26 = ne4, ++t32) : (e26 = v7, --t32);
              break;
            }
            case u6: {
              r91 === R7 && (e26 = _e3);
              break;
            }
            case _e3: {
              r91 === p7 ? e26 = ue5 : (e26 = u6, --t32);
              break;
            }
            case ue5: {
              I9(r91) ? (C24 = t32, e26 = Ae5, --t32) : (e26 = u6, --t32);
              break;
            }
            case Ae5: {
              b8(r91) && E24 === U8(a27, C24, t32) ? e26 = N7 : r91 === p7 && E24 === U8(a27, C24, t32) ? e26 = m6 : r91 === T7 && E24 === U8(a27, C24, t32) ? e26 = o6 : I9(r91) || (e26 = u6, --t32);
              break;
            }
            default: {
              e26 = void 0;
              break;
            }
          }
        }
        f25 += a27;
      }
      let Z23 = s29(f25), K26 = document.createTreeWalker(Z23, x22, null, false), z26 = [];
      for (; K26.nextNode(); ) {
        let n37 = K26.currentNode;
        switch (n37.nodeType) {
          case Be4: {
            let A27 = n37.attributes;
            for (let a27 = 0, t32 = A27.length; a27 < t32; ++a27) {
              let { name: l35, value: r91 } = A27[a27];
              if (/^::/.test(l35)) {
                let O21 = arguments[+l35.slice(2)];
                Ne5(n37, l35), --a27, --t32;
                for (let M26 in O21) {
                  let d25 = O21[M26];
                  d25 == null || d25 === false || (typeof d25 == "function" ? n37[M26] = d25 : M26 === "style" && q6(d25) ? be4(n37[M26], d25) : Ge3(n37, M26, d25 === true ? "" : d25));
                }
              } else if (/^::/.test(r91)) {
                let O21 = arguments[+r91.slice(2)];
                Ne5(n37, l35), --a27, --t32, typeof O21 == "function" ? n37[l35] = O21 : be4(n37[l35], O21);
              }
            }
            break;
          }
          case ye5: {
            if (/^::/.test(n37.data)) {
              let A27 = n37.parentNode, a27 = arguments[+n37.data.slice(2)];
              if (a27 instanceof Node)
                A27.insertBefore(a27, n37);
              else if (typeof a27 != "string" && a27[Symbol.iterator])
                if (a27 instanceof NodeList || a27 instanceof HTMLCollection)
                  for (let t32 = a27.length - 1, l35 = n37; t32 >= 0; --t32)
                    l35 = A27.insertBefore(a27[t32], l35);
                else
                  for (let t32 of a27)
                    t32 != null && A27.insertBefore(t32 instanceof Node ? t32 : document.createTextNode(t32), n37);
              else
                A27.insertBefore(document.createTextNode(a27), n37);
              z26.push(n37);
            }
            break;
          }
        }
      }
      for (let n37 of z26)
        n37.parentNode.removeChild(n37);
      return i29(Z23);
    };
  }
  function g8(s29) {
    return `&#${s29.charCodeAt(0).toString()};`;
  }
  function I9(s29) {
    return De3 <= s29 && s29 <= Le5 || Ue4 <= s29 && s29 <= xe4;
  }
  function b8(s29) {
    return s29 === Oe5 || s29 === ge5 || s29 === we5 || s29 === me5 || s29 === Me4;
  }
  function q6(s29) {
    return s29 && s29.toString === Object.prototype.toString;
  }
  function L7(s29) {
    return s29 === "script" || s29 === "style" || he4(s29);
  }
  function he4(s29) {
    return s29 === "textarea" || s29 === "title";
  }
  function U8(s29, i29, c30) {
    return s29.slice(i29, c30).toLowerCase();
  }
  function Ge3(s29, i29, c30) {
    if (s29.namespaceURI === Ce5 && (i29 = i29.toLowerCase(), i29 = ke5.get(i29) || i29, H7.has(i29))) {
      s29.setAttributeNS(H7.get(i29), i29, c30);
      return;
    }
    s29.setAttribute(i29, c30);
  }
  function Ne5(s29, i29) {
    if (s29.namespaceURI === Ce5 && (i29 = i29.toLowerCase(), i29 = ke5.get(i29) || i29, H7.has(i29))) {
      s29.removeAttributeNS(H7.get(i29), i29);
      return;
    }
    s29.removeAttribute(i29);
  }
  function be4(s29, i29) {
    for (let c30 in i29) {
      let e26 = i29[c30];
      c30.startsWith("--") ? s29.setProperty(c30, e26) : s29[c30] = e26;
    }
  }

  // lib/utils/assert.ts
  var AssertionError = class extends Error {
    /** @param message The error message. */
    constructor(message) {
      super(message);
      this.name = "AssertionError";
    }
  };
  function assert(expr, msg = "") {
    if (!expr) {
      throw new AssertionError(msg);
    }
  }

  // lib/utils/AsyncBatchReader.ts
  var AsyncBatchReader = class {
    /** the iterable batches to read */
    #batches = [];
    /** the index of the current row */
    #index = 0;
    /** resolves a promise for when the next batch is available */
    #resolve = null;
    /** the current batch */
    #current = null;
    /** A function to request more data. */
    #requestNextBatch;
    /**
     * @param requestNextBatch - a function to request more data. When
     * this function completes, it should enqueue the next batch, otherwise the
     * reader will be stuck.
     */
    constructor(requestNextBatch) {
      this.#requestNextBatch = requestNextBatch;
    }
    /**
     * Enqueue a batch of data
     *
     * The last batch should have `last: true` set,
     * so the reader can terminate when it has
     * exhausted all the data.
     *
     * @param batch - the batch of data to enqueue
     * @param options
     * @param options.last - whether this is the last batch
     */
    enqueueBatch(batch, { last }) {
      this.#batches.push({ data: batch, last });
      if (this.#resolve) {
        this.#resolve();
        this.#resolve = null;
      }
    }
    async next() {
      if (!this.#current) {
        if (this.#batches.length === 0) {
          let promise = new Promise((resolve) => {
            this.#resolve = resolve;
          });
          this.#requestNextBatch();
          await promise;
        }
        let next = this.#batches.shift();
        assert(next, "No next batch");
        this.#current = next;
      }
      let result = this.#current.data.next();
      if (result.done) {
        if (this.#current.last) {
          return { done: true, value: void 0 };
        }
        this.#current = null;
        return this.next();
      }
      return {
        done: false,
        value: { row: result.value, index: this.#index++ }
      };
    }
  };

  // https://esm.sh/v135/jsbi@4.3.0/denonext/jsbi.mjs
  var D9 = class i5 extends Array {
    constructor(t32, e26) {
      if (super(t32), this.sign = e26, Object.setPrototypeOf(this, i5.prototype), t32 > i5.__kMaxLength)
        throw new RangeError("Maximum BigInt size exceeded");
    }
    static BigInt(t32) {
      var e26 = Math.floor, r91 = Number.isFinite;
      if (typeof t32 == "number") {
        if (t32 === 0)
          return i5.__zero();
        if (i5.__isOneDigitInt(t32))
          return 0 > t32 ? i5.__oneDigit(-t32, true) : i5.__oneDigit(t32, false);
        if (!r91(t32) || e26(t32) !== t32)
          throw new RangeError("The number " + t32 + " cannot be converted to BigInt because it is not an integer");
        return i5.__fromDouble(t32);
      }
      if (typeof t32 == "string") {
        let o35 = i5.__fromString(t32);
        if (o35 === null)
          throw new SyntaxError("Cannot convert " + t32 + " to a BigInt");
        return o35;
      }
      if (typeof t32 == "boolean")
        return t32 === true ? i5.__oneDigit(1, false) : i5.__zero();
      if (typeof t32 == "object") {
        if (t32.constructor === i5)
          return t32;
        let o35 = i5.__toPrimitive(t32);
        return i5.BigInt(o35);
      }
      throw new TypeError("Cannot convert " + t32 + " to a BigInt");
    }
    toDebugString() {
      let t32 = ["BigInt["];
      for (let e26 of this)
        t32.push((e26 && (e26 >>> 0).toString(16)) + ", ");
      return t32.push("]"), t32.join("");
    }
    toString(t32 = 10) {
      if (2 > t32 || 36 < t32)
        throw new RangeError("toString() radix argument must be between 2 and 36");
      return this.length === 0 ? "0" : t32 & t32 - 1 ? i5.__toStringGeneric(this, t32, false) : i5.__toStringBasePowerOfTwo(this, t32);
    }
    valueOf() {
      throw new Error("Convert JSBI instances to native numbers using `toNumber`.");
    }
    static toNumber(t32) {
      let e26 = t32.length;
      if (e26 === 0)
        return 0;
      if (e26 === 1) {
        let b28 = t32.__unsignedDigit(0);
        return t32.sign ? -b28 : b28;
      }
      let r91 = t32.__digit(e26 - 1), o35 = i5.__clz30(r91), n37 = 30 * e26 - o35;
      if (1024 < n37)
        return t32.sign ? -1 / 0 : 1 / 0;
      let s29 = n37 - 1, l35 = r91, g31 = e26 - 1, a27 = o35 + 3, _24 = a27 === 32 ? 0 : l35 << a27;
      _24 >>>= 12;
      let u30 = a27 - 12, f25 = 12 <= a27 ? 0 : l35 << 20 + a27, h35 = 20 + a27;
      for (0 < u30 && 0 < g31 && (g31--, l35 = t32.__digit(g31), _24 |= l35 >>> 30 - u30, f25 = l35 << u30 + 2, h35 = u30 + 2); 0 < h35 && 0 < g31; )
        g31--, l35 = t32.__digit(g31), f25 |= 30 <= h35 ? l35 << h35 - 30 : l35 >>> 30 - h35, h35 -= 30;
      let d25 = i5.__decideRounding(t32, h35, g31, l35);
      if ((d25 === 1 || d25 === 0 && (1 & f25) == 1) && (f25 = f25 + 1 >>> 0, f25 === 0 && (_24++, _24 >>> 20 != 0 && (_24 = 0, s29++, 1023 < s29))))
        return t32.sign ? -1 / 0 : 1 / 0;
      let c30 = t32.sign ? -2147483648 : 0;
      return s29 = s29 + 1023 << 20, i5.__kBitConversionInts[1] = c30 | s29 | _24, i5.__kBitConversionInts[0] = f25, i5.__kBitConversionDouble[0];
    }
    static unaryMinus(t32) {
      if (t32.length === 0)
        return t32;
      let e26 = t32.__copy();
      return e26.sign = !t32.sign, e26;
    }
    static bitwiseNot(t32) {
      return t32.sign ? i5.__absoluteSubOne(t32).__trim() : i5.__absoluteAddOne(t32, true);
    }
    static exponentiate(t32, e26) {
      if (e26.sign)
        throw new RangeError("Exponent must be positive");
      if (e26.length === 0)
        return i5.__oneDigit(1, false);
      if (t32.length === 0)
        return t32;
      if (t32.length === 1 && t32.__digit(0) === 1)
        return t32.sign && !(1 & e26.__digit(0)) ? i5.unaryMinus(t32) : t32;
      if (1 < e26.length)
        throw new RangeError("BigInt too big");
      let r91 = e26.__unsignedDigit(0);
      if (r91 === 1)
        return t32;
      if (r91 >= i5.__kMaxLengthBits)
        throw new RangeError("BigInt too big");
      if (t32.length === 1 && t32.__digit(0) === 2) {
        let s29 = 1 + (0 | r91 / 30), l35 = t32.sign && (1 & r91) != 0, g31 = new i5(s29, l35);
        g31.__initializeDigits();
        let a27 = 1 << r91 % 30;
        return g31.__setDigit(s29 - 1, a27), g31;
      }
      let o35 = null, n37 = t32;
      for (1 & r91 && (o35 = t32), r91 >>= 1; r91 !== 0; r91 >>= 1)
        n37 = i5.multiply(n37, n37), 1 & r91 && (o35 === null ? o35 = n37 : o35 = i5.multiply(o35, n37));
      return o35;
    }
    static multiply(t32, e26) {
      if (t32.length === 0)
        return t32;
      if (e26.length === 0)
        return e26;
      let r91 = t32.length + e26.length;
      30 <= t32.__clzmsd() + e26.__clzmsd() && r91--;
      let o35 = new i5(r91, t32.sign !== e26.sign);
      o35.__initializeDigits();
      for (let n37 = 0; n37 < t32.length; n37++)
        i5.__multiplyAccumulate(e26, t32.__digit(n37), o35, n37);
      return o35.__trim();
    }
    static divide(t32, e26) {
      if (e26.length === 0)
        throw new RangeError("Division by zero");
      if (0 > i5.__absoluteCompare(t32, e26))
        return i5.__zero();
      let r91 = t32.sign !== e26.sign, o35 = e26.__unsignedDigit(0), n37;
      if (e26.length === 1 && 32767 >= o35) {
        if (o35 === 1)
          return r91 === t32.sign ? t32 : i5.unaryMinus(t32);
        n37 = i5.__absoluteDivSmall(t32, o35, null);
      } else
        n37 = i5.__absoluteDivLarge(t32, e26, true, false);
      return n37.sign = r91, n37.__trim();
    }
    static remainder(t32, e26) {
      if (e26.length === 0)
        throw new RangeError("Division by zero");
      if (0 > i5.__absoluteCompare(t32, e26))
        return t32;
      let r91 = e26.__unsignedDigit(0);
      if (e26.length === 1 && 32767 >= r91) {
        if (r91 === 1)
          return i5.__zero();
        let n37 = i5.__absoluteModSmall(t32, r91);
        return n37 === 0 ? i5.__zero() : i5.__oneDigit(n37, t32.sign);
      }
      let o35 = i5.__absoluteDivLarge(t32, e26, false, true);
      return o35.sign = t32.sign, o35.__trim();
    }
    static add(t32, e26) {
      let r91 = t32.sign;
      return r91 === e26.sign ? i5.__absoluteAdd(t32, e26, r91) : 0 <= i5.__absoluteCompare(t32, e26) ? i5.__absoluteSub(t32, e26, r91) : i5.__absoluteSub(e26, t32, !r91);
    }
    static subtract(t32, e26) {
      let r91 = t32.sign;
      return r91 === e26.sign ? 0 <= i5.__absoluteCompare(t32, e26) ? i5.__absoluteSub(t32, e26, r91) : i5.__absoluteSub(e26, t32, !r91) : i5.__absoluteAdd(t32, e26, r91);
    }
    static leftShift(t32, e26) {
      return e26.length === 0 || t32.length === 0 ? t32 : e26.sign ? i5.__rightShiftByAbsolute(t32, e26) : i5.__leftShiftByAbsolute(t32, e26);
    }
    static signedRightShift(t32, e26) {
      return e26.length === 0 || t32.length === 0 ? t32 : e26.sign ? i5.__leftShiftByAbsolute(t32, e26) : i5.__rightShiftByAbsolute(t32, e26);
    }
    static unsignedRightShift() {
      throw new TypeError("BigInts have no unsigned right shift; use >> instead");
    }
    static lessThan(t32, e26) {
      return 0 > i5.__compareToBigInt(t32, e26);
    }
    static lessThanOrEqual(t32, e26) {
      return 0 >= i5.__compareToBigInt(t32, e26);
    }
    static greaterThan(t32, e26) {
      return 0 < i5.__compareToBigInt(t32, e26);
    }
    static greaterThanOrEqual(t32, e26) {
      return 0 <= i5.__compareToBigInt(t32, e26);
    }
    static equal(t32, e26) {
      if (t32.sign !== e26.sign || t32.length !== e26.length)
        return false;
      for (let r91 = 0; r91 < t32.length; r91++)
        if (t32.__digit(r91) !== e26.__digit(r91))
          return false;
      return true;
    }
    static notEqual(t32, e26) {
      return !i5.equal(t32, e26);
    }
    static bitwiseAnd(t32, e26) {
      var r91 = Math.max;
      if (!t32.sign && !e26.sign)
        return i5.__absoluteAnd(t32, e26).__trim();
      if (t32.sign && e26.sign) {
        let o35 = r91(t32.length, e26.length) + 1, n37 = i5.__absoluteSubOne(t32, o35), s29 = i5.__absoluteSubOne(e26);
        return n37 = i5.__absoluteOr(n37, s29, n37), i5.__absoluteAddOne(n37, true, n37).__trim();
      }
      return t32.sign && ([t32, e26] = [e26, t32]), i5.__absoluteAndNot(t32, i5.__absoluteSubOne(e26)).__trim();
    }
    static bitwiseXor(t32, e26) {
      var r91 = Math.max;
      if (!t32.sign && !e26.sign)
        return i5.__absoluteXor(t32, e26).__trim();
      if (t32.sign && e26.sign) {
        let s29 = r91(t32.length, e26.length), l35 = i5.__absoluteSubOne(t32, s29), g31 = i5.__absoluteSubOne(e26);
        return i5.__absoluteXor(l35, g31, l35).__trim();
      }
      let o35 = r91(t32.length, e26.length) + 1;
      t32.sign && ([t32, e26] = [e26, t32]);
      let n37 = i5.__absoluteSubOne(e26, o35);
      return n37 = i5.__absoluteXor(n37, t32, n37), i5.__absoluteAddOne(n37, true, n37).__trim();
    }
    static bitwiseOr(t32, e26) {
      var r91 = Math.max;
      let o35 = r91(t32.length, e26.length);
      if (!t32.sign && !e26.sign)
        return i5.__absoluteOr(t32, e26).__trim();
      if (t32.sign && e26.sign) {
        let s29 = i5.__absoluteSubOne(t32, o35), l35 = i5.__absoluteSubOne(e26);
        return s29 = i5.__absoluteAnd(s29, l35, s29), i5.__absoluteAddOne(s29, true, s29).__trim();
      }
      t32.sign && ([t32, e26] = [e26, t32]);
      let n37 = i5.__absoluteSubOne(e26, o35);
      return n37 = i5.__absoluteAndNot(n37, t32, n37), i5.__absoluteAddOne(n37, true, n37).__trim();
    }
    static asIntN(t32, e26) {
      var r91 = Math.floor;
      if (e26.length === 0)
        return e26;
      if (t32 = r91(t32), 0 > t32)
        throw new RangeError("Invalid value: not (convertible to) a safe integer");
      if (t32 === 0)
        return i5.__zero();
      if (t32 >= i5.__kMaxLengthBits)
        return e26;
      let o35 = 0 | (t32 + 29) / 30;
      if (e26.length < o35)
        return e26;
      let n37 = e26.__unsignedDigit(o35 - 1), s29 = 1 << (t32 - 1) % 30;
      if (e26.length === o35 && n37 < s29)
        return e26;
      if ((n37 & s29) !== s29)
        return i5.__truncateToNBits(t32, e26);
      if (!e26.sign)
        return i5.__truncateAndSubFromPowerOfTwo(t32, e26, true);
      if (!(n37 & s29 - 1)) {
        for (let l35 = o35 - 2; 0 <= l35; l35--)
          if (e26.__digit(l35) !== 0)
            return i5.__truncateAndSubFromPowerOfTwo(t32, e26, false);
        return e26.length === o35 && n37 === s29 ? e26 : i5.__truncateToNBits(t32, e26);
      }
      return i5.__truncateAndSubFromPowerOfTwo(t32, e26, false);
    }
    static asUintN(t32, e26) {
      var r91 = Math.floor;
      if (e26.length === 0)
        return e26;
      if (t32 = r91(t32), 0 > t32)
        throw new RangeError("Invalid value: not (convertible to) a safe integer");
      if (t32 === 0)
        return i5.__zero();
      if (e26.sign) {
        if (t32 > i5.__kMaxLengthBits)
          throw new RangeError("BigInt too big");
        return i5.__truncateAndSubFromPowerOfTwo(t32, e26, false);
      }
      if (t32 >= i5.__kMaxLengthBits)
        return e26;
      let o35 = 0 | (t32 + 29) / 30;
      if (e26.length < o35)
        return e26;
      let n37 = t32 % 30;
      return e26.length == o35 && (n37 === 0 || !(e26.__digit(o35 - 1) >>> n37)) ? e26 : i5.__truncateToNBits(t32, e26);
    }
    static ADD(t32, e26) {
      if (t32 = i5.__toPrimitive(t32), e26 = i5.__toPrimitive(e26), typeof t32 == "string")
        return typeof e26 != "string" && (e26 = e26.toString()), t32 + e26;
      if (typeof e26 == "string")
        return t32.toString() + e26;
      if (t32 = i5.__toNumeric(t32), e26 = i5.__toNumeric(e26), i5.__isBigInt(t32) && i5.__isBigInt(e26))
        return i5.add(t32, e26);
      if (typeof t32 == "number" && typeof e26 == "number")
        return t32 + e26;
      throw new TypeError("Cannot mix BigInt and other types, use explicit conversions");
    }
    static LT(t32, e26) {
      return i5.__compare(t32, e26, 0);
    }
    static LE(t32, e26) {
      return i5.__compare(t32, e26, 1);
    }
    static GT(t32, e26) {
      return i5.__compare(t32, e26, 2);
    }
    static GE(t32, e26) {
      return i5.__compare(t32, e26, 3);
    }
    static EQ(t32, e26) {
      for (; ; ) {
        if (i5.__isBigInt(t32))
          return i5.__isBigInt(e26) ? i5.equal(t32, e26) : i5.EQ(e26, t32);
        if (typeof t32 == "number") {
          if (i5.__isBigInt(e26))
            return i5.__equalToNumber(e26, t32);
          if (typeof e26 != "object")
            return t32 == e26;
          e26 = i5.__toPrimitive(e26);
        } else if (typeof t32 == "string") {
          if (i5.__isBigInt(e26))
            return t32 = i5.__fromString(t32), t32 !== null && i5.equal(t32, e26);
          if (typeof e26 != "object")
            return t32 == e26;
          e26 = i5.__toPrimitive(e26);
        } else if (typeof t32 == "boolean") {
          if (i5.__isBigInt(e26))
            return i5.__equalToNumber(e26, +t32);
          if (typeof e26 != "object")
            return t32 == e26;
          e26 = i5.__toPrimitive(e26);
        } else if (typeof t32 == "symbol") {
          if (i5.__isBigInt(e26))
            return false;
          if (typeof e26 != "object")
            return t32 == e26;
          e26 = i5.__toPrimitive(e26);
        } else if (typeof t32 == "object") {
          if (typeof e26 == "object" && e26.constructor !== i5)
            return t32 == e26;
          t32 = i5.__toPrimitive(t32);
        } else
          return t32 == e26;
      }
    }
    static NE(t32, e26) {
      return !i5.EQ(t32, e26);
    }
    static DataViewGetBigInt64(t32, e26, r91 = false) {
      return i5.asIntN(64, i5.DataViewGetBigUint64(t32, e26, r91));
    }
    static DataViewGetBigUint64(t32, e26, r91 = false) {
      let [o35, n37] = r91 ? [4, 0] : [0, 4], s29 = t32.getUint32(e26 + o35, r91), l35 = t32.getUint32(e26 + n37, r91), g31 = new i5(3, false);
      return g31.__setDigit(0, 1073741823 & l35), g31.__setDigit(1, (268435455 & s29) << 2 | l35 >>> 30), g31.__setDigit(2, s29 >>> 28), g31.__trim();
    }
    static DataViewSetBigInt64(t32, e26, r91, o35 = false) {
      i5.DataViewSetBigUint64(t32, e26, r91, o35);
    }
    static DataViewSetBigUint64(t32, e26, r91, o35 = false) {
      r91 = i5.asUintN(64, r91);
      let n37 = 0, s29 = 0;
      if (0 < r91.length && (s29 = r91.__digit(0), 1 < r91.length)) {
        let a27 = r91.__digit(1);
        s29 |= a27 << 30, n37 = a27 >>> 2, 2 < r91.length && (n37 |= r91.__digit(2) << 28);
      }
      let [l35, g31] = o35 ? [4, 0] : [0, 4];
      t32.setUint32(e26 + l35, n37, o35), t32.setUint32(e26 + g31, s29, o35);
    }
    static __zero() {
      return new i5(0, false);
    }
    static __oneDigit(t32, e26) {
      let r91 = new i5(1, e26);
      return r91.__setDigit(0, t32), r91;
    }
    __copy() {
      let t32 = new i5(this.length, this.sign);
      for (let e26 = 0; e26 < this.length; e26++)
        t32[e26] = this[e26];
      return t32;
    }
    __trim() {
      let t32 = this.length, e26 = this[t32 - 1];
      for (; e26 === 0; )
        t32--, e26 = this[t32 - 1], this.pop();
      return t32 === 0 && (this.sign = false), this;
    }
    __initializeDigits() {
      for (let t32 = 0; t32 < this.length; t32++)
        this[t32] = 0;
    }
    static __decideRounding(t32, e26, r91, o35) {
      if (0 < e26)
        return -1;
      let n37;
      if (0 > e26)
        n37 = -e26 - 1;
      else {
        if (r91 === 0)
          return -1;
        r91--, o35 = t32.__digit(r91), n37 = 29;
      }
      let s29 = 1 << n37;
      if (!(o35 & s29))
        return -1;
      if (s29 -= 1, (o35 & s29) != 0)
        return 1;
      for (; 0 < r91; )
        if (r91--, t32.__digit(r91) !== 0)
          return 1;
      return 0;
    }
    static __fromDouble(t32) {
      i5.__kBitConversionDouble[0] = t32;
      let e26 = 2047 & i5.__kBitConversionInts[1] >>> 20, r91 = e26 - 1023, o35 = (0 | r91 / 30) + 1, n37 = new i5(o35, 0 > t32), s29 = 1048575 & i5.__kBitConversionInts[1] | 1048576, l35 = i5.__kBitConversionInts[0], g31 = 20, a27 = r91 % 30, _24, u30 = 0;
      if (a27 < 20) {
        let f25 = g31 - a27;
        u30 = f25 + 32, _24 = s29 >>> f25, s29 = s29 << 32 - f25 | l35 >>> f25, l35 <<= 32 - f25;
      } else if (a27 === 20)
        u30 = 32, _24 = s29, s29 = l35, l35 = 0;
      else {
        let f25 = a27 - g31;
        u30 = 32 - f25, _24 = s29 << f25 | l35 >>> 32 - f25, s29 = l35 << f25, l35 = 0;
      }
      n37.__setDigit(o35 - 1, _24);
      for (let f25 = o35 - 2; 0 <= f25; f25--)
        0 < u30 ? (u30 -= 30, _24 = s29 >>> 2, s29 = s29 << 30 | l35 >>> 2, l35 <<= 30) : _24 = 0, n37.__setDigit(f25, _24);
      return n37.__trim();
    }
    static __isWhitespace(t32) {
      return 13 >= t32 && 9 <= t32 || (159 >= t32 ? t32 == 32 : 131071 >= t32 ? t32 == 160 || t32 == 5760 : 196607 >= t32 ? (t32 &= 131071, 10 >= t32 || t32 == 40 || t32 == 41 || t32 == 47 || t32 == 95 || t32 == 4096) : t32 == 65279);
    }
    static __fromString(t32, e26 = 0) {
      let r91 = 0, o35 = t32.length, n37 = 0;
      if (n37 === o35)
        return i5.__zero();
      let s29 = t32.charCodeAt(n37);
      for (; i5.__isWhitespace(s29); ) {
        if (++n37 === o35)
          return i5.__zero();
        s29 = t32.charCodeAt(n37);
      }
      if (s29 === 43) {
        if (++n37 === o35)
          return null;
        s29 = t32.charCodeAt(n37), r91 = 1;
      } else if (s29 === 45) {
        if (++n37 === o35)
          return null;
        s29 = t32.charCodeAt(n37), r91 = -1;
      }
      if (e26 === 0) {
        if (e26 = 10, s29 === 48) {
          if (++n37 === o35)
            return i5.__zero();
          if (s29 = t32.charCodeAt(n37), s29 === 88 || s29 === 120) {
            if (e26 = 16, ++n37 === o35)
              return null;
            s29 = t32.charCodeAt(n37);
          } else if (s29 === 79 || s29 === 111) {
            if (e26 = 8, ++n37 === o35)
              return null;
            s29 = t32.charCodeAt(n37);
          } else if (s29 === 66 || s29 === 98) {
            if (e26 = 2, ++n37 === o35)
              return null;
            s29 = t32.charCodeAt(n37);
          }
        }
      } else if (e26 === 16 && s29 === 48) {
        if (++n37 === o35)
          return i5.__zero();
        if (s29 = t32.charCodeAt(n37), s29 === 88 || s29 === 120) {
          if (++n37 === o35)
            return null;
          s29 = t32.charCodeAt(n37);
        }
      }
      if (r91 != 0 && e26 !== 10)
        return null;
      for (; s29 === 48; ) {
        if (++n37 === o35)
          return i5.__zero();
        s29 = t32.charCodeAt(n37);
      }
      let l35 = o35 - n37, g31 = i5.__kMaxBitsPerChar[e26], a27 = i5.__kBitsPerCharTableMultiplier - 1;
      if (l35 > 1073741824 / g31)
        return null;
      let _24 = g31 * l35 + a27 >>> i5.__kBitsPerCharTableShift, u30 = new i5(0 | (_24 + 29) / 30, false), f25 = 10 > e26 ? e26 : 10, h35 = 10 < e26 ? e26 - 10 : 0;
      if (e26 & e26 - 1) {
        u30.__initializeDigits();
        let d25 = false, c30 = 0;
        do {
          let b28 = 0, m27 = 1;
          for (; ; ) {
            let p24;
            if (s29 - 48 >>> 0 < f25)
              p24 = s29 - 48;
            else if ((32 | s29) - 97 >>> 0 < h35)
              p24 = (32 | s29) - 87;
            else {
              d25 = true;
              break;
            }
            let B28 = m27 * e26;
            if (1073741823 < B28)
              break;
            if (m27 = B28, b28 = b28 * e26 + p24, c30++, ++n37 === o35) {
              d25 = true;
              break;
            }
            s29 = t32.charCodeAt(n37);
          }
          a27 = 30 * i5.__kBitsPerCharTableMultiplier - 1;
          let w26 = 0 | (g31 * c30 + a27 >>> i5.__kBitsPerCharTableShift) / 30;
          u30.__inplaceMultiplyAdd(m27, b28, w26);
        } while (!d25);
      } else {
        g31 >>= i5.__kBitsPerCharTableShift;
        let d25 = [], c30 = [], b28 = false;
        do {
          let m27 = 0, w26 = 0;
          for (; ; ) {
            let p24;
            if (s29 - 48 >>> 0 < f25)
              p24 = s29 - 48;
            else if ((32 | s29) - 97 >>> 0 < h35)
              p24 = (32 | s29) - 87;
            else {
              b28 = true;
              break;
            }
            if (w26 += g31, m27 = m27 << g31 | p24, ++n37 === o35) {
              b28 = true;
              break;
            }
            if (s29 = t32.charCodeAt(n37), 30 < w26 + g31)
              break;
          }
          d25.push(m27), c30.push(w26);
        } while (!b28);
        i5.__fillFromParts(u30, d25, c30);
      }
      if (n37 !== o35) {
        if (!i5.__isWhitespace(s29))
          return null;
        for (n37++; n37 < o35; n37++)
          if (s29 = t32.charCodeAt(n37), !i5.__isWhitespace(s29))
            return null;
      }
      return u30.sign = r91 == -1, u30.__trim();
    }
    static __fillFromParts(t32, e26, r91) {
      let o35 = 0, n37 = 0, s29 = 0;
      for (let l35 = e26.length - 1; 0 <= l35; l35--) {
        let g31 = e26[l35], a27 = r91[l35];
        n37 |= g31 << s29, s29 += a27, s29 === 30 ? (t32.__setDigit(o35++, n37), s29 = 0, n37 = 0) : 30 < s29 && (t32.__setDigit(o35++, 1073741823 & n37), s29 -= 30, n37 = g31 >>> a27 - s29);
      }
      if (n37 !== 0) {
        if (o35 >= t32.length)
          throw new Error("implementation bug");
        t32.__setDigit(o35++, n37);
      }
      for (; o35 < t32.length; o35++)
        t32.__setDigit(o35, 0);
    }
    static __toStringBasePowerOfTwo(t32, e26) {
      let r91 = t32.length, o35 = e26 - 1;
      o35 = (85 & o35 >>> 1) + (85 & o35), o35 = (51 & o35 >>> 2) + (51 & o35), o35 = (15 & o35 >>> 4) + (15 & o35);
      let n37 = o35, s29 = e26 - 1, l35 = t32.__digit(r91 - 1), g31 = i5.__clz30(l35), a27 = 0 | (30 * r91 - g31 + n37 - 1) / n37;
      if (t32.sign && a27++, 268435456 < a27)
        throw new Error("string too long");
      let _24 = Array(a27), u30 = a27 - 1, f25 = 0, h35 = 0;
      for (let c30 = 0; c30 < r91 - 1; c30++) {
        let b28 = t32.__digit(c30), m27 = (f25 | b28 << h35) & s29;
        _24[u30--] = i5.__kConversionChars[m27];
        let w26 = n37 - h35;
        for (f25 = b28 >>> w26, h35 = 30 - w26; h35 >= n37; )
          _24[u30--] = i5.__kConversionChars[f25 & s29], f25 >>>= n37, h35 -= n37;
      }
      let d25 = (f25 | l35 << h35) & s29;
      for (_24[u30--] = i5.__kConversionChars[d25], f25 = l35 >>> n37 - h35; f25 !== 0; )
        _24[u30--] = i5.__kConversionChars[f25 & s29], f25 >>>= n37;
      if (t32.sign && (_24[u30--] = "-"), u30 != -1)
        throw new Error("implementation bug");
      return _24.join("");
    }
    static __toStringGeneric(t32, e26, r91) {
      let o35 = t32.length;
      if (o35 === 0)
        return "";
      if (o35 === 1) {
        let c30 = t32.__unsignedDigit(0).toString(e26);
        return r91 === false && t32.sign && (c30 = "-" + c30), c30;
      }
      let n37 = 30 * o35 - i5.__clz30(t32.__digit(o35 - 1)), s29 = i5.__kMaxBitsPerChar[e26], l35 = s29 - 1, g31 = n37 * i5.__kBitsPerCharTableMultiplier;
      g31 += l35 - 1, g31 = 0 | g31 / l35;
      let a27 = g31 + 1 >> 1, _24 = i5.exponentiate(i5.__oneDigit(e26, false), i5.__oneDigit(a27, false)), u30, f25, h35 = _24.__unsignedDigit(0);
      if (_24.length === 1 && 32767 >= h35) {
        u30 = new i5(t32.length, false), u30.__initializeDigits();
        let c30 = 0;
        for (let b28 = 2 * t32.length - 1; 0 <= b28; b28--) {
          let m27 = c30 << 15 | t32.__halfDigit(b28);
          u30.__setHalfDigit(b28, 0 | m27 / h35), c30 = 0 | m27 % h35;
        }
        f25 = c30.toString(e26);
      } else {
        let c30 = i5.__absoluteDivLarge(t32, _24, true, true);
        u30 = c30.quotient;
        let b28 = c30.remainder.__trim();
        f25 = i5.__toStringGeneric(b28, e26, true);
      }
      u30.__trim();
      let d25 = i5.__toStringGeneric(u30, e26, true);
      for (; f25.length < a27; )
        f25 = "0" + f25;
      return r91 === false && t32.sign && (d25 = "-" + d25), d25 + f25;
    }
    static __unequalSign(t32) {
      return t32 ? -1 : 1;
    }
    static __absoluteGreater(t32) {
      return t32 ? -1 : 1;
    }
    static __absoluteLess(t32) {
      return t32 ? 1 : -1;
    }
    static __compareToBigInt(t32, e26) {
      let r91 = t32.sign;
      if (r91 !== e26.sign)
        return i5.__unequalSign(r91);
      let o35 = i5.__absoluteCompare(t32, e26);
      return 0 < o35 ? i5.__absoluteGreater(r91) : 0 > o35 ? i5.__absoluteLess(r91) : 0;
    }
    static __compareToNumber(t32, e26) {
      if (i5.__isOneDigitInt(e26)) {
        let r91 = t32.sign, o35 = 0 > e26;
        if (r91 !== o35)
          return i5.__unequalSign(r91);
        if (t32.length === 0) {
          if (o35)
            throw new Error("implementation bug");
          return e26 === 0 ? 0 : -1;
        }
        if (1 < t32.length)
          return i5.__absoluteGreater(r91);
        let n37 = Math.abs(e26), s29 = t32.__unsignedDigit(0);
        return s29 > n37 ? i5.__absoluteGreater(r91) : s29 < n37 ? i5.__absoluteLess(r91) : 0;
      }
      return i5.__compareToDouble(t32, e26);
    }
    static __compareToDouble(t32, e26) {
      if (e26 !== e26)
        return e26;
      if (e26 === 1 / 0)
        return -1;
      if (e26 === -1 / 0)
        return 1;
      let r91 = t32.sign;
      if (r91 !== 0 > e26)
        return i5.__unequalSign(r91);
      if (e26 === 0)
        throw new Error("implementation bug: should be handled elsewhere");
      if (t32.length === 0)
        return -1;
      i5.__kBitConversionDouble[0] = e26;
      let o35 = 2047 & i5.__kBitConversionInts[1] >>> 20;
      if (o35 == 2047)
        throw new Error("implementation bug: handled elsewhere");
      let n37 = o35 - 1023;
      if (0 > n37)
        return i5.__absoluteGreater(r91);
      let s29 = t32.length, l35 = t32.__digit(s29 - 1), g31 = i5.__clz30(l35), a27 = 30 * s29 - g31, _24 = n37 + 1;
      if (a27 < _24)
        return i5.__absoluteLess(r91);
      if (a27 > _24)
        return i5.__absoluteGreater(r91);
      let u30 = 1048576 | 1048575 & i5.__kBitConversionInts[1], f25 = i5.__kBitConversionInts[0], h35 = 20, d25 = 29 - g31;
      if (d25 !== (0 | (a27 - 1) % 30))
        throw new Error("implementation bug");
      let c30, b28 = 0;
      if (20 > d25) {
        let m27 = h35 - d25;
        b28 = m27 + 32, c30 = u30 >>> m27, u30 = u30 << 32 - m27 | f25 >>> m27, f25 <<= 32 - m27;
      } else if (d25 === 20)
        b28 = 32, c30 = u30, u30 = f25, f25 = 0;
      else {
        let m27 = d25 - h35;
        b28 = 32 - m27, c30 = u30 << m27 | f25 >>> 32 - m27, u30 = f25 << m27, f25 = 0;
      }
      if (l35 >>>= 0, c30 >>>= 0, l35 > c30)
        return i5.__absoluteGreater(r91);
      if (l35 < c30)
        return i5.__absoluteLess(r91);
      for (let m27 = s29 - 2; 0 <= m27; m27--) {
        0 < b28 ? (b28 -= 30, c30 = u30 >>> 2, u30 = u30 << 30 | f25 >>> 2, f25 <<= 30) : c30 = 0;
        let w26 = t32.__unsignedDigit(m27);
        if (w26 > c30)
          return i5.__absoluteGreater(r91);
        if (w26 < c30)
          return i5.__absoluteLess(r91);
      }
      if (u30 !== 0 || f25 !== 0) {
        if (b28 === 0)
          throw new Error("implementation bug");
        return i5.__absoluteLess(r91);
      }
      return 0;
    }
    static __equalToNumber(t32, e26) {
      var r91 = Math.abs;
      return i5.__isOneDigitInt(e26) ? e26 === 0 ? t32.length === 0 : t32.length === 1 && t32.sign === 0 > e26 && t32.__unsignedDigit(0) === r91(e26) : i5.__compareToDouble(t32, e26) === 0;
    }
    static __comparisonResultToBool(t32, e26) {
      return e26 === 0 ? 0 > t32 : e26 === 1 ? 0 >= t32 : e26 === 2 ? 0 < t32 : e26 === 3 ? 0 <= t32 : void 0;
    }
    static __compare(t32, e26, r91) {
      if (t32 = i5.__toPrimitive(t32), e26 = i5.__toPrimitive(e26), typeof t32 == "string" && typeof e26 == "string")
        switch (r91) {
          case 0:
            return t32 < e26;
          case 1:
            return t32 <= e26;
          case 2:
            return t32 > e26;
          case 3:
            return t32 >= e26;
        }
      if (i5.__isBigInt(t32) && typeof e26 == "string")
        return e26 = i5.__fromString(e26), e26 !== null && i5.__comparisonResultToBool(i5.__compareToBigInt(t32, e26), r91);
      if (typeof t32 == "string" && i5.__isBigInt(e26))
        return t32 = i5.__fromString(t32), t32 !== null && i5.__comparisonResultToBool(i5.__compareToBigInt(t32, e26), r91);
      if (t32 = i5.__toNumeric(t32), e26 = i5.__toNumeric(e26), i5.__isBigInt(t32)) {
        if (i5.__isBigInt(e26))
          return i5.__comparisonResultToBool(i5.__compareToBigInt(t32, e26), r91);
        if (typeof e26 != "number")
          throw new Error("implementation bug");
        return i5.__comparisonResultToBool(i5.__compareToNumber(t32, e26), r91);
      }
      if (typeof t32 != "number")
        throw new Error("implementation bug");
      if (i5.__isBigInt(e26))
        return i5.__comparisonResultToBool(i5.__compareToNumber(e26, t32), 2 ^ r91);
      if (typeof e26 != "number")
        throw new Error("implementation bug");
      return r91 === 0 ? t32 < e26 : r91 === 1 ? t32 <= e26 : r91 === 2 ? t32 > e26 : r91 === 3 ? t32 >= e26 : void 0;
    }
    __clzmsd() {
      return i5.__clz30(this.__digit(this.length - 1));
    }
    static __absoluteAdd(t32, e26, r91) {
      if (t32.length < e26.length)
        return i5.__absoluteAdd(e26, t32, r91);
      if (t32.length === 0)
        return t32;
      if (e26.length === 0)
        return t32.sign === r91 ? t32 : i5.unaryMinus(t32);
      let o35 = t32.length;
      (t32.__clzmsd() === 0 || e26.length === t32.length && e26.__clzmsd() === 0) && o35++;
      let n37 = new i5(o35, r91), s29 = 0, l35 = 0;
      for (; l35 < e26.length; l35++) {
        let g31 = t32.__digit(l35) + e26.__digit(l35) + s29;
        s29 = g31 >>> 30, n37.__setDigit(l35, 1073741823 & g31);
      }
      for (; l35 < t32.length; l35++) {
        let g31 = t32.__digit(l35) + s29;
        s29 = g31 >>> 30, n37.__setDigit(l35, 1073741823 & g31);
      }
      return l35 < n37.length && n37.__setDigit(l35, s29), n37.__trim();
    }
    static __absoluteSub(t32, e26, r91) {
      if (t32.length === 0)
        return t32;
      if (e26.length === 0)
        return t32.sign === r91 ? t32 : i5.unaryMinus(t32);
      let o35 = new i5(t32.length, r91), n37 = 0, s29 = 0;
      for (; s29 < e26.length; s29++) {
        let l35 = t32.__digit(s29) - e26.__digit(s29) - n37;
        n37 = 1 & l35 >>> 30, o35.__setDigit(s29, 1073741823 & l35);
      }
      for (; s29 < t32.length; s29++) {
        let l35 = t32.__digit(s29) - n37;
        n37 = 1 & l35 >>> 30, o35.__setDigit(s29, 1073741823 & l35);
      }
      return o35.__trim();
    }
    static __absoluteAddOne(t32, e26, r91 = null) {
      let o35 = t32.length;
      r91 === null ? r91 = new i5(o35, e26) : r91.sign = e26;
      let n37 = 1;
      for (let s29 = 0; s29 < o35; s29++) {
        let l35 = t32.__digit(s29) + n37;
        n37 = l35 >>> 30, r91.__setDigit(s29, 1073741823 & l35);
      }
      return n37 != 0 && r91.__setDigitGrow(o35, 1), r91;
    }
    static __absoluteSubOne(t32, e26) {
      let r91 = t32.length;
      e26 = e26 || r91;
      let o35 = new i5(e26, false), n37 = 1;
      for (let s29 = 0; s29 < r91; s29++) {
        let l35 = t32.__digit(s29) - n37;
        n37 = 1 & l35 >>> 30, o35.__setDigit(s29, 1073741823 & l35);
      }
      if (n37 != 0)
        throw new Error("implementation bug");
      for (let s29 = r91; s29 < e26; s29++)
        o35.__setDigit(s29, 0);
      return o35;
    }
    static __absoluteAnd(t32, e26, r91 = null) {
      let o35 = t32.length, n37 = e26.length, s29 = n37;
      if (o35 < n37) {
        s29 = o35;
        let a27 = t32, _24 = o35;
        t32 = e26, o35 = n37, e26 = a27, n37 = _24;
      }
      let l35 = s29;
      r91 === null ? r91 = new i5(l35, false) : l35 = r91.length;
      let g31 = 0;
      for (; g31 < s29; g31++)
        r91.__setDigit(g31, t32.__digit(g31) & e26.__digit(g31));
      for (; g31 < l35; g31++)
        r91.__setDigit(g31, 0);
      return r91;
    }
    static __absoluteAndNot(t32, e26, r91 = null) {
      let o35 = t32.length, n37 = e26.length, s29 = n37;
      o35 < n37 && (s29 = o35);
      let l35 = o35;
      r91 === null ? r91 = new i5(l35, false) : l35 = r91.length;
      let g31 = 0;
      for (; g31 < s29; g31++)
        r91.__setDigit(g31, t32.__digit(g31) & ~e26.__digit(g31));
      for (; g31 < o35; g31++)
        r91.__setDigit(g31, t32.__digit(g31));
      for (; g31 < l35; g31++)
        r91.__setDigit(g31, 0);
      return r91;
    }
    static __absoluteOr(t32, e26, r91 = null) {
      let o35 = t32.length, n37 = e26.length, s29 = n37;
      if (o35 < n37) {
        s29 = o35;
        let a27 = t32, _24 = o35;
        t32 = e26, o35 = n37, e26 = a27, n37 = _24;
      }
      let l35 = o35;
      r91 === null ? r91 = new i5(l35, false) : l35 = r91.length;
      let g31 = 0;
      for (; g31 < s29; g31++)
        r91.__setDigit(g31, t32.__digit(g31) | e26.__digit(g31));
      for (; g31 < o35; g31++)
        r91.__setDigit(g31, t32.__digit(g31));
      for (; g31 < l35; g31++)
        r91.__setDigit(g31, 0);
      return r91;
    }
    static __absoluteXor(t32, e26, r91 = null) {
      let o35 = t32.length, n37 = e26.length, s29 = n37;
      if (o35 < n37) {
        s29 = o35;
        let a27 = t32, _24 = o35;
        t32 = e26, o35 = n37, e26 = a27, n37 = _24;
      }
      let l35 = o35;
      r91 === null ? r91 = new i5(l35, false) : l35 = r91.length;
      let g31 = 0;
      for (; g31 < s29; g31++)
        r91.__setDigit(g31, t32.__digit(g31) ^ e26.__digit(g31));
      for (; g31 < o35; g31++)
        r91.__setDigit(g31, t32.__digit(g31));
      for (; g31 < l35; g31++)
        r91.__setDigit(g31, 0);
      return r91;
    }
    static __absoluteCompare(t32, e26) {
      let r91 = t32.length - e26.length;
      if (r91 != 0)
        return r91;
      let o35 = t32.length - 1;
      for (; 0 <= o35 && t32.__digit(o35) === e26.__digit(o35); )
        o35--;
      return 0 > o35 ? 0 : t32.__unsignedDigit(o35) > e26.__unsignedDigit(o35) ? 1 : -1;
    }
    static __multiplyAccumulate(t32, e26, r91, o35) {
      if (e26 === 0)
        return;
      let n37 = 32767 & e26, s29 = e26 >>> 15, l35 = 0, g31 = 0;
      for (let a27, _24 = 0; _24 < t32.length; _24++, o35++) {
        a27 = r91.__digit(o35);
        let u30 = t32.__digit(_24), f25 = 32767 & u30, h35 = u30 >>> 15, d25 = i5.__imul(f25, n37), c30 = i5.__imul(f25, s29), b28 = i5.__imul(h35, n37), m27 = i5.__imul(h35, s29);
        a27 += g31 + d25 + l35, l35 = a27 >>> 30, a27 &= 1073741823, a27 += ((32767 & c30) << 15) + ((32767 & b28) << 15), l35 += a27 >>> 30, g31 = m27 + (c30 >>> 15) + (b28 >>> 15), r91.__setDigit(o35, 1073741823 & a27);
      }
      for (; l35 != 0 || g31 !== 0; o35++) {
        let a27 = r91.__digit(o35);
        a27 += l35 + g31, g31 = 0, l35 = a27 >>> 30, r91.__setDigit(o35, 1073741823 & a27);
      }
    }
    static __internalMultiplyAdd(t32, e26, r91, o35, n37) {
      let s29 = r91, l35 = 0;
      for (let g31 = 0; g31 < o35; g31++) {
        let a27 = t32.__digit(g31), _24 = i5.__imul(32767 & a27, e26), u30 = i5.__imul(a27 >>> 15, e26), f25 = _24 + ((32767 & u30) << 15) + l35 + s29;
        s29 = f25 >>> 30, l35 = u30 >>> 15, n37.__setDigit(g31, 1073741823 & f25);
      }
      if (n37.length > o35)
        for (n37.__setDigit(o35++, s29 + l35); o35 < n37.length; )
          n37.__setDigit(o35++, 0);
      else if (s29 + l35 !== 0)
        throw new Error("implementation bug");
    }
    __inplaceMultiplyAdd(t32, e26, r91) {
      r91 > this.length && (r91 = this.length);
      let o35 = 32767 & t32, n37 = t32 >>> 15, s29 = 0, l35 = e26;
      for (let g31 = 0; g31 < r91; g31++) {
        let a27 = this.__digit(g31), _24 = 32767 & a27, u30 = a27 >>> 15, f25 = i5.__imul(_24, o35), h35 = i5.__imul(_24, n37), d25 = i5.__imul(u30, o35), c30 = i5.__imul(u30, n37), b28 = l35 + f25 + s29;
        s29 = b28 >>> 30, b28 &= 1073741823, b28 += ((32767 & h35) << 15) + ((32767 & d25) << 15), s29 += b28 >>> 30, l35 = c30 + (h35 >>> 15) + (d25 >>> 15), this.__setDigit(g31, 1073741823 & b28);
      }
      if (s29 != 0 || l35 !== 0)
        throw new Error("implementation bug");
    }
    static __absoluteDivSmall(t32, e26, r91 = null) {
      r91 === null && (r91 = new i5(t32.length, false));
      let o35 = 0;
      for (let n37, s29 = 2 * t32.length - 1; 0 <= s29; s29 -= 2) {
        n37 = (o35 << 15 | t32.__halfDigit(s29)) >>> 0;
        let l35 = 0 | n37 / e26;
        o35 = 0 | n37 % e26, n37 = (o35 << 15 | t32.__halfDigit(s29 - 1)) >>> 0;
        let g31 = 0 | n37 / e26;
        o35 = 0 | n37 % e26, r91.__setDigit(s29 >>> 1, l35 << 15 | g31);
      }
      return r91;
    }
    static __absoluteModSmall(t32, e26) {
      let r91 = 0;
      for (let o35 = 2 * t32.length - 1; 0 <= o35; o35--)
        r91 = 0 | ((r91 << 15 | t32.__halfDigit(o35)) >>> 0) % e26;
      return r91;
    }
    static __absoluteDivLarge(t32, e26, r91, o35) {
      let n37 = e26.__halfDigitLength(), s29 = e26.length, l35 = t32.__halfDigitLength() - n37, g31 = null;
      r91 && (g31 = new i5(l35 + 2 >>> 1, false), g31.__initializeDigits());
      let a27 = new i5(n37 + 2 >>> 1, false);
      a27.__initializeDigits();
      let _24 = i5.__clz15(e26.__halfDigit(n37 - 1));
      0 < _24 && (e26 = i5.__specialLeftShift(e26, _24, 0));
      let u30 = i5.__specialLeftShift(t32, _24, 1), f25 = e26.__halfDigit(n37 - 1), h35 = 0;
      for (let d25, c30 = l35; 0 <= c30; c30--) {
        d25 = 32767;
        let b28 = u30.__halfDigit(c30 + n37);
        if (b28 !== f25) {
          let w26 = (b28 << 15 | u30.__halfDigit(c30 + n37 - 1)) >>> 0;
          d25 = 0 | w26 / f25;
          let p24 = 0 | w26 % f25, B28 = e26.__halfDigit(n37 - 2), y24 = u30.__halfDigit(c30 + n37 - 2);
          for (; i5.__imul(d25, B28) >>> 0 > (p24 << 16 | y24) >>> 0 && (d25--, p24 += f25, !(32767 < p24)); )
            ;
        }
        i5.__internalMultiplyAdd(e26, d25, 0, s29, a27);
        let m27 = u30.__inplaceSub(a27, c30, n37 + 1);
        m27 !== 0 && (m27 = u30.__inplaceAdd(e26, c30, n37), u30.__setHalfDigit(c30 + n37, 32767 & u30.__halfDigit(c30 + n37) + m27), d25--), r91 && (1 & c30 ? h35 = d25 << 15 : g31.__setDigit(c30 >>> 1, h35 | d25));
      }
      if (o35)
        return u30.__inplaceRightShift(_24), r91 ? { quotient: g31, remainder: u30 } : u30;
      if (r91)
        return g31;
      throw new Error("unreachable");
    }
    static __clz15(t32) {
      return i5.__clz30(t32) - 15;
    }
    __inplaceAdd(t32, e26, r91) {
      let o35 = 0;
      for (let n37 = 0; n37 < r91; n37++) {
        let s29 = this.__halfDigit(e26 + n37) + t32.__halfDigit(n37) + o35;
        o35 = s29 >>> 15, this.__setHalfDigit(e26 + n37, 32767 & s29);
      }
      return o35;
    }
    __inplaceSub(t32, e26, r91) {
      let o35 = 0;
      if (1 & e26) {
        e26 >>= 1;
        let n37 = this.__digit(e26), s29 = 32767 & n37, l35 = 0;
        for (; l35 < r91 - 1 >>> 1; l35++) {
          let _24 = t32.__digit(l35), u30 = (n37 >>> 15) - (32767 & _24) - o35;
          o35 = 1 & u30 >>> 15, this.__setDigit(e26 + l35, (32767 & u30) << 15 | 32767 & s29), n37 = this.__digit(e26 + l35 + 1), s29 = (32767 & n37) - (_24 >>> 15) - o35, o35 = 1 & s29 >>> 15;
        }
        let g31 = t32.__digit(l35), a27 = (n37 >>> 15) - (32767 & g31) - o35;
        if (o35 = 1 & a27 >>> 15, this.__setDigit(e26 + l35, (32767 & a27) << 15 | 32767 & s29), e26 + l35 + 1 >= this.length)
          throw new RangeError("out of bounds");
        !(1 & r91) && (n37 = this.__digit(e26 + l35 + 1), s29 = (32767 & n37) - (g31 >>> 15) - o35, o35 = 1 & s29 >>> 15, this.__setDigit(e26 + t32.length, 1073709056 & n37 | 32767 & s29));
      } else {
        e26 >>= 1;
        let n37 = 0;
        for (; n37 < t32.length - 1; n37++) {
          let _24 = this.__digit(e26 + n37), u30 = t32.__digit(n37), f25 = (32767 & _24) - (32767 & u30) - o35;
          o35 = 1 & f25 >>> 15;
          let h35 = (_24 >>> 15) - (u30 >>> 15) - o35;
          o35 = 1 & h35 >>> 15, this.__setDigit(e26 + n37, (32767 & h35) << 15 | 32767 & f25);
        }
        let s29 = this.__digit(e26 + n37), l35 = t32.__digit(n37), g31 = (32767 & s29) - (32767 & l35) - o35;
        o35 = 1 & g31 >>> 15;
        let a27 = 0;
        !(1 & r91) && (a27 = (s29 >>> 15) - (l35 >>> 15) - o35, o35 = 1 & a27 >>> 15), this.__setDigit(e26 + n37, (32767 & a27) << 15 | 32767 & g31);
      }
      return o35;
    }
    __inplaceRightShift(t32) {
      if (t32 === 0)
        return;
      let e26 = this.__digit(0) >>> t32, r91 = this.length - 1;
      for (let o35 = 0; o35 < r91; o35++) {
        let n37 = this.__digit(o35 + 1);
        this.__setDigit(o35, 1073741823 & n37 << 30 - t32 | e26), e26 = n37 >>> t32;
      }
      this.__setDigit(r91, e26);
    }
    static __specialLeftShift(t32, e26, r91) {
      let o35 = t32.length, n37 = new i5(o35 + r91, false);
      if (e26 === 0) {
        for (let l35 = 0; l35 < o35; l35++)
          n37.__setDigit(l35, t32.__digit(l35));
        return 0 < r91 && n37.__setDigit(o35, 0), n37;
      }
      let s29 = 0;
      for (let l35 = 0; l35 < o35; l35++) {
        let g31 = t32.__digit(l35);
        n37.__setDigit(l35, 1073741823 & g31 << e26 | s29), s29 = g31 >>> 30 - e26;
      }
      return 0 < r91 && n37.__setDigit(o35, s29), n37;
    }
    static __leftShiftByAbsolute(t32, e26) {
      let r91 = i5.__toShiftAmount(e26);
      if (0 > r91)
        throw new RangeError("BigInt too big");
      let o35 = 0 | r91 / 30, n37 = r91 % 30, s29 = t32.length, l35 = n37 !== 0 && t32.__digit(s29 - 1) >>> 30 - n37 != 0, g31 = s29 + o35 + (l35 ? 1 : 0), a27 = new i5(g31, t32.sign);
      if (n37 === 0) {
        let _24 = 0;
        for (; _24 < o35; _24++)
          a27.__setDigit(_24, 0);
        for (; _24 < g31; _24++)
          a27.__setDigit(_24, t32.__digit(_24 - o35));
      } else {
        let _24 = 0;
        for (let u30 = 0; u30 < o35; u30++)
          a27.__setDigit(u30, 0);
        for (let u30 = 0; u30 < s29; u30++) {
          let f25 = t32.__digit(u30);
          a27.__setDigit(u30 + o35, 1073741823 & f25 << n37 | _24), _24 = f25 >>> 30 - n37;
        }
        if (l35)
          a27.__setDigit(s29 + o35, _24);
        else if (_24 !== 0)
          throw new Error("implementation bug");
      }
      return a27.__trim();
    }
    static __rightShiftByAbsolute(t32, e26) {
      let r91 = t32.length, o35 = t32.sign, n37 = i5.__toShiftAmount(e26);
      if (0 > n37)
        return i5.__rightShiftByMaximum(o35);
      let s29 = 0 | n37 / 30, l35 = n37 % 30, g31 = r91 - s29;
      if (0 >= g31)
        return i5.__rightShiftByMaximum(o35);
      let a27 = false;
      if (o35) {
        if (t32.__digit(s29) & (1 << l35) - 1)
          a27 = true;
        else
          for (let u30 = 0; u30 < s29; u30++)
            if (t32.__digit(u30) !== 0) {
              a27 = true;
              break;
            }
      }
      a27 && l35 === 0 && !~t32.__digit(r91 - 1) && g31++;
      let _24 = new i5(g31, o35);
      if (l35 === 0) {
        _24.__setDigit(g31 - 1, 0);
        for (let u30 = s29; u30 < r91; u30++)
          _24.__setDigit(u30 - s29, t32.__digit(u30));
      } else {
        let u30 = t32.__digit(s29) >>> l35, f25 = r91 - s29 - 1;
        for (let h35 = 0; h35 < f25; h35++) {
          let d25 = t32.__digit(h35 + s29 + 1);
          _24.__setDigit(h35, 1073741823 & d25 << 30 - l35 | u30), u30 = d25 >>> l35;
        }
        _24.__setDigit(f25, u30);
      }
      return a27 && (_24 = i5.__absoluteAddOne(_24, true, _24)), _24.__trim();
    }
    static __rightShiftByMaximum(t32) {
      return t32 ? i5.__oneDigit(1, true) : i5.__zero();
    }
    static __toShiftAmount(t32) {
      if (1 < t32.length)
        return -1;
      let e26 = t32.__unsignedDigit(0);
      return e26 > i5.__kMaxLengthBits ? -1 : e26;
    }
    static __toPrimitive(t32, e26 = "default") {
      if (typeof t32 != "object" || t32.constructor === i5)
        return t32;
      if (typeof Symbol < "u" && typeof Symbol.toPrimitive == "symbol") {
        let n37 = t32[Symbol.toPrimitive];
        if (n37) {
          let s29 = n37(e26);
          if (typeof s29 != "object")
            return s29;
          throw new TypeError("Cannot convert object to primitive value");
        }
      }
      let r91 = t32.valueOf;
      if (r91) {
        let n37 = r91.call(t32);
        if (typeof n37 != "object")
          return n37;
      }
      let o35 = t32.toString;
      if (o35) {
        let n37 = o35.call(t32);
        if (typeof n37 != "object")
          return n37;
      }
      throw new TypeError("Cannot convert object to primitive value");
    }
    static __toNumeric(t32) {
      return i5.__isBigInt(t32) ? t32 : +t32;
    }
    static __isBigInt(t32) {
      return typeof t32 == "object" && t32 !== null && t32.constructor === i5;
    }
    static __truncateToNBits(t32, e26) {
      let r91 = 0 | (t32 + 29) / 30, o35 = new i5(r91, e26.sign), n37 = r91 - 1;
      for (let l35 = 0; l35 < n37; l35++)
        o35.__setDigit(l35, e26.__digit(l35));
      let s29 = e26.__digit(n37);
      if (t32 % 30 != 0) {
        let l35 = 32 - t32 % 30;
        s29 = s29 << l35 >>> l35;
      }
      return o35.__setDigit(n37, s29), o35.__trim();
    }
    static __truncateAndSubFromPowerOfTwo(t32, e26, r91) {
      var o35 = Math.min;
      let n37 = 0 | (t32 + 29) / 30, s29 = new i5(n37, r91), l35 = 0, g31 = n37 - 1, a27 = 0;
      for (let h35 = o35(g31, e26.length); l35 < h35; l35++) {
        let d25 = 0 - e26.__digit(l35) - a27;
        a27 = 1 & d25 >>> 30, s29.__setDigit(l35, 1073741823 & d25);
      }
      for (; l35 < g31; l35++)
        s29.__setDigit(l35, 0 | 1073741823 & -a27);
      let _24 = g31 < e26.length ? e26.__digit(g31) : 0, u30 = t32 % 30, f25;
      if (u30 == 0)
        f25 = 0 - _24 - a27, f25 &= 1073741823;
      else {
        let h35 = 32 - u30;
        _24 = _24 << h35 >>> h35;
        let d25 = 1 << 32 - h35;
        f25 = d25 - _24 - a27, f25 &= d25 - 1;
      }
      return s29.__setDigit(g31, f25), s29.__trim();
    }
    __digit(t32) {
      return this[t32];
    }
    __unsignedDigit(t32) {
      return this[t32] >>> 0;
    }
    __setDigit(t32, e26) {
      this[t32] = 0 | e26;
    }
    __setDigitGrow(t32, e26) {
      this[t32] = 0 | e26;
    }
    __halfDigitLength() {
      let t32 = this.length;
      return 32767 >= this.__unsignedDigit(t32 - 1) ? 2 * t32 - 1 : 2 * t32;
    }
    __halfDigit(t32) {
      return 32767 & this[t32 >>> 1] >>> 15 * (1 & t32);
    }
    __setHalfDigit(t32, e26) {
      let r91 = t32 >>> 1, o35 = this.__digit(r91), n37 = 1 & t32 ? 32767 & o35 | e26 << 15 : 1073709056 & o35 | 32767 & e26;
      this.__setDigit(r91, n37);
    }
    static __digitPow(t32, e26) {
      let r91 = 1;
      for (; 0 < e26; )
        1 & e26 && (r91 *= t32), e26 >>>= 1, t32 *= t32;
      return r91;
    }
    static __isOneDigitInt(t32) {
      return (1073741823 & t32) === t32;
    }
  };
  D9.__kMaxLength = 33554432, D9.__kMaxLengthBits = D9.__kMaxLength << 5, D9.__kMaxBitsPerChar = [0, 0, 32, 51, 64, 75, 83, 90, 96, 102, 107, 111, 115, 119, 122, 126, 128, 131, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 154, 156, 158, 159, 160, 162, 163, 165, 166], D9.__kBitsPerCharTableShift = 5, D9.__kBitsPerCharTableMultiplier = 1 << D9.__kBitsPerCharTableShift, D9.__kConversionChars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"], D9.__kBitConversionBuffer = new ArrayBuffer(8), D9.__kBitConversionDouble = new Float64Array(D9.__kBitConversionBuffer), D9.__kBitConversionInts = new Int32Array(D9.__kBitConversionBuffer), D9.__clz30 = Math.clz32 ? function(i29) {
    return Math.clz32(i29) - 2;
  } : function(i29) {
    return i29 === 0 ? 30 : 0 | 29 - (0 | Math.log(i29 >>> 0) / Math.LN2);
  }, D9.__imul = Math.imul || function(i29, t32) {
    return 0 | i29 * t32;
  };
  var S9 = D9;

  // https://esm.sh/v135/@js-temporal/polyfill@0.4.4/denonext/polyfill.mjs
  var uo4 = {};
  function kr4(t32, e26) {
    Object.defineProperty(t32.prototype, Symbol.toStringTag, { value: e26, writable: false, enumerable: false, configurable: true });
    for (let r91 of Object.getOwnPropertyNames(t32)) {
      let o35 = Object.getOwnPropertyDescriptor(t32, r91);
      o35.configurable && o35.enumerable && (o35.enumerable = false, Object.defineProperty(t32, r91, o35));
    }
    for (let r91 of Object.getOwnPropertyNames(t32.prototype)) {
      let o35 = Object.getOwnPropertyDescriptor(t32.prototype, r91);
      o35.configurable && o35.enumerable && (o35.enumerable = false, Object.defineProperty(t32.prototype, r91, o35));
    }
    fe5(e26, t32), fe5(`${e26}.prototype`, t32.prototype);
  }
  function fe5(t32, e26) {
    let r91 = `%${t32}%`;
    if (uo4[r91] !== void 0)
      throw new Error(`intrinsic ${t32} already exists`);
    uo4[r91] = e26;
  }
  function O9(t32) {
    return uo4[t32];
  }
  var pi3;
  var wi4;
  var j9 = "slot-epochNanoSeconds";
  var Or4 = "slot-timezone-identifier";
  var $7 = "slot-year";
  var R8 = "slot-month";
  var B8 = "slot-day";
  var L8 = "slot-hour";
  var x6 = "slot-minute";
  var q7 = "slot-second";
  var A7 = "slot-millisecond";
  var W7 = "slot-microsecond";
  var z6 = "slot-nanosecond";
  var v8 = "slot-calendar";
  var Qi4 = "slot-date-brand";
  var Hi4 = "slot-year-month-brand";
  var ea3 = "slot-month-day-brand";
  var Le6 = "slot-cached-instant";
  var ie7 = "slot-time-zone";
  var Ae6 = "slot-years";
  var Be5 = "slot-months";
  var er4 = "slot-weeks";
  var We3 = "slot-days";
  var ze4 = "slot-hours";
  var Ge4 = "slot-minutes";
  var Je4 = "slot-seconds";
  var _e4 = "slot-milliseconds";
  var Ve4 = "slot-microseconds";
  var Ke3 = "slot-nanoseconds";
  var me6 = "slot-calendar-identifier";
  var ra3 = /* @__PURE__ */ new WeakMap();
  var mo4 = Symbol.for("@@Temporal__GetSlots");
  (pi3 = globalThis)[mo4] || (pi3[mo4] = function(e26) {
    return ra3.get(e26);
  });
  var qo4 = globalThis[mo4];
  var fo4 = Symbol.for("@@Temporal__CreateSlots");
  (wi4 = globalThis)[fo4] || (wi4[fo4] = function(e26) {
    ra3.set(e26, /* @__PURE__ */ Object.create(null));
  });
  var Fr4 = globalThis[fo4];
  function Re6(t32, ...e26) {
    if (!t32 || typeof t32 != "object")
      return false;
    let r91 = qo4(t32);
    return !!r91 && e26.every((o35) => o35 in r91);
  }
  function n7(t32, e26) {
    let r91 = qo4(t32)?.[e26];
    if (r91 === void 0)
      throw new TypeError(`Missing internal slot ${e26}`);
    return r91;
  }
  function G9(t32, e26, r91) {
    let o35 = qo4(t32);
    if (o35 === void 0)
      throw new TypeError("Missing slots for the given container");
    if (o35[e26])
      throw new TypeError(`${e26} already has set`);
    o35[e26] = r91;
  }
  var gi4 = /\.[-A-Za-z_]|\.\.[-A-Za-z._]{1,12}|\.[-A-Za-z_][-A-Za-z._]{0,12}|[A-Za-z_][-A-Za-z._]{0,13}/;
  var sn4 = new RegExp("(?:" + [`(?:${gi4.source})(?:\\/(?:${gi4.source}))*`, "Etc/GMT(?:0|[-+]\\d{1,2})", "GMT[-+]?0", "EST5EDT", "CST6CDT", "MST7MDT", "PST8PDT", /(?:[+\u2212-][0-2][0-9](?::?[0-5][0-9](?::?[0-5][0-9](?:[.,]\d{1,9})?)?)?)/.source].join("|") + ")");
  var ta3 = /(?:[+\u2212-]\d{6}|\d{4})/;
  var Cn3 = /(?:0[1-9]|1[0-2])/;
  var yo4 = /(?:0[1-9]|[12]\d|3[01])/;
  var ts4 = new RegExp(`(${ta3.source})(?:-(${Cn3.source})-(${yo4.source})|(${Cn3.source})(${yo4.source}))`);
  var na3 = /(\d{2})(?::(\d{2})(?::(\d{2})(?:[.,](\d{1,9}))?)?|(\d{2})(?:(\d{2})(?:[.,](\d{1,9}))?)?)?/;
  var oa3 = /([+\u2212-])([01][0-9]|2[0-3])(?::?([0-5][0-9])(?::?([0-5][0-9])(?:[.,](\d{1,9}))?)?)?/;
  var ia3 = new RegExp(`([zZ])|${oa3.source}?`);
  var rt5 = /\[(!)?([a-z_][a-z0-9_-]*)=([A-Za-z0-9]+(?:-[A-Za-z0-9]+)*)\]/g;
  var ns4 = new RegExp([`^${ts4.source}`, `(?:(?:T|\\s+)${na3.source}(?:${ia3.source})?)?`, `(?:\\[!?(${sn4.source})\\])?`, `((?:${rt5.source})*)$`].join(""), "i");
  var os4 = new RegExp([`^T?${na3.source}`, `(?:${ia3.source})?`, `(?:\\[!?${sn4.source}\\])?`, `((?:${rt5.source})*)$`].join(""), "i");
  var is4 = new RegExp(`^(${ta3.source})-?(${Cn3.source})(?:\\[!?${sn4.source}\\])?((?:${rt5.source})*)$`);
  var as4 = new RegExp(`^(?:--)?(${Cn3.source})-?(${yo4.source})(?:\\[!?${sn4.source}\\])?((?:${rt5.source})*)$`);
  var io4 = /(\d+)(?:[.,](\d{1,9}))?/;
  var ss4 = new RegExp(`(?:${io4.source}H)?(?:${io4.source}M)?(?:${io4.source}S)?`);
  var ds4 = new RegExp(`^([+\u2212-])?P${/(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)W)?(?:(\d+)D)?/.source}(?:T(?!$)${ss4.source})?$`, "i");
  var cs4 = Array.prototype.includes;
  var aa3 = Array.prototype.push;
  var sa3 = globalThis.Intl.DateTimeFormat;
  var hs4 = Math.min;
  var ls4 = Math.max;
  var de5 = Math.abs;
  var nr4 = Math.floor;
  var $t5 = Math.sign;
  var it6 = Math.trunc;
  var xn4 = Number.isNaN;
  var Xe3 = Number.isFinite;
  var us4 = Number;
  var dn4 = String;
  var ms4 = Number.MAX_SAFE_INTEGER;
  var qe4 = Object.create;
  var fs4 = Object.getOwnPropertyDescriptor;
  var qn4 = Reflect.apply;
  var ys4 = Reflect.ownKeys;
  var ge6 = S9.BigInt(0);
  var Zt5 = S9.BigInt(1);
  var Mr4 = S9.BigInt(60);
  var da3 = S9.BigInt(24);
  var te8 = S9.BigInt(1e3);
  var hr4 = S9.BigInt(1e6);
  var $r3 = S9.BigInt(1e9);
  var ps4 = S9.BigInt(-1);
  var ca3 = S9.multiply(S9.BigInt(3600), $r3);
  var ha3 = S9.multiply(Mr4, $r3);
  var Yr4 = S9.multiply(ca3, da3);
  var _t5 = S9.multiply(S9.BigInt(-86400), S9.BigInt(1e17));
  var St5 = S9.multiply(S9.BigInt(86400), S9.BigInt(1e17));
  var On3 = -271821;
  var Mn3 = 275760;
  var Et5 = S9.multiply(S9.BigInt(-388152), S9.BigInt(1e13));
  var ws4 = S9.multiply(Yr4, S9.BigInt(3660));
  var la3 = S9.multiply(Yr4, S9.BigInt(366));
  var ua3 = S9.multiply(Yr4, S9.BigInt(14));
  var gs4 = ["iso8601", "hebrew", "islamic", "islamic-umalqura", "islamic-tbla", "islamic-civil", "islamic-rgsa", "islamicc", "persian", "ethiopic", "ethioaa", "coptic", "chinese", "dangi", "roc", "indian", "buddhist", "japanese", "gregory"];
  function fr4(t32) {
    return S9.equal(t32, ge6);
  }
  function oe7(t32, e26) {
    let r91 = t32[e26];
    if (r91 !== void 0)
      return r91;
  }
  function N8(t32, e26, r91) {
    let o35 = arguments.length > 2 ? r91 : [];
    return qn4(t32, e26, o35);
  }
  function ce5(t32) {
    return typeof t32 == "object" && t32 !== null || typeof t32 == "function";
  }
  function Yt5(t32) {
    if (typeof t32 == "bigint")
      throw new TypeError("Cannot convert BigInt to number");
    return us4(t32);
  }
  function be5(t32) {
    let e26 = Yt5(t32);
    if (xn4(e26) || e26 === 0)
      return 0;
    if (!Xe3(e26))
      return e26;
    let r91 = nr4(de5(e26));
    return r91 === 0 ? 0 : $t5(e26) * r91;
  }
  function ur4(t32) {
    if (typeof t32 != "number" || xn4(t32) || !Xe3(t32))
      return false;
    let e26 = de5(t32);
    return nr4(e26) === e26;
  }
  function He5(t32) {
    if (typeof t32 == "symbol")
      throw new TypeError("Cannot convert a Symbol value to a String");
    return dn4(t32);
  }
  function ee6(t32) {
    let e26 = Yt5(t32);
    if (e26 === 0)
      return 0;
    if (xn4(e26) || !Xe3(e26))
      throw new RangeError("invalid number value");
    let r91 = it6(e26);
    return r91 === 0 ? 0 : r91;
  }
  function Ti4(t32, e26) {
    let r91 = ee6(t32);
    if (r91 <= 0)
      throw e26 !== void 0 ? new RangeError(`property '${e26}' cannot be a a number less than one`) : new RangeError("Cannot convert a number less than one to a positive integer");
    return r91;
  }
  function Ye2(t32) {
    let e26 = Yt5(t32);
    if (!Xe3(e26))
      throw new RangeError("infinity is out of range");
    if (!ur4(e26))
      throw new RangeError(`unsupported fractional value ${t32}`);
    return e26 === 0 ? 0 : e26;
  }
  function ve5(t32, e26) {
    return { quotient: S9.divide(t32, e26), remainder: S9.remainder(t32, e26) };
  }
  function $n3(t32) {
    return S9.lessThan(t32, ge6);
  }
  function vi4(t32) {
    return fr4(t32) ? 0 : $n3(t32) ? -1 : 1;
  }
  function Tr4(t32) {
    return S9.lessThan(t32, ge6) ? S9.multiply(t32, ps4) : t32;
  }
  var Ei4 = /* @__PURE__ */ new Map([["year", ee6], ["month", Ti4], ["monthCode", He5], ["day", Ti4], ["hour", ee6], ["minute", ee6], ["second", ee6], ["millisecond", ee6], ["microsecond", ee6], ["nanosecond", ee6], ["years", Ye2], ["months", Ye2], ["weeks", Ye2], ["days", Ye2], ["hours", Ye2], ["minutes", Ye2], ["seconds", Ye2], ["milliseconds", Ye2], ["microseconds", Ye2], ["nanoseconds", Ye2], ["era", He5], ["eraYear", be5], ["offset", He5]]);
  var Ts3 = /* @__PURE__ */ new Map([["hour", 0], ["minute", 0], ["second", 0], ["millisecond", 0], ["microsecond", 0], ["nanosecond", 0]]);
  var cn4 = [["years", "year", "date"], ["months", "month", "date"], ["weeks", "week", "date"], ["days", "day", "date"], ["hours", "hour", "time"], ["minutes", "minute", "time"], ["seconds", "second", "time"], ["milliseconds", "millisecond", "time"], ["microseconds", "microsecond", "time"], ["nanoseconds", "nanosecond", "time"]];
  var Sn3 = new Map(cn4.map((t32) => [t32[0], t32[1]]));
  var vs4 = new Map(cn4.map(([t32, e26]) => [e26, t32]));
  var Ii4 = cn4.map(([, t32]) => t32);
  var bi4 = Array.from(Sn3.keys()).sort();
  var Di4 = /* @__PURE__ */ new Map();
  function ma3(t32) {
    let e26 = Di4.get(t32);
    return e26 === void 0 && (e26 = new sa3("en-us", { timeZone: dn4(t32), hour12: false, era: "short", year: "numeric", month: "numeric", day: "numeric", hour: "numeric", minute: "numeric", second: "numeric" }), Di4.set(t32, e26)), e26;
  }
  function Ci4(t32) {
    if (t32 == null)
      throw new TypeError(`Expected object not ${t32}`);
    return Object(t32);
  }
  function It5(t32, e26, r91, o35) {
    if (e26 == null)
      return;
    let i29 = ys4(e26);
    for (let a27 of i29)
      if (!r91.some((s29) => Object.is(s29, a27)) && Object.prototype.propertyIsEnumerable.call(e26, a27)) {
        let s29 = e26[a27];
        if (o35 && o35.some((d25) => Object.is(d25, s29)))
          continue;
        t32[a27] = s29;
      }
  }
  function $e6(t32) {
    return Re6(t32, j9) && !Re6(t32, ie7, v8);
  }
  function mr4(t32) {
    return Re6(t32, Or4);
  }
  function ye6(t32) {
    return Re6(t32, me6);
  }
  function pe6(t32) {
    return Re6(t32, Ae6, Be5, We3, ze4, Ge4, Je4, _e4, Ve4, Ke3);
  }
  function K7(t32) {
    return Re6(t32, Qi4);
  }
  function we6(t32) {
    return Re6(t32, L8, x6, q7, A7, W7, z6) && !Re6(t32, $7, R8, B8);
  }
  function U9(t32) {
    return Re6(t32, $7, R8, B8, L8, x6, q7, A7, W7, z6);
  }
  function re6(t32) {
    return Re6(t32, Hi4);
  }
  function Se7(t32) {
    return Re6(t32, ea3);
  }
  function k8(t32) {
    return Re6(t32, j9, ie7, v8);
  }
  function Ut5(t32) {
    if (Re6(t32, v8) || Re6(t32, ie7))
      throw new TypeError("with() does not support a calendar or timeZone property");
    if (we6(t32))
      throw new TypeError("with() does not accept Temporal.PlainTime, use withPlainTime() instead");
    if (t32.calendar !== void 0)
      throw new TypeError("with() does not support a calendar property");
    if (t32.timeZone !== void 0)
      throw new TypeError("with() does not support a timeZone property");
  }
  function Es3(t32) {
    let { ianaName: e26, offset: r91, z: o35 } = function(a27) {
      if (new RegExp(`^${sn4.source}$`, "i").test(a27))
        return { ianaName: a27 };
      try {
        let s29 = Nr4(a27);
        if (s29.z || s29.offset || s29.ianaName)
          return s29;
      } catch {
      }
      throw new RangeError(`Invalid time zone: ${a27}`);
    }(t32);
    return e26 ? Ho4(e26) : o35 ? "UTC" : eo4(Vr4(r91));
  }
  function Ao4(t32, e26) {
    return e26 === "never" ? "" : Wo4(je4(t32), e26);
  }
  function Wo4(t32, e26) {
    return e26 === "never" || e26 === "auto" && t32 === "iso8601" ? "" : `[${e26 === "critical" ? "!" : ""}u-ca=${t32}]`;
  }
  function Nr4(t32) {
    let e26 = ns4.exec(t32);
    if (!e26)
      throw new RangeError(`invalid ISO 8601 string: ${t32}`);
    let r91 = e26[1];
    if (r91[0] === "\u2212" && (r91 = `-${r91.slice(1)}`), r91 === "-000000")
      throw new RangeError(`invalid ISO 8601 string: ${t32}`);
    let o35 = be5(r91), i29 = be5(e26[2] || e26[4]), a27 = be5(e26[3] || e26[5]), s29 = be5(e26[6]), d25 = e26[6] !== void 0, h35 = be5(e26[7] || e26[10]), u30 = be5(e26[8] || e26[11]);
    u30 === 60 && (u30 = 59);
    let l35 = (e26[9] || e26[12]) + "000000000", m27 = be5(l35.slice(0, 3)), f25 = be5(l35.slice(3, 6)), y24 = be5(l35.slice(6, 9)), p24, w26 = false;
    if (e26[13])
      p24 = void 0, w26 = true;
    else if (e26[14] && e26[15]) {
      let I26 = e26[14] === "-" || e26[14] === "\u2212" ? "-" : "+", b28 = e26[15] || "00", M26 = e26[16] || "00", C24 = e26[17] || "00", D24 = e26[18] || "0";
      if (p24 = `${I26}${b28}:${M26}`, +D24) {
        for (; D24.endsWith("0"); )
          D24 = D24.slice(0, -1);
        p24 += `:${C24}.${D24}`;
      } else
        +C24 && (p24 += `:${C24}`);
      p24 === "-00:00" && (p24 = "+00:00");
    }
    let g31 = e26[19], T23 = e26[20], E24;
    for (let [, I26, b28, M26] of T23.matchAll(rt5))
      if (b28 === "u-ca")
        E24 === void 0 && (E24 = M26);
      else if (I26 === "!")
        throw new RangeError(`Unrecognized annotation: !${b28}=${M26}`);
    return ti3(o35, i29, a27, s29, h35, u30, m27, f25, y24), { year: o35, month: i29, day: a27, hasTime: d25, hour: s29, minute: h35, second: u30, millisecond: m27, microsecond: f25, nanosecond: y24, ianaName: g31, offset: p24, z: w26, calendar: E24 };
  }
  function zo3(t32) {
    let e26 = is4.exec(t32), r91, o35, i29, a27;
    if (e26) {
      let s29 = e26[1];
      if (s29[0] === "\u2212" && (s29 = `-${s29.slice(1)}`), s29 === "-000000")
        throw new RangeError(`invalid ISO 8601 string: ${t32}`);
      r91 = be5(s29), o35 = be5(e26[2]);
      let d25 = e26[3];
      for (let [, h35, u30, l35] of d25.matchAll(rt5))
        if (u30 === "u-ca")
          i29 === void 0 && (i29 = l35);
        else if (h35 === "!")
          throw new RangeError(`Unrecognized annotation: !${u30}=${l35}`);
      if (i29 !== void 0 && i29 !== "iso8601")
        throw new RangeError("YYYY-MM format is only valid with iso8601 calendar");
    } else {
      let s29;
      if ({ year: r91, month: o35, calendar: i29, day: a27, z: s29 } = Nr4(t32), s29)
        throw new RangeError("Z designator not supported for PlainYearMonth");
    }
    return { year: r91, month: o35, calendar: i29, referenceISODay: a27 };
  }
  function Go4(t32) {
    let e26 = as4.exec(t32), r91, o35, i29, a27;
    if (e26) {
      r91 = be5(e26[1]), o35 = be5(e26[2]);
      let s29 = e26[3];
      for (let [, d25, h35, u30] of s29.matchAll(rt5))
        if (h35 === "u-ca")
          i29 === void 0 && (i29 = u30);
        else if (d25 === "!")
          throw new RangeError(`Unrecognized annotation: !${h35}=${u30}`);
      if (i29 !== void 0 && i29 !== "iso8601")
        throw new RangeError("MM-DD format is only valid with iso8601 calendar");
    } else {
      let s29;
      if ({ month: r91, day: o35, calendar: i29, year: a27, z: s29 } = Nr4(t32), s29)
        throw new RangeError("Z designator not supported for PlainMonthDay");
    }
    return { month: r91, day: o35, calendar: i29, referenceISOYear: a27 };
  }
  function Is4(t32) {
    let { year: e26, month: r91, day: o35, hour: i29, minute: a27, second: s29, millisecond: d25, microsecond: h35, nanosecond: u30, offset: l35, z: m27 } = function(w26) {
      let g31 = Nr4(w26);
      if (!g31.z && !g31.offset)
        throw new RangeError("Temporal.Instant requires a time zone offset");
      return g31;
    }(t32);
    if (!m27 && !l35)
      throw new RangeError("Temporal.Instant requires a time zone offset");
    let f25 = m27 ? 0 : Vr4(l35);
    ({ year: e26, month: r91, day: o35, hour: i29, minute: a27, second: s29, millisecond: d25, microsecond: h35, nanosecond: u30 } = ei3(e26, r91, o35, i29, a27, s29, d25, h35, u30 - f25));
    let y24 = Kr4(e26, r91, o35, i29, a27, s29, d25, h35, u30);
    if (y24 === null)
      throw new RangeError("DateTime outside of supported range");
    return y24;
  }
  function Yn4(t32, e26, r91, o35) {
    let i29 = t32, a27 = e26, s29 = r91;
    switch (o35) {
      case "reject":
        Rr3(i29, a27, s29);
        break;
      case "constrain":
        ({ year: i29, month: a27, day: s29 } = Ya4(i29, a27, s29));
    }
    return { year: i29, month: a27, day: s29 };
  }
  function An4(t32, e26, r91, o35, i29, a27, s29) {
    let d25 = t32, h35 = e26, u30 = r91, l35 = o35, m27 = i29, f25 = a27;
    switch (s29) {
      case "reject":
        to4(d25, h35, u30, l35, m27, f25);
        break;
      case "constrain":
        ({ hour: d25, minute: h35, second: u30, millisecond: l35, microsecond: m27, nanosecond: f25 } = function(p24, w26, g31, T23, E24, I26) {
          let b28 = tr4(p24, 0, 23), M26 = tr4(w26, 0, 59), C24 = tr4(g31, 0, 59), D24 = tr4(T23, 0, 999), Y23 = tr4(E24, 0, 999), F26 = tr4(I26, 0, 999);
          return { hour: b28, minute: M26, second: C24, millisecond: D24, microsecond: Y23, nanosecond: F26 };
        }(d25, h35, u30, l35, m27, f25));
    }
    return { hour: d25, minute: h35, second: u30, millisecond: l35, microsecond: m27, nanosecond: f25 };
  }
  function pt5(t32) {
    if (!ce5(t32))
      return function(p24) {
        let w26 = ds4.exec(p24);
        if (!w26)
          throw new RangeError(`invalid duration: ${p24}`);
        if (w26.slice(2).every((V24) => V24 === void 0))
          throw new RangeError(`invalid duration: ${p24}`);
        let g31 = w26[1] === "-" || w26[1] === "\u2212" ? -1 : 1, T23 = w26[2] === void 0 ? 0 : ee6(w26[2]) * g31, E24 = w26[3] === void 0 ? 0 : ee6(w26[3]) * g31, I26 = w26[4] === void 0 ? 0 : ee6(w26[4]) * g31, b28 = w26[5] === void 0 ? 0 : ee6(w26[5]) * g31, M26 = w26[6] === void 0 ? 0 : ee6(w26[6]) * g31, C24 = w26[7], D24 = w26[8], Y23 = w26[9], F26 = w26[10], ne8 = w26[11], Q24 = 0, H26 = 0, P25 = 0;
        if (C24 !== void 0) {
          if (D24 ?? Y23 ?? F26 ?? ne8)
            throw new RangeError("only the smallest unit can be fractional");
          P25 = 3600 * be5((C24 + "000000000").slice(0, 9)) * g31;
        } else if (Q24 = D24 === void 0 ? 0 : ee6(D24) * g31, Y23 !== void 0) {
          if (F26 ?? ne8)
            throw new RangeError("only the smallest unit can be fractional");
          P25 = 60 * be5((Y23 + "000000000").slice(0, 9)) * g31;
        } else
          H26 = F26 === void 0 ? 0 : ee6(F26) * g31, ne8 !== void 0 && (P25 = be5((ne8 + "000000000").slice(0, 9)) * g31);
        let J25 = P25 % 1e3, S25 = it6(P25 / 1e3) % 1e3, Z23 = it6(P25 / 1e6) % 1e3;
        return H26 += it6(P25 / 1e9) % 60, Q24 += it6(P25 / 6e10), Pn3(T23, E24, I26, b28, M26, Q24, H26, Z23, S25, J25), { years: T23, months: E24, weeks: I26, days: b28, hours: M26, minutes: Q24, seconds: H26, milliseconds: Z23, microseconds: S25, nanoseconds: J25 };
      }(He5(t32));
    if (pe6(t32))
      return { years: n7(t32, Ae6), months: n7(t32, Be5), weeks: n7(t32, er4), days: n7(t32, We3), hours: n7(t32, ze4), minutes: n7(t32, Ge4), seconds: n7(t32, Je4), milliseconds: n7(t32, _e4), microseconds: n7(t32, Ve4), nanoseconds: n7(t32, Ke3) };
    let e26 = { years: 0, months: 0, weeks: 0, days: 0, hours: 0, minutes: 0, seconds: 0, milliseconds: 0, microseconds: 0, nanoseconds: 0 }, r91 = function(p24) {
      if (!ce5(p24))
        throw new TypeError("invalid duration-like");
      let w26 = { years: void 0, months: void 0, weeks: void 0, days: void 0, hours: void 0, minutes: void 0, seconds: void 0, milliseconds: void 0, microseconds: void 0, nanoseconds: void 0 }, g31 = false;
      for (let T23 of bi4) {
        let E24 = p24[T23];
        E24 !== void 0 && (g31 = true, w26[T23] = Ye2(E24));
      }
      if (!g31)
        throw new TypeError("invalid duration-like");
      return w26;
    }(t32);
    for (let y24 of bi4) {
      let p24 = r91[y24];
      p24 !== void 0 && (e26[y24] = p24);
    }
    let { years: o35, months: i29, weeks: a27, days: s29, hours: d25, minutes: h35, seconds: u30, milliseconds: l35, microseconds: m27, nanoseconds: f25 } = e26;
    return Pn3(o35, i29, a27, s29, d25, h35, u30, l35, m27, f25), { years: o35, months: i29, weeks: a27, days: s29, hours: d25, minutes: h35, seconds: u30, milliseconds: l35, microseconds: m27, nanoseconds: f25 };
  }
  function Ee7(t32) {
    return t32 === void 0 ? "constrain" : Qr4(t32, "overflow", ["constrain", "reject"], "constrain");
  }
  function Rt5(t32) {
    return t32 === void 0 ? "compatible" : Qr4(t32, "disambiguation", ["compatible", "earlier", "later", "reject"], "compatible");
  }
  function Er4(t32, e26) {
    return Qr4(t32, "roundingMode", ["ceil", "floor", "expand", "trunc", "halfCeil", "halfFloor", "halfExpand", "halfTrunc", "halfEven"], e26);
  }
  function Rn3(t32, e26) {
    return t32 === void 0 ? e26 : Qr4(t32, "offset", ["prefer", "use", "ignore", "reject"], e26);
  }
  function hn4(t32) {
    return Qr4(t32, "calendarName", ["auto", "always", "never", "critical"], "auto");
  }
  function Lt5(t32) {
    let e26 = t32.roundingIncrement;
    if (e26 === void 0)
      return 1;
    if (e26 = Yt5(e26), !Xe3(e26))
      throw new RangeError("roundingIncrement must be finite");
    let r91 = it6(e26);
    if (r91 < 1 || r91 > 1e9)
      throw new RangeError(`roundingIncrement must be at least 1 and at most 1e9, not ${e26}`);
    return r91;
  }
  function xt5(t32, e26, r91) {
    let o35 = r91 ? e26 : e26 - 1;
    if (t32 > o35)
      throw new RangeError(`roundingIncrement must be at least 1 and less than ${o35}, not ${t32}`);
    if (e26 % t32 != 0)
      throw new RangeError(`Rounding increment must divide evenly into ${e26}`);
  }
  function ln4(t32) {
    let e26 = t32.fractionalSecondDigits;
    if (e26 === void 0)
      return "auto";
    if (typeof e26 != "number") {
      if (He5(e26) !== "auto")
        throw new RangeError(`fractionalSecondDigits must be 'auto' or 0 through 9, not ${e26}`);
      return "auto";
    }
    let r91 = nr4(e26);
    if (!Xe3(r91) || r91 < 0 || r91 > 9)
      throw new RangeError(`fractionalSecondDigits must be 'auto' or 0 through 9, not ${e26}`);
    return r91;
  }
  function un4(t32, e26) {
    switch (t32) {
      case "minute":
        return { precision: "minute", unit: "minute", increment: 1 };
      case "second":
        return { precision: 0, unit: "second", increment: 1 };
      case "millisecond":
        return { precision: 3, unit: "millisecond", increment: 1 };
      case "microsecond":
        return { precision: 6, unit: "microsecond", increment: 1 };
      case "nanosecond":
        return { precision: 9, unit: "nanosecond", increment: 1 };
    }
    switch (e26) {
      case "auto":
        return { precision: e26, unit: "nanosecond", increment: 1 };
      case 0:
        return { precision: e26, unit: "second", increment: 1 };
      case 1:
      case 2:
      case 3:
        return { precision: e26, unit: "millisecond", increment: 10 ** (3 - e26) };
      case 4:
      case 5:
      case 6:
        return { precision: e26, unit: "microsecond", increment: 10 ** (6 - e26) };
      case 7:
      case 8:
      case 9:
        return { precision: e26, unit: "nanosecond", increment: 10 ** (9 - e26) };
      default:
        throw new RangeError(`fractionalSecondDigits must be 'auto' or 0 through 9, not ${e26}`);
    }
  }
  var ht5 = Symbol("~required~");
  function or4(t32, e26, r91, o35, i29 = []) {
    let a27 = [];
    for (let [, u30, l35] of cn4)
      r91 !== "datetime" && r91 !== l35 || a27.push(u30);
    a27.push(...i29);
    let s29 = o35;
    s29 === ht5 ? s29 = void 0 : s29 !== void 0 && a27.push(s29);
    let d25 = [...a27];
    for (let u30 of a27) {
      let l35 = vs4.get(u30);
      l35 !== void 0 && d25.push(l35);
    }
    let h35 = Qr4(t32, e26, d25, s29);
    if (h35 === void 0 && o35 === ht5)
      throw new RangeError(`${e26} is required`);
    return Sn3.has(h35) ? Sn3.get(h35) : h35;
  }
  function En3(t32) {
    let e26 = t32.relativeTo;
    if (e26 === void 0)
      return e26;
    let r91, o35, i29, a27, s29, d25, h35, u30, l35, m27, f25, y24, p24 = "option", w26 = false;
    if (ce5(e26)) {
      if (k8(e26) || K7(e26))
        return e26;
      if (U9(e26))
        return kt4(e26);
      m27 = pn4(e26);
      let g31 = De4(m27, ["day", "hour", "microsecond", "millisecond", "minute", "month", "monthCode", "nanosecond", "second", "year"]);
      g31.push("timeZone", "offset");
      let T23 = _7(e26, g31, []), E24 = qe4(null);
      E24.overflow = "constrain", { year: r91, month: o35, day: i29, hour: a27, minute: s29, second: d25, millisecond: h35, microsecond: u30, nanosecond: l35 } = mn3(m27, T23, E24), y24 = T23.offset, y24 === void 0 && (p24 = "wall"), f25 = T23.timeZone, f25 !== void 0 && (f25 = xe5(f25));
    } else {
      let g31, T23;
      if ({ year: r91, month: o35, day: i29, hour: a27, minute: s29, second: d25, millisecond: h35, microsecond: u30, nanosecond: l35, calendar: m27, ianaName: g31, offset: y24, z: T23 } = Nr4(He5(e26)), g31)
        f25 = xe5(g31), T23 ? p24 = "exact" : y24 || (p24 = "wall"), w26 = true;
      else if (T23)
        throw new RangeError("Z designator not supported for PlainDate relativeTo; either remove the Z or add a bracketed time zone");
      if (m27 || (m27 = "iso8601"), !Ar4(m27))
        throw new RangeError(`invalid calendar identifier ${m27}`);
      m27 = Br4(m27);
    }
    return f25 === void 0 ? pr4(r91, o35, i29, m27) : Fe4(kn3(r91, o35, i29, a27, s29, d25, h35, u30, l35, p24, p24 === "option" ? Vr4(y24) : 0, f25, "compatible", "reject", w26), f25, m27);
  }
  function po4(t32, e26, r91, o35, i29, a27, s29, d25, h35, u30) {
    for (let [l35, m27] of [["years", t32], ["months", e26], ["weeks", r91], ["days", o35], ["hours", i29], ["minutes", a27], ["seconds", s29], ["milliseconds", d25], ["microseconds", h35], ["nanoseconds", u30]])
      if (m27 !== 0)
        return Sn3.get(l35);
    return "nanosecond";
  }
  function lt5(t32, e26) {
    return Ii4.indexOf(t32) > Ii4.indexOf(e26) ? e26 : t32;
  }
  function _7(t32, e26, r91, { emptySourceErrorMessage: o35 } = { emptySourceErrorMessage: "no supported properties found" }) {
    let i29 = qe4(null), a27 = false;
    e26.sort();
    for (let s29 of e26) {
      let d25 = t32[s29];
      if (d25 !== void 0)
        a27 = true, Ei4.has(s29) && (d25 = Ei4.get(s29)(d25)), i29[s29] = d25;
      else if (r91 !== "partial") {
        if (cs4.call(r91, s29))
          throw new TypeError(`required property '${s29}' missing or undefined`);
        d25 = Ts3.get(s29), i29[s29] = d25;
      }
    }
    if (r91 === "partial" && !a27)
      throw new TypeError(o35);
    return i29;
  }
  function Bn4(t32, e26 = "complete") {
    let r91 = ["hour", "microsecond", "millisecond", "minute", "nanosecond", "second"], o35 = _7(t32, r91, "partial", { emptySourceErrorMessage: "invalid time-like" }), i29 = {};
    for (let a27 of r91) {
      let s29 = fs4(o35, a27);
      s29 !== void 0 ? i29[a27] = s29.value : e26 === "complete" && (i29[a27] = 0);
    }
    return i29;
  }
  function ae6(t32, e26) {
    let r91 = t32;
    if (ce5(r91)) {
      if (K7(r91))
        return r91;
      if (k8(r91) && (Ee7(e26), r91 = lr4(n7(r91, ie7), n7(r91, Le6), n7(r91, v8))), U9(r91))
        return Ee7(e26), pr4(n7(r91, $7), n7(r91, R8), n7(r91, B8), n7(r91, v8));
      let h35 = pn4(r91);
      return xr4(h35, _7(r91, De4(h35, ["day", "month", "monthCode", "year"]), []), e26);
    }
    Ee7(e26);
    let { year: o35, month: i29, day: a27, calendar: s29, z: d25 } = function(u30) {
      return Nr4(u30);
    }(He5(r91));
    if (d25)
      throw new RangeError("Z designator not supported for PlainDate");
    if (s29 || (s29 = "iso8601"), !Ar4(s29))
      throw new RangeError(`invalid calendar identifier ${s29}`);
    return s29 = Br4(s29), pr4(o35, i29, a27, s29);
  }
  function mn3(t32, e26, r91) {
    let { hour: o35, minute: i29, second: a27, millisecond: s29, microsecond: d25, nanosecond: h35 } = Bn4(e26), u30 = Ee7(r91), l35 = xr4(t32, e26, r91), m27 = n7(l35, $7), f25 = n7(l35, R8), y24 = n7(l35, B8);
    return { hour: o35, minute: i29, second: a27, millisecond: s29, microsecond: d25, nanosecond: h35 } = An4(o35, i29, a27, s29, d25, h35, u30), { year: m27, month: f25, day: y24, hour: o35, minute: i29, second: a27, millisecond: s29, microsecond: d25, nanosecond: h35 };
  }
  function at5(t32, e26) {
    let r91, o35, i29, a27, s29, d25, h35, u30, l35, m27;
    if (ce5(t32)) {
      if (U9(t32))
        return t32;
      if (k8(t32))
        return Ee7(e26), lr4(n7(t32, ie7), n7(t32, Le6), n7(t32, v8));
      if (K7(t32))
        return Ee7(e26), rr4(n7(t32, $7), n7(t32, R8), n7(t32, B8), 0, 0, 0, 0, 0, 0, n7(t32, v8));
      m27 = pn4(t32);
      let f25 = _7(t32, De4(m27, ["day", "hour", "microsecond", "millisecond", "minute", "month", "monthCode", "nanosecond", "second", "year"]), []);
      ({ year: r91, month: o35, day: i29, hour: a27, minute: s29, second: d25, millisecond: h35, microsecond: u30, nanosecond: l35 } = mn3(m27, f25, e26));
    } else {
      let f25;
      if (Ee7(e26), { year: r91, month: o35, day: i29, hour: a27, minute: s29, second: d25, millisecond: h35, microsecond: u30, nanosecond: l35, calendar: m27, z: f25 } = function(p24) {
        return Nr4(p24);
      }(He5(t32)), f25)
        throw new RangeError("Z designator not supported for PlainDateTime");
      if (ti3(r91, o35, i29, a27, s29, d25, h35, u30, l35), m27 || (m27 = "iso8601"), !Ar4(m27))
        throw new RangeError(`invalid calendar identifier ${m27}`);
      m27 = Br4(m27);
    }
    return rr4(r91, o35, i29, a27, s29, d25, h35, u30, l35, m27);
  }
  function bt5(t32) {
    if (pe6(t32))
      return t32;
    let { years: e26, months: r91, weeks: o35, days: i29, hours: a27, minutes: s29, seconds: d25, milliseconds: h35, microseconds: u30, nanoseconds: l35 } = pt5(t32);
    return new (O9("%Temporal.Duration%"))(e26, r91, o35, i29, a27, s29, d25, h35, u30, l35);
  }
  function vr4(t32) {
    if ($e6(t32))
      return t32;
    if (k8(t32))
      return new (O9("%Temporal.Instant%"))(n7(t32, j9));
    let e26 = Is4(He5(t32));
    return new (O9("%Temporal.Instant%"))(e26);
  }
  function Oi4(t32, e26) {
    let r91 = t32;
    if (ce5(r91)) {
      if (Se7(r91))
        return r91;
      let d25, h35;
      if (Re6(r91, v8))
        d25 = n7(r91, v8), h35 = false;
      else {
        let l35 = r91.calendar;
        h35 = l35 === void 0, l35 === void 0 && (l35 = "iso8601"), d25 = ir4(l35);
      }
      let u30 = _7(r91, De4(d25, ["day", "month", "monthCode", "year"]), []);
      return h35 && u30.month !== void 0 && u30.monthCode === void 0 && u30.year === void 0 && (u30.year = 1972), Bt4(d25, u30, e26);
    }
    Ee7(e26);
    let { month: o35, day: i29, referenceISOYear: a27, calendar: s29 } = Go4(He5(r91));
    if (s29 === void 0 && (s29 = "iso8601"), !Ar4(s29))
      throw new RangeError(`invalid calendar identifier ${s29}`);
    return s29 = Br4(s29), a27 === void 0 ? (Rr3(1972, o35, i29), Vt5(o35, i29, s29)) : Bt4(s29, Vt5(o35, i29, s29, a27));
  }
  function jr4(t32, e26 = "constrain") {
    let r91, o35, i29, a27, s29, d25, h35 = t32;
    if (ce5(h35)) {
      if (we6(h35))
        return h35;
      if (k8(h35) && (h35 = lr4(n7(h35, ie7), n7(h35, Le6), n7(h35, v8))), U9(h35))
        return new (O9("%Temporal.PlainTime%"))(n7(h35, L8), n7(h35, x6), n7(h35, q7), n7(h35, A7), n7(h35, W7), n7(h35, z6));
      ({ hour: r91, minute: o35, second: i29, millisecond: a27, microsecond: s29, nanosecond: d25 } = Bn4(h35)), { hour: r91, minute: o35, second: i29, millisecond: a27, microsecond: s29, nanosecond: d25 } = An4(r91, o35, i29, a27, s29, d25, e26);
    } else
      ({ hour: r91, minute: o35, second: i29, millisecond: a27, microsecond: s29, nanosecond: d25 } = function(l35) {
        let m27 = os4.exec(l35), f25, y24, p24, w26, g31, T23, E24;
        if (m27) {
          f25 = be5(m27[1]), y24 = be5(m27[2] || m27[5]), p24 = be5(m27[3] || m27[6]), p24 === 60 && (p24 = 59);
          let I26 = (m27[4] || m27[7]) + "000000000";
          w26 = be5(I26.slice(0, 3)), g31 = be5(I26.slice(3, 6)), T23 = be5(I26.slice(6, 9)), E24 = m27[14];
          for (let [, b28, M26, C24] of E24.matchAll(rt5))
            if (M26 !== "u-ca" && b28 === "!")
              throw new RangeError(`Unrecognized annotation: !${M26}=${C24}`);
          if (m27[8])
            throw new RangeError("Z designator not supported for PlainTime");
        } else {
          let I26, b28;
          if ({ hasTime: b28, hour: f25, minute: y24, second: p24, millisecond: w26, microsecond: g31, nanosecond: T23, z: I26 } = Nr4(l35), !b28)
            throw new RangeError(`time is missing in string: ${l35}`);
          if (I26)
            throw new RangeError("Z designator not supported for PlainTime");
        }
        if (/[tT ][0-9][0-9]/.test(l35))
          return { hour: f25, minute: y24, second: p24, millisecond: w26, microsecond: g31, nanosecond: T23 };
        try {
          let { month: I26, day: b28 } = Go4(l35);
          Rr3(1972, I26, b28);
        } catch {
          try {
            let { year: I26, month: b28 } = zo3(l35);
            Rr3(I26, b28, 1);
          } catch {
            return { hour: f25, minute: y24, second: p24, millisecond: w26, microsecond: g31, nanosecond: T23 };
          }
        }
        throw new RangeError(`invalid ISO 8601 time-only string ${l35}; may need a T prefix`);
      }(He5(h35))), to4(r91, o35, i29, a27, s29, d25);
    return new (O9("%Temporal.PlainTime%"))(r91, o35, i29, a27, s29, d25);
  }
  function Wt5(t32, e26) {
    if (ce5(t32)) {
      if (re6(t32))
        return t32;
      let s29 = pn4(t32);
      return mt5(s29, _7(t32, De4(s29, ["month", "monthCode", "year"]), []), e26);
    }
    Ee7(e26);
    let { year: r91, month: o35, referenceISODay: i29, calendar: a27 } = zo3(He5(t32));
    if (a27 === void 0 && (a27 = "iso8601"), !Ar4(a27))
      throw new RangeError(`invalid calendar identifier ${a27}`);
    return a27 = Br4(a27), i29 === void 0 ? (Rr3(r91, o35, 1), Kt5(r91, o35, a27)) : mt5(a27, Kt5(r91, o35, a27, i29));
  }
  function kn3(t32, e26, r91, o35, i29, a27, s29, d25, h35, u30, l35, m27, f25, y24, p24) {
    let w26 = new (O9("%Temporal.PlainDateTime%"))(t32, e26, r91, o35, i29, a27, s29, d25, h35);
    if (u30 === "wall" || y24 === "ignore")
      return n7(Qe2(m27, w26, f25), j9);
    if (u30 === "exact" || y24 === "use") {
      let T23 = Kr4(t32, e26, r91, o35, i29, a27, s29, d25, h35);
      if (T23 === null)
        throw new RangeError("ZonedDateTime outside of supported range");
      return S9.subtract(T23, S9.BigInt(l35));
    }
    let g31 = Fn3(m27, w26);
    for (let T23 of g31) {
      let E24 = Ir4(m27, T23), I26 = S9.toNumber(cr4(S9.BigInt(E24), ha3, "halfExpand"));
      if (E24 === l35 || p24 && I26 === l35)
        return n7(T23, j9);
    }
    if (y24 === "reject") {
      let T23 = eo4(l35), E24 = mr4(m27) ? n7(m27, Or4) : "time zone";
      throw new RangeError(`Offset ${T23} is invalid for ${w26.toString()} in ${E24}`);
    }
    return n7(Ia3(g31, m27, w26, f25), j9);
  }
  function zt5(t32, e26) {
    let r91, o35, i29, a27, s29, d25, h35, u30, l35, m27, f25, y24, p24, w26, g31 = false, T23 = "option";
    if (ce5(t32)) {
      if (k8(t32))
        return t32;
      y24 = pn4(t32);
      let I26 = De4(y24, ["day", "hour", "microsecond", "millisecond", "minute", "month", "monthCode", "nanosecond", "second", "year"]);
      I26.push("timeZone", "offset");
      let b28 = _7(t32, I26, ["timeZone"]);
      m27 = xe5(b28.timeZone), f25 = b28.offset, f25 === void 0 && (T23 = "wall"), p24 = Rt5(e26), w26 = Rn3(e26, "reject"), { year: r91, month: o35, day: i29, hour: a27, minute: s29, second: d25, millisecond: h35, microsecond: u30, nanosecond: l35 } = mn3(y24, b28, e26);
    } else {
      let I26, b28;
      if ({ year: r91, month: o35, day: i29, hour: a27, minute: s29, second: d25, millisecond: h35, microsecond: u30, nanosecond: l35, ianaName: I26, offset: f25, z: b28, calendar: y24 } = function(C24) {
        let D24 = Nr4(C24);
        if (!D24.ianaName)
          throw new RangeError("Temporal.ZonedDateTime requires a time zone ID in brackets");
        return D24;
      }(He5(t32)), m27 = xe5(I26), b28 ? T23 = "exact" : f25 || (T23 = "wall"), y24 || (y24 = "iso8601"), !Ar4(y24))
        throw new RangeError(`invalid calendar identifier ${y24}`);
      y24 = Br4(y24), g31 = true, p24 = Rt5(e26), w26 = Rn3(e26, "reject"), Ee7(e26);
    }
    let E24 = 0;
    return T23 === "option" && (E24 = Vr4(f25)), Fe4(kn3(r91, o35, i29, a27, s29, d25, h35, u30, l35, T23, E24, m27, p24, w26, g31), m27, y24);
  }
  function fa3(t32, e26, r91, o35, i29) {
    Rr3(e26, r91, o35), Ra4(e26, r91, o35), Fr4(t32), G9(t32, $7, e26), G9(t32, R8, r91), G9(t32, B8, o35), G9(t32, v8, i29), G9(t32, Qi4, true);
  }
  function pr4(t32, e26, r91, o35 = "iso8601") {
    let i29 = O9("%Temporal.PlainDate%"), a27 = qe4(i29.prototype);
    return fa3(a27, t32, e26, r91, o35), a27;
  }
  function ya3(t32, e26, r91, o35, i29, a27, s29, d25, h35, u30, l35) {
    ti3(e26, r91, o35, i29, a27, s29, d25, h35, u30), Ba3(e26, r91, o35, i29, a27, s29, d25, h35, u30), Fr4(t32), G9(t32, $7, e26), G9(t32, R8, r91), G9(t32, B8, o35), G9(t32, L8, i29), G9(t32, x6, a27), G9(t32, q7, s29), G9(t32, A7, d25), G9(t32, W7, h35), G9(t32, z6, u30), G9(t32, v8, l35);
  }
  function rr4(t32, e26, r91, o35, i29, a27, s29, d25, h35, u30 = "iso8601") {
    let l35 = O9("%Temporal.PlainDateTime%"), m27 = qe4(l35.prototype);
    return ya3(m27, t32, e26, r91, o35, i29, a27, s29, d25, h35, u30), m27;
  }
  function pa3(t32, e26, r91, o35, i29) {
    Rr3(i29, e26, r91), Ra4(i29, e26, r91), Fr4(t32), G9(t32, R8, e26), G9(t32, B8, r91), G9(t32, $7, i29), G9(t32, v8, o35), G9(t32, ea3, true);
  }
  function Vt5(t32, e26, r91 = "iso8601", o35 = 1972) {
    let i29 = O9("%Temporal.PlainMonthDay%"), a27 = qe4(i29.prototype);
    return pa3(a27, t32, e26, r91, o35), a27;
  }
  function wa3(t32, e26, r91, o35, i29) {
    Rr3(e26, r91, i29), function(s29, d25) {
      Pe4(s29, On3, Mn3), s29 === On3 ? Pe4(d25, 4, 12) : s29 === Mn3 && Pe4(d25, 1, 9);
    }(e26, r91), Fr4(t32), G9(t32, $7, e26), G9(t32, R8, r91), G9(t32, B8, i29), G9(t32, v8, o35), G9(t32, Hi4, true);
  }
  function Kt5(t32, e26, r91 = "iso8601", o35 = 1) {
    let i29 = O9("%Temporal.PlainYearMonth%"), a27 = qe4(i29.prototype);
    return wa3(a27, t32, e26, r91, o35), a27;
  }
  function ga3(t32, e26, r91, o35) {
    ot5(e26), Fr4(t32), G9(t32, j9, e26), G9(t32, ie7, r91), G9(t32, v8, o35);
    let i29 = new (O9("%Temporal.Instant%"))(n7(t32, j9));
    G9(t32, Le6, i29);
  }
  function Fe4(t32, e26, r91 = "iso8601") {
    let o35 = O9("%Temporal.ZonedDateTime%"), i29 = qe4(o35.prototype);
    return ga3(i29, t32, e26, r91), i29;
  }
  function De4(t32, e26) {
    if (typeof t32 == "string") {
      let i29 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.fields%"), i29, [e26]);
    }
    let r91 = N8(oe7(t32, "fields"), t32, [e26]), o35 = [];
    for (let i29 of r91) {
      if (typeof i29 != "string")
        throw new TypeError("bad return from calendar.fields()");
      aa3.call(o35, i29);
    }
    return o35;
  }
  function ut5(t32, e26, r91) {
    if (typeof t32 == "string") {
      let i29 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.mergeFields%"), i29, [e26, r91]);
    }
    let o35 = N8(oe7(t32, "mergeFields"), t32, [e26, r91]);
    if (!ce5(o35))
      throw new TypeError("bad return from calendar.mergeFields()");
    return o35;
  }
  function Ne6(t32, e26, r91, o35, i29) {
    let a27 = i29;
    if (typeof t32 == "string") {
      let d25 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.dateAdd%"), d25, [e26, r91, o35]);
    }
    a27 === void 0 && (a27 = oe7(t32, "dateAdd"));
    let s29 = qn4(a27, t32, [e26, r91, o35]);
    if (!K7(s29))
      throw new TypeError("invalid result");
    return s29;
  }
  function _r3(t32, e26, r91, o35, i29) {
    let a27 = i29;
    if (typeof t32 == "string") {
      let d25 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.dateUntil%"), d25, [e26, r91, o35]);
    }
    a27 === void 0 && (a27 = oe7(t32, "dateUntil"));
    let s29 = qn4(a27, t32, [e26, r91, o35]);
    if (!pe6(s29))
      throw new TypeError("invalid result");
    return s29;
  }
  function Wn3(t32, e26) {
    if (typeof t32 == "string") {
      let o35 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.year%"), o35, [e26]);
    }
    let r91 = N8(oe7(t32, "year"), t32, [e26]);
    if (typeof r91 != "number")
      throw new TypeError("calendar year result must be an integer");
    if (!ur4(r91))
      throw new RangeError("calendar year result must be an integer");
    return r91;
  }
  function zn3(t32, e26) {
    if (typeof t32 == "string") {
      let o35 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.month%"), o35, [e26]);
    }
    let r91 = N8(oe7(t32, "month"), t32, [e26]);
    if (typeof r91 != "number")
      throw new TypeError("calendar month result must be a positive integer");
    if (!ur4(r91) || r91 < 1)
      throw new RangeError("calendar month result must be a positive integer");
    return r91;
  }
  function fn3(t32, e26) {
    if (typeof t32 == "string") {
      let o35 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.monthCode%"), o35, [e26]);
    }
    let r91 = N8(oe7(t32, "monthCode"), t32, [e26]);
    if (typeof r91 != "string")
      throw new TypeError("calendar monthCode result must be a string");
    return r91;
  }
  function yn3(t32, e26) {
    if (typeof t32 == "string") {
      let o35 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.day%"), o35, [e26]);
    }
    let r91 = N8(oe7(t32, "day"), t32, [e26]);
    if (typeof r91 != "number")
      throw new TypeError("calendar day result must be a positive integer");
    if (!ur4(r91) || r91 < 1)
      throw new RangeError("calendar day result must be a positive integer");
    return r91;
  }
  function Gn4(t32, e26) {
    if (typeof t32 == "string") {
      let o35 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.era%"), o35, [e26]);
    }
    let r91 = N8(oe7(t32, "era"), t32, [e26]);
    if (r91 === void 0)
      return r91;
    if (typeof r91 != "string")
      throw new TypeError("calendar era result must be a string or undefined");
    return r91;
  }
  function Jn4(t32, e26) {
    if (typeof t32 == "string") {
      let o35 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.eraYear%"), o35, [e26]);
    }
    let r91 = N8(oe7(t32, "eraYear"), t32, [e26]);
    if (r91 === void 0)
      return r91;
    if (typeof r91 != "number")
      throw new TypeError("calendar eraYear result must be an integer or undefined");
    if (!ur4(r91))
      throw new RangeError("calendar eraYear result must be an integer or undefined");
    return r91;
  }
  function Jo4(t32, e26) {
    if (typeof t32 == "string") {
      let o35 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.dayOfWeek%"), o35, [e26]);
    }
    let r91 = N8(oe7(t32, "dayOfWeek"), t32, [e26]);
    if (typeof r91 != "number")
      throw new TypeError("calendar dayOfWeek result must be a positive integer");
    if (!ur4(r91) || r91 < 1)
      throw new RangeError("calendar dayOfWeek result must be a positive integer");
    return r91;
  }
  function _o4(t32, e26) {
    if (typeof t32 == "string") {
      let o35 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.dayOfYear%"), o35, [e26]);
    }
    let r91 = N8(oe7(t32, "dayOfYear"), t32, [e26]);
    if (typeof r91 != "number")
      throw new TypeError("calendar dayOfYear result must be a positive integer");
    if (!ur4(r91) || r91 < 1)
      throw new RangeError("calendar dayOfYear result must be a positive integer");
    return r91;
  }
  function Vo4(t32, e26) {
    if (typeof t32 == "string") {
      let o35 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.weekOfYear%"), o35, [e26]);
    }
    let r91 = N8(oe7(t32, "weekOfYear"), t32, [e26]);
    if (typeof r91 != "number")
      throw new TypeError("calendar weekOfYear result must be a positive integer");
    if (!ur4(r91) || r91 < 1)
      throw new RangeError("calendar weekOfYear result must be a positive integer");
    return r91;
  }
  function Ko2(t32, e26) {
    if (typeof t32 == "string") {
      let o35 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.yearOfWeek%"), o35, [e26]);
    }
    let r91 = N8(oe7(t32, "yearOfWeek"), t32, [e26]);
    if (typeof r91 != "number")
      throw new TypeError("calendar yearOfWeek result must be an integer");
    if (!ur4(r91))
      throw new RangeError("calendar yearOfWeek result must be an integer");
    return r91;
  }
  function Xo3(t32, e26) {
    if (typeof t32 == "string") {
      let o35 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.daysInWeek%"), o35, [e26]);
    }
    let r91 = N8(oe7(t32, "daysInWeek"), t32, [e26]);
    if (typeof r91 != "number")
      throw new TypeError("calendar daysInWeek result must be a positive integer");
    if (!ur4(r91) || r91 < 1)
      throw new RangeError("calendar daysInWeek result must be a positive integer");
    return r91;
  }
  function _n4(t32, e26) {
    if (typeof t32 == "string") {
      let o35 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.daysInMonth%"), o35, [e26]);
    }
    let r91 = N8(oe7(t32, "daysInMonth"), t32, [e26]);
    if (typeof r91 != "number")
      throw new TypeError("calendar daysInMonth result must be a positive integer");
    if (!ur4(r91) || r91 < 1)
      throw new RangeError("calendar daysInMonth result must be a positive integer");
    return r91;
  }
  function Vn3(t32, e26) {
    if (typeof t32 == "string") {
      let o35 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.daysInYear%"), o35, [e26]);
    }
    let r91 = N8(oe7(t32, "daysInYear"), t32, [e26]);
    if (typeof r91 != "number")
      throw new TypeError("calendar daysInYear result must be a positive integer");
    if (!ur4(r91) || r91 < 1)
      throw new RangeError("calendar daysInYear result must be a positive integer");
    return r91;
  }
  function Kn3(t32, e26) {
    if (typeof t32 == "string") {
      let o35 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.monthsInYear%"), o35, [e26]);
    }
    let r91 = N8(oe7(t32, "monthsInYear"), t32, [e26]);
    if (typeof r91 != "number")
      throw new TypeError("calendar monthsInYear result must be a positive integer");
    if (!ur4(r91) || r91 < 1)
      throw new RangeError("calendar monthsInYear result must be a positive integer");
    return r91;
  }
  function Xn4(t32, e26) {
    if (typeof t32 == "string") {
      let o35 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.inLeapYear%"), o35, [e26]);
    }
    let r91 = N8(oe7(t32, "inLeapYear"), t32, [e26]);
    if (typeof r91 != "boolean")
      throw new TypeError("calendar inLeapYear result must be a boolean");
    return r91;
  }
  function ir4(t32) {
    if (ce5(t32)) {
      if (Re6(t32, v8))
        return n7(t32, v8);
      if (!function(i29) {
        return !!ye6(i29) || "dateAdd" in i29 && "dateFromFields" in i29 && "dateUntil" in i29 && "day" in i29 && "dayOfWeek" in i29 && "dayOfYear" in i29 && "daysInMonth" in i29 && "daysInWeek" in i29 && "daysInYear" in i29 && "fields" in i29 && "id" in i29 && "inLeapYear" in i29 && "mergeFields" in i29 && "month" in i29 && "monthCode" in i29 && "monthDayFromFields" in i29 && "monthsInYear" in i29 && "weekOfYear" in i29 && "year" in i29 && "yearMonthFromFields" in i29 && "yearOfWeek" in i29;
      }(t32))
        throw new TypeError("expected a Temporal.Calendar or object implementing the Temporal.Calendar protocol");
      return t32;
    }
    let e26 = He5(t32);
    if (Ar4(e26))
      return Br4(e26);
    let r91;
    try {
      ({ calendar: r91 } = Nr4(e26));
    } catch {
      try {
        ({ calendar: r91 } = zo3(e26));
      } catch {
        ({ calendar: r91 } = Go4(e26));
      }
    }
    if (r91 || (r91 = "iso8601"), !Ar4(r91))
      throw new RangeError(`invalid calendar identifier ${r91}`);
    return Br4(r91);
  }
  function pn4(t32) {
    if (Re6(t32, v8))
      return n7(t32, v8);
    let { calendar: e26 } = t32;
    return e26 === void 0 ? "iso8601" : ir4(e26);
  }
  function je4(t32) {
    if (typeof t32 == "string")
      return t32;
    let e26 = t32.id;
    if (typeof e26 != "string")
      throw new TypeError("calendar.id should be a string");
    return e26;
  }
  function qt5(t32) {
    return ce5(t32) ? t32 : new (O9("%Temporal.Calendar%"))(t32);
  }
  function wn4(t32, e26) {
    return t32 === e26 ? true : je4(t32) === je4(e26);
  }
  function Qn4(t32, e26, r91) {
    if (t32 === e26)
      return;
    let o35 = je4(t32), i29 = je4(e26);
    if (o35 !== i29)
      throw new RangeError(`cannot ${r91} of ${o35} and ${i29} calendars`);
  }
  function Ta4(t32, e26) {
    if (t32 === e26)
      return e26;
    let r91 = je4(t32), o35 = je4(e26);
    if (r91 === o35 || r91 === "iso8601")
      return e26;
    if (o35 === "iso8601")
      return t32;
    throw new RangeError("irreconcilable calendars");
  }
  function xr4(t32, e26, r91, o35) {
    if (typeof t32 == "string") {
      let a27 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.dateFromFields%"), a27, [e26, r91]);
    }
    let i29 = N8(o35 ?? oe7(t32, "dateFromFields"), t32, [e26, r91]);
    if (!K7(i29))
      throw new TypeError("invalid result");
    return i29;
  }
  function mt5(t32, e26, r91) {
    if (typeof t32 == "string") {
      let i29 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.yearMonthFromFields%"), i29, [e26, r91]);
    }
    let o35 = N8(oe7(t32, "yearMonthFromFields"), t32, [e26, r91]);
    if (!re6(o35))
      throw new TypeError("invalid result");
    return o35;
  }
  function Bt4(t32, e26, r91) {
    if (typeof t32 == "string") {
      let i29 = new (O9("%Temporal.Calendar%"))(t32);
      return N8(O9("%Temporal.Calendar.prototype.monthDayFromFields%"), i29, [e26, r91]);
    }
    let o35 = N8(oe7(t32, "monthDayFromFields"), t32, [e26, r91]);
    if (!Se7(o35))
      throw new TypeError("invalid result");
    return o35;
  }
  function xe5(t32) {
    if (ce5(t32)) {
      if (k8(t32))
        return n7(t32, ie7);
      if (!function(r91) {
        return !!mr4(r91) || "getOffsetNanosecondsFor" in r91 && "getPossibleInstantsFor" in r91 && "id" in r91;
      }(t32))
        throw new TypeError("expected a Temporal.TimeZone or object implementing the Temporal.TimeZone protocol");
      return t32;
    }
    return Es3(He5(t32));
  }
  function Xt5(t32) {
    if (typeof t32 == "string")
      return t32;
    let e26 = t32.id;
    if (typeof e26 != "string")
      throw new TypeError("timeZone.id should be a string");
    return e26;
  }
  function va3(t32) {
    return ce5(t32) ? t32 : new (O9("%Temporal.TimeZone%"))(t32);
  }
  function Ea4(t32, e26) {
    return t32 === e26 ? true : Xt5(t32) === Xt5(e26);
  }
  function kt4(t32) {
    return pr4(n7(t32, $7), n7(t32, R8), n7(t32, B8), n7(t32, v8));
  }
  function Qo4(t32) {
    return new (O9("%Temporal.PlainTime%"))(n7(t32, L8), n7(t32, x6), n7(t32, q7), n7(t32, A7), n7(t32, W7), n7(t32, z6));
  }
  function Ir4(t32, e26, r91) {
    if (typeof t32 == "string") {
      let i29 = new (O9("%Temporal.TimeZone%"))(t32);
      return N8(O9("%Temporal.TimeZone.prototype.getOffsetNanosecondsFor%"), i29, [e26]);
    }
    let o35 = N8(r91 ?? oe7(t32, "getOffsetNanosecondsFor"), t32, [e26]);
    if (typeof o35 != "number")
      throw new TypeError("bad return from getOffsetNanosecondsFor");
    if (!ur4(o35) || de5(o35) >= 864e11)
      throw new RangeError("out-of-range return from getOffsetNanosecondsFor");
    return o35;
  }
  function wo4(t32, e26) {
    return eo4(Ir4(t32, e26));
  }
  function lr4(t32, e26, r91) {
    let o35 = n7(e26, j9), i29 = Ir4(t32, e26), { year: a27, month: s29, day: d25, hour: h35, minute: u30, second: l35, millisecond: m27, microsecond: f25, nanosecond: y24 } = Da3(o35);
    return { year: a27, month: s29, day: d25, hour: h35, minute: u30, second: l35, millisecond: m27, microsecond: f25, nanosecond: y24 } = ei3(a27, s29, d25, h35, u30, l35, m27, f25, y24 + i29), rr4(a27, s29, d25, h35, u30, l35, m27, f25, y24, r91);
  }
  function Qe2(t32, e26, r91) {
    return Ia3(Fn3(t32, e26), t32, e26, r91);
  }
  function Ia3(t32, e26, r91, o35) {
    let i29 = O9("%Temporal.Instant%"), a27 = t32.length;
    if (a27 === 1)
      return t32[0];
    if (a27)
      switch (o35) {
        case "compatible":
        case "earlier":
          return t32[0];
        case "later":
          return t32[a27 - 1];
        case "reject":
          throw new RangeError("multiple instants found");
      }
    let s29 = n7(r91, $7), d25 = n7(r91, R8), h35 = n7(r91, B8), u30 = n7(r91, L8), l35 = n7(r91, x6), m27 = n7(r91, q7), f25 = n7(r91, A7), y24 = n7(r91, W7), p24 = n7(r91, z6), w26 = Kr4(s29, d25, h35, u30, l35, m27, f25, y24, p24);
    if (w26 === null)
      throw new RangeError("DateTime outside of supported range");
    let g31 = new i29(S9.subtract(w26, Yr4)), T23 = new i29(S9.add(w26, Yr4)), E24 = Ir4(e26, g31), I26 = Ir4(e26, T23) - E24;
    switch (o35) {
      case "earlier": {
        let b28 = n7(r91, v8), M26 = O9("%Temporal.PlainDateTime%"), C24 = Eo4(s29, d25, h35, u30, l35, m27, f25, y24, p24, b28, 0, 0, 0, 0, 0, 0, 0, 0, 0, -I26, void 0);
        return Fn3(e26, new M26(C24.year, C24.month, C24.day, C24.hour, C24.minute, C24.second, C24.millisecond, C24.microsecond, C24.nanosecond, b28))[0];
      }
      case "compatible":
      case "later": {
        let b28 = n7(r91, v8), M26 = O9("%Temporal.PlainDateTime%"), C24 = Eo4(s29, d25, h35, u30, l35, m27, f25, y24, p24, b28, 0, 0, 0, 0, 0, 0, 0, 0, 0, I26, void 0), D24 = Fn3(e26, new M26(C24.year, C24.month, C24.day, C24.hour, C24.minute, C24.second, C24.millisecond, C24.microsecond, C24.nanosecond, b28));
        return D24[D24.length - 1];
      }
      case "reject":
        throw new RangeError("no such instant found");
    }
  }
  function Fn3(t32, e26, r91) {
    if (typeof t32 == "string") {
      let a27 = new (O9("%Temporal.TimeZone%"))(t32);
      return N8(O9("%Temporal.TimeZone.prototype.getPossibleInstantsFor%"), a27, [e26]);
    }
    let o35 = N8(r91 ?? oe7(t32, "getPossibleInstantsFor"), t32, [e26]), i29 = [];
    for (let a27 of o35) {
      if (!$e6(a27))
        throw new TypeError("bad return from getPossibleInstantsFor");
      aa3.call(i29, a27);
    }
    return i29;
  }
  function wt5(t32) {
    let e26;
    return t32 < 0 || t32 > 9999 ? e26 = (t32 < 0 ? "-" : "+") + `000000${de5(t32)}`.slice(-6) : e26 = `0000${t32}`.slice(-4), e26;
  }
  function ue6(t32) {
    return `00${t32}`.slice(-2);
  }
  function Hn4(t32, e26, r91, o35, i29) {
    if (i29 === "minute")
      return "";
    let a27 = `:${ue6(t32)}`, s29, d25 = 1e6 * e26 + 1e3 * r91 + o35;
    if (i29 === "auto") {
      if (d25 === 0)
        return a27;
      for (s29 = `${d25}`.padStart(9, "0"); s29[s29.length - 1] === "0"; )
        s29 = s29.slice(0, -1);
    } else {
      if (i29 === 0)
        return a27;
      s29 = `${d25}`.padStart(9, "0").slice(0, i29);
    }
    return `${a27}.${s29}`;
  }
  function Mi4(t32, e26, r91) {
    let o35 = e26;
    o35 === void 0 && (o35 = "UTC");
    let i29 = lr4(o35, t32, "iso8601"), a27 = wt5(n7(i29, $7)), s29 = ue6(n7(i29, R8)), d25 = ue6(n7(i29, B8)), h35 = ue6(n7(i29, L8)), u30 = ue6(n7(i29, x6)), l35 = Hn4(n7(i29, q7), n7(i29, A7), n7(i29, W7), n7(i29, z6), r91), m27 = "Z";
    return e26 !== void 0 && (m27 = ba3(Ir4(o35, t32))), `${a27}-${s29}-${d25}T${h35}:${u30}${l35}${m27}`;
  }
  function ao4(t32, e26 = "auto", r91) {
    function o35(F26) {
      return F26 <= ms4 ? F26.toString(10) : S9.BigInt(F26).toString(10);
    }
    let i29 = n7(t32, Ae6), a27 = n7(t32, Be5), s29 = n7(t32, er4), d25 = n7(t32, We3), h35 = n7(t32, ze4), u30 = n7(t32, Ge4), l35 = n7(t32, Je4), m27 = n7(t32, _e4), f25 = n7(t32, Ve4), y24 = n7(t32, Ke3), p24 = Sr4(i29, a27, s29, d25, h35, u30, l35, m27, f25, y24);
    if (r91) {
      let { unit: F26, increment: ne8, roundingMode: Q24 } = r91;
      ({ seconds: l35, milliseconds: m27, microseconds: f25, nanoseconds: y24 } = qr4(0, 0, 0, 0, 0, 0, l35, m27, f25, y24, ne8, F26, Q24));
    }
    let w26 = [];
    i29 && w26.push(`${o35(de5(i29))}Y`), a27 && w26.push(`${o35(de5(a27))}M`), s29 && w26.push(`${o35(de5(s29))}W`), d25 && w26.push(`${o35(de5(d25))}D`);
    let g31 = [];
    h35 && g31.push(`${o35(de5(h35))}H`), u30 && g31.push(`${o35(de5(u30))}M`);
    let T23 = [], E24, I26, b28, M26, C24 = Ft5(0, 0, 0, l35, m27, f25, y24, 0);
    ({ quotient: C24, remainder: E24 } = ve5(C24, te8)), { quotient: C24, remainder: I26 } = ve5(C24, te8), { quotient: M26, remainder: b28 } = ve5(C24, te8);
    let D24 = 1e6 * de5(S9.toNumber(b28)) + 1e3 * de5(S9.toNumber(I26)) + de5(S9.toNumber(E24)), Y23;
    if (e26 === "auto") {
      if (D24 !== 0)
        for (Y23 = `${D24}`.padStart(9, "0"); Y23[Y23.length - 1] === "0"; )
          Y23 = Y23.slice(0, -1);
    } else
      e26 !== 0 && (Y23 = `${D24}`.padStart(9, "0").slice(0, e26));
    return Y23 && T23.unshift(".", Y23), S9.equal(M26, ge6) && !T23.length && e26 === "auto" || T23.unshift(Tr4(M26).toString()), T23.length && g31.push(`${T23.join("")}S`), g31.length && g31.unshift("T"), w26.length || g31.length ? `${p24 < 0 ? "-" : ""}P${w26.join("")}${g31.join("")}` : "PT0S";
  }
  function $i4(t32, e26 = "auto") {
    return `${wt5(n7(t32, $7))}-${ue6(n7(t32, R8))}-${ue6(n7(t32, B8))}${Ao4(n7(t32, v8), e26)}`;
  }
  function Si4(t32, e26, r91 = "auto", o35) {
    let i29 = n7(t32, $7), a27 = n7(t32, R8), s29 = n7(t32, B8), d25 = n7(t32, L8), h35 = n7(t32, x6), u30 = n7(t32, q7), l35 = n7(t32, A7), m27 = n7(t32, W7), f25 = n7(t32, z6);
    if (o35) {
      let { unit: y24, increment: p24, roundingMode: w26 } = o35;
      ({ year: i29, month: a27, day: s29, hour: d25, minute: h35, second: u30, millisecond: l35, microsecond: m27, nanosecond: f25 } = ai3(i29, a27, s29, d25, h35, u30, l35, m27, f25, p24, y24, w26));
    }
    return `${wt5(i29)}-${ue6(a27)}-${ue6(s29)}T${ue6(d25)}:${ue6(h35)}${Hn4(u30, l35, m27, f25, e26)}${Ao4(n7(t32, v8), r91)}`;
  }
  function Yi4(t32, e26 = "auto") {
    let r91 = `${ue6(n7(t32, R8))}-${ue6(n7(t32, B8))}`, o35 = je4(n7(t32, v8));
    (e26 === "always" || e26 === "critical" || o35 !== "iso8601") && (r91 = `${wt5(n7(t32, $7))}-${r91}`);
    let i29 = Wo4(o35, e26);
    return i29 && (r91 += i29), r91;
  }
  function Ri4(t32, e26 = "auto") {
    let r91 = `${wt5(n7(t32, $7))}-${ue6(n7(t32, R8))}`, o35 = je4(n7(t32, v8));
    (e26 === "always" || e26 === "critical" || o35 !== "iso8601") && (r91 += `-${ue6(n7(t32, B8))}`);
    let i29 = Wo4(o35, e26);
    return i29 && (r91 += i29), r91;
  }
  function Bi4(t32, e26, r91 = "auto", o35 = "auto", i29 = "auto", a27) {
    let s29 = n7(t32, Le6);
    if (a27) {
      let { unit: l35, increment: m27, roundingMode: f25 } = a27, y24 = jn3(n7(t32, j9), m27, l35, f25);
      s29 = new (O9("%Temporal.Instant%"))(y24);
    }
    let d25 = n7(t32, ie7), h35 = lr4(d25, s29, "iso8601"), u30 = `${wt5(n7(h35, $7))}-${ue6(n7(h35, R8))}-${ue6(n7(h35, B8))}T${ue6(n7(h35, L8))}:${ue6(n7(h35, x6))}${Hn4(n7(h35, q7), n7(h35, A7), n7(h35, W7), n7(h35, z6), e26)}`;
    return i29 !== "never" && (u30 += ba3(Ir4(d25, s29))), o35 !== "never" && (u30 += `[${o35 === "critical" ? "!" : ""}${Xt5(d25)}]`), u30 += Ao4(n7(t32, v8), r91), u30;
  }
  function vt5(t32) {
    return Ua4.test(dn4(t32));
  }
  function Vr4(t32) {
    let e26 = Ua4.exec(dn4(t32));
    if (!e26)
      throw new RangeError(`invalid time zone offset: ${t32}`);
    return (e26[1] === "-" || e26[1] === "\u2212" ? -1 : 1) * (1e9 * (60 * (60 * +e26[2] + +(e26[3] || 0)) + +(e26[4] || 0)) + +((e26[5] || 0) + "000000000").slice(0, 9));
  }
  function Ho4(t32) {
    return vt5(t32) ? eo4(Vr4(t32)) : ma3(dn4(t32)).resolvedOptions().timeZone;
  }
  function Zr3(t32, e26) {
    let { year: r91, month: o35, day: i29, hour: a27, minute: s29, second: d25, millisecond: h35, microsecond: u30, nanosecond: l35 } = Ca4(t32, e26), m27 = r91 % 400, f25 = (r91 - m27) / 400, y24 = S9.multiply(S9.BigInt(146097), Yr4), p24 = Kr4(m27, o35, i29, a27, s29, d25, h35, u30, l35), w26 = S9.add(p24, S9.multiply(y24, S9.BigInt(f25)));
    return S9.toNumber(S9.subtract(w26, e26));
  }
  function eo4(t32) {
    let e26 = t32 < 0 ? "-" : "+", r91 = de5(t32), o35 = r91 % 1e9, i29 = nr4(r91 / 1e9) % 60, a27 = nr4(r91 / 6e10) % 60, s29 = ue6(nr4(r91 / 36e11)), d25 = ue6(a27), h35 = ue6(i29), u30 = "";
    if (o35) {
      let l35 = `${o35}`.padStart(9, "0");
      for (; l35[l35.length - 1] === "0"; )
        l35 = l35.slice(0, -1);
      u30 = `:${h35}.${l35}`;
    } else
      i29 && (u30 = `:${h35}`);
    return `${e26}${s29}:${d25}${u30}`;
  }
  function ba3(t32) {
    let e26 = S9.toNumber(cr4(S9.BigInt(t32), ha3, "halfExpand")), r91 = e26 < 0 ? "-" : "+";
    e26 = de5(e26);
    let o35 = e26 / 6e10 % 60;
    return `${r91}${ue6(nr4(e26 / 36e11))}:${ue6(o35)}`;
  }
  function Kr4(t32, e26, r91, o35, i29, a27, s29, d25, h35) {
    let u30 = /* @__PURE__ */ new Date();
    u30.setUTCHours(o35, i29, a27, s29), u30.setUTCFullYear(t32, e26 - 1, r91);
    let l35 = u30.getTime();
    if (xn4(l35))
      return null;
    let m27 = S9.multiply(S9.BigInt(l35), hr4);
    return m27 = S9.add(m27, S9.multiply(S9.BigInt(d25), te8)), m27 = S9.add(m27, S9.BigInt(h35)), S9.lessThan(m27, _t5) || S9.greaterThan(m27, St5) ? null : m27;
  }
  function Da3(t32) {
    let { quotient: e26, remainder: r91 } = ve5(t32, hr4), o35 = S9.toNumber(e26), i29 = S9.toNumber(r91);
    i29 < 0 && (i29 += 1e6, o35 -= 1);
    let a27 = nr4(i29 / 1e3) % 1e3, s29 = i29 % 1e3, d25 = new Date(o35);
    return { epochMilliseconds: o35, year: d25.getUTCFullYear(), month: d25.getUTCMonth() + 1, day: d25.getUTCDate(), hour: d25.getUTCHours(), minute: d25.getUTCMinutes(), second: d25.getUTCSeconds(), millisecond: d25.getUTCMilliseconds(), microsecond: a27, nanosecond: s29 };
  }
  function Ca4(t32, e26) {
    let { epochMilliseconds: r91, millisecond: o35, microsecond: i29, nanosecond: a27 } = Da3(e26), { year: s29, month: d25, day: h35, hour: u30, minute: l35, second: m27 } = function(y24, p24) {
      let w26 = ma3(y24).format(new Date(p24));
      return function(T23) {
        let E24 = T23.split(/[^\w]+/);
        if (E24.length !== 7)
          throw new RangeError(`expected 7 parts in "${T23}`);
        let I26 = +E24[0], b28 = +E24[1], M26 = +E24[2], C24 = E24[3].toUpperCase();
        if (C24 === "B" || C24 === "BC")
          M26 = 1 - M26;
        else if (C24 !== "A" && C24 !== "AD")
          throw new RangeError(`Unknown era ${C24} in "${T23}`);
        let D24 = +E24[4];
        D24 === 24 && (D24 = 0);
        let Y23 = +E24[5], F26 = +E24[6];
        if (!(Xe3(M26) && Xe3(I26) && Xe3(b28) && Xe3(D24) && Xe3(Y23) && Xe3(F26)))
          throw new RangeError(`Invalid number in "${T23}`);
        return { year: M26, month: I26, day: b28, hour: D24, minute: Y23, second: F26 };
      }(w26);
    }(t32, r91);
    return ei3(s29, d25, h35, u30, l35, m27, o35, i29, a27);
  }
  function ki4(t32, e26) {
    return S9.lessThan(t32, e26) ? e26 : t32;
  }
  function Oa4() {
    return S9.add(di4(), ws4);
  }
  function Ma4(t32, e26) {
    if (S9.lessThan(e26, Et5))
      return Ma4(t32, Et5);
    let r91 = S9.add(e26, la3), o35 = ki4(Oa4(), r91), i29 = ki4(Et5, e26), a27 = Zr3(t32, i29), s29 = i29, d25 = a27;
    for (; a27 === d25 && S9.lessThan(S9.BigInt(i29), o35); ) {
      if (s29 = S9.add(i29, ua3), S9.greaterThan(s29, St5))
        return null;
      d25 = Zr3(t32, s29), a27 === d25 && (i29 = s29);
    }
    return a27 === d25 ? null : La4((h35) => Zr3(t32, h35), i29, s29, a27, d25);
  }
  function go4(t32, e26) {
    let r91 = Oa4(), o35 = S9.greaterThan(e26, r91), i29 = o35 ? S9.subtract(e26, la3) : Et5;
    if (t32 === "Africa/Casablanca" || t32 === "Africa/El_Aaiun") {
      let u30 = n7(vr4("2088-01-01T00Z"), j9);
      if (S9.lessThan(u30, e26))
        return go4(t32, u30);
    }
    let a27 = S9.subtract(e26, Zt5);
    if (S9.lessThan(a27, Et5))
      return null;
    let s29 = Zr3(t32, a27), d25 = a27, h35 = s29;
    for (; s29 === h35 && S9.greaterThan(a27, i29); ) {
      if (d25 = S9.subtract(a27, ua3), S9.lessThan(d25, Et5))
        return null;
      h35 = Zr3(t32, d25), s29 === h35 && (a27 = d25);
    }
    if (s29 === h35) {
      if (o35) {
        let u30 = S9.subtract(r91, Yr4);
        return go4(t32, u30);
      }
      return null;
    }
    return La4((u30) => Zr3(t32, u30), d25, a27, h35, s29);
  }
  function Xr4(t32) {
    return t32 === void 0 ? false : t32 % 4 == 0 && (t32 % 100 != 0 || t32 % 400 == 0);
  }
  function Ur4(t32, e26) {
    return { standard: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], leapyear: [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31] }[Xr4(t32) ? "leapyear" : "standard"][e26 - 1];
  }
  function To3(t32, e26, r91) {
    let o35 = e26 + (e26 < 3 ? 10 : -2), i29 = t32 - (e26 < 3 ? 1 : 0), a27 = nr4(i29 / 100), s29 = i29 - 100 * a27, d25 = (r91 + nr4(2.6 * o35 - 0.2) + (s29 + nr4(s29 / 4)) + (nr4(a27 / 4) - 2 * a27)) % 7;
    return d25 + (d25 <= 0 ? 7 : 0);
  }
  function Nn3(t32, e26, r91) {
    let o35 = r91;
    for (let i29 = e26 - 1; i29 > 0; i29--)
      o35 += Ur4(t32, i29);
    return o35;
  }
  function Fi4(t32, e26, r91) {
    let o35 = Nn3(t32, e26, r91), i29 = To3(t32, e26, r91) || 7, a27 = To3(t32, 1, 1), s29 = nr4((o35 - i29 + 10) / 7);
    return s29 < 1 ? a27 === 5 || a27 === 6 && Xr4(t32 - 1) ? { week: 53, year: t32 - 1 } : { week: 52, year: t32 - 1 } : s29 === 53 && (Xr4(t32) ? 366 : 365) - o35 < 4 - i29 ? { week: 1, year: t32 + 1 } : { week: s29, year: t32 };
  }
  function Sr4(t32, e26, r91, o35, i29, a27, s29, d25, h35, u30) {
    for (let l35 of [t32, e26, r91, o35, i29, a27, s29, d25, h35, u30])
      if (l35 !== 0)
        return l35 < 0 ? -1 : 1;
    return 0;
  }
  function In4(t32, e26) {
    let r91 = t32, o35 = e26;
    if (!Xe3(r91) || !Xe3(o35))
      throw new RangeError("infinity is out of range");
    return o35 -= 1, r91 += nr4(o35 / 12), o35 %= 12, o35 < 0 && (o35 += 12), o35 += 1, { year: r91, month: o35 };
  }
  function ro4(t32, e26, r91) {
    let o35 = t32, i29 = e26, a27 = r91;
    if (!Xe3(a27))
      throw new RangeError("infinity is out of range");
    ({ year: o35, month: i29 } = In4(o35, i29));
    let s29 = 146097;
    if (de5(a27) > s29) {
      let u30 = it6(a27 / s29);
      o35 += 400 * u30, a27 -= u30 * s29;
    }
    let d25 = 0, h35 = i29 > 2 ? o35 : o35 - 1;
    for (; d25 = Xr4(h35) ? 366 : 365, a27 < -d25; )
      o35 -= 1, h35 -= 1, a27 += d25;
    for (h35 += 1; d25 = Xr4(h35) ? 366 : 365, a27 > d25; )
      o35 += 1, h35 += 1, a27 -= d25;
    for (; a27 < 1; )
      ({ year: o35, month: i29 } = In4(o35, i29 - 1)), a27 += Ur4(o35, i29);
    for (; a27 > Ur4(o35, i29); )
      a27 -= Ur4(o35, i29), { year: o35, month: i29 } = In4(o35, i29 + 1);
    return { year: o35, month: i29, day: a27 };
  }
  function ei3(t32, e26, r91, o35, i29, a27, s29, d25, h35) {
    let { deltaDays: u30, hour: l35, minute: m27, second: f25, millisecond: y24, microsecond: p24, nanosecond: w26 } = Pr4(o35, i29, a27, s29, d25, h35), { year: g31, month: T23, day: E24 } = ro4(t32, e26, r91 + u30);
    return { year: g31, month: T23, day: E24, hour: l35, minute: m27, second: f25, millisecond: y24, microsecond: p24, nanosecond: w26 };
  }
  function Pr4(t32, e26, r91, o35, i29, a27) {
    let s29, d25 = S9.BigInt(t32), h35 = S9.BigInt(e26), u30 = S9.BigInt(r91), l35 = S9.BigInt(o35), m27 = S9.BigInt(i29), f25 = S9.BigInt(a27);
    return { quotient: s29, remainder: f25 } = nt5(f25, te8), m27 = S9.add(m27, s29), { quotient: s29, remainder: m27 } = nt5(m27, te8), l35 = S9.add(l35, s29), { quotient: s29, remainder: l35 } = nt5(l35, te8), u30 = S9.add(u30, s29), { quotient: s29, remainder: u30 } = nt5(u30, Mr4), h35 = S9.add(h35, s29), { quotient: s29, remainder: h35 } = nt5(h35, Mr4), d25 = S9.add(d25, s29), { quotient: s29, remainder: d25 } = nt5(d25, da3), { deltaDays: S9.toNumber(s29), hour: S9.toNumber(d25), minute: S9.toNumber(h35), second: S9.toNumber(u30), millisecond: S9.toNumber(l35), microsecond: S9.toNumber(m27), nanosecond: S9.toNumber(f25) };
  }
  function Ft5(t32, e26, r91, o35, i29, a27, s29, d25) {
    let h35 = S9.BigInt(t32), u30 = S9.BigInt(s29);
    t32 !== 0 && (u30 = S9.subtract(S9.BigInt(s29), S9.BigInt(d25)));
    let l35 = S9.add(S9.BigInt(e26), S9.multiply(h35, S9.BigInt(24))), m27 = S9.add(S9.BigInt(r91), S9.multiply(l35, Mr4)), f25 = S9.add(S9.BigInt(o35), S9.multiply(m27, Mr4)), y24 = S9.add(S9.BigInt(i29), S9.multiply(f25, te8)), p24 = S9.add(S9.BigInt(a27), S9.multiply(y24, te8));
    return S9.add(S9.BigInt(u30), S9.multiply(p24, te8));
  }
  function ri3(t32, e26) {
    let r91 = O9("%Temporal.Instant%"), o35 = $t5(S9.toNumber(t32)), i29 = S9.BigInt(t32), a27 = 864e11;
    if (o35 === 0)
      return { days: 0, nanoseconds: ge6, dayLengthNs: a27 };
    if (!k8(e26)) {
      let I26;
      return { quotient: I26, remainder: i29 } = ve5(i29, S9.BigInt(a27)), { days: S9.toNumber(I26), nanoseconds: i29, dayLengthNs: a27 };
    }
    let s29 = n7(e26, j9), d25 = n7(e26, Le6), h35 = S9.add(s29, i29), u30 = new r91(h35), l35 = n7(e26, ie7), m27 = n7(e26, v8), f25 = lr4(l35, d25, m27), y24 = lr4(l35, u30, m27), { days: p24 } = ii4(n7(f25, $7), n7(f25, R8), n7(f25, B8), n7(f25, L8), n7(f25, x6), n7(f25, q7), n7(f25, A7), n7(f25, W7), n7(f25, z6), n7(y24, $7), n7(y24, R8), n7(y24, B8), n7(y24, L8), n7(y24, x6), n7(y24, q7), n7(y24, A7), n7(y24, W7), n7(y24, z6), m27, "day", qe4(null)), w26 = yr3(d25, l35, m27, 0, 0, 0, p24, 0, 0, 0, 0, 0, 0), g31 = S9.BigInt(p24);
    if (o35 === 1)
      for (; S9.greaterThan(g31, ge6) && S9.greaterThan(w26, h35); )
        g31 = S9.subtract(g31, Zt5), w26 = yr3(d25, l35, m27, 0, 0, 0, S9.toNumber(g31), 0, 0, 0, 0, 0, 0);
    i29 = S9.subtract(h35, w26);
    let T23 = false, E24 = new r91(w26);
    do {
      let I26 = yr3(E24, l35, m27, 0, 0, 0, o35, 0, 0, 0, 0, 0, 0), b28 = n7(E24, j9);
      a27 = S9.toNumber(S9.subtract(I26, b28)), T23 = S9.greaterThanOrEqual(S9.multiply(S9.subtract(i29, S9.BigInt(a27)), S9.BigInt(o35)), ge6), T23 && (i29 = S9.subtract(i29, S9.BigInt(a27)), E24 = new r91(I26), g31 = S9.add(g31, S9.BigInt(o35)));
    } while (T23);
    if (!fr4(g31) && vi4(g31) !== o35)
      throw new RangeError("Time zone or calendar converted nanoseconds into a number of days with the opposite sign");
    if (!fr4(i29) && vi4(i29) !== o35)
      throw $n3(i29) && o35 === 1 ? new Error("assert not reached") : new RangeError("Time zone or calendar ended up with a remainder of nanoseconds with the opposite sign");
    if (S9.greaterThanOrEqual(Tr4(i29), Tr4(S9.BigInt(a27))))
      throw new Error("assert not reached");
    return { days: S9.toNumber(g31), nanoseconds: i29, dayLengthNs: de5(a27) };
  }
  function gr4(t32, e26, r91, o35, i29, a27, s29, d25, h35) {
    let u30 = $a4(t32, e26, r91, o35, i29, a27, s29, d25, h35);
    if (u30 === "positive overflow" || u30 === "negative overflow")
      throw new RangeError("Duration out of range");
    return u30;
  }
  function $a4(t32, e26, r91, o35, i29, a27, s29, d25, h35) {
    let u30, l35, m27, f25, y24, p24, w26 = t32;
    if (k8(h35)) {
      let D24 = yr3(n7(h35, Le6), n7(h35, ie7), n7(h35, v8), 0, 0, 0, w26, e26, r91, o35, i29, a27, s29), Y23 = n7(h35, j9);
      u30 = S9.subtract(D24, Y23);
    } else
      u30 = Ft5(w26, e26, r91, o35, i29, a27, s29, 0);
    d25 === "year" || d25 === "month" || d25 === "week" || d25 === "day" ? { days: w26, nanoseconds: u30 } = ri3(u30, h35) : w26 = 0;
    let g31 = S9.lessThan(u30, ge6) ? -1 : 1;
    switch (u30 = Tr4(u30), l35 = m27 = f25 = y24 = p24 = ge6, d25) {
      case "year":
      case "month":
      case "week":
      case "day":
      case "hour":
        ({ quotient: l35, remainder: u30 } = ve5(u30, te8)), { quotient: m27, remainder: l35 } = ve5(l35, te8), { quotient: f25, remainder: m27 } = ve5(m27, te8), { quotient: y24, remainder: f25 } = ve5(f25, Mr4), { quotient: p24, remainder: y24 } = ve5(y24, Mr4);
        break;
      case "minute":
        ({ quotient: l35, remainder: u30 } = ve5(u30, te8)), { quotient: m27, remainder: l35 } = ve5(l35, te8), { quotient: f25, remainder: m27 } = ve5(m27, te8), { quotient: y24, remainder: f25 } = ve5(f25, Mr4);
        break;
      case "second":
        ({ quotient: l35, remainder: u30 } = ve5(u30, te8)), { quotient: m27, remainder: l35 } = ve5(l35, te8), { quotient: f25, remainder: m27 } = ve5(m27, te8);
        break;
      case "millisecond":
        ({ quotient: l35, remainder: u30 } = ve5(u30, te8)), { quotient: m27, remainder: l35 } = ve5(l35, te8);
        break;
      case "microsecond":
        ({ quotient: l35, remainder: u30 } = ve5(u30, te8));
        break;
      case "nanosecond":
        break;
      default:
        throw new Error("assert not reached");
    }
    let T23 = S9.toNumber(p24) * g31, E24 = S9.toNumber(y24) * g31, I26 = S9.toNumber(f25) * g31, b28 = S9.toNumber(m27) * g31, M26 = S9.toNumber(l35) * g31, C24 = S9.toNumber(u30) * g31;
    for (let D24 of [w26, T23, E24, I26, b28, M26, C24])
      if (!Xe3(D24))
        return g31 === 1 ? "positive overflow" : "negative overflow";
    return { days: w26, hours: T23, minutes: E24, seconds: I26, milliseconds: b28, microseconds: M26, nanoseconds: C24 };
  }
  function vn4(t32, e26, r91, o35, i29, a27) {
    let s29 = O9("%Temporal.Duration%"), d25 = Sr4(t32, e26, r91, o35, 0, 0, 0, 0, 0, 0);
    if (d25 === 0)
      return { years: t32, months: e26, weeks: r91, days: o35 };
    let h35 = S9.BigInt(d25), u30, l35, m27 = S9.BigInt(t32), f25 = S9.BigInt(e26), y24 = S9.BigInt(r91), p24 = S9.BigInt(o35);
    a27 && (l35 = ae6(a27), u30 = n7(l35, v8));
    let w26 = new s29(d25), g31 = new s29(0, d25), T23 = new s29(0, 0, d25);
    switch (i29) {
      case "year":
        break;
      case "month":
        {
          if (!u30)
            throw new RangeError("a starting point is required for months balancing");
          let E24, I26;
          for (typeof u30 != "string" && (E24 = oe7(u30, "dateAdd"), I26 = oe7(u30, "dateUntil")); !fr4(m27); ) {
            let b28 = Ne6(u30, l35, w26, void 0, E24), M26 = qe4(null);
            M26.largestUnit = "month";
            let C24 = _r3(u30, l35, b28, M26, I26), D24 = S9.BigInt(n7(C24, Be5));
            l35 = b28, f25 = S9.add(f25, D24), m27 = S9.subtract(m27, h35);
          }
        }
        break;
      case "week": {
        if (!u30)
          throw new RangeError("a starting point is required for weeks balancing");
        let E24 = typeof u30 != "string" ? oe7(u30, "dateAdd") : void 0;
        for (; !fr4(m27); ) {
          let I26;
          ({ relativeTo: l35, days: I26 } = Ue5(u30, l35, w26, E24)), p24 = S9.add(p24, S9.BigInt(I26)), m27 = S9.subtract(m27, h35);
        }
        for (; !fr4(f25); ) {
          let I26;
          ({ relativeTo: l35, days: I26 } = Ue5(u30, l35, g31, E24)), p24 = S9.add(p24, S9.BigInt(I26)), f25 = S9.subtract(f25, h35);
        }
        break;
      }
      default: {
        if (fr4(m27) && fr4(f25) && fr4(y24))
          break;
        if (!u30)
          throw new RangeError("a starting point is required for balancing calendar units");
        let E24 = typeof u30 != "string" ? oe7(u30, "dateAdd") : void 0;
        for (; !fr4(m27); ) {
          let I26;
          ({ relativeTo: l35, days: I26 } = Ue5(u30, l35, w26, E24)), p24 = S9.add(p24, S9.BigInt(I26)), m27 = S9.subtract(m27, h35);
        }
        for (; !fr4(f25); ) {
          let I26;
          ({ relativeTo: l35, days: I26 } = Ue5(u30, l35, g31, E24)), p24 = S9.add(p24, S9.BigInt(I26)), f25 = S9.subtract(f25, h35);
        }
        for (; !fr4(y24); ) {
          let I26;
          ({ relativeTo: l35, days: I26 } = Ue5(u30, l35, T23, E24)), p24 = S9.add(p24, S9.BigInt(I26)), y24 = S9.subtract(y24, h35);
        }
        break;
      }
    }
    return { years: S9.toNumber(m27), months: S9.toNumber(f25), weeks: S9.toNumber(y24), days: S9.toNumber(p24) };
  }
  function Ni4(t32, e26, r91, o35, i29) {
    if (k8(t32)) {
      let a27 = n7(t32, Le6), s29 = n7(t32, ie7), d25 = n7(t32, v8), h35 = Ir4(s29, a27), u30 = yr3(a27, s29, d25, e26, r91, o35, i29, 0, 0, 0, 0, 0, 0);
      return Ir4(s29, new (O9("%Temporal.Instant%"))(u30)) - h35;
    }
    return 0;
  }
  function Sa3(t32) {
    return new (O9("%Temporal.Duration%"))(-n7(t32, Ae6), -n7(t32, Be5), -n7(t32, er4), -n7(t32, We3), -n7(t32, ze4), -n7(t32, Ge4), -n7(t32, Je4), -n7(t32, _e4), -n7(t32, Ve4), -n7(t32, Ke3));
  }
  function tr4(t32, e26, r91) {
    return hs4(r91, ls4(e26, t32));
  }
  function Ya4(t32, e26, r91) {
    let o35 = tr4(e26, 1, 12);
    return { year: t32, month: o35, day: tr4(r91, 1, Ur4(t32, o35)) };
  }
  function Pe4(t32, e26, r91) {
    if (t32 < e26 || t32 > r91)
      throw new RangeError(`value out of range: ${e26} <= ${t32} <= ${r91}`);
  }
  function Rr3(t32, e26, r91) {
    Pe4(e26, 1, 12), Pe4(r91, 1, Ur4(t32, e26));
  }
  function Ra4(t32, e26, r91) {
    Ba3(t32, e26, r91, 12, 0, 0, 0, 0, 0);
  }
  function to4(t32, e26, r91, o35, i29, a27) {
    Pe4(t32, 0, 23), Pe4(e26, 0, 59), Pe4(r91, 0, 59), Pe4(o35, 0, 999), Pe4(i29, 0, 999), Pe4(a27, 0, 999);
  }
  function ti3(t32, e26, r91, o35, i29, a27, s29, d25, h35) {
    Rr3(t32, e26, r91), to4(o35, i29, a27, s29, d25, h35);
  }
  function Ba3(t32, e26, r91, o35, i29, a27, s29, d25, h35) {
    if (Pe4(t32, On3, Mn3), t32 === On3 && Kr4(t32, e26, r91 + 1, o35, i29, a27, s29, d25, h35 - 1) == null || t32 === Mn3 && Kr4(t32, e26, r91 - 1, o35, i29, a27, s29, d25, h35 + 1) == null)
      throw new RangeError("DateTime outside of supported range");
  }
  function ot5(t32) {
    if (S9.lessThan(t32, _t5) || S9.greaterThan(t32, St5))
      throw new RangeError("Instant outside of supported range");
  }
  function Pn3(t32, e26, r91, o35, i29, a27, s29, d25, h35, u30) {
    let l35 = Sr4(t32, e26, r91, o35, i29, a27, s29, d25, h35, u30);
    for (let m27 of [t32, e26, r91, o35, i29, a27, s29, d25, h35, u30]) {
      if (!Xe3(m27))
        throw new RangeError("infinite values not allowed as duration fields");
      let f25 = $t5(m27);
      if (f25 !== 0 && f25 !== l35)
        throw new RangeError("mixed-sign values not allowed as duration fields");
    }
  }
  function ni3(t32, e26, r91, o35, i29, a27, s29) {
    switch (s29) {
      case "year":
      case "month": {
        let d25 = -Jr4(t32, e26, r91, o35, i29, a27);
        if (d25 === 0)
          return { years: 0, months: 0, weeks: 0, days: 0 };
        let h35 = { year: t32, month: e26, day: r91 }, u30 = { year: o35, month: i29, day: a27 }, l35 = u30.year - h35.year, m27 = st5(t32, e26, r91, l35, 0, 0, 0, "constrain"), f25 = -Jr4(m27.year, m27.month, m27.day, o35, i29, a27);
        if (f25 === 0)
          return s29 === "year" ? { years: l35, months: 0, weeks: 0, days: 0 } : { years: 0, months: 12 * l35, weeks: 0, days: 0 };
        let y24 = u30.month - h35.month;
        if (f25 !== d25 && (l35 -= d25, y24 += 12 * d25), m27 = st5(t32, e26, r91, l35, y24, 0, 0, "constrain"), f25 = -Jr4(m27.year, m27.month, m27.day, o35, i29, a27), f25 === 0)
          return s29 === "year" ? { years: l35, months: y24, weeks: 0, days: 0 } : { years: 0, months: y24 + 12 * l35, weeks: 0, days: 0 };
        f25 !== d25 && (y24 -= d25, y24 === -d25 && (l35 -= d25, y24 = 11 * d25), m27 = st5(t32, e26, r91, l35, y24, 0, 0, "constrain"));
        let p24 = 0;
        return p24 = m27.month === u30.month ? u30.day - m27.day : d25 < 0 ? -m27.day - (Ur4(u30.year, u30.month) - u30.day) : u30.day + (Ur4(m27.year, m27.month) - m27.day), s29 === "month" && (y24 += 12 * l35, l35 = 0), { years: l35, months: y24, weeks: 0, days: p24 };
      }
      case "week":
      case "day": {
        let d25, h35, u30;
        Jr4(t32, e26, r91, o35, i29, a27) < 0 ? (h35 = { year: t32, month: e26, day: r91 }, d25 = { year: o35, month: i29, day: a27 }, u30 = 1) : (h35 = { year: o35, month: i29, day: a27 }, d25 = { year: t32, month: e26, day: r91 }, u30 = -1);
        let l35 = Nn3(d25.year, d25.month, d25.day) - Nn3(h35.year, h35.month, h35.day);
        for (let f25 = h35.year; f25 < d25.year; ++f25)
          l35 += Xr4(f25) ? 366 : 365;
        let m27 = 0;
        return s29 === "week" && (m27 = nr4(l35 / 7), l35 %= 7), m27 *= u30, l35 *= u30, { years: 0, months: 0, weeks: m27, days: l35 };
      }
      default:
        throw new Error("assert not reached");
    }
  }
  function ka4(t32, e26, r91, o35, i29, a27, s29, d25, h35, u30, l35, m27) {
    let f25 = s29 - t32, y24 = d25 - e26, p24 = h35 - r91, w26 = u30 - o35, g31 = l35 - i29, T23 = m27 - a27, E24 = Sr4(0, 0, 0, 0, f25, y24, p24, w26, g31, T23);
    f25 *= E24, y24 *= E24, p24 *= E24, w26 *= E24, g31 *= E24, T23 *= E24;
    let I26 = 0;
    if ({ deltaDays: I26, hour: f25, minute: y24, second: p24, millisecond: w26, microsecond: g31, nanosecond: T23 } = Pr4(f25, y24, p24, w26, g31, T23), I26 != 0)
      throw new Error("assertion failure in DifferenceTime: _bt_.[[Days]] should be 0");
    return f25 *= E24, y24 *= E24, p24 *= E24, w26 *= E24, g31 *= E24, T23 *= E24, { hours: f25, minutes: y24, seconds: p24, milliseconds: w26, microseconds: g31, nanoseconds: T23 };
  }
  function oi3(t32, e26, r91, o35, i29, a27) {
    let s29 = S9.subtract(e26, t32), d25 = 0, h35 = 0, u30 = S9.toNumber(S9.remainder(s29, te8)), l35 = S9.toNumber(S9.remainder(S9.divide(s29, te8), te8)), m27 = S9.toNumber(S9.remainder(S9.divide(s29, hr4), te8)), f25 = S9.toNumber(S9.divide(s29, $r3));
    return { hours: d25, minutes: h35, seconds: f25, milliseconds: m27, microseconds: l35, nanoseconds: u30 } = qr4(0, 0, 0, 0, 0, 0, f25, m27, l35, u30, r91, o35, a27), gr4(0, d25, h35, f25, m27, l35, u30, i29);
  }
  function ii4(t32, e26, r91, o35, i29, a27, s29, d25, h35, u30, l35, m27, f25, y24, p24, w26, g31, T23, E24, I26, b28) {
    let M26 = t32, C24 = e26, D24 = r91, { hours: Y23, minutes: F26, seconds: ne8, milliseconds: Q24, microseconds: H26, nanoseconds: P25 } = ka4(o35, i29, a27, s29, d25, h35, f25, y24, p24, w26, g31, T23), J25 = Sr4(0, 0, 0, 0, Y23, F26, ne8, Q24, H26, P25);
    Jr4(u30, l35, m27, M26, C24, D24) === -J25 && ({ year: M26, month: C24, day: D24 } = ro4(M26, C24, D24 - J25), { hours: Y23, minutes: F26, seconds: ne8, milliseconds: Q24, microseconds: H26, nanoseconds: P25 } = gr4(-J25, Y23, F26, ne8, Q24, H26, P25, I26));
    let S25 = pr4(M26, C24, D24, E24), Z23 = pr4(u30, l35, m27, E24), V24 = lt5("day", I26), Ie8 = tt5(b28);
    Ie8.largestUnit = V24;
    let { years: Ce9, months: Oe10, weeks: Te10, days: ar5 } = _r3(E24, S25, Z23, Ie8);
    return { days: ar5, hours: Y23, minutes: F26, seconds: ne8, milliseconds: Q24, microseconds: H26, nanoseconds: P25 } = gr4(ar5, Y23, F26, ne8, Q24, H26, P25, I26), { years: Ce9, months: Oe10, weeks: Te10, days: ar5, hours: Y23, minutes: F26, seconds: ne8, milliseconds: Q24, microseconds: H26, nanoseconds: P25 };
  }
  function Fa4(t32, e26, r91, o35, i29, a27) {
    let s29 = S9.subtract(e26, t32);
    if (S9.equal(s29, ge6))
      return { years: 0, months: 0, weeks: 0, days: 0, hours: 0, minutes: 0, seconds: 0, milliseconds: 0, microseconds: 0, nanoseconds: 0 };
    let d25 = O9("%Temporal.Instant%"), h35 = new d25(t32), u30 = new d25(e26), l35 = lr4(r91, h35, o35), m27 = lr4(r91, u30, o35), { years: f25, months: y24, weeks: p24, days: w26 } = ii4(n7(l35, $7), n7(l35, R8), n7(l35, B8), n7(l35, L8), n7(l35, x6), n7(l35, q7), n7(l35, A7), n7(l35, W7), n7(l35, z6), n7(m27, $7), n7(m27, R8), n7(m27, B8), n7(m27, L8), n7(m27, x6), n7(m27, q7), n7(m27, A7), n7(m27, W7), n7(m27, z6), o35, i29, a27), g31 = yr3(h35, r91, o35, f25, y24, p24, 0, 0, 0, 0, 0, 0, 0), T23 = S9.subtract(e26, g31), E24 = Fe4(g31, r91, o35);
    ({ nanoseconds: T23, days: w26 } = ri3(T23, E24));
    let { hours: I26, minutes: b28, seconds: M26, milliseconds: C24, microseconds: D24, nanoseconds: Y23 } = gr4(0, 0, 0, 0, 0, 0, S9.toNumber(T23), "hour");
    return { years: f25, months: y24, weeks: p24, days: w26, hours: I26, minutes: b28, seconds: M26, milliseconds: C24, microseconds: D24, nanoseconds: Y23 };
  }
  function At5(t32, e26, r91, o35, i29, a27) {
    let s29 = cn4.reduce((y24, p24) => {
      let w26 = p24[0], g31 = p24[1], T23 = p24[2];
      return r91 !== "datetime" && T23 !== r91 || o35.includes(g31) || y24.push(g31, w26), y24;
    }, []), d25 = or4(e26, "largestUnit", r91, "auto");
    if (o35.includes(d25))
      throw new RangeError(`largestUnit must be one of ${s29.join(", ")}, not ${d25}`);
    let h35 = Lt5(e26), u30 = Er4(e26, "trunc");
    t32 === "since" && (u30 = function(p24) {
      switch (p24) {
        case "ceil":
          return "floor";
        case "floor":
          return "ceil";
        case "halfCeil":
          return "halfFloor";
        case "halfFloor":
          return "halfCeil";
        default:
          return p24;
      }
    }(u30));
    let l35 = or4(e26, "smallestUnit", r91, i29);
    if (o35.includes(l35))
      throw new RangeError(`smallestUnit must be one of ${s29.join(", ")}, not ${l35}`);
    let m27 = lt5(a27, l35);
    if (d25 === "auto" && (d25 = m27), lt5(d25, l35) !== d25)
      throw new RangeError(`largestUnit ${d25} cannot be smaller than smallestUnit ${l35}`);
    let f25 = { hour: 24, minute: 60, second: 60, millisecond: 1e3, microsecond: 1e3, nanosecond: 1e3 }[l35];
    return f25 !== void 0 && xt5(h35, f25, false), { largestUnit: d25, roundingIncrement: h35, roundingMode: u30, smallestUnit: l35 };
  }
  function Pi4(t32, e26, r91, o35) {
    let i29 = t32 === "since" ? -1 : 1, a27 = vr4(r91), s29 = At5(t32, tt5(o35), "time", [], "nanosecond", "second"), d25 = n7(e26, j9), h35 = n7(a27, j9), { hours: u30, minutes: l35, seconds: m27, milliseconds: f25, microseconds: y24, nanoseconds: p24 } = oi3(d25, h35, s29.roundingIncrement, s29.smallestUnit, s29.largestUnit, s29.roundingMode);
    return new (O9("%Temporal.Duration%"))(0, 0, 0, 0, i29 * u30, i29 * l35, i29 * m27, i29 * f25, i29 * y24, i29 * p24);
  }
  function ji4(t32, e26, r91, o35) {
    let i29 = t32 === "since" ? -1 : 1, a27 = ae6(r91), s29 = n7(e26, v8);
    Qn4(s29, n7(a27, v8), "compute difference between dates");
    let d25 = tt5(o35), h35 = At5(t32, d25, "date", [], "day", "day");
    d25.largestUnit = h35.largestUnit;
    let { years: u30, months: l35, weeks: m27, days: f25 } = _r3(s29, e26, a27, d25);
    return h35.smallestUnit === "day" && h35.roundingIncrement === 1 || ({ years: u30, months: l35, weeks: m27, days: f25 } = qr4(u30, l35, m27, f25, 0, 0, 0, 0, 0, 0, h35.roundingIncrement, h35.smallestUnit, h35.roundingMode, e26)), new (O9("%Temporal.Duration%"))(i29 * u30, i29 * l35, i29 * m27, i29 * f25, 0, 0, 0, 0, 0, 0);
  }
  function Zi4(t32, e26, r91, o35) {
    let i29 = t32 === "since" ? -1 : 1, a27 = at5(r91), s29 = n7(e26, v8);
    Qn4(s29, n7(a27, v8), "compute difference between dates");
    let d25 = tt5(o35), h35 = At5(t32, d25, "datetime", [], "nanosecond", "day"), { years: u30, months: l35, weeks: m27, days: f25, hours: y24, minutes: p24, seconds: w26, milliseconds: g31, microseconds: T23, nanoseconds: E24 } = ii4(n7(e26, $7), n7(e26, R8), n7(e26, B8), n7(e26, L8), n7(e26, x6), n7(e26, q7), n7(e26, A7), n7(e26, W7), n7(e26, z6), n7(a27, $7), n7(a27, R8), n7(a27, B8), n7(a27, L8), n7(a27, x6), n7(a27, q7), n7(a27, A7), n7(a27, W7), n7(a27, z6), s29, h35.largestUnit, d25), I26 = kt4(e26);
    return { years: u30, months: l35, weeks: m27, days: f25, hours: y24, minutes: p24, seconds: w26, milliseconds: g31, microseconds: T23, nanoseconds: E24 } = qr4(u30, l35, m27, f25, y24, p24, w26, g31, T23, E24, h35.roundingIncrement, h35.smallestUnit, h35.roundingMode, I26), { days: f25, hours: y24, minutes: p24, seconds: w26, milliseconds: g31, microseconds: T23, nanoseconds: E24 } = gr4(f25, y24, p24, w26, g31, T23, E24, h35.largestUnit), new (O9("%Temporal.Duration%"))(i29 * u30, i29 * l35, i29 * m27, i29 * f25, i29 * y24, i29 * p24, i29 * w26, i29 * g31, i29 * T23, i29 * E24);
  }
  function Ui3(t32, e26, r91, o35) {
    let i29 = t32 === "since" ? -1 : 1, a27 = jr4(r91), s29 = At5(t32, tt5(o35), "time", [], "nanosecond", "hour"), { hours: d25, minutes: h35, seconds: u30, milliseconds: l35, microseconds: m27, nanoseconds: f25 } = ka4(n7(e26, L8), n7(e26, x6), n7(e26, q7), n7(e26, A7), n7(e26, W7), n7(e26, z6), n7(a27, L8), n7(a27, x6), n7(a27, q7), n7(a27, A7), n7(a27, W7), n7(a27, z6));
    return { hours: d25, minutes: h35, seconds: u30, milliseconds: l35, microseconds: m27, nanoseconds: f25 } = qr4(0, 0, 0, 0, d25, h35, u30, l35, m27, f25, s29.roundingIncrement, s29.smallestUnit, s29.roundingMode), { hours: d25, minutes: h35, seconds: u30, milliseconds: l35, microseconds: m27, nanoseconds: f25 } = gr4(0, d25, h35, u30, l35, m27, f25, s29.largestUnit), new (O9("%Temporal.Duration%"))(0, 0, 0, 0, i29 * d25, i29 * h35, i29 * u30, i29 * l35, i29 * m27, i29 * f25);
  }
  function Li4(t32, e26, r91, o35) {
    let i29 = t32 === "since" ? -1 : 1, a27 = Wt5(r91), s29 = n7(e26, v8);
    Qn4(s29, n7(a27, v8), "compute difference between months");
    let d25 = tt5(o35), h35 = At5(t32, d25, "date", ["week", "day"], "month", "year");
    d25.largestUnit = h35.largestUnit;
    let u30 = De4(s29, ["monthCode", "year"]), l35 = _7(e26, u30, []);
    l35.day = 1;
    let m27 = xr4(s29, l35), f25 = _7(a27, u30, []);
    f25.day = 1;
    let y24 = xr4(s29, f25), { years: p24, months: w26 } = _r3(s29, m27, y24, d25);
    return h35.smallestUnit === "month" && h35.roundingIncrement === 1 || ({ years: p24, months: w26 } = qr4(p24, w26, 0, 0, 0, 0, 0, 0, 0, 0, h35.roundingIncrement, h35.smallestUnit, h35.roundingMode, m27)), new (O9("%Temporal.Duration%"))(i29 * p24, i29 * w26, 0, 0, 0, 0, 0, 0, 0, 0);
  }
  function xi4(t32, e26, r91, o35) {
    let i29 = t32 === "since" ? -1 : 1, a27 = zt5(r91), s29 = n7(e26, v8);
    Qn4(s29, n7(a27, v8), "compute difference between dates");
    let d25 = tt5(o35), h35 = At5(t32, d25, "datetime", [], "nanosecond", "hour");
    d25.largestUnit = h35.largestUnit;
    let u30 = n7(e26, j9), l35 = n7(a27, j9), m27, f25, y24, p24, w26, g31, T23, E24, I26, b28;
    if (h35.largestUnit !== "year" && h35.largestUnit !== "month" && h35.largestUnit !== "week" && h35.largestUnit !== "day")
      m27 = 0, f25 = 0, y24 = 0, p24 = 0, { hours: w26, minutes: g31, seconds: T23, milliseconds: E24, microseconds: I26, nanoseconds: b28 } = oi3(u30, l35, h35.roundingIncrement, h35.smallestUnit, h35.largestUnit, h35.roundingMode);
    else {
      let M26 = n7(e26, ie7);
      if (!Ea4(M26, n7(a27, ie7)))
        throw new RangeError("When calculating difference between time zones, largestUnit must be 'hours' or smaller because day lengths can vary between time zones due to DST or time zone offset changes.");
      ({ years: m27, months: f25, weeks: y24, days: p24, hours: w26, minutes: g31, seconds: T23, milliseconds: E24, microseconds: I26, nanoseconds: b28 } = Fa4(u30, l35, M26, s29, h35.largestUnit, d25)), { years: m27, months: f25, weeks: y24, days: p24, hours: w26, minutes: g31, seconds: T23, milliseconds: E24, microseconds: I26, nanoseconds: b28 } = qr4(m27, f25, y24, p24, w26, g31, T23, E24, I26, b28, h35.roundingIncrement, h35.smallestUnit, h35.roundingMode, e26), { years: m27, months: f25, weeks: y24, days: p24, hours: w26, minutes: g31, seconds: T23, milliseconds: E24, microseconds: I26, nanoseconds: b28 } = Za4(m27, f25, y24, p24, w26, g31, T23, E24, I26, b28, h35.roundingIncrement, h35.smallestUnit, h35.roundingMode, e26);
    }
    return new (O9("%Temporal.Duration%"))(i29 * m27, i29 * f25, i29 * y24, i29 * p24, i29 * w26, i29 * g31, i29 * T23, i29 * E24, i29 * I26, i29 * b28);
  }
  function st5(t32, e26, r91, o35, i29, a27, s29, d25) {
    let h35 = t32, u30 = e26, l35 = r91, m27 = a27, f25 = s29;
    return h35 += o35, u30 += i29, { year: h35, month: u30 } = In4(h35, u30), { year: h35, month: u30, day: l35 } = Yn4(h35, u30, l35, d25), f25 += 7 * m27, l35 += f25, { year: h35, month: u30, day: l35 } = ro4(h35, u30, l35), { year: h35, month: u30, day: l35 };
  }
  function Na4(t32, e26, r91, o35, i29, a27, s29, d25, h35, u30, l35, m27) {
    let f25 = t32, y24 = e26, p24 = r91, w26 = o35, g31 = i29, T23 = a27;
    f25 += s29, y24 += d25, p24 += h35, w26 += u30, g31 += l35, T23 += m27;
    let E24 = 0;
    return { deltaDays: E24, hour: f25, minute: y24, second: p24, millisecond: w26, microsecond: g31, nanosecond: T23 } = Pr4(f25, y24, p24, w26, g31, T23), { deltaDays: E24, hour: f25, minute: y24, second: p24, millisecond: w26, microsecond: g31, nanosecond: T23 };
  }
  function Pa4(t32, e26, r91, o35, i29, a27, s29, d25, h35, u30, l35, m27, f25, y24, p24, w26, g31, T23, E24, I26, b28) {
    let M26 = lt5(po4(t32, e26, r91, o35, i29, a27, s29, d25, h35, u30), po4(l35, m27, f25, y24, p24, w26, g31, T23, E24, I26)), C24, D24, Y23, F26, ne8, Q24, H26, P25, J25, S25;
    if (b28)
      if (K7(b28)) {
        let Z23 = O9("%Temporal.Duration%"), V24 = n7(b28, v8), Ie8 = new Z23(t32, e26, r91, o35, 0, 0, 0, 0, 0, 0), Ce9 = new Z23(l35, m27, f25, y24, 0, 0, 0, 0, 0, 0), Oe10 = typeof V24 != "string" ? oe7(V24, "dateAdd") : void 0, Te10 = Ne6(V24, b28, Ie8, void 0, Oe10), ar5 = Ne6(V24, Te10, Ce9, void 0, Oe10), br5 = lt5("day", M26), Dr6 = qe4(null);
        Dr6.largestUnit = br5, { years: C24, months: D24, weeks: Y23, days: F26 } = _r3(V24, b28, ar5, Dr6), { days: F26, hours: ne8, minutes: Q24, seconds: H26, milliseconds: P25, microseconds: J25, nanoseconds: S25 } = gr4(F26, S9.add(S9.BigInt(i29), S9.BigInt(p24)), S9.add(S9.BigInt(a27), S9.BigInt(w26)), S9.add(S9.BigInt(s29), S9.BigInt(g31)), S9.add(S9.BigInt(d25), S9.BigInt(T23)), S9.add(S9.BigInt(h35), S9.BigInt(E24)), S9.add(S9.BigInt(u30), S9.BigInt(I26)), M26);
      } else {
        let Z23 = O9("%Temporal.Instant%"), V24 = n7(b28, ie7), Ie8 = n7(b28, v8), Ce9 = yr3(n7(b28, Le6), V24, Ie8, t32, e26, r91, o35, i29, a27, s29, d25, h35, u30), Oe10 = yr3(new Z23(Ce9), V24, Ie8, l35, m27, f25, y24, p24, w26, g31, T23, E24, I26);
        M26 !== "year" && M26 !== "month" && M26 !== "week" && M26 !== "day" ? (C24 = 0, D24 = 0, Y23 = 0, F26 = 0, { hours: ne8, minutes: Q24, seconds: H26, milliseconds: P25, microseconds: J25, nanoseconds: S25 } = oi3(n7(b28, j9), Oe10, 1, "nanosecond", M26, "halfExpand")) : { years: C24, months: D24, weeks: Y23, days: F26, hours: ne8, minutes: Q24, seconds: H26, milliseconds: P25, microseconds: J25, nanoseconds: S25 } = Fa4(n7(b28, j9), Oe10, V24, Ie8, M26, qe4(null));
      }
    else {
      if (M26 === "year" || M26 === "month" || M26 === "week")
        throw new RangeError("relativeTo is required for years, months, or weeks arithmetic");
      C24 = D24 = Y23 = 0, { days: F26, hours: ne8, minutes: Q24, seconds: H26, milliseconds: P25, microseconds: J25, nanoseconds: S25 } = gr4(o35 + y24, S9.add(S9.BigInt(i29), S9.BigInt(p24)), S9.add(S9.BigInt(a27), S9.BigInt(w26)), S9.add(S9.BigInt(s29), S9.BigInt(g31)), S9.add(S9.BigInt(d25), S9.BigInt(T23)), S9.add(S9.BigInt(h35), S9.BigInt(E24)), S9.add(S9.BigInt(u30), S9.BigInt(I26)), M26);
    }
    return Pn3(C24, D24, Y23, F26, ne8, Q24, H26, P25, J25, S25), { years: C24, months: D24, weeks: Y23, days: F26, hours: ne8, minutes: Q24, seconds: H26, milliseconds: P25, microseconds: J25, nanoseconds: S25 };
  }
  function vo4(t32, e26, r91, o35, i29, a27, s29) {
    let d25 = ge6;
    d25 = S9.add(d25, S9.BigInt(s29)), d25 = S9.add(d25, S9.multiply(S9.BigInt(a27), te8)), d25 = S9.add(d25, S9.multiply(S9.BigInt(i29), hr4)), d25 = S9.add(d25, S9.multiply(S9.BigInt(o35), $r3)), d25 = S9.add(d25, S9.multiply(S9.BigInt(r91), S9.BigInt(6e10))), d25 = S9.add(d25, S9.multiply(S9.BigInt(e26), S9.BigInt(36e11)));
    let h35 = S9.add(t32, d25);
    return ot5(h35), h35;
  }
  function Eo4(t32, e26, r91, o35, i29, a27, s29, d25, h35, u30, l35, m27, f25, y24, p24, w26, g31, T23, E24, I26, b28) {
    let M26 = y24, { deltaDays: C24, hour: D24, minute: Y23, second: F26, millisecond: ne8, microsecond: Q24, nanosecond: H26 } = Na4(o35, i29, a27, s29, d25, h35, p24, w26, g31, T23, E24, I26);
    M26 += C24;
    let P25 = O9("%Temporal.Duration%"), J25 = Ne6(u30, pr4(t32, e26, r91, u30), new P25(l35, m27, f25, M26, 0, 0, 0, 0, 0, 0), b28);
    return { year: n7(J25, $7), month: n7(J25, R8), day: n7(J25, B8), hour: D24, minute: Y23, second: F26, millisecond: ne8, microsecond: Q24, nanosecond: H26 };
  }
  function yr3(t32, e26, r91, o35, i29, a27, s29, d25, h35, u30, l35, m27, f25, y24) {
    let p24 = O9("%Temporal.Duration%");
    if (Sr4(o35, i29, a27, s29, 0, 0, 0, 0, 0, 0) === 0)
      return vo4(n7(t32, j9), d25, h35, u30, l35, m27, f25);
    let w26 = lr4(e26, t32, r91), g31 = Ne6(r91, pr4(n7(w26, $7), n7(w26, R8), n7(w26, B8), r91), new p24(o35, i29, a27, s29, 0, 0, 0, 0, 0, 0), y24), T23 = rr4(n7(g31, $7), n7(g31, R8), n7(g31, B8), n7(w26, L8), n7(w26, x6), n7(w26, q7), n7(w26, A7), n7(w26, W7), n7(w26, z6), r91);
    return vo4(n7(Qe2(e26, T23, "compatible"), j9), d25, h35, u30, l35, m27, f25);
  }
  function qi4(t32, e26, r91, o35) {
    let i29 = t32 === "subtract" ? -1 : 1, { years: a27, months: s29, weeks: d25, days: h35, hours: u30, minutes: l35, seconds: m27, milliseconds: f25, microseconds: y24, nanoseconds: p24 } = pt5(r91), w26 = En3(X7(o35));
    return { years: a27, months: s29, weeks: d25, days: h35, hours: u30, minutes: l35, seconds: m27, milliseconds: f25, microseconds: y24, nanoseconds: p24 } = Pa4(n7(e26, Ae6), n7(e26, Be5), n7(e26, er4), n7(e26, We3), n7(e26, ze4), n7(e26, Ge4), n7(e26, Je4), n7(e26, _e4), n7(e26, Ve4), n7(e26, Ke3), i29 * a27, i29 * s29, i29 * d25, i29 * h35, i29 * u30, i29 * l35, i29 * m27, i29 * f25, i29 * y24, i29 * p24, w26), new (O9("%Temporal.Duration%"))(a27, s29, d25, h35, u30, l35, m27, f25, y24, p24);
  }
  function Ai4(t32, e26, r91) {
    let o35 = t32 === "subtract" ? -1 : 1, { hours: i29, minutes: a27, seconds: s29, milliseconds: d25, microseconds: h35, nanoseconds: u30 } = function(f25, y24) {
      let p24 = pt5(f25);
      for (let w26 of y24)
        if (p24[w26] !== 0)
          throw new RangeError(`Duration field ${w26} not supported by Temporal.Instant. Try Temporal.ZonedDateTime instead.`);
      return p24;
    }(r91, ["years", "months", "weeks", "days"]), l35 = vo4(n7(e26, j9), o35 * i29, o35 * a27, o35 * s29, o35 * d25, o35 * h35, o35 * u30);
    return new (O9("%Temporal.Instant%"))(l35);
  }
  function Wi4(t32, e26, r91, o35) {
    let i29 = t32 === "subtract" ? -1 : 1, { years: a27, months: s29, weeks: d25, days: h35, hours: u30, minutes: l35, seconds: m27, milliseconds: f25, microseconds: y24, nanoseconds: p24 } = pt5(r91), w26 = X7(o35), g31 = n7(e26, v8), { year: T23, month: E24, day: I26, hour: b28, minute: M26, second: C24, millisecond: D24, microsecond: Y23, nanosecond: F26 } = Eo4(n7(e26, $7), n7(e26, R8), n7(e26, B8), n7(e26, L8), n7(e26, x6), n7(e26, q7), n7(e26, A7), n7(e26, W7), n7(e26, z6), g31, i29 * a27, i29 * s29, i29 * d25, i29 * h35, i29 * u30, i29 * l35, i29 * m27, i29 * f25, i29 * y24, i29 * p24, w26);
    return rr4(T23, E24, I26, b28, M26, C24, D24, Y23, F26, g31);
  }
  function zi4(t32, e26, r91) {
    let o35 = t32 === "subtract" ? -1 : 1, { hours: i29, minutes: a27, seconds: s29, milliseconds: d25, microseconds: h35, nanoseconds: u30 } = pt5(r91), { hour: l35, minute: m27, second: f25, millisecond: y24, microsecond: p24, nanosecond: w26 } = Na4(n7(e26, L8), n7(e26, x6), n7(e26, q7), n7(e26, A7), n7(e26, W7), n7(e26, z6), o35 * i29, o35 * a27, o35 * s29, o35 * d25, o35 * h35, o35 * u30);
    return { hour: l35, minute: m27, second: f25, millisecond: y24, microsecond: p24, nanosecond: w26 } = An4(l35, m27, f25, y24, p24, w26, "reject"), new (O9("%Temporal.PlainTime%"))(l35, m27, f25, y24, p24, w26);
  }
  function Gi4(t32, e26, r91, o35) {
    let i29 = pt5(r91);
    t32 === "subtract" && (i29 = { years: -i29.years, months: -i29.months, weeks: -i29.weeks, days: -i29.days, hours: -i29.hours, minutes: -i29.minutes, seconds: -i29.seconds, milliseconds: -i29.milliseconds, microseconds: -i29.microseconds, nanoseconds: -i29.nanoseconds });
    let { years: a27, months: s29, weeks: d25, days: h35, hours: u30, minutes: l35, seconds: m27, milliseconds: f25, microseconds: y24, nanoseconds: p24 } = i29;
    ({ days: h35 } = gr4(h35, u30, l35, m27, f25, y24, p24, "day"));
    let w26 = X7(o35), g31 = n7(e26, v8), T23 = De4(g31, ["monthCode", "year"]), E24 = _7(e26, T23, []), I26 = qe4(null);
    It5(I26, E24, []), E24.day = 1;
    let b28 = xr4(g31, E24), M26 = Sr4(a27, s29, d25, h35, 0, 0, 0, 0, 0, 0), C24 = oe7(g31, "dateAdd"), D24 = O9("%Temporal.Duration%");
    if (M26 < 0) {
      let ne8 = Ne6(g31, b28, new D24(0, 1, 0, 0, 0, 0, 0, 0, 0, 0), void 0, C24), Q24 = Ne6(g31, ne8, new D24(0, 0, 0, -1, 0, 0, 0, 0, 0, 0), void 0, C24);
      I26.day = yn3(g31, Q24), b28 = xr4(g31, I26);
    }
    let Y23 = new D24(a27, s29, d25, h35, 0, 0, 0, 0, 0, 0), F26 = tt5(w26);
    return mt5(g31, _7(Ne6(g31, b28, Y23, w26, C24), T23, []), F26);
  }
  function Ji4(t32, e26, r91, o35) {
    let i29 = t32 === "subtract" ? -1 : 1, { years: a27, months: s29, weeks: d25, days: h35, hours: u30, minutes: l35, seconds: m27, milliseconds: f25, microseconds: y24, nanoseconds: p24 } = pt5(r91), w26 = X7(o35), g31 = n7(e26, ie7), T23 = n7(e26, v8);
    return Fe4(yr3(n7(e26, Le6), g31, T23, i29 * a27, i29 * s29, i29 * d25, i29 * h35, i29 * u30, i29 * l35, i29 * m27, i29 * f25, i29 * y24, i29 * p24, w26), g31, T23);
  }
  function cr4(t32, e26, r91) {
    if (S9.equal(e26, Zt5))
      return t32;
    let { quotient: o35, remainder: i29 } = ve5(t32, e26);
    if (S9.equal(i29, ge6))
      return t32;
    let a27 = S9.lessThan(i29, ge6) ? -1 : 1, s29 = Tr4(S9.multiply(i29, S9.BigInt(2))), d25 = S9.equal(s29, e26), h35 = S9.greaterThan(s29, e26);
    switch (r91) {
      case "ceil":
        a27 > 0 && (o35 = S9.add(o35, S9.BigInt(a27)));
        break;
      case "floor":
        a27 < 0 && (o35 = S9.add(o35, S9.BigInt(a27)));
        break;
      case "expand":
        o35 = S9.add(o35, S9.BigInt(a27));
        break;
      case "trunc":
        break;
      case "halfCeil":
        (h35 || d25 && a27 > 0) && (o35 = S9.add(o35, S9.BigInt(a27)));
        break;
      case "halfFloor":
        (h35 || d25 && a27 < 0) && (o35 = S9.add(o35, S9.BigInt(a27)));
        break;
      case "halfExpand":
        (h35 || d25) && (o35 = S9.add(o35, S9.BigInt(a27)));
        break;
      case "halfTrunc":
        h35 && (o35 = S9.add(o35, S9.BigInt(a27)));
        break;
      case "halfEven":
        (h35 || d25 && S9.toNumber(S9.remainder(Tr4(o35), S9.BigInt(2))) === 1) && (o35 = S9.add(o35, S9.BigInt(a27)));
    }
    return S9.multiply(o35, e26);
  }
  function jn3(t32, e26, r91, o35) {
    let { remainder: i29 } = nt5(t32, Yr4), a27 = S9.subtract(t32, i29), s29 = cr4(i29, S9.BigInt(xa3[r91] * e26), o35);
    return S9.add(a27, s29);
  }
  function ai3(t32, e26, r91, o35, i29, a27, s29, d25, h35, u30, l35, m27, f25 = 864e11) {
    let { deltaDays: y24, hour: p24, minute: w26, second: g31, millisecond: T23, microsecond: E24, nanosecond: I26 } = si4(o35, i29, a27, s29, d25, h35, u30, l35, m27, f25), { year: b28, month: M26, day: C24 } = ro4(t32, e26, r91 + y24);
    return { year: b28, month: M26, day: C24, hour: p24, minute: w26, second: g31, millisecond: T23, microsecond: E24, nanosecond: I26 };
  }
  function si4(t32, e26, r91, o35, i29, a27, s29, d25, h35, u30 = 864e11) {
    let l35 = ge6;
    switch (d25) {
      case "day":
      case "hour":
        l35 = S9.BigInt(t32);
      case "minute":
        l35 = S9.add(S9.multiply(l35, Mr4), S9.BigInt(e26));
      case "second":
        l35 = S9.add(S9.multiply(l35, Mr4), S9.BigInt(r91));
      case "millisecond":
        l35 = S9.add(S9.multiply(l35, te8), S9.BigInt(o35));
      case "microsecond":
        l35 = S9.add(S9.multiply(l35, te8), S9.BigInt(i29));
      case "nanosecond":
        l35 = S9.add(S9.multiply(l35, te8), S9.BigInt(a27));
    }
    let m27 = d25 === "day" ? u30 : xa3[d25], f25 = cr4(l35, S9.BigInt(m27 * s29), h35), y24 = S9.toNumber(S9.divide(f25, S9.BigInt(m27)));
    switch (d25) {
      case "day":
        return { deltaDays: y24, hour: 0, minute: 0, second: 0, millisecond: 0, microsecond: 0, nanosecond: 0 };
      case "hour":
        return Pr4(y24, 0, 0, 0, 0, 0);
      case "minute":
        return Pr4(t32, y24, 0, 0, 0, 0);
      case "second":
        return Pr4(t32, e26, y24, 0, 0, 0);
      case "millisecond":
        return Pr4(t32, e26, r91, y24, 0, 0);
      case "microsecond":
        return Pr4(t32, e26, r91, o35, y24, 0);
      case "nanosecond":
        return Pr4(t32, e26, r91, o35, i29, y24);
      default:
        throw new Error(`Invalid unit ${d25}`);
    }
  }
  function bn4(t32, e26) {
    return ni3(n7(t32, $7), n7(t32, R8), n7(t32, B8), n7(e26, $7), n7(e26, R8), n7(e26, B8), "day").days;
  }
  function Ue5(t32, e26, r91, o35) {
    let i29 = Ne6(t32, e26, r91, void 0, o35);
    return { relativeTo: i29, days: bn4(e26, i29) };
  }
  function ja4(t32, e26, r91, o35, i29) {
    let a27 = n7(t32, ie7), s29 = n7(t32, v8);
    return Fe4(yr3(n7(t32, Le6), a27, s29, e26, r91, o35, i29, 0, 0, 0, 0, 0, 0), a27, s29);
  }
  function Za4(t32, e26, r91, o35, i29, a27, s29, d25, h35, u30, l35, m27, f25, y24) {
    let p24 = t32, w26 = e26, g31 = r91, T23 = o35, E24 = i29, I26 = a27, b28 = s29, M26 = d25, C24 = h35, D24 = u30;
    if (!k8(y24) || m27 === "year" || m27 === "month" || m27 === "week" || m27 === "day" || m27 === "nanosecond" && l35 === 1)
      return { years: p24, months: w26, weeks: g31, days: T23, hours: E24, minutes: I26, seconds: b28, milliseconds: M26, microseconds: C24, nanoseconds: D24 };
    let Y23 = Ft5(0, E24, I26, b28, M26, C24, D24, 0), F26 = $t5(S9.toNumber(Y23)), ne8 = n7(y24, ie7), Q24 = n7(y24, v8), H26 = yr3(n7(y24, Le6), ne8, Q24, p24, w26, g31, T23, 0, 0, 0, 0, 0, 0), P25 = yr3(new (O9("%Temporal.Instant%"))(H26), ne8, Q24, 0, 0, 0, F26, 0, 0, 0, 0, 0, 0), J25 = S9.subtract(P25, H26);
    return S9.greaterThanOrEqual(S9.multiply(S9.subtract(Y23, J25), S9.BigInt(F26)), ge6) && ({ years: p24, months: w26, weeks: g31, days: T23 } = Pa4(p24, w26, g31, T23, 0, 0, 0, 0, 0, 0, 0, 0, 0, F26, 0, 0, 0, 0, 0, 0, y24), Y23 = jn3(S9.subtract(Y23, J25), l35, m27, f25), { hours: E24, minutes: I26, seconds: b28, milliseconds: M26, microseconds: C24, nanoseconds: D24 } = gr4(0, 0, 0, 0, 0, 0, S9.toNumber(Y23), "hour")), { years: p24, months: w26, weeks: g31, days: T23, hours: E24, minutes: I26, seconds: b28, milliseconds: M26, microseconds: C24, nanoseconds: D24 };
  }
  function qr4(t32, e26, r91, o35, i29, a27, s29, d25, h35, u30, l35, m27, f25, y24) {
    let p24 = t32, w26 = e26, g31 = r91, T23 = o35, E24 = i29, I26 = a27, b28 = s29, M26 = d25, C24 = h35, D24 = S9.BigInt(u30), Y23 = O9("%Temporal.Duration%"), F26, ne8, Q24, H26, P25 = y24;
    if (P25) {
      if (k8(P25))
        ne8 = P25, P25 = ae6(P25);
      else if (!K7(P25))
        throw new TypeError("starting point must be PlainDate or ZonedDateTime");
      F26 = n7(P25, v8);
    }
    if (m27 === "year" || m27 === "month" || m27 === "week" || m27 === "day") {
      let J25, S25, Z23;
      D24 = Ft5(0, E24, I26, b28, M26, C24, u30, 0), ne8 && (J25 = ja4(ne8, p24, w26, g31, T23)), { days: S25, nanoseconds: D24, dayLengthNs: Z23 } = ri3(D24, J25), Q24 = S9.BigInt(Z23), T23 += S25, E24 = I26 = b28 = M26 = C24 = 0;
    }
    switch (m27) {
      case "year": {
        if (!F26)
          throw new RangeError("A starting point is required for years rounding");
        let J25 = new Y23(p24), S25 = typeof F26 != "string" ? oe7(F26, "dateAdd") : void 0, Z23 = Ne6(F26, P25, J25, void 0, S25), V24 = Ne6(F26, P25, new Y23(p24, w26, g31), void 0, S25);
        P25 = Z23, T23 += bn4(Z23, V24);
        let Ie8 = Ne6(F26, P25, new Y23(0, 0, 0, T23), void 0, S25), Ce9 = qe4(null);
        Ce9.largestUnit = "year";
        let Oe10 = _r3(F26, P25, Ie8, Ce9).years;
        p24 += Oe10;
        let Te10 = P25;
        P25 = Ne6(F26, P25, new Y23(Oe10), void 0, S25), T23 -= bn4(Te10, P25);
        let ar5 = new Y23(T23 < 0 ? -1 : 1), { days: br5 } = Ue5(F26, P25, ar5, S25);
        br5 = de5(br5);
        let Dr6 = S9.multiply(S9.BigInt(br5), Q24);
        D24 = S9.add(S9.add(S9.multiply(Dr6, S9.BigInt(p24)), S9.multiply(S9.BigInt(T23), Q24)), D24);
        let sr6 = cr4(D24, S9.multiply(Dr6, S9.BigInt(l35)), f25);
        H26 = Cr4(D24, Dr6), p24 = S9.toNumber(S9.divide(sr6, Dr6)), D24 = ge6, w26 = g31 = T23 = 0;
        break;
      }
      case "month": {
        if (!F26)
          throw new RangeError("A starting point is required for months rounding");
        let J25 = new Y23(p24, w26), S25 = typeof F26 != "string" ? oe7(F26, "dateAdd") : void 0, Z23 = Ne6(F26, P25, J25, void 0, S25), V24 = Ne6(F26, P25, new Y23(p24, w26, g31), void 0, S25);
        P25 = Z23, T23 += bn4(Z23, V24);
        let Ie8 = $t5(T23), Ce9 = new Y23(0, T23 < 0 ? -1 : 1), Oe10;
        for ({ relativeTo: P25, days: Oe10 } = Ue5(F26, P25, Ce9, S25); de5(T23) >= de5(Oe10); )
          w26 += Ie8, T23 -= Oe10, { relativeTo: P25, days: Oe10 } = Ue5(F26, P25, Ce9, S25);
        Oe10 = de5(Oe10);
        let Te10 = S9.multiply(S9.BigInt(Oe10), Q24);
        D24 = S9.add(S9.add(S9.multiply(Te10, S9.BigInt(w26)), S9.multiply(S9.BigInt(T23), Q24)), D24);
        let ar5 = cr4(D24, S9.multiply(Te10, S9.BigInt(l35)), f25);
        H26 = Cr4(D24, Te10), w26 = S9.toNumber(S9.divide(ar5, Te10)), D24 = ge6, g31 = T23 = 0;
        break;
      }
      case "week": {
        if (!F26)
          throw new RangeError("A starting point is required for weeks rounding");
        let J25 = $t5(T23), S25 = new Y23(0, 0, T23 < 0 ? -1 : 1), Z23 = typeof F26 != "string" ? oe7(F26, "dateAdd") : void 0, V24;
        for ({ relativeTo: P25, days: V24 } = Ue5(F26, P25, S25, Z23); de5(T23) >= de5(V24); )
          g31 += J25, T23 -= V24, { relativeTo: P25, days: V24 } = Ue5(F26, P25, S25, Z23);
        V24 = de5(V24);
        let Ie8 = S9.multiply(S9.BigInt(V24), Q24);
        D24 = S9.add(S9.add(S9.multiply(Ie8, S9.BigInt(g31)), S9.multiply(S9.BigInt(T23), Q24)), D24);
        let Ce9 = cr4(D24, S9.multiply(Ie8, S9.BigInt(l35)), f25);
        H26 = Cr4(D24, Ie8), g31 = S9.toNumber(S9.divide(Ce9, Ie8)), D24 = ge6, T23 = 0;
        break;
      }
      case "day": {
        let J25 = Q24;
        D24 = S9.add(S9.multiply(J25, S9.BigInt(T23)), D24);
        let S25 = cr4(D24, S9.multiply(J25, S9.BigInt(l35)), f25);
        H26 = Cr4(D24, J25), T23 = S9.toNumber(S9.divide(S25, J25)), D24 = ge6;
        break;
      }
      case "hour": {
        let S25 = S9.multiply(S9.BigInt(E24), S9.BigInt(36e11));
        S25 = S9.add(S25, S9.multiply(S9.BigInt(I26), S9.BigInt(6e10))), S25 = S9.add(S25, S9.multiply(S9.BigInt(b28), $r3)), S25 = S9.add(S25, S9.multiply(S9.BigInt(M26), hr4)), S25 = S9.add(S25, S9.multiply(S9.BigInt(C24), te8)), S25 = S9.add(S25, D24), H26 = Cr4(S25, S9.BigInt(36e11));
        let Z23 = cr4(S25, S9.BigInt(36e11 * l35), f25);
        E24 = S9.toNumber(S9.divide(Z23, S9.BigInt(36e11))), D24 = ge6, I26 = b28 = M26 = C24 = 0;
        break;
      }
      case "minute": {
        let S25 = S9.multiply(S9.BigInt(I26), S9.BigInt(6e10));
        S25 = S9.add(S25, S9.multiply(S9.BigInt(b28), $r3)), S25 = S9.add(S25, S9.multiply(S9.BigInt(M26), hr4)), S25 = S9.add(S25, S9.multiply(S9.BigInt(C24), te8)), S25 = S9.add(S25, D24), H26 = Cr4(S25, S9.BigInt(6e10));
        let Z23 = cr4(S25, S9.BigInt(6e10 * l35), f25);
        I26 = S9.toNumber(S9.divide(Z23, S9.BigInt(6e10))), D24 = ge6, b28 = M26 = C24 = 0;
        break;
      }
      case "second": {
        let S25 = S9.multiply(S9.BigInt(b28), $r3);
        S25 = S9.add(S25, S9.multiply(S9.BigInt(M26), hr4)), S25 = S9.add(S25, S9.multiply(S9.BigInt(C24), te8)), S25 = S9.add(S25, D24), H26 = Cr4(S25, S9.BigInt(1e9));
        let Z23 = cr4(S25, S9.BigInt(1e9 * l35), f25);
        b28 = S9.toNumber(S9.divide(Z23, S9.BigInt(1e9))), D24 = ge6, M26 = C24 = 0;
        break;
      }
      case "millisecond": {
        let S25 = S9.multiply(S9.BigInt(M26), hr4);
        S25 = S9.add(S25, S9.multiply(S9.BigInt(C24), te8)), S25 = S9.add(S25, D24), H26 = Cr4(S25, S9.BigInt(1e6));
        let Z23 = cr4(S25, S9.BigInt(1e6 * l35), f25);
        M26 = S9.toNumber(S9.divide(Z23, S9.BigInt(1e6))), D24 = ge6, C24 = 0;
        break;
      }
      case "microsecond": {
        let S25 = S9.multiply(S9.BigInt(C24), te8);
        S25 = S9.add(S25, D24), H26 = Cr4(S25, S9.BigInt(1e3));
        let Z23 = cr4(S25, S9.BigInt(1e3 * l35), f25);
        C24 = S9.toNumber(S9.divide(Z23, S9.BigInt(1e3))), D24 = ge6;
        break;
      }
      case "nanosecond":
        H26 = S9.toNumber(D24), D24 = cr4(S9.BigInt(D24), S9.BigInt(l35), f25);
    }
    return { years: p24, months: w26, weeks: g31, days: T23, hours: E24, minutes: I26, seconds: b28, milliseconds: M26, microseconds: C24, nanoseconds: S9.toNumber(D24), total: H26 };
  }
  function Jr4(t32, e26, r91, o35, i29, a27) {
    for (let [s29, d25] of [[t32, o35], [e26, i29], [r91, a27]])
      if (s29 !== d25)
        return dt4(s29 - d25);
    return 0;
  }
  function nt5(t32, e26) {
    let { quotient: r91, remainder: o35 } = ve5(t32, e26);
    return S9.lessThan(o35, ge6) && (r91 = S9.subtract(r91, Zt5), o35 = S9.add(o35, e26)), { quotient: r91, remainder: o35 };
  }
  function Dt5(t32, e26) {
    let { quotient: r91, remainder: o35 } = ve5(t32, e26);
    return fr4(o35) || !$n3(t32) == !$n3(e26) ? r91 : S9.subtract(r91, Zt5);
  }
  function Cr4(t32, e26) {
    let { quotient: r91, remainder: o35 } = ve5(t32, e26);
    return S9.toNumber(r91) + S9.toNumber(o35) / S9.toNumber(e26);
  }
  function Zn4(t32) {
    let e26 = Gt5(t32);
    return globalThis.BigInt !== void 0 ? globalThis.BigInt(e26.toString(10)) : e26;
  }
  function Gt5(t32) {
    let e26 = t32;
    if (typeof t32 == "object") {
      let r91 = t32[Symbol.toPrimitive];
      r91 && typeof r91 == "function" && (e26 = qn4(r91, t32, ["number"]));
    }
    if (typeof e26 == "number")
      throw new TypeError("cannot convert number to bigint");
    return typeof e26 == "bigint" ? S9.BigInt(e26.toString(10)) : S9.BigInt(e26);
  }
  var di4 = (() => {
    let t32 = S9.BigInt(Date.now() % 1e6);
    return () => {
      let e26 = S9.BigInt(Date.now()), r91 = S9.add(S9.multiply(e26, hr4), t32);
      return t32 = S9.remainder(e26, hr4), S9.greaterThan(r91, St5) ? St5 : S9.lessThan(r91, _t5) ? _t5 : r91;
    };
  })();
  function Gr4() {
    return new sa3().resolvedOptions().timeZone;
  }
  function dt4(t32) {
    return t32 < 0 ? -1 : t32 > 0 ? 1 : t32;
  }
  function X7(t32) {
    if (t32 === void 0)
      return qe4(null);
    if (ce5(t32) && t32 !== null)
      return t32;
    throw new TypeError("Options parameter must be an object, not " + (t32 === null ? "null" : typeof t32));
  }
  function Nt5(t32, e26) {
    let r91 = qe4(null);
    return r91[t32] = e26, r91;
  }
  function tt5(t32) {
    let e26 = qe4(null);
    return It5(e26, X7(t32), []), e26;
  }
  function Qr4(t32, e26, r91, o35) {
    let i29 = t32[e26];
    if (i29 !== void 0) {
      if (i29 = He5(i29), !r91.includes(i29))
        throw new RangeError(`${e26} must be one of ${r91.join(", ")}, not ${i29}`);
      return i29;
    }
    return o35;
  }
  function Ar4(t32) {
    return gs4.includes(Br4(t32));
  }
  function Br4(t32) {
    return t32.replace(/[A-Z]/g, (e26) => {
      let r91 = e26.charCodeAt(0);
      return String.fromCharCode(r91 + 32);
    });
  }
  var Ua4 = new RegExp(`^${oa3.source}$`);
  function La4(t32, e26, r91, o35 = t32(e26), i29 = t32(r91)) {
    let a27 = S9.BigInt(e26), s29 = S9.BigInt(r91), d25 = o35, h35 = i29;
    for (; S9.greaterThan(S9.subtract(s29, a27), Zt5); ) {
      let u30 = S9.divide(S9.add(a27, s29), S9.BigInt(2)), l35 = t32(u30);
      if (l35 === d25)
        a27 = u30, d25 = l35;
      else {
        if (l35 !== h35)
          throw new Error(`invalid state in bisection ${d25} - ${l35} - ${h35}`);
        s29 = u30, h35 = l35;
      }
    }
    return s29;
  }
  var xa3 = { hour: 36e11, minute: 6e10, second: 1e9, millisecond: 1e6, microsecond: 1e3, nanosecond: 1 };
  var qa2 = Symbol("date");
  var Aa3 = Symbol("ym");
  var Wa4 = Symbol("md");
  var za4 = Symbol("time");
  var Ga4 = Symbol("datetime");
  var Ja4 = Symbol("instant");
  var Ct5 = Symbol("original");
  var Tt5 = Symbol("timezone");
  var wr4 = Symbol("calendar-id");
  var _a3 = Symbol("locale");
  var Io4 = Symbol("options");
  var Jt4 = (t32) => ({ value: t32, enumerable: true, writable: false, configurable: true });
  var Ot5 = globalThis.Intl.DateTimeFormat;
  var Wr4 = Object.assign;
  var bs3 = Object.prototype.hasOwnProperty;
  var Ds4 = Reflect.apply;
  function gt5(t32, e26) {
    let r91 = t32[e26];
    return typeof r91 == "function" && (r91 = new Ot5(t32[_a3], r91(t32[Io4])), t32[e26] = r91), r91;
  }
  function ft5(t32, e26 = {}) {
    if (!(this instanceof ft5))
      return new ft5(t32, e26);
    let r91 = e26 !== void 0, o35 = r91 ? Wr4({}, e26) : {}, i29 = new Ot5(t32, o35), a27 = i29.resolvedOptions();
    if (r91) {
      let s29 = Wr4({}, a27);
      for (let d25 in s29)
        Ds4(bs3, o35, [d25]) || delete s29[d25];
      this[Io4] = s29;
    } else
      this[Io4] = o35;
    this[_a3] = a27.locale, this[Ct5] = i29, this[Tt5] = a27.timeZone, this[wr4] = a27.calendar, this[qa2] = $s4, this[Aa3] = Os4, this[Wa4] = Ms4, this[za4] = Cs4, this[Ga4] = Ss3, this[Ja4] = Ys4;
  }
  Object.defineProperty(ft5, "name", { writable: true, value: "DateTimeFormat" }), ft5.supportedLocalesOf = function(t32, e26) {
    return Ot5.supportedLocalesOf(t32, e26);
  };
  var so4 = { resolvedOptions: Jt4(function() {
    return this[Ct5].resolvedOptions();
  }), format: Jt4(function(e26, ...r91) {
    let { instant: o35, formatter: i29 } = Mt5(e26, this);
    return o35 && i29 ? i29.format(o35.epochMilliseconds) : this[Ct5].format(e26, ...r91);
  }), formatRange: Jt4(function(e26, r91) {
    if (Pt5(e26) || Pt5(r91)) {
      if (!Va4(e26, r91))
        throw new TypeError("Intl.DateTimeFormat.formatRange accepts two values of the same type");
      let { instant: o35, formatter: i29 } = Mt5(e26, this), { instant: a27, formatter: s29 } = Mt5(r91, this);
      if (o35 && a27 && i29 && s29 && i29 === s29)
        return i29.formatRange(o35.epochMilliseconds, a27.epochMilliseconds);
    }
    return this[Ct5].formatRange(e26, r91);
  }) };
  "formatToParts" in Ot5.prototype && (so4.formatToParts = Jt4(function(e26, ...r91) {
    let { instant: o35, formatter: i29 } = Mt5(e26, this);
    return o35 && i29 ? i29.formatToParts(o35.epochMilliseconds) : this[Ct5].formatToParts(e26, ...r91);
  })), "formatRangeToParts" in Ot5.prototype && (so4.formatRangeToParts = Jt4(function(e26, r91) {
    if (Pt5(e26) || Pt5(r91)) {
      if (!Va4(e26, r91))
        throw new TypeError("Intl.DateTimeFormat.formatRangeToParts accepts two values of the same type");
      let { instant: o35, formatter: i29 } = Mt5(e26, this), { instant: a27, formatter: s29 } = Mt5(r91, this);
      if (o35 && a27 && i29 && s29 && i29 === s29)
        return i29.formatRangeToParts(o35.epochMilliseconds, a27.epochMilliseconds);
    }
    return this[Ct5].formatRangeToParts(e26, r91);
  })), ft5.prototype = Object.create(Ot5.prototype, so4), Object.defineProperty(ft5, "prototype", { writable: false, enumerable: false, configurable: false });
  var zr4 = ft5;
  function gn4(t32 = {}, e26 = {}) {
    let r91 = Wr4({}, t32);
    for (let o35 of ["year", "month", "day", "hour", "minute", "second", "weekday", "dayPeriod", "timeZoneName", "dateStyle", "timeStyle"])
      r91[o35] = o35 in e26 ? e26[o35] : r91[o35], r91[o35] !== false && r91[o35] !== void 0 || delete r91[o35];
    return r91;
  }
  function Cs4(t32) {
    let e26 = gn4(t32, { year: false, month: false, day: false, weekday: false, timeZoneName: false, dateStyle: false });
    return hi4(e26) || (e26 = Wr4({}, e26, { hour: "numeric", minute: "numeric", second: "numeric" })), e26;
  }
  function Os4(t32) {
    let e26 = gn4(t32, { day: false, hour: false, minute: false, second: false, weekday: false, dayPeriod: false, timeZoneName: false, dateStyle: false, timeStyle: false });
    return "year" in e26 || "month" in e26 || (e26 = Wr4(e26, { year: "numeric", month: "numeric" })), e26;
  }
  function Ms4(t32) {
    let e26 = gn4(t32, { year: false, hour: false, minute: false, second: false, weekday: false, dayPeriod: false, timeZoneName: false, dateStyle: false, timeStyle: false });
    return "month" in e26 || "day" in e26 || (e26 = Wr4({}, e26, { month: "numeric", day: "numeric" })), e26;
  }
  function $s4(t32) {
    let e26 = gn4(t32, { hour: false, minute: false, second: false, dayPeriod: false, timeZoneName: false, timeStyle: false });
    return ci4(e26) || (e26 = Wr4({}, e26, { year: "numeric", month: "numeric", day: "numeric" })), e26;
  }
  function Ss3(t32) {
    let e26 = gn4(t32, { timeZoneName: false });
    return hi4(e26) || ci4(e26) || (e26 = Wr4({}, e26, { year: "numeric", month: "numeric", day: "numeric", hour: "numeric", minute: "numeric", second: "numeric" })), e26;
  }
  function Ys4(t32) {
    let e26 = t32;
    return hi4(e26) || ci4(e26) || (e26 = Wr4({}, e26, { year: "numeric", month: "numeric", day: "numeric", hour: "numeric", minute: "numeric", second: "numeric" })), e26;
  }
  function ci4(t32) {
    return "year" in t32 || "month" in t32 || "day" in t32 || "weekday" in t32 || "dateStyle" in t32;
  }
  function hi4(t32) {
    return "hour" in t32 || "minute" in t32 || "second" in t32 || "timeStyle" in t32 || "dayPeriod" in t32;
  }
  function Pt5(t32) {
    return K7(t32) || we6(t32) || U9(t32) || k8(t32) || re6(t32) || Se7(t32) || $e6(t32);
  }
  function Va4(t32, e26) {
    return !(!Pt5(t32) || !Pt5(e26)) && !(we6(t32) && !we6(e26)) && !(K7(t32) && !K7(e26)) && !(U9(t32) && !U9(e26)) && !(k8(t32) && !k8(e26)) && !(re6(t32) && !re6(e26)) && !(Se7(t32) && !Se7(e26)) && !($e6(t32) && !$e6(e26));
  }
  function Mt5(t32, e26) {
    let r91 = O9("%Temporal.PlainDateTime%");
    if (we6(t32)) {
      let o35 = new r91(1970, 1, 1, n7(t32, L8), n7(t32, x6), n7(t32, q7), n7(t32, A7), n7(t32, W7), n7(t32, z6), e26[wr4]);
      return { instant: Qe2(e26[Tt5], o35, "compatible"), formatter: gt5(e26, za4) };
    }
    if (re6(t32)) {
      let o35 = n7(t32, $7), i29 = n7(t32, R8), a27 = n7(t32, B8), s29 = je4(n7(t32, v8));
      if (s29 !== e26[wr4])
        throw new RangeError(`cannot format PlainYearMonth with calendar ${s29} in locale with calendar ${e26[wr4]}`);
      let d25 = new r91(o35, i29, a27, 12, 0, 0, 0, 0, 0, s29);
      return { instant: Qe2(e26[Tt5], d25, "compatible"), formatter: gt5(e26, Aa3) };
    }
    if (Se7(t32)) {
      let o35 = n7(t32, $7), i29 = n7(t32, R8), a27 = n7(t32, B8), s29 = je4(n7(t32, v8));
      if (s29 !== e26[wr4])
        throw new RangeError(`cannot format PlainMonthDay with calendar ${s29} in locale with calendar ${e26[wr4]}`);
      let d25 = new r91(o35, i29, a27, 12, 0, 0, 0, 0, 0, s29);
      return { instant: Qe2(e26[Tt5], d25, "compatible"), formatter: gt5(e26, Wa4) };
    }
    if (K7(t32)) {
      let o35 = n7(t32, $7), i29 = n7(t32, R8), a27 = n7(t32, B8), s29 = je4(n7(t32, v8));
      if (s29 !== "iso8601" && s29 !== e26[wr4])
        throw new RangeError(`cannot format PlainDate with calendar ${s29} in locale with calendar ${e26[wr4]}`);
      let d25 = new r91(o35, i29, a27, 12, 0, 0, 0, 0, 0, e26[wr4]);
      return { instant: Qe2(e26[Tt5], d25, "compatible"), formatter: gt5(e26, qa2) };
    }
    if (U9(t32)) {
      let o35 = n7(t32, $7), i29 = n7(t32, R8), a27 = n7(t32, B8), s29 = n7(t32, L8), d25 = n7(t32, x6), h35 = n7(t32, q7), u30 = n7(t32, A7), l35 = n7(t32, W7), m27 = n7(t32, z6), f25 = je4(n7(t32, v8));
      if (f25 !== "iso8601" && f25 !== e26[wr4])
        throw new RangeError(`cannot format PlainDateTime with calendar ${f25} in locale with calendar ${e26[wr4]}`);
      let y24 = t32;
      return f25 === "iso8601" && (y24 = new r91(o35, i29, a27, s29, d25, h35, u30, l35, m27, e26[wr4])), { instant: Qe2(e26[Tt5], y24, "compatible"), formatter: gt5(e26, Ga4) };
    }
    if (k8(t32))
      throw new TypeError("Temporal.ZonedDateTime not supported in DateTimeFormat methods. Use toLocaleString() instead.");
    return $e6(t32) ? { instant: t32, formatter: gt5(e26, Ja4) } : {};
  }
  var As4 = Object.freeze({ __proto__: null, DateTimeFormat: zr4 });
  var jt5 = class t3 {
    constructor(e26) {
      if (arguments.length < 1)
        throw new TypeError("missing argument: epochNanoseconds is required");
      let r91 = Gt5(e26);
      ot5(r91), Fr4(this), G9(this, j9, r91);
    }
    get epochSeconds() {
      if (!$e6(this))
        throw new TypeError("invalid receiver");
      let e26 = n7(this, j9);
      return S9.toNumber(Dt5(e26, $r3));
    }
    get epochMilliseconds() {
      if (!$e6(this))
        throw new TypeError("invalid receiver");
      let e26 = S9.BigInt(n7(this, j9));
      return S9.toNumber(Dt5(e26, hr4));
    }
    get epochMicroseconds() {
      if (!$e6(this))
        throw new TypeError("invalid receiver");
      return Zn4(Dt5(S9.BigInt(n7(this, j9)), te8));
    }
    get epochNanoseconds() {
      if (!$e6(this))
        throw new TypeError("invalid receiver");
      return Zn4(S9.BigInt(n7(this, j9)));
    }
    add(e26) {
      if (!$e6(this))
        throw new TypeError("invalid receiver");
      return Ai4("add", this, e26);
    }
    subtract(e26) {
      if (!$e6(this))
        throw new TypeError("invalid receiver");
      return Ai4("subtract", this, e26);
    }
    until(e26, r91) {
      if (!$e6(this))
        throw new TypeError("invalid receiver");
      return Pi4("until", this, e26, r91);
    }
    since(e26, r91) {
      if (!$e6(this))
        throw new TypeError("invalid receiver");
      return Pi4("since", this, e26, r91);
    }
    round(e26) {
      if (!$e6(this))
        throw new TypeError("invalid receiver");
      if (e26 === void 0)
        throw new TypeError("options parameter is required");
      let r91 = typeof e26 == "string" ? Nt5("smallestUnit", e26) : X7(e26), o35 = Lt5(r91), i29 = Er4(r91, "halfExpand"), a27 = or4(r91, "smallestUnit", "time", ht5);
      xt5(o35, { hour: 24, minute: 1440, second: 86400, millisecond: 864e5, microsecond: 864e8, nanosecond: 864e11 }[a27], true);
      let s29 = jn3(n7(this, j9), o35, a27, i29);
      return new t3(s29);
    }
    equals(e26) {
      if (!$e6(this))
        throw new TypeError("invalid receiver");
      let r91 = vr4(e26), o35 = n7(this, j9), i29 = n7(r91, j9);
      return S9.equal(S9.BigInt(o35), S9.BigInt(i29));
    }
    toString(e26) {
      if (!$e6(this))
        throw new TypeError("invalid receiver");
      let r91 = X7(e26), o35 = ln4(r91), i29 = Er4(r91, "trunc"), a27 = or4(r91, "smallestUnit", "time", void 0);
      if (a27 === "hour")
        throw new RangeError('smallestUnit must be a time unit other than "hour"');
      let s29 = r91.timeZone;
      s29 !== void 0 && (s29 = xe5(s29));
      let { precision: d25, unit: h35, increment: u30 } = un4(a27, o35), l35 = jn3(n7(this, j9), u30, h35, i29);
      return Mi4(new t3(l35), s29, d25);
    }
    toJSON() {
      if (!$e6(this))
        throw new TypeError("invalid receiver");
      return Mi4(this, void 0, "auto");
    }
    toLocaleString(e26, r91) {
      if (!$e6(this))
        throw new TypeError("invalid receiver");
      return new zr4(e26, r91).format(this);
    }
    valueOf() {
      throw new TypeError("use compare() or equals() to compare Temporal.Instant");
    }
    toZonedDateTime(e26) {
      if (!$e6(this))
        throw new TypeError("invalid receiver");
      if (!ce5(e26))
        throw new TypeError("invalid argument in toZonedDateTime");
      let r91 = e26.calendar;
      if (r91 === void 0)
        throw new TypeError("missing calendar property in toZonedDateTime");
      let o35 = ir4(r91), i29 = e26.timeZone;
      if (i29 === void 0)
        throw new TypeError("missing timeZone property in toZonedDateTime");
      let a27 = xe5(i29);
      return Fe4(n7(this, j9), a27, o35);
    }
    toZonedDateTimeISO(e26) {
      if (!$e6(this))
        throw new TypeError("invalid receiver");
      let r91 = xe5(e26);
      return Fe4(n7(this, j9), r91, "iso8601");
    }
    static fromEpochSeconds(e26) {
      let r91 = Yt5(e26), o35 = S9.multiply(S9.BigInt(r91), $r3);
      return ot5(o35), new t3(o35);
    }
    static fromEpochMilliseconds(e26) {
      let r91 = Yt5(e26), o35 = S9.multiply(S9.BigInt(r91), hr4);
      return ot5(o35), new t3(o35);
    }
    static fromEpochMicroseconds(e26) {
      let r91 = Gt5(e26), o35 = S9.multiply(r91, te8);
      return ot5(o35), new t3(o35);
    }
    static fromEpochNanoseconds(e26) {
      let r91 = Gt5(e26);
      return ot5(r91), new t3(r91);
    }
    static from(e26) {
      return $e6(e26) ? new t3(n7(e26, j9)) : vr4(e26);
    }
    static compare(e26, r91) {
      let o35 = vr4(e26), i29 = vr4(r91), a27 = n7(o35, j9), s29 = n7(i29, j9);
      return S9.lessThan(a27, s29) ? -1 : S9.greaterThan(a27, s29) ? 1 : 0;
    }
  };
  kr4(jt5, "Temporal.Instant");
  var Ka4 = Array.prototype.includes;
  var Rs3 = Array.prototype.push;
  var Bs3 = globalThis.Intl.DateTimeFormat;
  var ks3 = Array.prototype.sort;
  var Fs4 = Math.abs;
  var Ns4 = Math.floor;
  var co4 = Object.create;
  var bo4 = Object.entries;
  var Xa4 = Set;
  var _i4 = Reflect.ownKeys;
  var Ze2 = Set.prototype.add;
  var Qa3 = Set.prototype.values;
  var le7 = {};
  var he5 = class {
    constructor(e26) {
      if (arguments.length < 1)
        throw new RangeError("missing argument: id is required");
      let r91 = He5(e26);
      if (!Ar4(r91))
        throw new RangeError(`invalid calendar identifier ${r91}`);
      Fr4(this), G9(this, me6, Br4(r91));
    }
    get id() {
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      return n7(this, me6);
    }
    dateFromFields(e26, r91) {
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      if (!ce5(e26))
        throw new TypeError("invalid fields");
      let o35 = X7(r91), i29 = n7(this, me6);
      return le7[i29].dateFromFields(e26, o35, i29);
    }
    yearMonthFromFields(e26, r91) {
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      if (!ce5(e26))
        throw new TypeError("invalid fields");
      let o35 = X7(r91), i29 = n7(this, me6);
      return le7[i29].yearMonthFromFields(e26, o35, i29);
    }
    monthDayFromFields(e26, r91) {
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      if (!ce5(e26))
        throw new TypeError("invalid fields");
      let o35 = X7(r91), i29 = n7(this, me6);
      return le7[i29].monthDayFromFields(e26, o35, i29);
    }
    fields(e26) {
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      let r91 = [], o35 = /* @__PURE__ */ new Set(["year", "month", "monthCode", "day", "hour", "minute", "second", "millisecond", "microsecond", "nanosecond"]);
      for (let i29 of e26) {
        if (typeof i29 != "string")
          throw new TypeError("invalid fields");
        if (!o35.has(i29))
          throw new RangeError(`invalid field name ${i29}`);
        o35.delete(i29), Rs3.call(r91, i29);
      }
      return le7[n7(this, me6)].fields(r91);
    }
    mergeFields(e26, r91) {
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      let o35 = Ci4(e26), i29 = co4(null);
      It5(i29, o35, [], [void 0]);
      let a27 = Ci4(r91), s29 = co4(null);
      It5(s29, a27, [], [void 0]);
      let d25 = _i4(s29), h35 = le7[n7(this, me6)].fieldKeysToIgnore(d25), u30 = co4(null), l35 = _i4(i29);
      for (let m27 of l35) {
        let f25;
        f25 = N8(Ka4, h35, [m27]) ? s29[m27] : i29[m27], f25 !== void 0 && (u30[m27] = f25);
      }
      return It5(u30, s29, []), u30;
    }
    dateAdd(e26, r91, o35) {
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      let i29 = ae6(e26), a27 = bt5(r91), s29 = Ee7(X7(o35)), { days: d25 } = gr4(n7(a27, We3), n7(a27, ze4), n7(a27, Ge4), n7(a27, Je4), n7(a27, _e4), n7(a27, Ve4), n7(a27, Ke3), "day"), h35 = n7(this, me6);
      return le7[h35].dateAdd(i29, n7(a27, Ae6), n7(a27, Be5), n7(a27, er4), d25, s29, h35);
    }
    dateUntil(e26, r91, o35) {
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      let i29 = ae6(e26), a27 = ae6(r91), s29 = or4(X7(o35), "largestUnit", "date", "auto");
      s29 === "auto" && (s29 = "day");
      let { years: d25, months: h35, weeks: u30, days: l35 } = le7[n7(this, me6)].dateUntil(i29, a27, s29);
      return new (O9("%Temporal.Duration%"))(d25, h35, u30, l35, 0, 0, 0, 0, 0, 0);
    }
    year(e26) {
      let r91 = e26;
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      return re6(r91) || (r91 = ae6(r91)), le7[n7(this, me6)].year(r91);
    }
    month(e26) {
      let r91 = e26;
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      if (Se7(r91))
        throw new TypeError("use monthCode on PlainMonthDay instead");
      return re6(r91) || (r91 = ae6(r91)), le7[n7(this, me6)].month(r91);
    }
    monthCode(e26) {
      let r91 = e26;
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      return re6(r91) || Se7(r91) || (r91 = ae6(r91)), le7[n7(this, me6)].monthCode(r91);
    }
    day(e26) {
      let r91 = e26;
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      return Se7(r91) || (r91 = ae6(r91)), le7[n7(this, me6)].day(r91);
    }
    era(e26) {
      let r91 = e26;
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      return re6(r91) || (r91 = ae6(r91)), le7[n7(this, me6)].era(r91);
    }
    eraYear(e26) {
      let r91 = e26;
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      return re6(r91) || (r91 = ae6(r91)), le7[n7(this, me6)].eraYear(r91);
    }
    dayOfWeek(e26) {
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      let r91 = ae6(e26);
      return le7[n7(this, me6)].dayOfWeek(r91);
    }
    dayOfYear(e26) {
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      let r91 = ae6(e26);
      return le7[n7(this, me6)].dayOfYear(r91);
    }
    weekOfYear(e26) {
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      let r91 = ae6(e26);
      return le7[n7(this, me6)].weekOfYear(r91);
    }
    yearOfWeek(e26) {
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      let r91 = ae6(e26);
      return le7[n7(this, me6)].yearOfWeek(r91);
    }
    daysInWeek(e26) {
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      let r91 = ae6(e26);
      return le7[n7(this, me6)].daysInWeek(r91);
    }
    daysInMonth(e26) {
      let r91 = e26;
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      return re6(r91) || (r91 = ae6(r91)), le7[n7(this, me6)].daysInMonth(r91);
    }
    daysInYear(e26) {
      let r91 = e26;
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      return re6(r91) || (r91 = ae6(r91)), le7[n7(this, me6)].daysInYear(r91);
    }
    monthsInYear(e26) {
      let r91 = e26;
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      return re6(r91) || (r91 = ae6(r91)), le7[n7(this, me6)].monthsInYear(r91);
    }
    inLeapYear(e26) {
      let r91 = e26;
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      return re6(r91) || (r91 = ae6(r91)), le7[n7(this, me6)].inLeapYear(r91);
    }
    toString() {
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      return n7(this, me6);
    }
    toJSON() {
      if (!ye6(this))
        throw new TypeError("invalid receiver");
      return n7(this, me6);
    }
    static from(e26) {
      return qt5(ir4(e26));
    }
  };
  function li3(t32) {
    if (!t32.startsWith("M"))
      throw new RangeError(`Invalid month code: ${t32}.  Month codes must start with M.`);
    let e26 = +t32.slice(1);
    if (isNaN(e26))
      throw new RangeError(`Invalid month code: ${t32}`);
    return e26;
  }
  function Lr4(t32, e26 = false) {
    return `M${t32.toString().padStart(2, "0")}${e26 ? "L" : ""}`;
  }
  function Dn4(t32, e26, r91 = 12) {
    let { month: o35, monthCode: i29 } = t32;
    if (i29 === void 0) {
      if (o35 === void 0)
        throw new TypeError("Either month or monthCode are required");
      e26 === "reject" && Pe4(o35, 1, r91), e26 === "constrain" && (o35 = tr4(o35, 1, r91)), i29 = Lr4(o35);
    } else {
      let a27 = li3(i29);
      if (o35 !== void 0 && o35 !== a27)
        throw new RangeError(`monthCode ${i29} and month ${o35} must match if both are present`);
      if (i29 !== Lr4(a27))
        throw new RangeError(`Invalid month code: ${i29}`);
      if (o35 = a27, o35 < 1 || o35 > r91)
        throw new RangeError(`Invalid monthCode: ${i29}`);
    }
    return { ...t32, month: o35, monthCode: i29 };
  }
  kr4(he5, "Temporal.Calendar"), fe5("Temporal.Calendar.from", he5.from), fe5("Temporal.Calendar.prototype.dateAdd", he5.prototype.dateAdd), fe5("Temporal.Calendar.prototype.dateFromFields", he5.prototype.dateFromFields), fe5("Temporal.Calendar.prototype.dateUntil", he5.prototype.dateUntil), fe5("Temporal.Calendar.prototype.day", he5.prototype.day), fe5("Temporal.Calendar.prototype.dayOfWeek", he5.prototype.dayOfWeek), fe5("Temporal.Calendar.prototype.dayOfYear", he5.prototype.dayOfYear), fe5("Temporal.Calendar.prototype.daysInMonth", he5.prototype.daysInMonth), fe5("Temporal.Calendar.prototype.daysInWeek", he5.prototype.daysInWeek), fe5("Temporal.Calendar.prototype.daysInYear", he5.prototype.daysInYear), fe5("Temporal.Calendar.prototype.era", he5.prototype.era), fe5("Temporal.Calendar.prototype.eraYear", he5.prototype.eraYear), fe5("Temporal.Calendar.prototype.fields", he5.prototype.fields), fe5("Temporal.Calendar.prototype.inLeapYear", he5.prototype.inLeapYear), fe5("Temporal.Calendar.prototype.mergeFields", he5.prototype.mergeFields), fe5("Temporal.Calendar.prototype.month", he5.prototype.month), fe5("Temporal.Calendar.prototype.monthCode", he5.prototype.monthCode), fe5("Temporal.Calendar.prototype.monthDayFromFields", he5.prototype.monthDayFromFields), fe5("Temporal.Calendar.prototype.monthsInYear", he5.prototype.monthsInYear), fe5("Temporal.Calendar.prototype.weekOfYear", he5.prototype.weekOfYear), fe5("Temporal.Calendar.prototype.year", he5.prototype.year), fe5("Temporal.Calendar.prototype.yearMonthFromFields", he5.prototype.yearMonthFromFields), fe5("Temporal.Calendar.prototype.yearOfWeek", he5.prototype.yearOfWeek), le7.iso8601 = { dateFromFields(t32, e26, r91) {
    let o35 = _7(t32, ["day", "month", "monthCode", "year"], ["year", "day"]), i29 = Ee7(e26);
    o35 = Dn4(o35);
    let { year: a27, month: s29, day: d25 } = o35;
    return { year: a27, month: s29, day: d25 } = Yn4(a27, s29, d25, i29), pr4(a27, s29, d25, r91);
  }, yearMonthFromFields(t32, e26, r91) {
    let o35 = _7(t32, ["month", "monthCode", "year"], ["year"]), i29 = Ee7(e26);
    o35 = Dn4(o35);
    let { year: a27, month: s29 } = o35;
    return { year: a27, month: s29 } = function(h35, u30, l35) {
      let m27 = h35, f25 = u30;
      switch (l35) {
        case "reject":
          Rr3(m27, f25, 1);
          break;
        case "constrain":
          ({ year: m27, month: f25 } = Ya4(m27, f25));
      }
      return { year: m27, month: f25 };
    }(a27, s29, i29), Kt5(a27, s29, r91, 1);
  }, monthDayFromFields(t32, e26, r91) {
    let o35 = _7(t32, ["day", "month", "monthCode", "year"], ["day"]), i29 = Ee7(e26);
    if (o35.month !== void 0 && o35.year === void 0 && o35.monthCode === void 0)
      throw new TypeError("either year or monthCode required with month");
    let a27 = o35.monthCode === void 0;
    o35 = Dn4(o35);
    let { month: s29, day: d25, year: h35 } = o35;
    return { month: s29, day: d25 } = Yn4(a27 ? h35 : 1972, s29, d25, i29), Vt5(s29, d25, r91, 1972);
  }, fields: (t32) => t32, fieldKeysToIgnore(t32) {
    let e26 = new Xa4();
    for (let r91 = 0; r91 < t32.length; r91++) {
      let o35 = t32[r91];
      N8(Ze2, e26, [o35]), o35 === "month" ? N8(Ze2, e26, ["monthCode"]) : o35 === "monthCode" && N8(Ze2, e26, ["month"]);
    }
    return [...N8(Qa3, e26, [])];
  }, dateAdd(t32, e26, r91, o35, i29, a27, s29) {
    let d25 = n7(t32, $7), h35 = n7(t32, R8), u30 = n7(t32, B8);
    return { year: d25, month: h35, day: u30 } = st5(d25, h35, u30, e26, r91, o35, i29, a27), pr4(d25, h35, u30, s29);
  }, dateUntil: (t32, e26, r91) => ni3(n7(t32, $7), n7(t32, R8), n7(t32, B8), n7(e26, $7), n7(e26, R8), n7(e26, B8), r91), year: (t32) => n7(t32, $7), era() {
  }, eraYear() {
  }, month: (t32) => n7(t32, R8), monthCode: (t32) => Lr4(n7(t32, R8)), day: (t32) => n7(t32, B8), dayOfWeek: (t32) => To3(n7(t32, $7), n7(t32, R8), n7(t32, B8)), dayOfYear: (t32) => Nn3(n7(t32, $7), n7(t32, R8), n7(t32, B8)), weekOfYear: (t32) => Fi4(n7(t32, $7), n7(t32, R8), n7(t32, B8)).week, yearOfWeek: (t32) => Fi4(n7(t32, $7), n7(t32, R8), n7(t32, B8)).year, daysInWeek: () => 7, daysInMonth: (t32) => Ur4(n7(t32, $7), n7(t32, R8)), daysInYear(t32) {
    let e26 = t32;
    return Re6(e26, $7) || (e26 = ae6(e26)), Xr4(n7(e26, $7)) ? 366 : 365;
  }, monthsInYear: () => 12, inLeapYear(t32) {
    let e26 = t32;
    return Re6(e26, $7) || (e26 = ae6(e26)), Xr4(n7(e26, $7));
  } };
  var Me5 = class t4 {
    constructor(e26) {
      if (this.map = /* @__PURE__ */ new Map(), this.calls = 0, this.hits = 0, this.misses = 0, this.now = globalThis.performance ? globalThis.performance.now() : Date.now(), e26 !== void 0) {
        let r91 = 0;
        for (let o35 of e26.map.entries()) {
          if (++r91 > t4.MAX_CACHE_ENTRIES)
            break;
          this.map.set(...o35);
        }
      }
    }
    get(e26) {
      let r91 = this.map.get(e26);
      return r91 && (this.hits++, this.report()), this.calls++, r91;
    }
    set(e26, r91) {
      this.map.set(e26, r91), this.misses++, this.report();
    }
    report() {
    }
    setObject(e26) {
      if (t4.objectMap.get(e26))
        throw new RangeError("object already cached");
      t4.objectMap.set(e26, this), this.report();
    }
    static getCacheForObject(e26) {
      let r91 = t4.objectMap.get(e26);
      return r91 || (r91 = new t4(), t4.objectMap.set(e26, r91)), r91;
    }
  };
  function Ha4({ isoYear: t32, isoMonth: e26, isoDay: r91 }) {
    return `${wt5(t32)}-${ue6(e26)}-${ue6(r91)}T00:00Z`;
  }
  function ho4(t32, e26) {
    return { years: t32.year - e26.year, months: t32.month - e26.month, days: t32.day - e26.day };
  }
  Me5.objectMap = /* @__PURE__ */ new WeakMap(), Me5.MAX_CACHE_ENTRIES = 1e3;
  var Hr4 = class {
    constructor() {
      this.eraLength = "short", this.hasEra = true, this.erasBeginMidYear = false;
    }
    getFormatter() {
      return this.formatter === void 0 && (this.formatter = new Bs3(`en-US-u-ca-${this.id}`, { day: "numeric", month: "numeric", year: "numeric", era: this.eraLength, timeZone: "UTC" })), this.formatter;
    }
    isoToCalendarDate(e26, r91) {
      let { year: o35, month: i29, day: a27 } = e26, s29 = JSON.stringify({ func: "isoToCalendarDate", isoYear: o35, isoMonth: i29, isoDay: a27, id: this.id }), d25 = r91.get(s29);
      if (d25)
        return d25;
      let h35 = this.getFormatter(), u30, l35;
      try {
        l35 = Ha4({ isoYear: o35, isoMonth: i29, isoDay: a27 }), u30 = h35.formatToParts(new Date(l35));
      } catch {
        throw new RangeError(`Invalid ISO date: ${JSON.stringify({ isoYear: o35, isoMonth: i29, isoDay: a27 })}`);
      }
      let m27 = {};
      for (let { type: y24, value: p24 } of u30) {
        if (y24 === "year" && (m27.eraYear = +p24), y24 === "relatedYear" && (m27.eraYear = +p24), y24 === "month") {
          let w26 = /^([0-9]*)(.*?)$/.exec(p24);
          if (!w26 || w26.length != 3 || !w26[1] && !w26[2])
            throw new RangeError(`Unexpected month: ${p24}`);
          if (m27.month = w26[1] ? +w26[1] : 1, m27.month < 1)
            throw new RangeError(`Invalid month ${p24} from ${l35}[u-ca-${this.id}] (probably due to https://bugs.chromium.org/p/v8/issues/detail?id=10527)`);
          if (m27.month > 13)
            throw new RangeError(`Invalid month ${p24} from ${l35}[u-ca-${this.id}] (probably due to https://bugs.chromium.org/p/v8/issues/detail?id=10529)`);
          w26[2] && (m27.monthExtra = w26[2]);
        }
        y24 === "day" && (m27.day = +p24), this.hasEra && y24 === "era" && p24 != null && p24 !== "" && (p24 = p24.split(" (")[0], m27.era = p24.normalize("NFD").replace(/[^-0-9 \p{L}]/gu, "").replace(" ", "-").toLowerCase());
      }
      if (m27.eraYear === void 0)
        throw new RangeError(`Intl.DateTimeFormat.formatToParts lacks relatedYear in ${this.id} calendar. Try Node 14+ or modern browsers.`);
      if (this.reviseIntlEra) {
        let { era: y24, eraYear: p24 } = this.reviseIntlEra(m27, e26);
        m27.era = y24, m27.eraYear = p24;
      }
      this.checkIcuBugs && this.checkIcuBugs(e26);
      let f25 = this.adjustCalendarDate(m27, r91, "constrain", true);
      if (f25.year === void 0)
        throw new RangeError(`Missing year converting ${JSON.stringify(e26)}`);
      if (f25.month === void 0)
        throw new RangeError(`Missing month converting ${JSON.stringify(e26)}`);
      if (f25.day === void 0)
        throw new RangeError(`Missing day converting ${JSON.stringify(e26)}`);
      return r91.set(s29, f25), ["constrain", "reject"].forEach((y24) => {
        let p24 = JSON.stringify({ func: "calendarToIsoDate", year: f25.year, month: f25.month, day: f25.day, overflow: y24, id: this.id });
        r91.set(p24, e26);
      }), f25;
    }
    validateCalendarDate(e26) {
      let { era: r91, month: o35, year: i29, day: a27, eraYear: s29, monthCode: d25, monthExtra: h35 } = e26;
      if (h35 !== void 0)
        throw new RangeError("Unexpected `monthExtra` value");
      if (i29 === void 0 && s29 === void 0)
        throw new TypeError("year or eraYear is required");
      if (o35 === void 0 && d25 === void 0)
        throw new TypeError("month or monthCode is required");
      if (a27 === void 0)
        throw new RangeError("Missing day");
      if (d25 !== void 0) {
        if (typeof d25 != "string")
          throw new RangeError("monthCode must be a string, not " + typeof d25);
        if (!/^M([01]?\d)(L?)$/.test(d25))
          throw new RangeError(`Invalid monthCode: ${d25}`);
      }
      if (this.constantEra) {
        if (r91 !== void 0 && r91 !== this.constantEra)
          throw new RangeError(`era must be ${this.constantEra}, not ${r91}`);
        if (s29 !== void 0 && i29 !== void 0 && s29 !== i29)
          throw new RangeError(`eraYear ${s29} does not match year ${i29}`);
      }
      if (this.hasEra && e26.era === void 0 != (e26.eraYear === void 0))
        throw new RangeError("properties 'era' and 'eraYear' must be provided together");
    }
    adjustCalendarDate(e26, r91, o35 = "constrain", i29 = false) {
      if (this.calendarType === "lunisolar")
        throw new RangeError("Override required for lunisolar calendars");
      let a27 = e26;
      if (this.validateCalendarDate(a27), this.constantEra) {
        let { year: u30, eraYear: l35 } = a27;
        a27 = { ...a27, era: this.constantEra, year: u30 !== void 0 ? u30 : l35, eraYear: l35 !== void 0 ? l35 : u30 };
      }
      let s29 = this.monthsInYear(a27, r91), { month: d25, monthCode: h35 } = a27;
      return { month: d25, monthCode: h35 } = Dn4(a27, o35, s29), { ...a27, month: d25, monthCode: h35 };
    }
    regulateMonthDayNaive(e26, r91, o35) {
      let i29 = this.monthsInYear(e26, o35), { month: a27, day: s29 } = e26;
      return r91 === "reject" ? (Pe4(a27, 1, i29), Pe4(s29, 1, this.maximumMonthLength(e26))) : (a27 = tr4(a27, 1, i29), s29 = tr4(s29, 1, this.maximumMonthLength({ ...e26, month: a27 }))), { ...e26, month: a27, day: s29 };
    }
    calendarToIsoDate(e26, r91 = "constrain", o35) {
      let i29 = e26, a27 = this.adjustCalendarDate(e26, o35, r91, false);
      a27 = this.regulateMonthDayNaive(a27, r91, o35);
      let { year: s29, month: d25, day: h35 } = a27, u30 = JSON.stringify({ func: "calendarToIsoDate", year: s29, month: d25, day: h35, overflow: r91, id: this.id }), l35, m27 = o35.get(u30);
      if (m27 || i29.year !== void 0 && i29.month !== void 0 && i29.day !== void 0 && (i29.year !== a27.year || i29.month !== a27.month || i29.day !== a27.day) && (l35 = JSON.stringify({ func: "calendarToIsoDate", year: i29.year, month: i29.month, day: i29.day, overflow: r91, id: this.id }), m27 = o35.get(l35), m27))
        return m27;
      let f25 = this.estimateIsoDate({ year: s29, month: d25, day: h35 }), y24 = (E24) => {
        let I26 = this.addDaysIso(f25, E24);
        if (a27.day > this.minimumMonthLength(a27)) {
          let b28 = this.isoToCalendarDate(I26, o35);
          for (; b28.month !== d25 || b28.year !== s29; ) {
            if (r91 === "reject")
              throw new RangeError(`day ${h35} does not exist in month ${d25} of year ${s29}`);
            I26 = this.addDaysIso(I26, -1), b28 = this.isoToCalendarDate(I26, o35);
          }
        }
        return I26;
      }, p24 = 0, w26 = this.isoToCalendarDate(f25, o35), g31 = ho4(a27, w26);
      if (g31.years !== 0 || g31.months !== 0 || g31.days !== 0) {
        let E24 = 365 * g31.years + 30 * g31.months + g31.days;
        f25 = this.addDaysIso(f25, E24), w26 = this.isoToCalendarDate(f25, o35), g31 = ho4(a27, w26), g31.years === 0 && g31.months === 0 ? f25 = y24(g31.days) : p24 = this.compareCalendarDates(a27, w26);
      }
      let T23 = 8;
      for (; p24; ) {
        f25 = this.addDaysIso(f25, p24 * T23);
        let E24 = w26;
        w26 = this.isoToCalendarDate(f25, o35);
        let I26 = p24;
        if (p24 = this.compareCalendarDates(a27, w26), p24) {
          if (g31 = ho4(a27, w26), g31.years === 0 && g31.months === 0)
            f25 = y24(g31.days), p24 = 0;
          else if (I26 && p24 !== I26)
            if (T23 > 1)
              T23 /= 2;
            else {
              if (r91 === "reject")
                throw new RangeError(`Can't find ISO date from calendar date: ${JSON.stringify({ ...i29 })}`);
              this.compareCalendarDates(w26, E24) > 0 && (f25 = this.addDaysIso(f25, -1)), p24 = 0;
            }
        }
      }
      if (o35.set(u30, f25), l35 && o35.set(l35, f25), a27.year === void 0 || a27.month === void 0 || a27.day === void 0 || a27.monthCode === void 0 || this.hasEra && (a27.era === void 0 || a27.eraYear === void 0))
        throw new RangeError("Unexpected missing property");
      return f25;
    }
    temporalToCalendarDate(e26, r91) {
      let o35 = { year: n7(e26, $7), month: n7(e26, R8), day: n7(e26, B8) };
      return this.isoToCalendarDate(o35, r91);
    }
    compareCalendarDates(e26, r91) {
      let o35 = _7(e26, ["day", "month", "year"], ["day", "month", "year"]), i29 = _7(r91, ["day", "month", "year"], ["day", "month", "year"]);
      return o35.year !== i29.year ? dt4(o35.year - i29.year) : o35.month !== i29.month ? dt4(o35.month - i29.month) : o35.day !== i29.day ? dt4(o35.day - i29.day) : 0;
    }
    regulateDate(e26, r91 = "constrain", o35) {
      let i29 = this.calendarToIsoDate(e26, r91, o35);
      return this.isoToCalendarDate(i29, o35);
    }
    addDaysIso(e26, r91) {
      return st5(e26.year, e26.month, e26.day, 0, 0, 0, r91, "constrain");
    }
    addDaysCalendar(e26, r91, o35) {
      let i29 = this.calendarToIsoDate(e26, "constrain", o35), a27 = this.addDaysIso(i29, r91);
      return this.isoToCalendarDate(a27, o35);
    }
    addMonthsCalendar(e26, r91, o35, i29) {
      let a27 = e26, { day: s29 } = a27;
      for (let d25 = 0, h35 = Fs4(r91); d25 < h35; d25++) {
        let { month: u30 } = a27, l35 = a27, m27 = r91 < 0 ? -Math.max(s29, this.daysInPreviousMonth(a27, i29)) : this.daysInMonth(a27, i29), f25 = this.calendarToIsoDate(a27, "constrain", i29), y24 = this.addDaysIso(f25, m27);
        if (a27 = this.isoToCalendarDate(y24, i29), r91 > 0) {
          let p24 = this.monthsInYear(l35, i29);
          for (; a27.month - 1 != u30 % p24; )
            y24 = this.addDaysIso(y24, -1), a27 = this.isoToCalendarDate(y24, i29);
        }
        a27.day !== s29 && (a27 = this.regulateDate({ ...a27, day: s29 }, "constrain", i29));
      }
      if (o35 === "reject" && a27.day !== s29)
        throw new RangeError(`Day ${s29} does not exist in resulting calendar month`);
      return a27;
    }
    addCalendar(e26, { years: r91 = 0, months: o35 = 0, weeks: i29 = 0, days: a27 = 0 }, s29, d25) {
      let { year: h35, day: u30, monthCode: l35 } = e26, m27 = this.adjustCalendarDate({ year: h35 + r91, monthCode: l35, day: u30 }, d25), f25 = this.addMonthsCalendar(m27, o35, s29, d25), y24 = a27 + 7 * i29;
      return this.addDaysCalendar(f25, y24, d25);
    }
    untilCalendar(e26, r91, o35, i29) {
      let a27 = 0, s29 = 0, d25 = 0, h35 = 0;
      switch (o35) {
        case "day":
          a27 = this.calendarDaysUntil(e26, r91, i29);
          break;
        case "week": {
          let u30 = this.calendarDaysUntil(e26, r91, i29);
          a27 = u30 % 7, s29 = (u30 - a27) / 7;
          break;
        }
        case "month":
        case "year": {
          let u30 = this.compareCalendarDates(r91, e26);
          if (!u30)
            return { years: 0, months: 0, weeks: 0, days: 0 };
          let l35 = r91.year - e26.year, m27 = r91.day - e26.day;
          if (o35 === "year" && l35) {
            let p24 = 0;
            r91.monthCode > e26.monthCode && (p24 = 1), r91.monthCode < e26.monthCode && (p24 = -1), p24 || (p24 = Math.sign(m27)), h35 = p24 * u30 < 0 ? l35 - u30 : l35;
          }
          let f25, y24 = h35 ? this.addCalendar(e26, { years: h35 }, "constrain", i29) : e26;
          do
            d25 += u30, f25 = y24, y24 = this.addMonthsCalendar(f25, u30, "constrain", i29), y24.day !== e26.day && (y24 = this.regulateDate({ ...y24, day: e26.day }, "constrain", i29));
          while (this.compareCalendarDates(r91, y24) * u30 >= 0);
          d25 -= u30, a27 = this.calendarDaysUntil(f25, r91, i29);
          break;
        }
      }
      return { years: h35, months: d25, weeks: s29, days: a27 };
    }
    daysInMonth(e26, r91) {
      let { day: o35 } = e26, i29 = this.maximumMonthLength(e26), a27 = this.minimumMonthLength(e26);
      if (a27 === i29)
        return a27;
      let s29 = o35 <= i29 - a27 ? i29 : a27, d25 = this.calendarToIsoDate(e26, "constrain", r91), h35 = this.addDaysIso(d25, s29), u30 = this.isoToCalendarDate(h35, r91), l35 = this.addDaysIso(h35, -u30.day);
      return this.isoToCalendarDate(l35, r91).day;
    }
    daysInPreviousMonth(e26, r91) {
      let { day: o35, month: i29, year: a27 } = e26, s29 = { year: i29 > 1 ? a27 : a27 - 1, month: i29, day: 1 }, d25 = i29 > 1 ? i29 - 1 : this.monthsInYear(s29, r91);
      s29 = { ...s29, month: d25 };
      let h35 = this.minimumMonthLength(s29), u30 = this.maximumMonthLength(s29);
      if (h35 === u30)
        return u30;
      let l35 = this.calendarToIsoDate(e26, "constrain", r91), m27 = this.addDaysIso(l35, -o35);
      return this.isoToCalendarDate(m27, r91).day;
    }
    startOfCalendarYear(e26) {
      return { year: e26.year, month: 1, monthCode: "M01", day: 1 };
    }
    startOfCalendarMonth(e26) {
      return { year: e26.year, month: e26.month, day: 1 };
    }
    calendarDaysUntil(e26, r91, o35) {
      let i29 = this.calendarToIsoDate(e26, "constrain", o35), a27 = this.calendarToIsoDate(r91, "constrain", o35);
      return this.isoDaysUntil(i29, a27);
    }
    isoDaysUntil(e26, r91) {
      return ni3(e26.year, e26.month, e26.day, r91.year, r91.month, r91.day, "day").days;
    }
    monthDayFromFields(e26, r91, o35) {
      let i29, a27, s29, d25, h35, { monthCode: u30, day: l35 } = e26;
      if (u30 === void 0) {
        let { year: y24, era: p24, eraYear: w26 } = e26;
        if (y24 === void 0 && (p24 === void 0 || w26 === void 0))
          throw new TypeError("when `monthCode` is omitted, `year` (or `era` and `eraYear`) and `month` are required");
        ({ monthCode: u30, day: l35 } = this.isoToCalendarDate(this.calendarToIsoDate(e26, r91, o35), o35));
      }
      let m27 = this.isoToCalendarDate({ year: 1972, month: 12, day: 31 }, o35), f25 = m27.monthCode > u30 || m27.monthCode === u30 && m27.day >= l35 ? m27.year : m27.year - 1;
      for (let y24 = 0; y24 < 100; y24++) {
        let p24 = this.adjustCalendarDate({ day: l35, monthCode: u30, year: f25 - y24 }, o35), w26 = this.calendarToIsoDate(p24, "constrain", o35), g31 = this.isoToCalendarDate(w26, o35);
        if ({ year: i29, month: a27, day: s29 } = w26, g31.monthCode === u30 && g31.day === l35)
          return { month: a27, day: s29, year: i29 };
        r91 === "constrain" && (d25 === void 0 || g31.monthCode === d25.monthCode && g31.day > d25.day) && (d25 = g31, h35 = w26);
      }
      if (r91 === "constrain" && h35 !== void 0)
        return h35;
      throw new RangeError(`No recent ${this.id} year with monthCode ${u30} and day ${l35}`);
    }
  };
  var Do3 = class extends Hr4 {
    constructor() {
      super(...arguments), this.id = "hebrew", this.calendarType = "lunisolar", this.months = { Tishri: { leap: 1, regular: 1, monthCode: "M01", days: 30 }, Heshvan: { leap: 2, regular: 2, monthCode: "M02", days: { min: 29, max: 30 } }, Kislev: { leap: 3, regular: 3, monthCode: "M03", days: { min: 29, max: 30 } }, Tevet: { leap: 4, regular: 4, monthCode: "M04", days: 29 }, Shevat: { leap: 5, regular: 5, monthCode: "M05", days: 30 }, Adar: { leap: void 0, regular: 6, monthCode: "M06", days: 29 }, "Adar I": { leap: 6, regular: void 0, monthCode: "M05L", days: 30 }, "Adar II": { leap: 7, regular: void 0, monthCode: "M06", days: 29 }, Nisan: { leap: 8, regular: 7, monthCode: "M07", days: 30 }, Iyar: { leap: 9, regular: 8, monthCode: "M08", days: 29 }, Sivan: { leap: 10, regular: 9, monthCode: "M09", days: 30 }, Tamuz: { leap: 11, regular: 10, monthCode: "M10", days: 29 }, Av: { leap: 12, regular: 11, monthCode: "M11", days: 30 }, Elul: { leap: 13, regular: 12, monthCode: "M12", days: 29 } }, this.hasEra = false;
    }
    inLeapYear(e26) {
      let { year: r91 } = e26;
      return (7 * r91 + 1) % 19 < 7;
    }
    monthsInYear(e26) {
      return this.inLeapYear(e26) ? 13 : 12;
    }
    minimumMonthLength(e26) {
      return this.minMaxMonthLength(e26, "min");
    }
    maximumMonthLength(e26) {
      return this.minMaxMonthLength(e26, "max");
    }
    minMaxMonthLength(e26, r91) {
      let { month: o35, year: i29 } = e26, a27 = this.getMonthCode(i29, o35), s29 = bo4(this.months).find((h35) => h35[1].monthCode === a27);
      if (s29 === void 0)
        throw new RangeError(`unmatched Hebrew month: ${o35}`);
      let d25 = s29[1].days;
      return typeof d25 == "number" ? d25 : d25[r91];
    }
    estimateIsoDate(e26) {
      let { year: r91 } = e26;
      return { year: r91 - 3760, month: 1, day: 1 };
    }
    getMonthCode(e26, r91) {
      return this.inLeapYear({ year: e26 }) ? r91 === 6 ? Lr4(5, true) : Lr4(r91 < 6 ? r91 : r91 - 1) : Lr4(r91);
    }
    adjustCalendarDate(e26, r91, o35 = "constrain", i29 = false) {
      let { year: a27, eraYear: s29, month: d25, monthCode: h35, day: u30, monthExtra: l35 } = e26;
      if (a27 === void 0 && s29 !== void 0 && (a27 = s29), s29 === void 0 && a27 !== void 0 && (s29 = a27), i29) {
        if (l35) {
          let m27 = this.months[l35];
          if (!m27)
            throw new RangeError(`Unrecognized month from formatToParts: ${l35}`);
          d25 = this.inLeapYear({ year: a27 }) ? m27.leap : m27.regular;
        }
        return h35 = this.getMonthCode(a27, d25), { year: a27, month: d25, day: u30, era: void 0, eraYear: s29, monthCode: h35 };
      }
      if (this.validateCalendarDate(e26), d25 === void 0)
        if (h35.endsWith("L")) {
          if (h35 !== "M05L")
            throw new RangeError(`Hebrew leap month must have monthCode M05L, not ${h35}`);
          if (d25 = 6, !this.inLeapYear({ year: a27 })) {
            if (o35 === "reject")
              throw new RangeError(`Hebrew monthCode M05L is invalid in year ${a27} which is not a leap year`);
            d25 = 6, h35 = "M06";
          }
        } else {
          d25 = li3(h35), this.inLeapYear({ year: a27 }) && d25 >= 6 && d25++;
          let m27 = this.monthsInYear({ year: a27 });
          if (d25 < 1 || d25 > m27)
            throw new RangeError(`Invalid monthCode: ${h35}`);
        }
      else if (o35 === "reject" ? (Pe4(d25, 1, this.monthsInYear({ year: a27 })), Pe4(u30, 1, this.maximumMonthLength({ year: a27, month: d25 }))) : (d25 = tr4(d25, 1, this.monthsInYear({ year: a27 })), u30 = tr4(u30, 1, this.maximumMonthLength({ year: a27, month: d25 }))), h35 === void 0)
        h35 = this.getMonthCode(a27, d25);
      else if (this.getMonthCode(a27, d25) !== h35)
        throw new RangeError(`monthCode ${h35} doesn't correspond to month ${d25} in Hebrew year ${a27}`);
      return { ...e26, day: u30, month: d25, monthCode: h35, year: a27, eraYear: s29 };
    }
  };
  var et5 = class extends Hr4 {
    constructor() {
      super(...arguments), this.calendarType = "lunar", this.DAYS_PER_ISLAMIC_YEAR = 354 + 11 / 30, this.DAYS_PER_ISO_YEAR = 365.2425, this.constantEra = "ah";
    }
    inLeapYear(e26, r91) {
      return this.daysInMonth({ year: e26.year, month: 12, day: 1 }, r91) === 30;
    }
    monthsInYear() {
      return 12;
    }
    minimumMonthLength() {
      return 29;
    }
    maximumMonthLength() {
      return 30;
    }
    estimateIsoDate(e26) {
      let { year: r91 } = this.adjustCalendarDate(e26);
      return { year: Ns4(r91 * this.DAYS_PER_ISLAMIC_YEAR / this.DAYS_PER_ISO_YEAR) + 622, month: 1, day: 1 };
    }
  };
  var Un3 = class extends et5 {
    constructor() {
      super(...arguments), this.id = "islamic";
    }
  };
  var Co4 = class extends et5 {
    constructor() {
      super(...arguments), this.id = "islamic-umalqura";
    }
  };
  var Oo3 = class extends et5 {
    constructor() {
      super(...arguments), this.id = "islamic-tbla";
    }
  };
  var Mo3 = class extends et5 {
    constructor() {
      super(...arguments), this.id = "islamic-civil";
    }
  };
  var $o3 = class extends et5 {
    constructor() {
      super(...arguments), this.id = "islamic-rgsa";
    }
  };
  var So4 = class extends et5 {
    constructor() {
      super(...arguments), this.id = "islamicc";
    }
  };
  var Yo3 = class extends Hr4 {
    constructor() {
      super(...arguments), this.id = "persian", this.calendarType = "solar", this.constantEra = "ap";
    }
    inLeapYear(e26, r91) {
      return Un3.prototype.inLeapYear.call(this, e26, r91);
    }
    monthsInYear() {
      return 12;
    }
    minimumMonthLength(e26) {
      let { month: r91 } = e26;
      return r91 === 12 ? 29 : r91 <= 6 ? 31 : 30;
    }
    maximumMonthLength(e26) {
      let { month: r91 } = e26;
      return r91 === 12 ? 30 : r91 <= 6 ? 31 : 30;
    }
    estimateIsoDate(e26) {
      let { year: r91 } = this.adjustCalendarDate(e26);
      return { year: r91 + 621, month: 1, day: 1 };
    }
  };
  var Ro4 = class extends Hr4 {
    constructor() {
      super(...arguments), this.id = "indian", this.calendarType = "solar", this.constantEra = "saka", this.months = { 1: { length: 30, month: 3, day: 22, leap: { length: 31, month: 3, day: 21 } }, 2: { length: 31, month: 4, day: 21 }, 3: { length: 31, month: 5, day: 22 }, 4: { length: 31, month: 6, day: 22 }, 5: { length: 31, month: 7, day: 23 }, 6: { length: 31, month: 8, day: 23 }, 7: { length: 30, month: 9, day: 23 }, 8: { length: 30, month: 10, day: 23 }, 9: { length: 30, month: 11, day: 22 }, 10: { length: 30, month: 12, day: 22 }, 11: { length: 30, month: 1, nextYear: true, day: 21 }, 12: { length: 30, month: 2, nextYear: true, day: 20 } }, this.vulnerableToBceBug = (/* @__PURE__ */ new Date("0000-01-01T00:00Z")).toLocaleDateString("en-US-u-ca-indian", { timeZone: "UTC" }) !== "10/11/-79 Saka";
    }
    inLeapYear(e26) {
      return es4(e26.year + 78);
    }
    monthsInYear() {
      return 12;
    }
    minimumMonthLength(e26) {
      return this.getMonthInfo(e26).length;
    }
    maximumMonthLength(e26) {
      return this.getMonthInfo(e26).length;
    }
    getMonthInfo(e26) {
      let { month: r91 } = e26, o35 = this.months[r91];
      if (o35 === void 0)
        throw new RangeError(`Invalid month: ${r91}`);
      return this.inLeapYear(e26) && o35.leap && (o35 = o35.leap), o35;
    }
    estimateIsoDate(e26) {
      let r91 = this.adjustCalendarDate(e26), o35 = this.getMonthInfo(r91);
      return st5(r91.year + 78 + (o35.nextYear ? 1 : 0), o35.month, o35.day, 0, 0, 0, r91.day - 1, "constrain");
    }
    checkIcuBugs(e26) {
      if (this.vulnerableToBceBug && e26.year < 1)
        throw new RangeError(`calendar '${this.id}' is broken for ISO dates before 0001-01-01 (see https://bugs.chromium.org/p/v8/issues/detail?id=10529)`);
    }
  };
  function es4(t32) {
    return t32 % 4 == 0 && (t32 % 100 != 0 || t32 % 400 == 0);
  }
  var yt5 = class extends Hr4 {
    constructor(e26, r91) {
      super(), this.calendarType = "solar", this.v8IsVulnerableToJulianBug = (/* @__PURE__ */ new Date("+001001-01-01T00:00Z")).toLocaleDateString("en-US-u-ca-japanese", { timeZone: "UTC" }).startsWith("12"), this.calendarIsVulnerableToJulianBug = false, this.id = e26;
      let { eras: o35, anchorEra: i29 } = function(s29) {
        let d25, h35 = s29;
        if (h35.length === 0)
          throw new RangeError("Invalid era data: eras are required");
        if (h35.length === 1 && h35[0].reverseOf)
          throw new RangeError("Invalid era data: anchor era cannot count years backwards");
        if (h35.length === 1 && !h35[0].name)
          throw new RangeError("Invalid era data: at least one named era is required");
        if (h35.filter((l35) => l35.reverseOf != null).length > 1)
          throw new RangeError("Invalid era data: only one era can count years backwards");
        h35.forEach((l35) => {
          if (l35.isAnchor || !l35.anchorEpoch && !l35.reverseOf) {
            if (d25)
              throw new RangeError("Invalid era data: cannot have multiple anchor eras");
            d25 = l35, l35.anchorEpoch = { year: l35.hasYearZero ? 0 : 1 };
          } else if (!l35.name)
            throw new RangeError("If era name is blank, it must be the anchor era");
        }), h35 = h35.filter((l35) => l35.name), h35.forEach((l35) => {
          let { reverseOf: m27 } = l35;
          if (m27) {
            let f25 = h35.find((y24) => y24.name === m27);
            if (f25 === void 0)
              throw new RangeError(`Invalid era data: unmatched reverseOf era: ${m27}`);
            l35.reverseOf = f25, l35.anchorEpoch = f25.anchorEpoch, l35.isoEpoch = f25.isoEpoch;
          }
          l35.anchorEpoch.month === void 0 && (l35.anchorEpoch.month = 1), l35.anchorEpoch.day === void 0 && (l35.anchorEpoch.day = 1);
        }), ks3.call(h35, (l35, m27) => {
          if (l35.reverseOf)
            return 1;
          if (m27.reverseOf)
            return -1;
          if (!l35.isoEpoch || !m27.isoEpoch)
            throw new RangeError("Invalid era data: missing ISO epoch");
          return m27.isoEpoch.year - l35.isoEpoch.year;
        });
        let u30 = h35[h35.length - 1].reverseOf;
        if (u30 && u30 !== h35[h35.length - 2])
          throw new RangeError("Invalid era data: invalid reverse-sign era");
        return h35.forEach((l35, m27) => {
          l35.genericName = "era" + (h35.length - 1 - m27);
        }), { eras: h35, anchorEra: d25 || h35[0] };
      }(r91);
      this.anchorEra = i29, this.eras = o35;
    }
    inLeapYear(e26) {
      let { year: r91 } = this.estimateIsoDate({ month: 1, day: 1, year: e26.year });
      return es4(r91);
    }
    monthsInYear() {
      return 12;
    }
    minimumMonthLength(e26) {
      let { month: r91 } = e26;
      return r91 === 2 ? this.inLeapYear(e26) ? 29 : 28 : [4, 6, 9, 11].indexOf(r91) >= 0 ? 30 : 31;
    }
    maximumMonthLength(e26) {
      return this.minimumMonthLength(e26);
    }
    completeEraYear(e26) {
      let r91 = (d25, h35) => {
        let u30 = e26[d25];
        if (u30 != null && u30 != h35)
          throw new RangeError(`Input ${d25} ${u30} doesn't match calculated value ${h35}`);
      }, o35 = (d25) => {
        let h35, u30 = { ...e26, year: d25 }, l35 = this.eras.find((m27, f25) => {
          if (f25 === this.eras.length - 1) {
            if (m27.reverseOf) {
              if (d25 > 0)
                throw new RangeError(`Signed year ${d25} is invalid for era ${m27.name}`);
              return h35 = m27.anchorEpoch.year - d25, true;
            }
            return h35 = d25 - m27.anchorEpoch.year + (m27.hasYearZero ? 0 : 1), true;
          }
          return this.compareCalendarDates(u30, m27.anchorEpoch) >= 0 && (h35 = d25 - m27.anchorEpoch.year + (m27.hasYearZero ? 0 : 1), true);
        });
        if (!l35)
          throw new RangeError(`Year ${d25} was not matched by any era`);
        return { eraYear: h35, era: l35.name };
      }, { year: i29, eraYear: a27, era: s29 } = e26;
      if (i29 != null)
        ({ eraYear: a27, era: s29 } = o35(i29)), r91("era", s29), r91("eraYear", a27);
      else {
        if (a27 == null)
          throw new RangeError("Either `year` or `eraYear` and `era` are required");
        {
          let d25 = s29 === void 0 ? void 0 : this.eras.find((h35) => h35.name === s29 || h35.genericName === s29);
          if (!d25)
            throw new RangeError(`Era ${s29} (ISO year ${a27}) was not matched by any era`);
          if (a27 < 1 && d25.reverseOf)
            throw new RangeError(`Years in ${s29} era must be positive, not ${i29}`);
          i29 = d25.reverseOf ? d25.anchorEpoch.year - a27 : a27 + d25.anchorEpoch.year - (d25.hasYearZero ? 0 : 1), r91("year", i29), { eraYear: a27, era: s29 } = o35(i29);
        }
      }
      return { ...e26, year: i29, eraYear: a27, era: s29 };
    }
    adjustCalendarDate(e26, r91, o35 = "constrain") {
      let i29 = e26, { month: a27, monthCode: s29 } = i29;
      return a27 === void 0 && (i29 = { ...i29, month: li3(s29) }), this.validateCalendarDate(i29), i29 = this.completeEraYear(i29), super.adjustCalendarDate(i29, r91, o35);
    }
    estimateIsoDate(e26) {
      let r91 = this.adjustCalendarDate(e26), { year: o35, month: i29, day: a27 } = r91, { anchorEra: s29 } = this;
      return Yn4(o35 + s29.isoEpoch.year - (s29.hasYearZero ? 0 : 1), i29, a27, "constrain");
    }
    checkIcuBugs(e26) {
      if (this.calendarIsVulnerableToJulianBug && this.v8IsVulnerableToJulianBug && Jr4(e26.year, e26.month, e26.day, 1582, 10, 15) < 0)
        throw new RangeError(`calendar '${this.id}' is broken for ISO dates before 1582-10-15 (see https://bugs.chromium.org/p/chromium/issues/detail?id=1173158)`);
    }
  };
  var Qt4 = class extends yt5 {
    constructor(e26, r91) {
      super(e26, r91);
    }
    inLeapYear(e26) {
      let { year: r91 } = e26;
      return (r91 + 1) % 4 == 0;
    }
    monthsInYear() {
      return 13;
    }
    minimumMonthLength(e26) {
      let { month: r91 } = e26;
      return r91 === 13 ? this.inLeapYear(e26) ? 6 : 5 : 30;
    }
    maximumMonthLength(e26) {
      return this.minimumMonthLength(e26);
    }
  };
  var Bo3 = class extends Qt4 {
    constructor() {
      super("ethioaa", [{ name: "era0", isoEpoch: { year: -5492, month: 7, day: 17 } }]);
    }
  };
  var ko3 = class extends Qt4 {
    constructor() {
      super("coptic", [{ name: "era1", isoEpoch: { year: 284, month: 8, day: 29 } }, { name: "era0", reverseOf: "era1" }]);
    }
  };
  var Fo4 = class extends Qt4 {
    constructor() {
      super("ethiopic", [{ name: "era0", isoEpoch: { year: -5492, month: 7, day: 17 } }, { name: "era1", isoEpoch: { year: 8, month: 8, day: 27 }, anchorEpoch: { year: 5501 } }]);
    }
  };
  var No4 = class extends yt5 {
    constructor() {
      super("roc", [{ name: "minguo", isoEpoch: { year: 1912, month: 1, day: 1 } }, { name: "before-roc", reverseOf: "minguo" }]), this.calendarIsVulnerableToJulianBug = true;
    }
  };
  var Po2 = class extends yt5 {
    constructor() {
      super("buddhist", [{ name: "be", hasYearZero: true, isoEpoch: { year: -543, month: 1, day: 1 } }]), this.calendarIsVulnerableToJulianBug = true;
    }
  };
  var jo = class extends yt5 {
    constructor() {
      super("gregory", [{ name: "ce", isoEpoch: { year: 1, month: 1, day: 1 } }, { name: "bce", reverseOf: "ce" }]);
    }
    reviseIntlEra(e26) {
      let { era: r91, eraYear: o35 } = e26;
      return r91 !== "bc" && r91 !== "b" || (r91 = "bce"), r91 !== "ad" && r91 !== "a" || (r91 = "ce"), { era: r91, eraYear: o35 };
    }
  };
  var Zo4 = class extends yt5 {
    constructor() {
      super("japanese", [{ name: "reiwa", isoEpoch: { year: 2019, month: 5, day: 1 }, anchorEpoch: { year: 2019, month: 5, day: 1 } }, { name: "heisei", isoEpoch: { year: 1989, month: 1, day: 8 }, anchorEpoch: { year: 1989, month: 1, day: 8 } }, { name: "showa", isoEpoch: { year: 1926, month: 12, day: 25 }, anchorEpoch: { year: 1926, month: 12, day: 25 } }, { name: "taisho", isoEpoch: { year: 1912, month: 7, day: 30 }, anchorEpoch: { year: 1912, month: 7, day: 30 } }, { name: "meiji", isoEpoch: { year: 1868, month: 9, day: 8 }, anchorEpoch: { year: 1868, month: 9, day: 8 } }, { name: "ce", isoEpoch: { year: 1, month: 1, day: 1 } }, { name: "bce", reverseOf: "ce" }]), this.calendarIsVulnerableToJulianBug = true, this.eraLength = "long", this.erasBeginMidYear = true;
    }
    reviseIntlEra(e26, r91) {
      let { era: o35, eraYear: i29 } = e26, { year: a27 } = r91;
      return this.eras.find((s29) => s29.name === o35) ? { era: o35, eraYear: i29 } : a27 < 1 ? { era: "bce", eraYear: 1 - a27 } : { era: "ce", eraYear: a27 };
    }
  };
  var Ln3 = class extends Hr4 {
    constructor() {
      super(...arguments), this.calendarType = "lunisolar", this.hasEra = false;
    }
    inLeapYear(e26, r91) {
      let o35 = this.getMonthList(e26.year, r91);
      return bo4(o35).length === 13;
    }
    monthsInYear(e26, r91) {
      return this.inLeapYear(e26, r91) ? 13 : 12;
    }
    minimumMonthLength() {
      return 29;
    }
    maximumMonthLength() {
      return 30;
    }
    getMonthList(e26, r91) {
      if (e26 === void 0)
        throw new TypeError("Missing year");
      let o35 = JSON.stringify({ func: "getMonthList", calendarYear: e26, id: this.id }), i29 = r91.get(o35);
      if (i29)
        return i29;
      let a27 = this.getFormatter(), s29 = (g31, T23) => {
        let E24 = Ha4({ isoYear: g31, isoMonth: 2, isoDay: 1 }), I26 = new Date(E24);
        I26.setUTCDate(T23 + 1);
        let b28 = a27.formatToParts(I26), M26 = b28.find((Y23) => Y23.type === "month").value, C24 = +b28.find((Y23) => Y23.type === "day").value, D24 = b28.find((Y23) => Y23.type === "relatedYear");
        if (D24 === void 0)
          throw new RangeError(`Intl.DateTimeFormat.formatToParts lacks relatedYear in ${this.id} calendar. Try Node 14+ or modern browsers.`);
        return D24 = +D24.value, { calendarMonthString: M26, calendarDay: C24, calendarYearToVerify: D24 };
      }, d25 = 17, { calendarMonthString: h35, calendarDay: u30, calendarYearToVerify: l35 } = s29(e26, d25);
      h35 !== "1" && (d25 += 29, { calendarMonthString: h35, calendarDay: u30 } = s29(e26, d25)), d25 -= u30 - 5;
      let m27 = {}, f25, y24, p24 = 1, w26 = false;
      do
        ({ calendarMonthString: h35, calendarDay: u30, calendarYearToVerify: l35 } = s29(e26, d25)), f25 && (m27[y24].daysInMonth = f25 + 30 - u30), l35 !== e26 ? w26 = true : (m27[h35] = { monthIndex: p24++ }, d25 += 30), f25 = u30, y24 = h35;
      while (!w26);
      return m27[y24].daysInMonth = f25 + 30 - u30, r91.set(o35, m27), m27;
    }
    estimateIsoDate(e26) {
      let { year: r91, month: o35 } = e26;
      return { year: r91, month: o35 >= 12 ? 12 : o35 + 1, day: 1 };
    }
    adjustCalendarDate(e26, r91, o35 = "constrain", i29 = false) {
      let { year: a27, month: s29, monthExtra: d25, day: h35, monthCode: u30, eraYear: l35 } = e26;
      if (i29) {
        if (a27 = l35, d25 && d25 !== "bis")
          throw new RangeError(`Unexpected leap month suffix: ${d25}`);
        let m27 = Lr4(s29, d25 !== void 0), f25 = `${s29}${d25 || ""}`, y24 = this.getMonthList(a27, r91)[f25];
        if (y24 === void 0)
          throw new RangeError(`Unmatched month ${f25} in Chinese year ${a27}`);
        return s29 = y24.monthIndex, { year: a27, month: s29, day: h35, era: void 0, eraYear: l35, monthCode: m27 };
      }
      if (this.validateCalendarDate(e26), a27 === void 0 && (a27 = l35), l35 === void 0 && (l35 = a27), s29 === void 0) {
        let m27 = this.getMonthList(a27, r91), f25 = u30.replace("L", "bis").slice(1);
        f25[0] === "0" && (f25 = f25.slice(1));
        let y24 = m27[f25];
        if (s29 = y24 && y24.monthIndex, s29 === void 0 && u30.endsWith("L") && u30 != "M13L" && o35 === "constrain") {
          let p24 = u30.slice(1, -1);
          p24[0] === "0" && (p24 = p24.slice(1)), y24 = m27[p24], y24 && (s29 = y24.monthIndex, u30 = Lr4(p24));
        }
        if (s29 === void 0)
          throw new RangeError(`Unmatched month ${u30} in Chinese year ${a27}`);
      } else if (u30 === void 0) {
        let m27 = this.getMonthList(a27, r91), f25 = bo4(m27), y24 = f25.length;
        o35 === "reject" ? (Pe4(s29, 1, y24), Pe4(h35, 1, this.maximumMonthLength())) : (s29 = tr4(s29, 1, y24), h35 = tr4(h35, 1, this.maximumMonthLength()));
        let p24 = f25.find(([, w26]) => w26.monthIndex === s29);
        if (p24 === void 0)
          throw new RangeError(`Invalid month ${s29} in Chinese year ${a27}`);
        u30 = Lr4(p24[0].replace("bis", ""), p24[0].indexOf("bis") !== -1);
      } else {
        let m27 = this.getMonthList(a27, r91), f25 = u30.replace("L", "bis").slice(1);
        f25[0] === "0" && (f25 = f25.slice(1));
        let y24 = m27[f25];
        if (!y24)
          throw new RangeError(`Unmatched monthCode ${u30} in Chinese year ${a27}`);
        if (s29 !== y24.monthIndex)
          throw new RangeError(`monthCode ${u30} doesn't correspond to month ${s29} in Chinese year ${a27}`);
      }
      return { ...e26, year: a27, eraYear: l35, month: s29, monthCode: u30, day: h35 };
    }
  };
  var Uo3 = class extends Ln3 {
    constructor() {
      super(...arguments), this.id = "chinese";
    }
  };
  var Lo4 = class extends Ln3 {
    constructor() {
      super(...arguments), this.id = "dangi";
    }
  };
  var xo4 = class {
    constructor(e26) {
      this.helper = e26;
    }
    dateFromFields(e26, r91, o35) {
      let i29 = new Me5(), a27 = _7(e26, this.fields(["day", "month", "monthCode", "year"]), []), s29 = Ee7(r91), { year: d25, month: h35, day: u30 } = this.helper.calendarToIsoDate(a27, s29, i29), l35 = pr4(d25, h35, u30, o35);
      return i29.setObject(l35), l35;
    }
    yearMonthFromFields(e26, r91, o35) {
      let i29 = new Me5(), a27 = _7(e26, this.fields(["month", "monthCode", "year"]), []), s29 = Ee7(r91), { year: d25, month: h35, day: u30 } = this.helper.calendarToIsoDate({ ...a27, day: 1 }, s29, i29), l35 = Kt5(d25, h35, o35, u30);
      return i29.setObject(l35), l35;
    }
    monthDayFromFields(e26, r91, o35) {
      let i29 = new Me5(), a27 = _7(e26, this.fields(["day", "month", "monthCode", "year"]), []), s29 = Ee7(r91), { year: d25, month: h35, day: u30 } = this.helper.monthDayFromFields(a27, s29, i29), l35 = Vt5(h35, u30, o35, d25);
      return i29.setObject(l35), l35;
    }
    fields(e26) {
      let r91 = e26;
      return Ka4.call(r91, "year") && (r91 = [...r91, "era", "eraYear"]), r91;
    }
    fieldKeysToIgnore(e26) {
      let r91 = new Xa4();
      for (let o35 = 0; o35 < e26.length; o35++) {
        let i29 = e26[o35];
        switch (N8(Ze2, r91, [i29]), i29) {
          case "era":
            N8(Ze2, r91, ["eraYear"]), N8(Ze2, r91, ["year"]);
            break;
          case "eraYear":
            N8(Ze2, r91, ["era"]), N8(Ze2, r91, ["year"]);
            break;
          case "year":
            N8(Ze2, r91, ["era"]), N8(Ze2, r91, ["eraYear"]);
            break;
          case "month":
            N8(Ze2, r91, ["monthCode"]), this.helper.erasBeginMidYear && (N8(Ze2, r91, ["era"]), N8(Ze2, r91, ["eraYear"]));
            break;
          case "monthCode":
            N8(Ze2, r91, ["month"]), this.helper.erasBeginMidYear && (N8(Ze2, r91, ["era"]), N8(Ze2, r91, ["eraYear"]));
            break;
          case "day":
            this.helper.erasBeginMidYear && (N8(Ze2, r91, ["era"]), N8(Ze2, r91, ["eraYear"]));
        }
      }
      return [...N8(Qa3, r91, [])];
    }
    dateAdd(e26, r91, o35, i29, a27, s29, d25) {
      let h35 = Me5.getCacheForObject(e26), u30 = this.helper.temporalToCalendarDate(e26, h35), l35 = this.helper.addCalendar(u30, { years: r91, months: o35, weeks: i29, days: a27 }, s29, h35), m27 = this.helper.calendarToIsoDate(l35, "constrain", h35), { year: f25, month: y24, day: p24 } = m27, w26 = pr4(f25, y24, p24, d25);
      return new Me5(h35).setObject(w26), w26;
    }
    dateUntil(e26, r91, o35) {
      let i29 = Me5.getCacheForObject(e26), a27 = Me5.getCacheForObject(r91), s29 = this.helper.temporalToCalendarDate(e26, i29), d25 = this.helper.temporalToCalendarDate(r91, a27);
      return this.helper.untilCalendar(s29, d25, o35, i29);
    }
    year(e26) {
      let r91 = Me5.getCacheForObject(e26);
      return this.helper.temporalToCalendarDate(e26, r91).year;
    }
    month(e26) {
      let r91 = Me5.getCacheForObject(e26);
      return this.helper.temporalToCalendarDate(e26, r91).month;
    }
    day(e26) {
      let r91 = Me5.getCacheForObject(e26);
      return this.helper.temporalToCalendarDate(e26, r91).day;
    }
    era(e26) {
      if (!this.helper.hasEra)
        return;
      let r91 = Me5.getCacheForObject(e26);
      return this.helper.temporalToCalendarDate(e26, r91).era;
    }
    eraYear(e26) {
      if (!this.helper.hasEra)
        return;
      let r91 = Me5.getCacheForObject(e26);
      return this.helper.temporalToCalendarDate(e26, r91).eraYear;
    }
    monthCode(e26) {
      let r91 = Me5.getCacheForObject(e26);
      return this.helper.temporalToCalendarDate(e26, r91).monthCode;
    }
    dayOfWeek(e26) {
      return le7.iso8601.dayOfWeek(e26);
    }
    dayOfYear(e26) {
      let r91 = Me5.getCacheForObject(e26), o35 = this.helper.isoToCalendarDate(e26, r91), i29 = this.helper.startOfCalendarYear(o35);
      return this.helper.calendarDaysUntil(i29, o35, r91) + 1;
    }
    weekOfYear(e26) {
      return le7.iso8601.weekOfYear(e26);
    }
    yearOfWeek(e26) {
      return le7.iso8601.yearOfWeek(e26);
    }
    daysInWeek(e26) {
      return le7.iso8601.daysInWeek(e26);
    }
    daysInMonth(e26) {
      let r91 = Me5.getCacheForObject(e26), o35 = this.helper.temporalToCalendarDate(e26, r91), i29 = this.helper.maximumMonthLength(o35);
      if (i29 === this.helper.minimumMonthLength(o35))
        return i29;
      let a27 = this.helper.startOfCalendarMonth(o35), s29 = this.helper.addMonthsCalendar(a27, 1, "constrain", r91);
      return this.helper.calendarDaysUntil(a27, s29, r91);
    }
    daysInYear(e26) {
      let r91 = e26;
      Re6(r91, $7) || (r91 = ae6(r91));
      let o35 = Me5.getCacheForObject(r91), i29 = this.helper.temporalToCalendarDate(r91, o35), a27 = this.helper.startOfCalendarYear(i29), s29 = this.helper.addCalendar(a27, { years: 1 }, "constrain", o35);
      return this.helper.calendarDaysUntil(a27, s29, o35);
    }
    monthsInYear(e26) {
      let r91 = Me5.getCacheForObject(e26), o35 = this.helper.temporalToCalendarDate(e26, r91);
      return this.helper.monthsInYear(o35, r91);
    }
    inLeapYear(e26) {
      let r91 = e26;
      Re6(r91, $7) || (r91 = ae6(r91));
      let o35 = Me5.getCacheForObject(r91), i29 = this.helper.temporalToCalendarDate(r91, o35);
      return this.helper.inLeapYear(i29, o35);
    }
  };
  for (let t32 of [Do3, Yo3, Fo4, Bo3, ko3, Uo3, Lo4, No4, Ro4, Po2, jo, Zo4, Un3, Co4, Oo3, Mo3, $o3, So4]) {
    let e26 = new t32();
    le7[e26.id] = new xo4(e26);
  }
  var Ht5 = class t5 {
    constructor(e26, r91, o35, i29 = "iso8601") {
      fa3(this, ee6(e26), ee6(r91), ee6(o35), ir4(i29));
    }
    get calendarId() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return je4(n7(this, v8));
    }
    get era() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return Gn4(n7(this, v8), this);
    }
    get eraYear() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return Jn4(n7(this, v8), this);
    }
    get year() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return Wn3(n7(this, v8), this);
    }
    get month() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return zn3(n7(this, v8), this);
    }
    get monthCode() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return fn3(n7(this, v8), this);
    }
    get day() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return yn3(n7(this, v8), this);
    }
    get dayOfWeek() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return Jo4(n7(this, v8), this);
    }
    get dayOfYear() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return _o4(n7(this, v8), this);
    }
    get weekOfYear() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return Vo4(n7(this, v8), this);
    }
    get yearOfWeek() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return Ko2(n7(this, v8), this);
    }
    get daysInWeek() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return Xo3(n7(this, v8), this);
    }
    get daysInMonth() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return _n4(n7(this, v8), this);
    }
    get daysInYear() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return Vn3(n7(this, v8), this);
    }
    get monthsInYear() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return Kn3(n7(this, v8), this);
    }
    get inLeapYear() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return Xn4(n7(this, v8), this);
    }
    with(e26, r91) {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      if (!ce5(e26))
        throw new TypeError("invalid argument");
      Ut5(e26);
      let o35 = X7(r91), i29 = n7(this, v8), a27 = De4(i29, ["day", "month", "monthCode", "year"]), s29 = _7(this, a27, []);
      return s29 = ut5(i29, s29, _7(e26, a27, "partial")), s29 = _7(s29, a27, []), xr4(i29, s29, o35);
    }
    withCalendar(e26) {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      let r91 = ir4(e26);
      return new t5(n7(this, $7), n7(this, R8), n7(this, B8), r91);
    }
    add(e26, r91) {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      let o35 = bt5(e26), i29 = X7(r91);
      return Ne6(n7(this, v8), this, o35, i29);
    }
    subtract(e26, r91) {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      let o35 = Sa3(bt5(e26)), i29 = X7(r91);
      return Ne6(n7(this, v8), this, o35, i29);
    }
    until(e26, r91) {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return ji4("until", this, e26, r91);
    }
    since(e26, r91) {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return ji4("since", this, e26, r91);
    }
    equals(e26) {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      let r91 = ae6(e26);
      for (let o35 of [$7, R8, B8])
        if (n7(this, o35) !== n7(r91, o35))
          return false;
      return wn4(n7(this, v8), n7(r91, v8));
    }
    toString(e26) {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return $i4(this, hn4(X7(e26)));
    }
    toJSON() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return $i4(this);
    }
    toLocaleString(e26, r91) {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return new zr4(e26, r91).format(this);
    }
    valueOf() {
      throw new TypeError("use compare() or equals() to compare Temporal.PlainDate");
    }
    toPlainDateTime(e26) {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      let r91 = n7(this, $7), o35 = n7(this, R8), i29 = n7(this, B8), a27 = n7(this, v8);
      if (e26 === void 0)
        return rr4(r91, o35, i29, 0, 0, 0, 0, 0, 0, a27);
      let s29 = jr4(e26);
      return rr4(r91, o35, i29, n7(s29, L8), n7(s29, x6), n7(s29, q7), n7(s29, A7), n7(s29, W7), n7(s29, z6), a27);
    }
    toZonedDateTime(e26) {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      let r91, o35;
      if (ce5(e26))
        if (mr4(e26))
          r91 = e26;
        else {
          let p24 = e26.timeZone;
          p24 === void 0 ? r91 = xe5(e26) : (r91 = xe5(p24), o35 = e26.plainTime);
        }
      else
        r91 = xe5(e26);
      let i29 = n7(this, $7), a27 = n7(this, R8), s29 = n7(this, B8), d25 = n7(this, v8), h35 = 0, u30 = 0, l35 = 0, m27 = 0, f25 = 0, y24 = 0;
      return o35 !== void 0 && (o35 = jr4(o35), h35 = n7(o35, L8), u30 = n7(o35, x6), l35 = n7(o35, q7), m27 = n7(o35, A7), f25 = n7(o35, W7), y24 = n7(o35, z6)), Fe4(n7(Qe2(r91, rr4(i29, a27, s29, h35, u30, l35, m27, f25, y24, d25), "compatible"), j9), r91, d25);
    }
    toPlainYearMonth() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      let e26 = n7(this, v8);
      return mt5(e26, _7(this, De4(e26, ["monthCode", "year"]), []));
    }
    toPlainMonthDay() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      let e26 = n7(this, v8);
      return Bt4(e26, _7(this, De4(e26, ["day", "monthCode"]), []));
    }
    getISOFields() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return { calendar: n7(this, v8), isoDay: n7(this, B8), isoMonth: n7(this, R8), isoYear: n7(this, $7) };
    }
    getCalendar() {
      if (!K7(this))
        throw new TypeError("invalid receiver");
      return qt5(n7(this, v8));
    }
    static from(e26, r91) {
      let o35 = X7(r91);
      return K7(e26) ? (Ee7(o35), pr4(n7(e26, $7), n7(e26, R8), n7(e26, B8), n7(e26, v8))) : ae6(e26, o35);
    }
    static compare(e26, r91) {
      let o35 = ae6(e26), i29 = ae6(r91);
      return Jr4(n7(o35, $7), n7(o35, R8), n7(o35, B8), n7(i29, $7), n7(i29, R8), n7(i29, B8));
    }
  };
  kr4(Ht5, "Temporal.PlainDate");
  var en4 = class t6 {
    constructor(e26, r91, o35, i29 = 0, a27 = 0, s29 = 0, d25 = 0, h35 = 0, u30 = 0, l35 = "iso8601") {
      ya3(this, ee6(e26), ee6(r91), ee6(o35), i29 === void 0 ? 0 : ee6(i29), a27 === void 0 ? 0 : ee6(a27), s29 === void 0 ? 0 : ee6(s29), d25 === void 0 ? 0 : ee6(d25), h35 === void 0 ? 0 : ee6(h35), u30 === void 0 ? 0 : ee6(u30), ir4(l35));
    }
    get calendarId() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return je4(n7(this, v8));
    }
    get year() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return Wn3(n7(this, v8), this);
    }
    get month() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return zn3(n7(this, v8), this);
    }
    get monthCode() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return fn3(n7(this, v8), this);
    }
    get day() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return yn3(n7(this, v8), this);
    }
    get hour() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return n7(this, L8);
    }
    get minute() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return n7(this, x6);
    }
    get second() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return n7(this, q7);
    }
    get millisecond() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return n7(this, A7);
    }
    get microsecond() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return n7(this, W7);
    }
    get nanosecond() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return n7(this, z6);
    }
    get era() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return Gn4(n7(this, v8), this);
    }
    get eraYear() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return Jn4(n7(this, v8), this);
    }
    get dayOfWeek() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return Jo4(n7(this, v8), this);
    }
    get dayOfYear() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return _o4(n7(this, v8), this);
    }
    get weekOfYear() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return Vo4(n7(this, v8), this);
    }
    get yearOfWeek() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return Ko2(n7(this, v8), this);
    }
    get daysInWeek() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return Xo3(n7(this, v8), this);
    }
    get daysInYear() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return Vn3(n7(this, v8), this);
    }
    get daysInMonth() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return _n4(n7(this, v8), this);
    }
    get monthsInYear() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return Kn3(n7(this, v8), this);
    }
    get inLeapYear() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return Xn4(n7(this, v8), this);
    }
    with(e26, r91) {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      if (!ce5(e26))
        throw new TypeError("invalid argument");
      Ut5(e26);
      let o35 = X7(r91), i29 = n7(this, v8), a27 = De4(i29, ["day", "hour", "microsecond", "millisecond", "minute", "month", "monthCode", "nanosecond", "second", "year"]), s29 = _7(this, a27, []);
      s29 = ut5(i29, s29, _7(e26, a27, "partial")), s29 = _7(s29, a27, []);
      let { year: d25, month: h35, day: u30, hour: l35, minute: m27, second: f25, millisecond: y24, microsecond: p24, nanosecond: w26 } = mn3(i29, s29, o35);
      return rr4(d25, h35, u30, l35, m27, f25, y24, p24, w26, i29);
    }
    withPlainTime(e26) {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      let r91 = n7(this, $7), o35 = n7(this, R8), i29 = n7(this, B8), a27 = n7(this, v8);
      if (e26 === void 0)
        return rr4(r91, o35, i29, 0, 0, 0, 0, 0, 0, a27);
      let s29 = jr4(e26);
      return rr4(r91, o35, i29, n7(s29, L8), n7(s29, x6), n7(s29, q7), n7(s29, A7), n7(s29, W7), n7(s29, z6), a27);
    }
    withPlainDate(e26) {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      let r91 = ae6(e26), o35 = n7(r91, $7), i29 = n7(r91, R8), a27 = n7(r91, B8), s29 = n7(r91, v8), d25 = n7(this, L8), h35 = n7(this, x6), u30 = n7(this, q7), l35 = n7(this, A7), m27 = n7(this, W7), f25 = n7(this, z6);
      return s29 = Ta4(n7(this, v8), s29), rr4(o35, i29, a27, d25, h35, u30, l35, m27, f25, s29);
    }
    withCalendar(e26) {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      let r91 = ir4(e26);
      return new t6(n7(this, $7), n7(this, R8), n7(this, B8), n7(this, L8), n7(this, x6), n7(this, q7), n7(this, A7), n7(this, W7), n7(this, z6), r91);
    }
    add(e26, r91) {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return Wi4("add", this, e26, r91);
    }
    subtract(e26, r91) {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return Wi4("subtract", this, e26, r91);
    }
    until(e26, r91) {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return Zi4("until", this, e26, r91);
    }
    since(e26, r91) {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return Zi4("since", this, e26, r91);
    }
    round(e26) {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      if (e26 === void 0)
        throw new TypeError("options parameter is required");
      let r91 = typeof e26 == "string" ? Nt5("smallestUnit", e26) : X7(e26), o35 = Lt5(r91), i29 = Er4(r91, "halfExpand"), a27 = or4(r91, "smallestUnit", "time", ht5, ["day"]), s29 = { day: 1, hour: 24, minute: 60, second: 60, millisecond: 1e3, microsecond: 1e3, nanosecond: 1e3 }[a27];
      xt5(o35, s29, s29 === 1);
      let d25 = n7(this, $7), h35 = n7(this, R8), u30 = n7(this, B8), l35 = n7(this, L8), m27 = n7(this, x6), f25 = n7(this, q7), y24 = n7(this, A7), p24 = n7(this, W7), w26 = n7(this, z6);
      return { year: d25, month: h35, day: u30, hour: l35, minute: m27, second: f25, millisecond: y24, microsecond: p24, nanosecond: w26 } = ai3(d25, h35, u30, l35, m27, f25, y24, p24, w26, o35, a27, i29), rr4(d25, h35, u30, l35, m27, f25, y24, p24, w26, n7(this, v8));
    }
    equals(e26) {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      let r91 = at5(e26);
      for (let o35 of [$7, R8, B8, L8, x6, q7, A7, W7, z6])
        if (n7(this, o35) !== n7(r91, o35))
          return false;
      return wn4(n7(this, v8), n7(r91, v8));
    }
    toString(e26) {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      let r91 = X7(e26), o35 = hn4(r91), i29 = ln4(r91), a27 = Er4(r91, "trunc"), s29 = or4(r91, "smallestUnit", "time", void 0);
      if (s29 === "hour")
        throw new RangeError('smallestUnit must be a time unit other than "hour"');
      let { precision: d25, unit: h35, increment: u30 } = un4(s29, i29);
      return Si4(this, d25, o35, { unit: h35, increment: u30, roundingMode: a27 });
    }
    toJSON() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return Si4(this, "auto");
    }
    toLocaleString(e26, r91) {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return new zr4(e26, r91).format(this);
    }
    valueOf() {
      throw new TypeError("use compare() or equals() to compare Temporal.PlainDateTime");
    }
    toZonedDateTime(e26, r91) {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      let o35 = xe5(e26);
      return Fe4(n7(Qe2(o35, this, Rt5(X7(r91))), j9), o35, n7(this, v8));
    }
    toPlainDate() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return kt4(this);
    }
    toPlainYearMonth() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      let e26 = n7(this, v8);
      return mt5(e26, _7(this, De4(e26, ["monthCode", "year"]), []));
    }
    toPlainMonthDay() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      let e26 = n7(this, v8);
      return Bt4(e26, _7(this, De4(e26, ["day", "monthCode"]), []));
    }
    toPlainTime() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return Qo4(this);
    }
    getISOFields() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return { calendar: n7(this, v8), isoDay: n7(this, B8), isoHour: n7(this, L8), isoMicrosecond: n7(this, W7), isoMillisecond: n7(this, A7), isoMinute: n7(this, x6), isoMonth: n7(this, R8), isoNanosecond: n7(this, z6), isoSecond: n7(this, q7), isoYear: n7(this, $7) };
    }
    getCalendar() {
      if (!U9(this))
        throw new TypeError("invalid receiver");
      return qt5(n7(this, v8));
    }
    static from(e26, r91) {
      let o35 = X7(r91);
      return U9(e26) ? (Ee7(o35), rr4(n7(e26, $7), n7(e26, R8), n7(e26, B8), n7(e26, L8), n7(e26, x6), n7(e26, q7), n7(e26, A7), n7(e26, W7), n7(e26, z6), n7(e26, v8))) : at5(e26, o35);
    }
    static compare(e26, r91) {
      let o35 = at5(e26), i29 = at5(r91);
      for (let a27 of [$7, R8, B8, L8, x6, q7, A7, W7, z6]) {
        let s29 = n7(o35, a27), d25 = n7(i29, a27);
        if (s29 !== d25)
          return dt4(s29 - d25);
      }
      return 0;
    }
  };
  kr4(en4, "Temporal.PlainDateTime");
  var rn4 = class t7 {
    constructor(e26 = 0, r91 = 0, o35 = 0, i29 = 0, a27 = 0, s29 = 0, d25 = 0, h35 = 0, u30 = 0, l35 = 0) {
      let m27 = e26 === void 0 ? 0 : Ye2(e26), f25 = r91 === void 0 ? 0 : Ye2(r91), y24 = o35 === void 0 ? 0 : Ye2(o35), p24 = i29 === void 0 ? 0 : Ye2(i29), w26 = a27 === void 0 ? 0 : Ye2(a27), g31 = s29 === void 0 ? 0 : Ye2(s29), T23 = d25 === void 0 ? 0 : Ye2(d25), E24 = h35 === void 0 ? 0 : Ye2(h35), I26 = u30 === void 0 ? 0 : Ye2(u30), b28 = l35 === void 0 ? 0 : Ye2(l35);
      Pn3(m27, f25, y24, p24, w26, g31, T23, E24, I26, b28), Fr4(this), G9(this, Ae6, m27), G9(this, Be5, f25), G9(this, er4, y24), G9(this, We3, p24), G9(this, ze4, w26), G9(this, Ge4, g31), G9(this, Je4, T23), G9(this, _e4, E24), G9(this, Ve4, I26), G9(this, Ke3, b28);
    }
    get years() {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      return n7(this, Ae6);
    }
    get months() {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      return n7(this, Be5);
    }
    get weeks() {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      return n7(this, er4);
    }
    get days() {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      return n7(this, We3);
    }
    get hours() {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      return n7(this, ze4);
    }
    get minutes() {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      return n7(this, Ge4);
    }
    get seconds() {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      return n7(this, Je4);
    }
    get milliseconds() {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      return n7(this, _e4);
    }
    get microseconds() {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      return n7(this, Ve4);
    }
    get nanoseconds() {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      return n7(this, Ke3);
    }
    get sign() {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      return Sr4(n7(this, Ae6), n7(this, Be5), n7(this, er4), n7(this, We3), n7(this, ze4), n7(this, Ge4), n7(this, Je4), n7(this, _e4), n7(this, Ve4), n7(this, Ke3));
    }
    get blank() {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      return Sr4(n7(this, Ae6), n7(this, Be5), n7(this, er4), n7(this, We3), n7(this, ze4), n7(this, Ge4), n7(this, Je4), n7(this, _e4), n7(this, Ve4), n7(this, Ke3)) === 0;
    }
    with(e26) {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      let r91 = _7(e26, ["days", "hours", "microseconds", "milliseconds", "minutes", "months", "nanoseconds", "seconds", "weeks", "years"], "partial"), { years: o35 = n7(this, Ae6), months: i29 = n7(this, Be5), weeks: a27 = n7(this, er4), days: s29 = n7(this, We3), hours: d25 = n7(this, ze4), minutes: h35 = n7(this, Ge4), seconds: u30 = n7(this, Je4), milliseconds: l35 = n7(this, _e4), microseconds: m27 = n7(this, Ve4), nanoseconds: f25 = n7(this, Ke3) } = r91;
      return new t7(o35, i29, a27, s29, d25, h35, u30, l35, m27, f25);
    }
    negated() {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      return Sa3(this);
    }
    abs() {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      return new t7(Math.abs(n7(this, Ae6)), Math.abs(n7(this, Be5)), Math.abs(n7(this, er4)), Math.abs(n7(this, We3)), Math.abs(n7(this, ze4)), Math.abs(n7(this, Ge4)), Math.abs(n7(this, Je4)), Math.abs(n7(this, _e4)), Math.abs(n7(this, Ve4)), Math.abs(n7(this, Ke3)));
    }
    add(e26, r91) {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      return qi4("add", this, e26, r91);
    }
    subtract(e26, r91) {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      return qi4("subtract", this, e26, r91);
    }
    round(e26) {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      if (e26 === void 0)
        throw new TypeError("options parameter is required");
      let r91 = n7(this, Ae6), o35 = n7(this, Be5), i29 = n7(this, er4), a27 = n7(this, We3), s29 = n7(this, ze4), d25 = n7(this, Ge4), h35 = n7(this, Je4), u30 = n7(this, _e4), l35 = n7(this, Ve4), m27 = n7(this, Ke3), f25 = po4(r91, o35, i29, a27, s29, d25, h35, u30, l35, m27), y24 = typeof e26 == "string" ? Nt5("smallestUnit", e26) : X7(e26), p24 = or4(y24, "largestUnit", "datetime", void 0, ["auto"]), w26 = En3(y24), g31 = Lt5(y24), T23 = Er4(y24, "halfExpand"), E24 = or4(y24, "smallestUnit", "datetime", void 0), I26 = true;
      E24 || (I26 = false, E24 = "nanosecond"), f25 = lt5(f25, E24);
      let b28 = true;
      if (p24 || (b28 = false, p24 = f25), p24 === "auto" && (p24 = f25), !I26 && !b28)
        throw new RangeError("at least one of smallestUnit or largestUnit is required");
      if (lt5(p24, E24) !== p24)
        throw new RangeError(`largestUnit ${p24} cannot be smaller than smallestUnit ${E24}`);
      let M26 = { hour: 24, minute: 60, second: 60, millisecond: 1e3, microsecond: 1e3, nanosecond: 1e3 }[E24];
      return M26 !== void 0 && xt5(g31, M26, false), { years: r91, months: o35, weeks: i29, days: a27 } = vn4(r91, o35, i29, a27, p24, w26), { years: r91, months: o35, weeks: i29, days: a27, hours: s29, minutes: d25, seconds: h35, milliseconds: u30, microseconds: l35, nanoseconds: m27 } = qr4(r91, o35, i29, a27, s29, d25, h35, u30, l35, m27, g31, E24, T23, w26), { years: r91, months: o35, weeks: i29, days: a27, hours: s29, minutes: d25, seconds: h35, milliseconds: u30, microseconds: l35, nanoseconds: m27 } = Za4(r91, o35, i29, a27, s29, d25, h35, u30, l35, m27, g31, E24, T23, w26), { days: a27, hours: s29, minutes: d25, seconds: h35, milliseconds: u30, microseconds: l35, nanoseconds: m27 } = gr4(a27, s29, d25, h35, u30, l35, m27, p24, w26), { years: r91, months: o35, weeks: i29, days: a27 } = function(D24, Y23, F26, ne8, Q24, H26) {
        let P25 = O9("%Temporal.Duration%"), J25 = Sr4(D24, Y23, F26, ne8, 0, 0, 0, 0, 0, 0);
        if (J25 === 0)
          return { years: D24, months: Y23, weeks: F26, days: ne8 };
        let S25 = S9.BigInt(J25), Z23, V24, Ie8 = S9.BigInt(D24), Ce9 = S9.BigInt(Y23), Oe10 = S9.BigInt(F26), Te10 = S9.BigInt(ne8);
        H26 && (V24 = ae6(H26), Z23 = n7(V24, v8));
        let ar5 = new P25(J25), br5 = new P25(0, J25), Dr6 = new P25(0, 0, J25);
        switch (Q24) {
          case "year": {
            if (!Z23)
              throw new RangeError("a starting point is required for years balancing");
            let sr6 = typeof Z23 != "string" ? oe7(Z23, "dateAdd") : void 0, ke10, dr6, Tn5;
            for ({ relativeTo: ke10, days: dr6 } = Ue5(Z23, V24, ar5, sr6); S9.greaterThanOrEqual(Tr4(Te10), S9.BigInt(de5(dr6))); )
              Te10 = S9.subtract(Te10, S9.BigInt(dr6)), Ie8 = S9.add(Ie8, S25), V24 = ke10, { relativeTo: ke10, days: dr6 } = Ue5(Z23, V24, ar5, sr6);
            for ({ relativeTo: ke10, days: Tn5 } = Ue5(Z23, V24, br5, sr6); S9.greaterThanOrEqual(Tr4(Te10), S9.BigInt(de5(Tn5))); )
              Te10 = S9.subtract(Te10, S9.BigInt(Tn5)), Ce9 = S9.add(Ce9, S25), V24 = ke10, { relativeTo: ke10, days: Tn5 } = Ue5(Z23, V24, br5, sr6);
            ke10 = Ne6(Z23, V24, ar5, void 0, sr6);
            let mi6 = typeof Z23 != "string" ? oe7(Z23, "dateUntil") : void 0, fi6 = qe4(null);
            fi6.largestUnit = "month";
            let no5 = _r3(Z23, V24, ke10, fi6, mi6), oo5 = n7(no5, Be5);
            for (; S9.greaterThanOrEqual(Tr4(Ce9), S9.BigInt(de5(oo5))); ) {
              Ce9 = S9.subtract(Ce9, S9.BigInt(oo5)), Ie8 = S9.add(Ie8, S25), V24 = ke10, ke10 = Ne6(Z23, V24, ar5, void 0, sr6);
              let yi5 = qe4(null);
              yi5.largestUnit = "month", no5 = _r3(Z23, V24, ke10, yi5, mi6), oo5 = n7(no5, Be5);
            }
            break;
          }
          case "month": {
            if (!Z23)
              throw new RangeError("a starting point is required for months balancing");
            let sr6 = typeof Z23 != "string" ? oe7(Z23, "dateAdd") : void 0, ke10, dr6;
            for ({ relativeTo: ke10, days: dr6 } = Ue5(Z23, V24, br5, sr6); S9.greaterThanOrEqual(Tr4(Te10), S9.BigInt(de5(dr6))); )
              Te10 = S9.subtract(Te10, S9.BigInt(dr6)), Ce9 = S9.add(Ce9, S25), V24 = ke10, { relativeTo: ke10, days: dr6 } = Ue5(Z23, V24, br5, sr6);
            break;
          }
          case "week": {
            if (!Z23)
              throw new RangeError("a starting point is required for weeks balancing");
            let sr6 = typeof Z23 != "string" ? oe7(Z23, "dateAdd") : void 0, ke10, dr6;
            for ({ relativeTo: ke10, days: dr6 } = Ue5(Z23, V24, Dr6, sr6); S9.greaterThanOrEqual(Tr4(Te10), S9.BigInt(de5(dr6))); )
              Te10 = S9.subtract(Te10, S9.BigInt(dr6)), Oe10 = S9.add(Oe10, S25), V24 = ke10, { relativeTo: ke10, days: dr6 } = Ue5(Z23, V24, Dr6, sr6);
            break;
          }
        }
        return { years: S9.toNumber(Ie8), months: S9.toNumber(Ce9), weeks: S9.toNumber(Oe10), days: S9.toNumber(Te10) };
      }(r91, o35, i29, a27, p24, w26), new t7(r91, o35, i29, a27, s29, d25, h35, u30, l35, m27);
    }
    total(e26) {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      let r91 = n7(this, Ae6), o35 = n7(this, Be5), i29 = n7(this, er4), a27 = n7(this, We3), s29 = n7(this, ze4), d25 = n7(this, Ge4), h35 = n7(this, Je4), u30 = n7(this, _e4), l35 = n7(this, Ve4), m27 = n7(this, Ke3);
      if (e26 === void 0)
        throw new TypeError("options argument is required");
      let f25 = typeof e26 == "string" ? Nt5("unit", e26) : X7(e26), y24 = En3(f25), p24 = or4(f25, "unit", "datetime", ht5), w26;
      ({ years: r91, months: o35, weeks: i29, days: a27 } = vn4(r91, o35, i29, a27, p24, y24)), k8(y24) && (w26 = ja4(y24, r91, o35, i29, 0));
      let g31 = $a4(a27, s29, d25, h35, u30, l35, m27, p24, w26);
      if (g31 === "positive overflow")
        return 1 / 0;
      if (g31 === "negative overflow")
        return -1 / 0;
      ({ days: a27, hours: s29, minutes: d25, seconds: h35, milliseconds: u30, microseconds: l35, nanoseconds: m27 } = g31);
      let { total: T23 } = qr4(r91, o35, i29, a27, s29, d25, h35, u30, l35, m27, 1, p24, "trunc", y24);
      return T23;
    }
    toString(e26) {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      let r91 = X7(e26), o35 = ln4(r91), i29 = Er4(r91, "trunc"), a27 = or4(r91, "smallestUnit", "time", void 0);
      if (a27 === "hour" || a27 === "minute")
        throw new RangeError('smallestUnit must be a time unit other than "hours" or "minutes"');
      let { precision: s29, unit: d25, increment: h35 } = un4(a27, o35);
      return ao4(this, s29, { unit: d25, increment: h35, roundingMode: i29 });
    }
    toJSON() {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      return ao4(this);
    }
    toLocaleString(e26, r91) {
      if (!pe6(this))
        throw new TypeError("invalid receiver");
      return typeof Intl < "u" && Intl.DurationFormat !== void 0 ? new Intl.DurationFormat(e26, r91).format(this) : (console.warn("Temporal.Duration.prototype.toLocaleString() requires Intl.DurationFormat."), ao4(this));
    }
    valueOf() {
      throw new TypeError("use compare() to compare Temporal.Duration");
    }
    static from(e26) {
      return pe6(e26) ? new t7(n7(e26, Ae6), n7(e26, Be5), n7(e26, er4), n7(e26, We3), n7(e26, ze4), n7(e26, Ge4), n7(e26, Je4), n7(e26, _e4), n7(e26, Ve4), n7(e26, Ke3)) : bt5(e26);
    }
    static compare(e26, r91, o35) {
      let i29 = bt5(e26), a27 = bt5(r91), s29 = En3(X7(o35)), d25 = n7(i29, Ae6), h35 = n7(i29, Be5), u30 = n7(i29, er4), l35 = n7(i29, We3), m27 = n7(i29, ze4), f25 = n7(i29, Ge4), y24 = n7(i29, Je4), p24 = n7(i29, _e4), w26 = n7(i29, Ve4), g31 = n7(i29, Ke3), T23 = n7(a27, Ae6), E24 = n7(a27, Be5), I26 = n7(a27, er4), b28 = n7(a27, We3), M26 = n7(a27, ze4), C24 = n7(a27, Ge4), D24 = n7(a27, Je4), Y23 = n7(a27, _e4), F26 = n7(a27, Ve4), ne8 = n7(a27, Ke3), Q24 = Ni4(s29, d25, h35, u30, l35), H26 = Ni4(s29, T23, E24, I26, b28);
      d25 === 0 && T23 === 0 && h35 === 0 && E24 === 0 && u30 === 0 && I26 === 0 || ({ days: l35 } = vn4(d25, h35, u30, l35, "day", s29), { days: b28 } = vn4(T23, E24, I26, b28, "day", s29));
      let P25 = Ft5(l35, m27, f25, y24, p24, w26, g31, Q24), J25 = Ft5(b28, M26, C24, D24, Y23, F26, ne8, H26);
      return dt4(S9.toNumber(S9.subtract(P25, J25)));
    }
  };
  kr4(rn4, "Temporal.Duration");
  var Ps3 = Object.create;
  var tn4 = class {
    constructor(e26, r91, o35 = "iso8601", i29 = 1972) {
      pa3(this, ee6(e26), ee6(r91), ir4(o35), ee6(i29));
    }
    get monthCode() {
      if (!Se7(this))
        throw new TypeError("invalid receiver");
      return fn3(n7(this, v8), this);
    }
    get day() {
      if (!Se7(this))
        throw new TypeError("invalid receiver");
      return yn3(n7(this, v8), this);
    }
    get calendarId() {
      if (!Se7(this))
        throw new TypeError("invalid receiver");
      return je4(n7(this, v8));
    }
    with(e26, r91) {
      if (!Se7(this))
        throw new TypeError("invalid receiver");
      if (!ce5(e26))
        throw new TypeError("invalid argument");
      Ut5(e26);
      let o35 = X7(r91), i29 = n7(this, v8), a27 = De4(i29, ["day", "month", "monthCode", "year"]), s29 = _7(this, a27, []);
      return s29 = ut5(i29, s29, _7(e26, a27, "partial")), s29 = _7(s29, a27, []), Bt4(i29, s29, o35);
    }
    equals(e26) {
      if (!Se7(this))
        throw new TypeError("invalid receiver");
      let r91 = Oi4(e26);
      for (let o35 of [R8, B8, $7])
        if (n7(this, o35) !== n7(r91, o35))
          return false;
      return wn4(n7(this, v8), n7(r91, v8));
    }
    toString(e26) {
      if (!Se7(this))
        throw new TypeError("invalid receiver");
      return Yi4(this, hn4(X7(e26)));
    }
    toJSON() {
      if (!Se7(this))
        throw new TypeError("invalid receiver");
      return Yi4(this);
    }
    toLocaleString(e26, r91) {
      if (!Se7(this))
        throw new TypeError("invalid receiver");
      return new zr4(e26, r91).format(this);
    }
    valueOf() {
      throw new TypeError("use equals() to compare Temporal.PlainMonthDay");
    }
    toPlainDate(e26) {
      if (!Se7(this))
        throw new TypeError("invalid receiver");
      if (!ce5(e26))
        throw new TypeError("argument should be an object");
      let r91 = n7(this, v8), o35 = De4(r91, ["day", "monthCode"]), i29 = _7(this, o35, []), a27 = De4(r91, ["year"]), s29 = ut5(r91, i29, _7(e26, a27, []));
      s29 = _7(s29, [.../* @__PURE__ */ new Set([...o35, ...a27])], []);
      let d25 = Ps3(null);
      return d25.overflow = "reject", xr4(r91, s29, d25);
    }
    getISOFields() {
      if (!Se7(this))
        throw new TypeError("invalid receiver");
      return { calendar: n7(this, v8), isoDay: n7(this, B8), isoMonth: n7(this, R8), isoYear: n7(this, $7) };
    }
    getCalendar() {
      if (!Se7(this))
        throw new TypeError("invalid receiver");
      return qt5(n7(this, v8));
    }
    static from(e26, r91) {
      let o35 = X7(r91);
      return Se7(e26) ? (Ee7(o35), Vt5(n7(e26, R8), n7(e26, B8), n7(e26, v8), n7(e26, $7))) : Oi4(e26, o35);
    }
  };
  kr4(tn4, "Temporal.PlainMonthDay");
  var ui3 = () => new (O9("%Temporal.Instant%"))(di4());
  var Vi4 = (t32, e26 = Gr4()) => {
    let r91 = xe5(e26), o35 = ir4(t32);
    return lr4(r91, ui3(), o35);
  };
  var lo4 = (t32 = Gr4()) => lr4(xe5(t32), ui3(), "iso8601");
  var Ki4 = (t32, e26 = Gr4()) => {
    let r91 = xe5(e26), o35 = ir4(t32);
    return Fe4(di4(), r91, o35);
  };
  var rs4 = { instant: ui3, plainDateTime: Vi4, plainDateTimeISO: lo4, plainDate: (t32, e26 = Gr4()) => kt4(Vi4(t32, e26)), plainDateISO: (t32 = Gr4()) => kt4(lo4(t32)), plainTimeISO: (t32 = Gr4()) => Qo4(lo4(t32)), timeZoneId: () => Gr4(), zonedDateTime: Ki4, zonedDateTimeISO: (t32 = Gr4()) => Ki4("iso8601", t32), [Symbol.toStringTag]: "Temporal.Now" };
  Object.defineProperty(rs4, Symbol.toStringTag, { value: "Temporal.Now", writable: false, enumerable: false, configurable: true });
  var js3 = Object.assign;
  function Xi4(t32, e26, r91) {
    let o35 = n7(t32, L8), i29 = n7(t32, x6), a27 = n7(t32, q7), s29 = n7(t32, A7), d25 = n7(t32, W7), h35 = n7(t32, z6);
    if (r91) {
      let { unit: u30, increment: l35, roundingMode: m27 } = r91;
      ({ hour: o35, minute: i29, second: a27, millisecond: s29, microsecond: d25, nanosecond: h35 } = si4(o35, i29, a27, s29, d25, h35, l35, u30, m27));
    }
    return `${ue6(o35)}:${ue6(i29)}${Hn4(a27, s29, d25, h35, e26)}`;
  }
  var nn3 = class t8 {
    constructor(e26 = 0, r91 = 0, o35 = 0, i29 = 0, a27 = 0, s29 = 0) {
      let d25 = e26 === void 0 ? 0 : ee6(e26), h35 = r91 === void 0 ? 0 : ee6(r91), u30 = o35 === void 0 ? 0 : ee6(o35), l35 = i29 === void 0 ? 0 : ee6(i29), m27 = a27 === void 0 ? 0 : ee6(a27), f25 = s29 === void 0 ? 0 : ee6(s29);
      to4(d25, h35, u30, l35, m27, f25), Fr4(this), G9(this, L8, d25), G9(this, x6, h35), G9(this, q7, u30), G9(this, A7, l35), G9(this, W7, m27), G9(this, z6, f25);
    }
    get hour() {
      if (!we6(this))
        throw new TypeError("invalid receiver");
      return n7(this, L8);
    }
    get minute() {
      if (!we6(this))
        throw new TypeError("invalid receiver");
      return n7(this, x6);
    }
    get second() {
      if (!we6(this))
        throw new TypeError("invalid receiver");
      return n7(this, q7);
    }
    get millisecond() {
      if (!we6(this))
        throw new TypeError("invalid receiver");
      return n7(this, A7);
    }
    get microsecond() {
      if (!we6(this))
        throw new TypeError("invalid receiver");
      return n7(this, W7);
    }
    get nanosecond() {
      if (!we6(this))
        throw new TypeError("invalid receiver");
      return n7(this, z6);
    }
    with(e26, r91) {
      if (!we6(this))
        throw new TypeError("invalid receiver");
      if (!ce5(e26))
        throw new TypeError("invalid argument");
      Ut5(e26);
      let o35 = Ee7(X7(r91)), i29 = Bn4(e26, "partial"), a27 = Bn4(this), { hour: s29, minute: d25, second: h35, millisecond: u30, microsecond: l35, nanosecond: m27 } = js3(a27, i29);
      return { hour: s29, minute: d25, second: h35, millisecond: u30, microsecond: l35, nanosecond: m27 } = An4(s29, d25, h35, u30, l35, m27, o35), new t8(s29, d25, h35, u30, l35, m27);
    }
    add(e26) {
      if (!we6(this))
        throw new TypeError("invalid receiver");
      return zi4("add", this, e26);
    }
    subtract(e26) {
      if (!we6(this))
        throw new TypeError("invalid receiver");
      return zi4("subtract", this, e26);
    }
    until(e26, r91) {
      if (!we6(this))
        throw new TypeError("invalid receiver");
      return Ui3("until", this, e26, r91);
    }
    since(e26, r91) {
      if (!we6(this))
        throw new TypeError("invalid receiver");
      return Ui3("since", this, e26, r91);
    }
    round(e26) {
      if (!we6(this))
        throw new TypeError("invalid receiver");
      if (e26 === void 0)
        throw new TypeError("options parameter is required");
      let r91 = typeof e26 == "string" ? Nt5("smallestUnit", e26) : X7(e26), o35 = Lt5(r91), i29 = Er4(r91, "halfExpand"), a27 = or4(r91, "smallestUnit", "time", ht5);
      xt5(o35, { hour: 24, minute: 60, second: 60, millisecond: 1e3, microsecond: 1e3, nanosecond: 1e3 }[a27], false);
      let s29 = n7(this, L8), d25 = n7(this, x6), h35 = n7(this, q7), u30 = n7(this, A7), l35 = n7(this, W7), m27 = n7(this, z6);
      return { hour: s29, minute: d25, second: h35, millisecond: u30, microsecond: l35, nanosecond: m27 } = si4(s29, d25, h35, u30, l35, m27, o35, a27, i29), new t8(s29, d25, h35, u30, l35, m27);
    }
    equals(e26) {
      if (!we6(this))
        throw new TypeError("invalid receiver");
      let r91 = jr4(e26);
      for (let o35 of [L8, x6, q7, A7, W7, z6])
        if (n7(this, o35) !== n7(r91, o35))
          return false;
      return true;
    }
    toString(e26) {
      if (!we6(this))
        throw new TypeError("invalid receiver");
      let r91 = X7(e26), o35 = ln4(r91), i29 = Er4(r91, "trunc"), a27 = or4(r91, "smallestUnit", "time", void 0);
      if (a27 === "hour")
        throw new RangeError('smallestUnit must be a time unit other than "hour"');
      let { precision: s29, unit: d25, increment: h35 } = un4(a27, o35);
      return Xi4(this, s29, { unit: d25, increment: h35, roundingMode: i29 });
    }
    toJSON() {
      if (!we6(this))
        throw new TypeError("invalid receiver");
      return Xi4(this, "auto");
    }
    toLocaleString(e26, r91) {
      if (!we6(this))
        throw new TypeError("invalid receiver");
      return new zr4(e26, r91).format(this);
    }
    valueOf() {
      throw new TypeError("use compare() or equals() to compare Temporal.PlainTime");
    }
    toPlainDateTime(e26) {
      if (!we6(this))
        throw new TypeError("invalid receiver");
      let r91 = ae6(e26), o35 = n7(r91, $7), i29 = n7(r91, R8), a27 = n7(r91, B8), s29 = n7(r91, v8);
      return rr4(o35, i29, a27, n7(this, L8), n7(this, x6), n7(this, q7), n7(this, A7), n7(this, W7), n7(this, z6), s29);
    }
    toZonedDateTime(e26) {
      if (!we6(this))
        throw new TypeError("invalid receiver");
      if (!ce5(e26))
        throw new TypeError("invalid argument");
      let r91 = e26.plainDate;
      if (r91 === void 0)
        throw new TypeError("missing date property");
      let o35 = ae6(r91), i29 = e26.timeZone;
      if (i29 === void 0)
        throw new TypeError("missing timeZone property");
      let a27 = xe5(i29), s29 = n7(o35, $7), d25 = n7(o35, R8), h35 = n7(o35, B8), u30 = n7(o35, v8), l35 = n7(this, L8), m27 = n7(this, x6), f25 = n7(this, q7), y24 = n7(this, A7), p24 = n7(this, W7), w26 = n7(this, z6);
      return Fe4(n7(Qe2(a27, new (O9("%Temporal.PlainDateTime%"))(s29, d25, h35, l35, m27, f25, y24, p24, w26, u30), "compatible"), j9), a27, u30);
    }
    getISOFields() {
      if (!we6(this))
        throw new TypeError("invalid receiver");
      return { isoHour: n7(this, L8), isoMicrosecond: n7(this, W7), isoMillisecond: n7(this, A7), isoMinute: n7(this, x6), isoNanosecond: n7(this, z6), isoSecond: n7(this, q7) };
    }
    static from(e26, r91) {
      let o35 = Ee7(X7(r91));
      return we6(e26) ? new t8(n7(e26, L8), n7(e26, x6), n7(e26, q7), n7(e26, A7), n7(e26, W7), n7(e26, z6)) : jr4(e26, o35);
    }
    static compare(e26, r91) {
      let o35 = jr4(e26), i29 = jr4(r91);
      for (let a27 of [L8, x6, q7, A7, W7, z6]) {
        let s29 = n7(o35, a27), d25 = n7(i29, a27);
        if (s29 !== d25)
          return dt4(s29 - d25);
      }
      return 0;
    }
  };
  kr4(nn3, "Temporal.PlainTime");
  var ct5 = class {
    constructor(e26) {
      if (arguments.length < 1)
        throw new RangeError("missing argument: identifier is required");
      let r91 = Ho4(e26);
      Fr4(this), G9(this, Or4, r91);
    }
    get id() {
      if (!mr4(this))
        throw new TypeError("invalid receiver");
      return n7(this, Or4);
    }
    getOffsetNanosecondsFor(e26) {
      if (!mr4(this))
        throw new TypeError("invalid receiver");
      let r91 = vr4(e26), o35 = n7(this, Or4);
      return vt5(o35) ? Vr4(o35) : Zr3(o35, n7(r91, j9));
    }
    getOffsetStringFor(e26) {
      if (!mr4(this))
        throw new TypeError("invalid receiver");
      return wo4(this, vr4(e26));
    }
    getPlainDateTimeFor(e26, r91 = "iso8601") {
      if (!mr4(this))
        throw new TypeError("invalid receiver");
      return lr4(this, vr4(e26), ir4(r91));
    }
    getInstantFor(e26, r91) {
      if (!mr4(this))
        throw new TypeError("invalid receiver");
      return Qe2(this, at5(e26), Rt5(X7(r91)));
    }
    getPossibleInstantsFor(e26) {
      if (!mr4(this))
        throw new TypeError("invalid receiver");
      let r91 = at5(e26), o35 = O9("%Temporal.Instant%"), i29 = n7(this, Or4);
      if (vt5(i29)) {
        let s29 = Kr4(n7(r91, $7), n7(r91, R8), n7(r91, B8), n7(r91, L8), n7(r91, x6), n7(r91, q7), n7(r91, A7), n7(r91, W7), n7(r91, z6));
        if (s29 === null)
          throw new RangeError("DateTime outside of supported range");
        let d25 = Vr4(i29);
        return [new o35(S9.subtract(s29, S9.BigInt(d25)))];
      }
      return function(d25, h35, u30, l35, m27, f25, y24, p24, w26, g31) {
        let T23 = Kr4(h35, u30, l35, m27, f25, y24, p24, w26, g31);
        if (T23 === null)
          throw new RangeError("DateTime outside of supported range");
        let E24 = S9.subtract(T23, Yr4);
        S9.lessThan(E24, _t5) && (E24 = T23);
        let I26 = S9.add(T23, Yr4);
        S9.greaterThan(I26, St5) && (I26 = T23);
        let b28 = Zr3(d25, E24), M26 = Zr3(d25, I26);
        return (b28 === M26 ? [b28] : [b28, M26]).map((C24) => {
          let D24 = S9.subtract(T23, S9.BigInt(C24)), Y23 = Ca4(d25, D24);
          if (h35 === Y23.year && u30 === Y23.month && l35 === Y23.day && m27 === Y23.hour && f25 === Y23.minute && y24 === Y23.second && p24 === Y23.millisecond && w26 === Y23.microsecond && g31 === Y23.nanosecond)
            return D24;
        }).filter((C24) => C24 !== void 0);
      }(i29, n7(r91, $7), n7(r91, R8), n7(r91, B8), n7(r91, L8), n7(r91, x6), n7(r91, q7), n7(r91, A7), n7(r91, W7), n7(r91, z6)).map((s29) => new o35(s29));
    }
    getNextTransition(e26) {
      if (!mr4(this))
        throw new TypeError("invalid receiver");
      let r91 = vr4(e26), o35 = n7(this, Or4);
      if (vt5(o35) || o35 === "UTC")
        return null;
      let i29 = n7(r91, j9), a27 = O9("%Temporal.Instant%");
      return i29 = Ma4(o35, i29), i29 === null ? null : new a27(i29);
    }
    getPreviousTransition(e26) {
      if (!mr4(this))
        throw new TypeError("invalid receiver");
      let r91 = vr4(e26), o35 = n7(this, Or4);
      if (vt5(o35) || o35 === "UTC")
        return null;
      let i29 = n7(r91, j9), a27 = O9("%Temporal.Instant%");
      return i29 = go4(o35, i29), i29 === null ? null : new a27(i29);
    }
    toString() {
      if (!mr4(this))
        throw new TypeError("invalid receiver");
      return n7(this, Or4);
    }
    toJSON() {
      if (!mr4(this))
        throw new TypeError("invalid receiver");
      return n7(this, Or4);
    }
    static from(e26) {
      return va3(xe5(e26));
    }
  };
  kr4(ct5, "Temporal.TimeZone"), fe5("Temporal.TimeZone.prototype.getOffsetNanosecondsFor", ct5.prototype.getOffsetNanosecondsFor), fe5("Temporal.TimeZone.prototype.getPossibleInstantsFor", ct5.prototype.getPossibleInstantsFor);
  var Zs4 = Object.create;
  var on4 = class {
    constructor(e26, r91, o35 = "iso8601", i29 = 1) {
      wa3(this, ee6(e26), ee6(r91), ir4(o35), ee6(i29));
    }
    get year() {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      return Wn3(n7(this, v8), this);
    }
    get month() {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      return zn3(n7(this, v8), this);
    }
    get monthCode() {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      return fn3(n7(this, v8), this);
    }
    get calendarId() {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      return je4(n7(this, v8));
    }
    get era() {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      return Gn4(n7(this, v8), this);
    }
    get eraYear() {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      return Jn4(n7(this, v8), this);
    }
    get daysInMonth() {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      return _n4(n7(this, v8), this);
    }
    get daysInYear() {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      return Vn3(n7(this, v8), this);
    }
    get monthsInYear() {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      return Kn3(n7(this, v8), this);
    }
    get inLeapYear() {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      return Xn4(n7(this, v8), this);
    }
    with(e26, r91) {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      if (!ce5(e26))
        throw new TypeError("invalid argument");
      Ut5(e26);
      let o35 = X7(r91), i29 = n7(this, v8), a27 = De4(i29, ["month", "monthCode", "year"]), s29 = _7(this, a27, []);
      return s29 = ut5(i29, s29, _7(e26, a27, "partial")), s29 = _7(s29, a27, []), mt5(i29, s29, o35);
    }
    add(e26, r91) {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      return Gi4("add", this, e26, r91);
    }
    subtract(e26, r91) {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      return Gi4("subtract", this, e26, r91);
    }
    until(e26, r91) {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      return Li4("until", this, e26, r91);
    }
    since(e26, r91) {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      return Li4("since", this, e26, r91);
    }
    equals(e26) {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      let r91 = Wt5(e26);
      for (let o35 of [$7, R8, B8])
        if (n7(this, o35) !== n7(r91, o35))
          return false;
      return wn4(n7(this, v8), n7(r91, v8));
    }
    toString(e26) {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      return Ri4(this, hn4(X7(e26)));
    }
    toJSON() {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      return Ri4(this);
    }
    toLocaleString(e26, r91) {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      return new zr4(e26, r91).format(this);
    }
    valueOf() {
      throw new TypeError("use compare() or equals() to compare Temporal.PlainYearMonth");
    }
    toPlainDate(e26) {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      if (!ce5(e26))
        throw new TypeError("argument should be an object");
      let r91 = n7(this, v8), o35 = De4(r91, ["monthCode", "year"]), i29 = _7(this, o35, []), a27 = De4(r91, ["day"]), s29 = ut5(r91, i29, _7(e26, a27, []));
      s29 = _7(s29, [.../* @__PURE__ */ new Set([...o35, ...a27])], []);
      let d25 = Zs4(null);
      return d25.overflow = "reject", xr4(r91, s29, d25);
    }
    getISOFields() {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      return { calendar: n7(this, v8), isoDay: n7(this, B8), isoMonth: n7(this, R8), isoYear: n7(this, $7) };
    }
    getCalendar() {
      if (!re6(this))
        throw new TypeError("invalid receiver");
      return qt5(n7(this, v8));
    }
    static from(e26, r91) {
      let o35 = X7(r91);
      return re6(e26) ? (Ee7(o35), Kt5(n7(e26, $7), n7(e26, R8), n7(e26, v8), n7(e26, B8))) : Wt5(e26, o35);
    }
    static compare(e26, r91) {
      let o35 = Wt5(e26), i29 = Wt5(r91);
      return Jr4(n7(o35, $7), n7(o35, R8), n7(o35, B8), n7(i29, $7), n7(i29, R8), n7(i29, B8));
    }
  };
  kr4(on4, "Temporal.PlainYearMonth");
  var Us4 = zr4.prototype.resolvedOptions;
  var Ls4 = Object.create;
  var an4 = class {
    constructor(e26, r91, o35 = "iso8601") {
      if (arguments.length < 1)
        throw new TypeError("missing argument: epochNanoseconds is required");
      ga3(this, Gt5(e26), xe5(r91), ir4(o35));
    }
    get calendarId() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return je4(n7(this, v8));
    }
    get timeZoneId() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return Xt5(n7(this, ie7));
    }
    get year() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return Wn3(n7(this, v8), se7(this));
    }
    get month() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return zn3(n7(this, v8), se7(this));
    }
    get monthCode() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return fn3(n7(this, v8), se7(this));
    }
    get day() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return yn3(n7(this, v8), se7(this));
    }
    get hour() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return n7(se7(this), L8);
    }
    get minute() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return n7(se7(this), x6);
    }
    get second() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return n7(se7(this), q7);
    }
    get millisecond() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return n7(se7(this), A7);
    }
    get microsecond() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return n7(se7(this), W7);
    }
    get nanosecond() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return n7(se7(this), z6);
    }
    get era() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return Gn4(n7(this, v8), se7(this));
    }
    get eraYear() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return Jn4(n7(this, v8), se7(this));
    }
    get epochSeconds() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      let e26 = n7(this, j9);
      return S9.toNumber(Dt5(e26, $r3));
    }
    get epochMilliseconds() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      let e26 = n7(this, j9);
      return S9.toNumber(Dt5(e26, hr4));
    }
    get epochMicroseconds() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return Zn4(Dt5(n7(this, j9), te8));
    }
    get epochNanoseconds() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return Zn4(n7(this, j9));
    }
    get dayOfWeek() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return Jo4(n7(this, v8), se7(this));
    }
    get dayOfYear() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return _o4(n7(this, v8), se7(this));
    }
    get weekOfYear() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return Vo4(n7(this, v8), se7(this));
    }
    get yearOfWeek() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return Ko2(n7(this, v8), se7(this));
    }
    get hoursInDay() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      let e26 = se7(this), r91 = O9("%Temporal.PlainDateTime%"), o35 = n7(e26, $7), i29 = n7(e26, R8), a27 = n7(e26, B8), s29 = new r91(o35, i29, a27, 0, 0, 0, 0, 0, 0), d25 = st5(o35, i29, a27, 0, 0, 0, 1, "reject"), h35 = new r91(d25.year, d25.month, d25.day, 0, 0, 0, 0, 0, 0), u30 = n7(this, ie7), l35 = n7(Qe2(u30, s29, "compatible"), j9), m27 = n7(Qe2(u30, h35, "compatible"), j9);
      return Cr4(S9.subtract(m27, l35), ca3);
    }
    get daysInWeek() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return Xo3(n7(this, v8), se7(this));
    }
    get daysInMonth() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return _n4(n7(this, v8), se7(this));
    }
    get daysInYear() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return Vn3(n7(this, v8), se7(this));
    }
    get monthsInYear() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return Kn3(n7(this, v8), se7(this));
    }
    get inLeapYear() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return Xn4(n7(this, v8), se7(this));
    }
    get offset() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return wo4(n7(this, ie7), n7(this, Le6));
    }
    get offsetNanoseconds() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return Ir4(n7(this, ie7), n7(this, Le6));
    }
    with(e26, r91) {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      if (!ce5(e26))
        throw new TypeError("invalid zoned-date-time-like");
      Ut5(e26);
      let o35 = X7(r91), i29 = n7(this, v8), a27 = De4(i29, ["day", "hour", "microsecond", "millisecond", "minute", "month", "monthCode", "nanosecond", "second", "year"]);
      a27.push("offset");
      let s29 = _7(this, a27, ["offset"]);
      s29 = ut5(i29, s29, _7(e26, a27, "partial")), s29 = _7(s29, a27, ["offset"]);
      let d25 = Rt5(o35), h35 = Rn3(o35, "prefer"), { year: u30, month: l35, day: m27, hour: f25, minute: y24, second: p24, millisecond: w26, microsecond: g31, nanosecond: T23 } = mn3(i29, s29, o35), E24 = Vr4(s29.offset), I26 = n7(this, ie7);
      return Fe4(kn3(u30, l35, m27, f25, y24, p24, w26, g31, T23, "option", E24, I26, d25, h35, false), I26, i29);
    }
    withPlainDate(e26) {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      let r91 = ae6(e26), o35 = n7(r91, $7), i29 = n7(r91, R8), a27 = n7(r91, B8), s29 = n7(r91, v8), d25 = se7(this), h35 = n7(d25, L8), u30 = n7(d25, x6), l35 = n7(d25, q7), m27 = n7(d25, A7), f25 = n7(d25, W7), y24 = n7(d25, z6);
      s29 = Ta4(n7(this, v8), s29);
      let p24 = n7(this, ie7);
      return Fe4(n7(Qe2(p24, new (O9("%Temporal.PlainDateTime%"))(o35, i29, a27, h35, u30, l35, m27, f25, y24, s29), "compatible"), j9), p24, s29);
    }
    withPlainTime(e26) {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      let r91 = O9("%Temporal.PlainTime%"), o35 = e26 === void 0 ? new r91() : jr4(e26), i29 = se7(this), a27 = n7(i29, $7), s29 = n7(i29, R8), d25 = n7(i29, B8), h35 = n7(this, v8), u30 = n7(o35, L8), l35 = n7(o35, x6), m27 = n7(o35, q7), f25 = n7(o35, A7), y24 = n7(o35, W7), p24 = n7(o35, z6), w26 = n7(this, ie7);
      return Fe4(n7(Qe2(w26, new (O9("%Temporal.PlainDateTime%"))(a27, s29, d25, u30, l35, m27, f25, y24, p24, h35), "compatible"), j9), w26, h35);
    }
    withTimeZone(e26) {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      let r91 = xe5(e26);
      return Fe4(n7(this, j9), r91, n7(this, v8));
    }
    withCalendar(e26) {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      let r91 = ir4(e26);
      return Fe4(n7(this, j9), n7(this, ie7), r91);
    }
    add(e26, r91) {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return Ji4("add", this, e26, r91);
    }
    subtract(e26, r91) {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return Ji4("subtract", this, e26, r91);
    }
    until(e26, r91) {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return xi4("until", this, e26, r91);
    }
    since(e26, r91) {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return xi4("since", this, e26, r91);
    }
    round(e26) {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      if (e26 === void 0)
        throw new TypeError("options parameter is required");
      let r91 = typeof e26 == "string" ? Nt5("smallestUnit", e26) : X7(e26), o35 = Lt5(r91), i29 = Er4(r91, "halfExpand"), a27 = or4(r91, "smallestUnit", "time", ht5, ["day"]), s29 = { day: 1, hour: 24, minute: 60, second: 60, millisecond: 1e3, microsecond: 1e3, nanosecond: 1e3 }[a27];
      xt5(o35, s29, s29 === 1);
      let d25 = se7(this), h35 = n7(d25, $7), u30 = n7(d25, R8), l35 = n7(d25, B8), m27 = n7(d25, L8), f25 = n7(d25, x6), y24 = n7(d25, q7), p24 = n7(d25, A7), w26 = n7(d25, W7), g31 = n7(d25, z6), T23 = O9("%Temporal.PlainDateTime%"), E24 = n7(this, ie7), I26 = n7(this, v8), b28 = Qe2(E24, new T23(n7(d25, $7), n7(d25, R8), n7(d25, B8), 0, 0, 0, 0, 0, 0), "compatible"), M26 = yr3(b28, E24, I26, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0), C24 = S9.subtract(M26, S9.BigInt(n7(b28, j9)));
      if (S9.lessThanOrEqual(C24, ge6))
        throw new RangeError("cannot round a ZonedDateTime in a calendar with zero or negative length days");
      return { year: h35, month: u30, day: l35, hour: m27, minute: f25, second: y24, millisecond: p24, microsecond: w26, nanosecond: g31 } = ai3(h35, u30, l35, m27, f25, y24, p24, w26, g31, o35, a27, i29, S9.toNumber(C24)), Fe4(kn3(h35, u30, l35, m27, f25, y24, p24, w26, g31, "option", Ir4(E24, n7(this, Le6)), E24, "compatible", "prefer", false), E24, n7(this, v8));
    }
    equals(e26) {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      let r91 = zt5(e26), o35 = n7(this, j9), i29 = n7(r91, j9);
      return !!S9.equal(S9.BigInt(o35), S9.BigInt(i29)) && !!Ea4(n7(this, ie7), n7(r91, ie7)) && wn4(n7(this, v8), n7(r91, v8));
    }
    toString(e26) {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      let r91 = X7(e26), o35 = hn4(r91), i29 = ln4(r91), a27 = function(y24) {
        return Qr4(y24, "offset", ["auto", "never"], "auto");
      }(r91), s29 = Er4(r91, "trunc"), d25 = or4(r91, "smallestUnit", "time", void 0);
      if (d25 === "hour")
        throw new RangeError('smallestUnit must be a time unit other than "hour"');
      let h35 = function(y24) {
        return Qr4(y24, "timeZoneName", ["auto", "never", "critical"], "auto");
      }(r91), { precision: u30, unit: l35, increment: m27 } = un4(d25, i29);
      return Bi4(this, u30, o35, h35, a27, { unit: l35, increment: m27, roundingMode: s29 });
    }
    toLocaleString(e26, r91) {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      let o35 = X7(r91), i29 = Ls4(null);
      if (It5(i29, o35, ["timeZone"]), o35.timeZone !== void 0)
        throw new TypeError("ZonedDateTime toLocaleString does not accept a timeZone option");
      i29.year === void 0 && i29.month === void 0 && i29.day === void 0 && i29.weekday === void 0 && i29.dateStyle === void 0 && i29.hour === void 0 && i29.minute === void 0 && i29.second === void 0 && i29.timeStyle === void 0 && i29.dayPeriod === void 0 && i29.timeZoneName === void 0 && (i29.timeZoneName = "short");
      let a27 = Xt5(n7(this, ie7));
      if (vt5(a27))
        throw new RangeError("toLocaleString does not support offset string time zones");
      a27 = Ho4(a27), i29.timeZone = a27;
      let s29 = new zr4(e26, i29), d25 = N8(Us4, s29, []).calendar, h35 = je4(n7(this, v8));
      if (h35 !== "iso8601" && d25 !== "iso8601" && d25 !== h35)
        throw new RangeError(`cannot format ZonedDateTime with calendar ${h35} in locale with calendar ${d25}`);
      return s29.format(n7(this, Le6));
    }
    toJSON() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return Bi4(this, "auto");
    }
    valueOf() {
      throw new TypeError("use compare() or equals() to compare Temporal.ZonedDateTime");
    }
    startOfDay() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      let e26 = se7(this), r91 = O9("%Temporal.PlainDateTime%"), o35 = n7(this, v8), i29 = new r91(n7(e26, $7), n7(e26, R8), n7(e26, B8), 0, 0, 0, 0, 0, 0, o35), a27 = n7(this, ie7);
      return Fe4(n7(Qe2(a27, i29, "compatible"), j9), a27, o35);
    }
    toInstant() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return new (O9("%Temporal.Instant%"))(n7(this, j9));
    }
    toPlainDate() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return kt4(se7(this));
    }
    toPlainTime() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return Qo4(se7(this));
    }
    toPlainDateTime() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return se7(this);
    }
    toPlainYearMonth() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      let e26 = n7(this, v8);
      return mt5(e26, _7(this, De4(e26, ["monthCode", "year"]), []));
    }
    toPlainMonthDay() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      let e26 = n7(this, v8);
      return Bt4(e26, _7(this, De4(e26, ["day", "monthCode"]), []));
    }
    getISOFields() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      let e26 = se7(this), r91 = n7(this, ie7);
      return { calendar: n7(this, v8), isoDay: n7(e26, B8), isoHour: n7(e26, L8), isoMicrosecond: n7(e26, W7), isoMillisecond: n7(e26, A7), isoMinute: n7(e26, x6), isoMonth: n7(e26, R8), isoNanosecond: n7(e26, z6), isoSecond: n7(e26, q7), isoYear: n7(e26, $7), offset: wo4(r91, n7(this, Le6)), timeZone: r91 };
    }
    getCalendar() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return qt5(n7(this, v8));
    }
    getTimeZone() {
      if (!k8(this))
        throw new TypeError("invalid receiver");
      return va3(n7(this, ie7));
    }
    static from(e26, r91) {
      let o35 = X7(r91);
      return k8(e26) ? (Rt5(o35), Rn3(o35, "reject"), Ee7(o35), Fe4(n7(e26, j9), n7(e26, ie7), n7(e26, v8))) : zt5(e26, o35);
    }
    static compare(e26, r91) {
      let o35 = zt5(e26), i29 = zt5(r91), a27 = n7(o35, j9), s29 = n7(i29, j9);
      return S9.lessThan(S9.BigInt(a27), S9.BigInt(s29)) ? -1 : S9.greaterThan(S9.BigInt(a27), S9.BigInt(s29)) ? 1 : 0;
    }
  };
  function se7(t32) {
    return lr4(n7(t32, ie7), n7(t32, Le6), n7(t32, v8));
  }
  kr4(an4, "Temporal.ZonedDateTime");
  var Ws4 = Object.freeze({ __proto__: null, Calendar: he5, Duration: rn4, Instant: jt5, Now: rs4, PlainDate: Ht5, PlainDateTime: en4, PlainMonthDay: tn4, PlainTime: nn3, PlainYearMonth: on4, TimeZone: ct5, ZonedDateTime: an4 });
  var xs4 = [jt5, he5, Ht5, en4, rn4, tn4, nn3, ct5, on4, an4];
  for (let t32 of xs4) {
    let e26 = Object.getOwnPropertyDescriptor(t32, "prototype");
    (e26.configurable || e26.enumerable || e26.writable) && (e26.configurable = false, e26.enumerable = false, e26.writable = false, Object.defineProperty(t32, "prototype", e26));
  }

  // lib/utils/formatting.ts
  function fmt(_arrowDataTypeValue, format, log = false) {
    return (value) => {
      if (log)
        console.log(value);
      if (value === void 0 || value === null) {
        return stringify(value);
      }
      return format(value);
    };
  }
  function stringify(x22) {
    return `${x22}`;
  }
  function formatDataType(type) {
    if (f5.isLargeBinary(type))
      return "large binary";
    if (f5.isLargeUtf8(type))
      return "large utf8";
    return type.toString().toLowerCase().replace("<second>", "[s]").replace("<millisecond>", "[ms]").replace("<microsecond>", "[\xB5s]").replace("<nanosecond>", "[ns]").replace("<day>", "[day]").replace("dictionary<", "dict<");
  }
  function formatterForValue(type) {
    if (f5.isNull(type)) {
      return fmt(type.TValue, stringify);
    }
    if (f5.isInt(type) || f5.isFloat(type)) {
      return fmt(type.TValue, (value) => {
        if (Number.isNaN(value))
          return "NaN";
        return value === 0 ? "0" : value.toLocaleString("en");
      });
    }
    if (f5.isBinary(type) || f5.isFixedSizeBinary(type) || f5.isLargeBinary(type)) {
      return fmt(type.TValue, (bytes) => {
        let maxlen = 32;
        let result = "b'";
        for (let i29 = 0; i29 < Math.min(bytes.length, maxlen); i29++) {
          const byte = bytes[i29];
          if (byte >= 32 && byte <= 126) {
            result += String.fromCharCode(byte);
          } else {
            result += "\\x" + ("00" + byte.toString(16)).slice(-2);
          }
        }
        if (bytes.length > maxlen)
          result += "...";
        result += "'";
        return result;
      });
    }
    if (f5.isUtf8(type) || f5.isLargeUtf8(type)) {
      return fmt(type.TValue, (text) => text);
    }
    if (f5.isBool(type)) {
      return fmt(type.TValue, stringify);
    }
    if (f5.isDecimal(type)) {
      return fmt(type.TValue, () => "TODO");
    }
    if (f5.isDate(type)) {
      return fmt(type.TValue, (ms6) => {
        return Ws4.Instant.fromEpochMilliseconds(ms6).toZonedDateTimeISO("UTC").toPlainDate().toString();
      });
    }
    if (f5.isTime(type)) {
      return fmt(type.TValue, (ms6) => {
        return instantFromTimeUnit(ms6, type.unit).toZonedDateTimeISO("UTC").toPlainTime().toString();
      });
    }
    if (f5.isTimestamp(type)) {
      return fmt(type.TValue, (ms6) => {
        return Ws4.Instant.fromEpochMilliseconds(ms6).toZonedDateTimeISO("UTC").toPlainDateTime().toString();
      });
    }
    if (f5.isInterval(type)) {
      return fmt(type.TValue, (_value) => {
        return "TODO";
      });
    }
    if (f5.isDuration(type)) {
      return fmt(type.TValue, (bigintValue) => {
        return durationFromTimeUnit(bigintValue, type.unit).toString();
      });
    }
    if (f5.isList(type)) {
      return fmt(type.TValue, (value) => {
        return value.toString();
      });
    }
    if (f5.isStruct(type)) {
      return fmt(type.TValue, (value) => {
        return value.toString();
      });
    }
    if (f5.isUnion(type)) {
      return fmt(type.TValue, (_value) => {
        return "TODO";
      });
    }
    if (f5.isMap(type)) {
      return fmt(type.TValue, (_value) => {
        return "TODO";
      });
    }
    if (f5.isDictionary(type)) {
      let formatter = formatterForValue(type.dictionary);
      return fmt(type.TValue, formatter);
    }
    return () => `Unsupported type: ${type}`;
  }
  function instantFromTimeUnit(value, unit) {
    if (unit === h8.SECOND) {
      if (typeof value === "bigint")
        value = Number(value);
      return Ws4.Instant.fromEpochSeconds(value);
    }
    if (unit === h8.MILLISECOND) {
      if (typeof value === "bigint")
        value = Number(value);
      return Ws4.Instant.fromEpochMilliseconds(value);
    }
    if (unit === h8.MICROSECOND) {
      if (typeof value === "number")
        value = BigInt(value);
      return Ws4.Instant.fromEpochMicroseconds(value);
    }
    if (unit === h8.NANOSECOND) {
      if (typeof value === "number")
        value = BigInt(value);
      return Ws4.Instant.fromEpochNanoseconds(value);
    }
    throw new Error("Invalid TimeUnit");
  }
  function durationFromTimeUnit(value, unit) {
    value = Number(value);
    if (unit === h8.SECOND) {
      return Ws4.Duration.from({ seconds: value });
    }
    if (unit === h8.MILLISECOND) {
      return Ws4.Duration.from({ milliseconds: value });
    }
    if (unit === h8.MICROSECOND) {
      return Ws4.Duration.from({ microseconds: value });
    }
    if (unit === h8.NANOSECOND) {
      return Ws4.Duration.from({ nanoseconds: value });
    }
    throw new Error("Invalid TimeUnit");
  }

  // https://cdn.jsdelivr.net/npm/internmap@2.0.3/+esm
  var e3 = class extends Map {
    constructor(e26, t32 = u7) {
      if (super(), Object.defineProperties(this, { _intern: { value: /* @__PURE__ */ new Map() }, _key: { value: t32 } }), null != e26)
        for (const [t33, r91] of e26)
          this.set(t33, r91);
    }
    get(e26) {
      return super.get(r55(this, e26));
    }
    has(e26) {
      return super.has(r55(this, e26));
    }
    set(e26, t32) {
      return super.set(n8(this, e26), t32);
    }
    delete(e26) {
      return super.delete(s5(this, e26));
    }
  };
  var t9 = class extends Set {
    constructor(e26, t32 = u7) {
      if (super(), Object.defineProperties(this, { _intern: { value: /* @__PURE__ */ new Map() }, _key: { value: t32 } }), null != e26)
        for (const t33 of e26)
          this.add(t33);
    }
    has(e26) {
      return super.has(r55(this, e26));
    }
    add(e26) {
      return super.add(n8(this, e26));
    }
    delete(e26) {
      return super.delete(s5(this, e26));
    }
  };
  function r55({ _intern: e26, _key: t32 }, r91) {
    const n37 = t32(r91);
    return e26.has(n37) ? e26.get(n37) : r91;
  }
  function n8({ _intern: e26, _key: t32 }, r91) {
    const n37 = t32(r91);
    return e26.has(n37) ? e26.get(n37) : (e26.set(n37, r91), r91);
  }
  function s5({ _intern: e26, _key: t32 }, r91) {
    const n37 = t32(r91);
    return e26.has(n37) && (r91 = e26.get(n37), e26.delete(n37)), r91;
  }
  function u7(e26) {
    return null !== e26 && "object" == typeof e26 ? e26.valueOf() : e26;
  }

  // https://cdn.jsdelivr.net/npm/d3-array@3.2.4/+esm
  function r56(t32, n37) {
    return null == t32 || null == n37 ? NaN : t32 < n37 ? -1 : t32 > n37 ? 1 : t32 >= n37 ? 0 : NaN;
  }
  function o7(t32, n37) {
    return null == t32 || null == n37 ? NaN : n37 < t32 ? -1 : n37 > t32 ? 1 : n37 >= t32 ? 0 : NaN;
  }
  function e4(t32) {
    let n37, e26, i29;
    function u30(t33, r91, o35 = 0, f25 = t33.length) {
      if (o35 < f25) {
        if (0 !== n37(r91, r91))
          return f25;
        do {
          const n38 = o35 + f25 >>> 1;
          e26(t33[n38], r91) < 0 ? o35 = n38 + 1 : f25 = n38;
        } while (o35 < f25);
      }
      return o35;
    }
    return 2 !== t32.length ? (n37 = r56, e26 = (n38, o35) => r56(t32(n38), o35), i29 = (n38, r91) => t32(n38) - r91) : (n37 = t32 === r56 || t32 === o7 ? t32 : f6, e26 = t32, i29 = t32), { left: u30, center: function(t33, n38, r91 = 0, o35 = t33.length) {
      const e27 = u30(t33, n38, r91, o35 - 1);
      return e27 > r91 && i29(t33[e27 - 1], n38) > -i29(t33[e27], n38) ? e27 - 1 : e27;
    }, right: function(t33, r91, o35 = 0, f25 = t33.length) {
      if (o35 < f25) {
        if (0 !== n37(r91, r91))
          return f25;
        do {
          const n38 = o35 + f25 >>> 1;
          e26(t33[n38], r91) <= 0 ? o35 = n38 + 1 : f25 = n38;
        } while (o35 < f25);
      }
      return o35;
    } };
  }
  function f6() {
    return 0;
  }
  function i6(t32) {
    return null === t32 ? NaN : +t32;
  }
  var u8 = e4(r56);
  var l9 = u8.right;
  var c7 = u8.left;
  var a7 = e4(i6).center;
  var h10 = d8(M7);
  var y8 = d8(function(t32) {
    const n37 = M7(t32);
    return (t33, r91, o35, e26, f25) => {
      n37(t33, r91, (o35 <<= 2) + 0, (e26 <<= 2) + 0, f25 <<= 2), n37(t33, r91, o35 + 1, e26 + 1, f25), n37(t33, r91, o35 + 2, e26 + 2, f25), n37(t33, r91, o35 + 3, e26 + 3, f25);
    };
  });
  function d8(t32) {
    return function(n37, r91, o35 = r91) {
      if (!((r91 = +r91) >= 0))
        throw new RangeError("invalid rx");
      if (!((o35 = +o35) >= 0))
        throw new RangeError("invalid ry");
      let { data: e26, width: f25, height: i29 } = n37;
      if (!((f25 = Math.floor(f25)) >= 0))
        throw new RangeError("invalid width");
      if (!((i29 = Math.floor(void 0 !== i29 ? i29 : e26.length / f25)) >= 0))
        throw new RangeError("invalid height");
      if (!f25 || !i29 || !r91 && !o35)
        return n37;
      const u30 = r91 && t32(r91), l35 = o35 && t32(o35), c30 = e26.slice();
      return u30 && l35 ? (p8(u30, c30, e26, f25, i29), p8(u30, e26, c30, f25, i29), p8(u30, c30, e26, f25, i29), m7(l35, e26, c30, f25, i29), m7(l35, c30, e26, f25, i29), m7(l35, e26, c30, f25, i29)) : u30 ? (p8(u30, e26, c30, f25, i29), p8(u30, c30, e26, f25, i29), p8(u30, e26, c30, f25, i29)) : l35 && (m7(l35, e26, c30, f25, i29), m7(l35, c30, e26, f25, i29), m7(l35, e26, c30, f25, i29)), n37;
    };
  }
  function p8(t32, n37, r91, o35, e26) {
    for (let f25 = 0, i29 = o35 * e26; f25 < i29; )
      t32(n37, r91, f25, f25 += o35, 1);
  }
  function m7(t32, n37, r91, o35, e26) {
    for (let f25 = 0, i29 = o35 * e26; f25 < o35; ++f25)
      t32(n37, r91, f25, f25 + i29, o35);
  }
  function M7(t32) {
    const n37 = Math.floor(t32);
    if (n37 === t32)
      return function(t33) {
        const n38 = 2 * t33 + 1;
        return (r92, o36, e26, f25, i29) => {
          if (!((f25 -= i29) >= e26))
            return;
          let u30 = t33 * o36[e26];
          const l35 = i29 * t33;
          for (let t34 = e26, n39 = e26 + l35; t34 < n39; t34 += i29)
            u30 += o36[Math.min(f25, t34)];
          for (let t34 = e26, c30 = f25; t34 <= c30; t34 += i29)
            u30 += o36[Math.min(f25, t34 + l35)], r92[t34] = u30 / n38, u30 -= o36[Math.max(e26, t34 - l35)];
        };
      }(t32);
    const r91 = t32 - n37, o35 = 2 * t32 + 1;
    return (t33, e26, f25, i29, u30) => {
      if (!((i29 -= u30) >= f25))
        return;
      let l35 = n37 * e26[f25];
      const c30 = u30 * n37, a27 = c30 + u30;
      for (let t34 = f25, n38 = f25 + c30; t34 < n38; t34 += u30)
        l35 += e26[Math.min(i29, t34)];
      for (let n38 = f25, s29 = i29; n38 <= s29; n38 += u30)
        l35 += e26[Math.min(i29, n38 + c30)], t33[n38] = (l35 + r91 * (e26[Math.max(f25, n38 - a27)] + e26[Math.min(i29, n38 + a27)])) / o35, l35 -= e26[Math.max(f25, n38 - c30)];
    };
  }
  function v9(t32, n37) {
    let r91 = 0;
    if (void 0 === n37)
      for (let n38 of t32)
        null != n38 && (n38 = +n38) >= n38 && ++r91;
    else {
      let o35 = -1;
      for (let e26 of t32)
        null != (e26 = n37(e26, ++o35, t32)) && (e26 = +e26) >= e26 && ++r91;
    }
    return r91;
  }
  function w8(t32) {
    return 0 | t32.length;
  }
  function g9(t32) {
    return !(t32 > 0);
  }
  function A8(t32) {
    return "object" != typeof t32 || "length" in t32 ? t32 : Array.from(t32);
  }
  function b9(...t32) {
    const n37 = "function" == typeof t32[t32.length - 1] && /* @__PURE__ */ function(t33) {
      return (n38) => t33(...n38);
    }(t32.pop()), r91 = (t32 = t32.map(A8)).map(w8), o35 = t32.length - 1, e26 = new Array(o35 + 1).fill(0), f25 = [];
    if (o35 < 0 || r91.some(g9))
      return f25;
    for (; ; ) {
      f25.push(e26.map((n38, r92) => t32[r92][n38]));
      let i29 = o35;
      for (; ++e26[i29] === r91[i29]; ) {
        if (0 === i29)
          return n37 ? f25.map(n37) : f25;
        e26[i29--] = 0;
      }
    }
  }
  function x7(t32, n37) {
    var r91 = 0, o35 = 0;
    return Float64Array.from(t32, void 0 === n37 ? (t33) => r91 += +t33 || 0 : (e26) => r91 += +n37(e26, o35++, t32) || 0);
  }
  function N9(t32, n37) {
    let r91, o35 = 0, e26 = 0, f25 = 0;
    if (void 0 === n37)
      for (let n38 of t32)
        null != n38 && (n38 = +n38) >= n38 && (r91 = n38 - e26, e26 += r91 / ++o35, f25 += r91 * (n38 - e26));
    else {
      let i29 = -1;
      for (let u30 of t32)
        null != (u30 = n37(u30, ++i29, t32)) && (u30 = +u30) >= u30 && (r91 = u30 - e26, e26 += r91 / ++o35, f25 += r91 * (u30 - e26));
    }
    if (o35 > 1)
      return f25 / (o35 - 1);
  }
  function E6(t32, n37) {
    const r91 = N9(t32, n37);
    return r91 ? Math.sqrt(r91) : r91;
  }
  function T8(t32, n37) {
    let r91, o35;
    if (void 0 === n37)
      for (const n38 of t32)
        null != n38 && (void 0 === r91 ? n38 >= n38 && (r91 = o35 = n38) : (r91 > n38 && (r91 = n38), o35 < n38 && (o35 = n38)));
    else {
      let e26 = -1;
      for (let f25 of t32)
        null != (f25 = n37(f25, ++e26, t32)) && (void 0 === r91 ? f25 >= f25 && (r91 = o35 = f25) : (r91 > f25 && (r91 = f25), o35 < f25 && (o35 = f25)));
    }
    return [r91, o35];
  }
  var F8 = class {
    constructor() {
      this._partials = new Float64Array(32), this._n = 0;
    }
    add(t32) {
      const n37 = this._partials;
      let r91 = 0;
      for (let o35 = 0; o35 < this._n && o35 < 32; o35++) {
        const e26 = n37[o35], f25 = t32 + e26, i29 = Math.abs(t32) < Math.abs(e26) ? t32 - (f25 - e26) : e26 - (f25 - t32);
        i29 && (n37[r91++] = i29), t32 = f25;
      }
      return n37[r91] = t32, this._n = r91 + 1, this;
    }
    valueOf() {
      const t32 = this._partials;
      let n37, r91, o35, e26 = this._n, f25 = 0;
      if (e26 > 0) {
        for (f25 = t32[--e26]; e26 > 0 && (n37 = f25, r91 = t32[--e26], f25 = n37 + r91, o35 = r91 - (f25 - n37), !o35); )
          ;
        e26 > 0 && (o35 < 0 && t32[e26 - 1] < 0 || o35 > 0 && t32[e26 - 1] > 0) && (r91 = 2 * o35, n37 = f25 + r91, r91 == n37 - f25 && (f25 = n37));
      }
      return f25;
    }
  };
  function R9(t32) {
    return t32;
  }
  function q8(t32, ...n37) {
    return D10(t32, R9, R9, n37);
  }
  function I10(t32, n37, ...r91) {
    return D10(t32, R9, n37, r91);
  }
  function L9(t32, n37, ...r91) {
    return D10(t32, Array.from, n37, r91);
  }
  function D10(n37, r91, o35, e26) {
    return function n38(f25, i29) {
      if (i29 >= e26.length)
        return o35(f25);
      const u30 = new e3(), l35 = e26[i29++];
      let c30 = -1;
      for (const t32 of f25) {
        const n39 = l35(t32, ++c30, f25), r92 = u30.get(n39);
        r92 ? r92.push(t32) : u30.set(n39, [t32]);
      }
      for (const [t32, r92] of u30)
        u30.set(t32, n38(r92, i29));
      return r91(u30);
    }(n37, 0);
  }
  function G10(t32, n37) {
    return Array.from(n37, (n38) => t32[n38]);
  }
  function H8(t32, ...n37) {
    if ("function" != typeof t32[Symbol.iterator])
      throw new TypeError("values is not iterable");
    t32 = Array.from(t32);
    let [r91] = n37;
    if (r91 && 2 !== r91.length || n37.length > 1) {
      const o35 = Uint32Array.from(t32, (t33, n38) => n38);
      return n37.length > 1 ? (n37 = n37.map((n38) => t32.map(n38)), o35.sort((t33, r92) => {
        for (const o36 of n37) {
          const n38 = K8(o36[t33], o36[r92]);
          if (n38)
            return n38;
        }
      })) : (r91 = t32.map(r91), o35.sort((t33, n38) => K8(r91[t33], r91[n38]))), G10(t32, o35);
    }
    return t32.sort(J7(r91));
  }
  function J7(t32 = r56) {
    if (t32 === r56)
      return K8;
    if ("function" != typeof t32)
      throw new TypeError("compare is not a function");
    return (n37, r91) => {
      const o35 = t32(n37, r91);
      return o35 || 0 === o35 ? o35 : (0 === t32(r91, r91)) - (0 === t32(n37, n37));
    };
  }
  function K8(t32, n37) {
    return (null == t32 || !(t32 >= t32)) - (null == n37 || !(n37 >= n37)) || (t32 < n37 ? -1 : t32 > n37 ? 1 : 0);
  }
  function P8(t32, n37, o35) {
    return (2 !== n37.length ? H8(I10(t32, n37, o35), ([t33, n38], [o36, e26]) => r56(n38, e26) || r56(t33, o36)) : H8(q8(t32, o35), ([t33, o36], [e26, f25]) => n37(o36, f25) || r56(t33, e26))).map(([t33]) => t33);
  }
  var Q8 = Array.prototype.slice;
  var W8 = Math.sqrt(50);
  var X8 = Math.sqrt(10);
  var Y8 = Math.sqrt(2);
  function Z7(t32, n37, r91) {
    const o35 = (n37 - t32) / Math.max(0, r91), e26 = Math.floor(Math.log10(o35)), f25 = o35 / Math.pow(10, e26), i29 = f25 >= W8 ? 10 : f25 >= X8 ? 5 : f25 >= Y8 ? 2 : 1;
    let u30, l35, c30;
    return e26 < 0 ? (c30 = Math.pow(10, -e26) / i29, u30 = Math.round(t32 * c30), l35 = Math.round(n37 * c30), u30 / c30 < t32 && ++u30, l35 / c30 > n37 && --l35, c30 = -c30) : (c30 = Math.pow(10, e26) * i29, u30 = Math.round(t32 / c30), l35 = Math.round(n37 / c30), u30 * c30 < t32 && ++u30, l35 * c30 > n37 && --l35), l35 < u30 && 0.5 <= r91 && r91 < 2 ? Z7(t32, n37, 2 * r91) : [u30, l35, c30];
  }
  function $8(t32, n37, r91) {
    if (!((r91 = +r91) > 0))
      return [];
    if ((t32 = +t32) === (n37 = +n37))
      return [t32];
    const o35 = n37 < t32, [e26, f25, i29] = o35 ? Z7(n37, t32, r91) : Z7(t32, n37, r91);
    if (!(f25 >= e26))
      return [];
    const u30 = f25 - e26 + 1, l35 = new Array(u30);
    if (o35)
      if (i29 < 0)
        for (let t33 = 0; t33 < u30; ++t33)
          l35[t33] = (f25 - t33) / -i29;
      else
        for (let t33 = 0; t33 < u30; ++t33)
          l35[t33] = (f25 - t33) * i29;
    else if (i29 < 0)
      for (let t33 = 0; t33 < u30; ++t33)
        l35[t33] = (e26 + t33) / -i29;
    else
      for (let t33 = 0; t33 < u30; ++t33)
        l35[t33] = (e26 + t33) * i29;
    return l35;
  }
  function tt6(t32, n37, r91) {
    return Z7(t32 = +t32, n37 = +n37, r91 = +r91)[2];
  }
  function nt6(t32, n37, r91) {
    r91 = +r91;
    const o35 = (n37 = +n37) < (t32 = +t32), e26 = o35 ? tt6(n37, t32, r91) : tt6(t32, n37, r91);
    return (o35 ? -1 : 1) * (e26 < 0 ? 1 / -e26 : e26);
  }
  function ot6(t32) {
    return Math.max(1, Math.ceil(Math.log(v9(t32)) / Math.LN2) + 1);
  }
  function ft6(t32, n37) {
    let r91;
    if (void 0 === n37)
      for (const n38 of t32)
        null != n38 && (r91 < n38 || void 0 === r91 && n38 >= n38) && (r91 = n38);
    else {
      let o35 = -1;
      for (let e26 of t32)
        null != (e26 = n37(e26, ++o35, t32)) && (r91 < e26 || void 0 === r91 && e26 >= e26) && (r91 = e26);
    }
    return r91;
  }
  function it7(t32, n37) {
    let r91, o35 = -1, e26 = -1;
    if (void 0 === n37)
      for (const n38 of t32)
        ++e26, null != n38 && (r91 < n38 || void 0 === r91 && n38 >= n38) && (r91 = n38, o35 = e26);
    else
      for (let f25 of t32)
        null != (f25 = n37(f25, ++e26, t32)) && (r91 < f25 || void 0 === r91 && f25 >= f25) && (r91 = f25, o35 = e26);
    return o35;
  }
  function ut6(t32, n37) {
    let r91;
    if (void 0 === n37)
      for (const n38 of t32)
        null != n38 && (r91 > n38 || void 0 === r91 && n38 >= n38) && (r91 = n38);
    else {
      let o35 = -1;
      for (let e26 of t32)
        null != (e26 = n37(e26, ++o35, t32)) && (r91 > e26 || void 0 === r91 && e26 >= e26) && (r91 = e26);
    }
    return r91;
  }
  function lt6(t32, n37) {
    let r91, o35 = -1, e26 = -1;
    if (void 0 === n37)
      for (const n38 of t32)
        ++e26, null != n38 && (r91 > n38 || void 0 === r91 && n38 >= n38) && (r91 = n38, o35 = e26);
    else
      for (let f25 of t32)
        null != (f25 = n37(f25, ++e26, t32)) && (r91 > f25 || void 0 === r91 && f25 >= f25) && (r91 = f25, o35 = e26);
    return o35;
  }
  function ct6(t32, n37, r91 = 0, o35 = 1 / 0, e26) {
    if (n37 = Math.floor(n37), r91 = Math.floor(Math.max(0, r91)), o35 = Math.floor(Math.min(t32.length - 1, o35)), !(r91 <= n37 && n37 <= o35))
      return t32;
    for (e26 = void 0 === e26 ? K8 : J7(e26); o35 > r91; ) {
      if (o35 - r91 > 600) {
        const f26 = o35 - r91 + 1, i30 = n37 - r91 + 1, u31 = Math.log(f26), l35 = 0.5 * Math.exp(2 * u31 / 3), c30 = 0.5 * Math.sqrt(u31 * l35 * (f26 - l35) / f26) * (i30 - f26 / 2 < 0 ? -1 : 1);
        ct6(t32, n37, Math.max(r91, Math.floor(n37 - i30 * l35 / f26 + c30)), Math.min(o35, Math.floor(n37 + (f26 - i30) * l35 / f26 + c30)), e26);
      }
      const f25 = t32[n37];
      let i29 = r91, u30 = o35;
      for (at6(t32, r91, n37), e26(t32[o35], f25) > 0 && at6(t32, r91, o35); i29 < u30; ) {
        for (at6(t32, i29, u30), ++i29, --u30; e26(t32[i29], f25) < 0; )
          ++i29;
        for (; e26(t32[u30], f25) > 0; )
          --u30;
      }
      0 === e26(t32[r91], f25) ? at6(t32, r91, u30) : (++u30, at6(t32, u30, o35)), u30 <= n37 && (r91 = u30 + 1), n37 <= u30 && (o35 = u30 - 1);
    }
    return t32;
  }
  function at6(t32, n37, r91) {
    const o35 = t32[n37];
    t32[n37] = t32[r91], t32[r91] = o35;
  }
  function st6(t32, n37 = r56) {
    let o35, e26 = false;
    if (1 === n37.length) {
      let f25;
      for (const i29 of t32) {
        const t33 = n37(i29);
        (e26 ? r56(t33, f25) > 0 : 0 === r56(t33, t33)) && (o35 = i29, f25 = t33, e26 = true);
      }
    } else
      for (const r91 of t32)
        (e26 ? n37(r91, o35) > 0 : 0 === n37(r91, r91)) && (o35 = r91, e26 = true);
    return o35;
  }
  function ht6(t32, n37, r91) {
    if (t32 = Float64Array.from(function* (t33, n38) {
      if (void 0 === n38)
        for (let n39 of t33)
          null != n39 && (n39 = +n39) >= n39 && (yield n39);
      else {
        let r92 = -1;
        for (let o36 of t33)
          null != (o36 = n38(o36, ++r92, t33)) && (o36 = +o36) >= o36 && (yield o36);
      }
    }(t32, r91)), (o35 = t32.length) && !isNaN(n37 = +n37)) {
      if (n37 <= 0 || o35 < 2)
        return ut6(t32);
      if (n37 >= 1)
        return ft6(t32);
      var o35, e26 = (o35 - 1) * n37, f25 = Math.floor(e26), i29 = ft6(ct6(t32, f25).subarray(0, f25 + 1));
      return i29 + (ut6(t32.subarray(f25 + 1)) - i29) * (e26 - f25);
    }
  }
  function yt6(t32, n37, r91 = i6) {
    if ((o35 = t32.length) && !isNaN(n37 = +n37)) {
      if (n37 <= 0 || o35 < 2)
        return +r91(t32[0], 0, t32);
      if (n37 >= 1)
        return +r91(t32[o35 - 1], o35 - 1, t32);
      var o35, e26 = (o35 - 1) * n37, f25 = Math.floor(e26), u30 = +r91(t32[f25], f25, t32);
      return u30 + (+r91(t32[f25 + 1], f25 + 1, t32) - u30) * (e26 - f25);
    }
  }
  function pt6(t32, n37, r91) {
    const o35 = v9(t32), e26 = ht6(t32, 0.75) - ht6(t32, 0.25);
    return o35 && e26 ? Math.ceil((r91 - n37) / (2 * e26 * Math.pow(o35, -1 / 3))) : 1;
  }
  function mt6(t32, n37, r91) {
    const o35 = v9(t32), e26 = E6(t32);
    return o35 && e26 ? Math.ceil((r91 - n37) * Math.cbrt(o35) / (3.49 * e26)) : 1;
  }
  function Mt6(t32, n37) {
    let r91 = 0, o35 = 0;
    if (void 0 === n37)
      for (let n38 of t32)
        null != n38 && (n38 = +n38) >= n38 && (++r91, o35 += n38);
    else {
      let e26 = -1;
      for (let f25 of t32)
        null != (f25 = n37(f25, ++e26, t32)) && (f25 = +f25) >= f25 && (++r91, o35 += f25);
    }
    if (r91)
      return o35 / r91;
  }
  function vt6(t32, n37) {
    return ht6(t32, 0.5, n37);
  }
  function gt6(t32) {
    return Array.from(function* (t33) {
      for (const n37 of t33)
        yield* n37;
    }(t32));
  }
  function At6(n37, r91) {
    const o35 = new e3();
    if (void 0 === r91)
      for (let t32 of n37)
        null != t32 && t32 >= t32 && o35.set(t32, (o35.get(t32) || 0) + 1);
    else {
      let t32 = -1;
      for (let e27 of n37)
        null != (e27 = r91(e27, ++t32, n37)) && e27 >= e27 && o35.set(e27, (o35.get(e27) || 0) + 1);
    }
    let e26, f25 = 0;
    for (const [t32, n38] of o35)
      n38 > f25 && (f25 = n38, e26 = t32);
    return e26;
  }
  function bt6(t32, n37 = xt6) {
    const r91 = [];
    let o35, e26 = false;
    for (const f25 of t32)
      e26 && r91.push(n37(o35, f25)), o35 = f25, e26 = true;
    return r91;
  }
  function xt6(t32, n37) {
    return [t32, n37];
  }
  function Nt6(t32, n37, r91) {
    t32 = +t32, n37 = +n37, r91 = (e26 = arguments.length) < 2 ? (n37 = t32, t32 = 0, 1) : e26 < 3 ? 1 : +r91;
    for (var o35 = -1, e26 = 0 | Math.max(0, Math.ceil((n37 - t32) / r91)), f25 = new Array(e26); ++o35 < e26; )
      f25[o35] = t32 + o35 * r91;
    return f25;
  }
  var Rt6 = qt6(Math.random);
  function qt6(t32) {
    return function(n37, r91 = 0, o35 = n37.length) {
      let e26 = o35 - (r91 = +r91);
      for (; e26; ) {
        const o36 = t32() * e26-- | 0, f25 = n37[e26 + r91];
        n37[e26 + r91] = n37[o36 + r91], n37[o36 + r91] = f25;
      }
      return n37;
    };
  }
  function jt6(t32, n37) {
    let r91 = 0;
    if (void 0 === n37)
      for (let n38 of t32)
        (n38 = +n38) && (r91 += n38);
    else {
      let o35 = -1;
      for (let e26 of t32)
        (e26 = +n37(e26, ++o35, t32)) && (r91 += e26);
    }
    return r91;
  }
  function Dt6(t32) {
    if ("function" != typeof t32[Symbol.iterator])
      throw new TypeError("values is not iterable");
    return Array.from(t32).reverse();
  }

  // https://cdn.jsdelivr.net/npm/d3-axis@3.0.0/+esm
  function t10(t32) {
    return t32;
  }
  var n9 = 1;
  var r57 = 2;
  var e5 = 3;
  var i7 = 4;
  var a8 = 1e-6;
  function o8(t32) {
    return "translate(" + t32 + ",0)";
  }
  function u9(t32) {
    return "translate(0," + t32 + ")";
  }
  function c8(t32) {
    return (n37) => +t32(n37);
  }
  function l10(t32, n37) {
    return n37 = Math.max(0, t32.bandwidth() - 2 * n37) / 2, t32.round() && (n37 = Math.round(n37)), (r91) => +t32(r91) + n37;
  }
  function s6() {
    return !this.__axis;
  }
  function f7(f25, d25) {
    var m27 = [], h35 = null, g31 = null, p24 = 6, k24 = 6, x22 = 3, y24 = "undefined" != typeof window && window.devicePixelRatio > 1 ? 0 : 0.5, A27 = f25 === n9 || f25 === i7 ? -1 : 1, M26 = f25 === i7 || f25 === r57 ? "x" : "y", v31 = f25 === n9 || f25 === e5 ? o8 : u9;
    function w26(o35) {
      var u30 = null == h35 ? d25.ticks ? d25.ticks.apply(d25, m27) : d25.domain() : h35, w27 = null == g31 ? d25.tickFormat ? d25.tickFormat.apply(d25, m27) : t10 : g31, _24 = Math.max(p24, 0) + x22, F26 = d25.range(), V24 = +F26[0] + y24, z26 = +F26[F26.length - 1] + y24, H26 = (d25.bandwidth ? l10 : c8)(d25.copy(), y24), b28 = o35.selection ? o35.selection() : o35, C24 = b28.selectAll(".domain").data([null]), S25 = b28.selectAll(".tick").data(u30, d25).order(), P25 = S25.exit(), I26 = S25.enter().append("g").attr("class", "tick"), N28 = S25.select("line"), O21 = S25.select("text");
      C24 = C24.merge(C24.enter().insert("path", ".tick").attr("class", "domain").attr("stroke", "currentColor")), S25 = S25.merge(I26), N28 = N28.merge(I26.append("line").attr("stroke", "currentColor").attr(M26 + "2", A27 * p24)), O21 = O21.merge(I26.append("text").attr("fill", "currentColor").attr(M26, A27 * _24).attr("dy", f25 === n9 ? "0em" : f25 === e5 ? "0.71em" : "0.32em")), o35 !== b28 && (C24 = C24.transition(o35), S25 = S25.transition(o35), N28 = N28.transition(o35), O21 = O21.transition(o35), P25 = P25.transition(o35).attr("opacity", a8).attr("transform", function(t32) {
        return isFinite(t32 = H26(t32)) ? v31(t32 + y24) : this.getAttribute("transform");
      }), I26.attr("opacity", a8).attr("transform", function(t32) {
        var n37 = this.parentNode.__axis;
        return v31((n37 && isFinite(n37 = n37(t32)) ? n37 : H26(t32)) + y24);
      })), P25.remove(), C24.attr("d", f25 === i7 || f25 === r57 ? k24 ? "M" + A27 * k24 + "," + V24 + "H" + y24 + "V" + z26 + "H" + A27 * k24 : "M" + y24 + "," + V24 + "V" + z26 : k24 ? "M" + V24 + "," + A27 * k24 + "V" + y24 + "H" + z26 + "V" + A27 * k24 : "M" + V24 + "," + y24 + "H" + z26), S25.attr("opacity", 1).attr("transform", function(t32) {
        return v31(H26(t32) + y24);
      }), N28.attr(M26 + "2", A27 * p24), O21.attr(M26, A27 * _24).text(w27), b28.filter(s6).attr("fill", "none").attr("font-size", 10).attr("font-family", "sans-serif").attr("text-anchor", f25 === r57 ? "start" : f25 === i7 ? "end" : "middle"), b28.each(function() {
        this.__axis = H26;
      });
    }
    return w26.scale = function(t32) {
      return arguments.length ? (d25 = t32, w26) : d25;
    }, w26.ticks = function() {
      return m27 = Array.from(arguments), w26;
    }, w26.tickArguments = function(t32) {
      return arguments.length ? (m27 = null == t32 ? [] : Array.from(t32), w26) : m27.slice();
    }, w26.tickValues = function(t32) {
      return arguments.length ? (h35 = null == t32 ? null : Array.from(t32), w26) : h35 && h35.slice();
    }, w26.tickFormat = function(t32) {
      return arguments.length ? (g31 = t32, w26) : g31;
    }, w26.tickSize = function(t32) {
      return arguments.length ? (p24 = k24 = +t32, w26) : p24;
    }, w26.tickSizeInner = function(t32) {
      return arguments.length ? (p24 = +t32, w26) : p24;
    }, w26.tickSizeOuter = function(t32) {
      return arguments.length ? (k24 = +t32, w26) : k24;
    }, w26.tickPadding = function(t32) {
      return arguments.length ? (x22 = +t32, w26) : x22;
    }, w26.offset = function(t32) {
      return arguments.length ? (y24 = +t32, w26) : y24;
    }, w26;
  }
  function h11(t32) {
    return f7(e5, t32);
  }

  // https://cdn.jsdelivr.net/npm/d3-dispatch@3.0.1/+esm
  var n10 = { value: () => {
  } };
  function r58() {
    for (var n37, r91 = 0, e26 = arguments.length, o35 = {}; r91 < e26; ++r91) {
      if (!(n37 = arguments[r91] + "") || n37 in o35 || /[\s.]/.test(n37))
        throw new Error("illegal type: " + n37);
      o35[n37] = [];
    }
    return new t11(o35);
  }
  function t11(n37) {
    this._ = n37;
  }
  function e6(n37, r91) {
    for (var t32, e26 = 0, o35 = n37.length; e26 < o35; ++e26)
      if ((t32 = n37[e26]).name === r91)
        return t32.value;
  }
  function o9(r91, t32, e26) {
    for (var o35 = 0, i29 = r91.length; o35 < i29; ++o35)
      if (r91[o35].name === t32) {
        r91[o35] = n10, r91 = r91.slice(0, o35).concat(r91.slice(o35 + 1));
        break;
      }
    return null != e26 && r91.push({ name: t32, value: e26 }), r91;
  }
  t11.prototype = r58.prototype = { constructor: t11, on: function(n37, r91) {
    var t32, i29, l35 = this._, a27 = (i29 = l35, (n37 + "").trim().split(/^|\s+/).map(function(n38) {
      var r92 = "", t33 = n38.indexOf(".");
      if (t33 >= 0 && (r92 = n38.slice(t33 + 1), n38 = n38.slice(0, t33)), n38 && !i29.hasOwnProperty(n38))
        throw new Error("unknown type: " + n38);
      return { type: n38, name: r92 };
    })), f25 = -1, u30 = a27.length;
    if (!(arguments.length < 2)) {
      if (null != r91 && "function" != typeof r91)
        throw new Error("invalid callback: " + r91);
      for (; ++f25 < u30; )
        if (t32 = (n37 = a27[f25]).type)
          l35[t32] = o9(l35[t32], n37.name, r91);
        else if (null == r91)
          for (t32 in l35)
            l35[t32] = o9(l35[t32], n37.name, null);
      return this;
    }
    for (; ++f25 < u30; )
      if ((t32 = (n37 = a27[f25]).type) && (t32 = e6(l35[t32], n37.name)))
        return t32;
  }, copy: function() {
    var n37 = {}, r91 = this._;
    for (var e26 in r91)
      n37[e26] = r91[e26].slice();
    return new t11(n37);
  }, call: function(n37, r91) {
    if ((t32 = arguments.length - 2) > 0)
      for (var t32, e26, o35 = new Array(t32), i29 = 0; i29 < t32; ++i29)
        o35[i29] = arguments[i29 + 2];
    if (!this._.hasOwnProperty(n37))
      throw new Error("unknown type: " + n37);
    for (i29 = 0, t32 = (e26 = this._[n37]).length; i29 < t32; ++i29)
      e26[i29].value.apply(r91, o35);
  }, apply: function(n37, r91, t32) {
    if (!this._.hasOwnProperty(n37))
      throw new Error("unknown type: " + n37);
    for (var e26 = this._[n37], o35 = 0, i29 = e26.length; o35 < i29; ++o35)
      e26[o35].value.apply(r91, t32);
  } };

  // https://cdn.jsdelivr.net/npm/d3-selection@3.0.0/+esm
  var t12 = "http://www.w3.org/1999/xhtml";
  var n11 = { svg: "http://www.w3.org/2000/svg", xhtml: t12, xlink: "http://www.w3.org/1999/xlink", xml: "http://www.w3.org/XML/1998/namespace", xmlns: "http://www.w3.org/2000/xmlns/" };
  function e7(t32) {
    var e26 = t32 += "", r91 = e26.indexOf(":");
    return r91 >= 0 && "xmlns" !== (e26 = t32.slice(0, r91)) && (t32 = t32.slice(r91 + 1)), n11.hasOwnProperty(e26) ? { space: n11[e26], local: t32 } : t32;
  }
  function r59(n37) {
    return function() {
      var e26 = this.ownerDocument, r91 = this.namespaceURI;
      return r91 === t12 && e26.documentElement.namespaceURI === t12 ? e26.createElement(n37) : e26.createElementNS(r91, n37);
    };
  }
  function i8(t32) {
    return function() {
      return this.ownerDocument.createElementNS(t32.space, t32.local);
    };
  }
  function o10(t32) {
    var n37 = e7(t32);
    return (n37.local ? i8 : r59)(n37);
  }
  function u10() {
  }
  function s7(t32) {
    return null == t32 ? u10 : function() {
      return this.querySelector(t32);
    };
  }
  function c9(t32) {
    return null == t32 ? [] : Array.isArray(t32) ? t32 : Array.from(t32);
  }
  function a9() {
    return [];
  }
  function l11(t32) {
    return null == t32 ? a9 : function() {
      return this.querySelectorAll(t32);
    };
  }
  function f8(t32) {
    return function() {
      return this.matches(t32);
    };
  }
  function h12(t32) {
    return function(n37) {
      return n37.matches(t32);
    };
  }
  var p9 = Array.prototype.find;
  function _8() {
    return this.firstElementChild;
  }
  var d9 = Array.prototype.filter;
  function y9() {
    return Array.from(this.children);
  }
  function v10(t32) {
    return new Array(t32.length);
  }
  function m8(t32, n37) {
    this.ownerDocument = t32.ownerDocument, this.namespaceURI = t32.namespaceURI, this._next = null, this._parent = t32, this.__data__ = n37;
  }
  function g10(t32, n37, e26, r91, i29, o35) {
    for (var u30, s29 = 0, c30 = n37.length, a27 = o35.length; s29 < a27; ++s29)
      (u30 = n37[s29]) ? (u30.__data__ = o35[s29], r91[s29] = u30) : e26[s29] = new m8(t32, o35[s29]);
    for (; s29 < c30; ++s29)
      (u30 = n37[s29]) && (i29[s29] = u30);
  }
  function w9(t32, n37, e26, r91, i29, o35, u30) {
    var s29, c30, a27, l35 = /* @__PURE__ */ new Map(), f25 = n37.length, h35 = o35.length, p24 = new Array(f25);
    for (s29 = 0; s29 < f25; ++s29)
      (c30 = n37[s29]) && (p24[s29] = a27 = u30.call(c30, c30.__data__, s29, n37) + "", l35.has(a27) ? i29[s29] = c30 : l35.set(a27, c30));
    for (s29 = 0; s29 < h35; ++s29)
      a27 = u30.call(t32, o35[s29], s29, o35) + "", (c30 = l35.get(a27)) ? (r91[s29] = c30, c30.__data__ = o35[s29], l35.delete(a27)) : e26[s29] = new m8(t32, o35[s29]);
    for (s29 = 0; s29 < f25; ++s29)
      (c30 = n37[s29]) && l35.get(p24[s29]) === c30 && (i29[s29] = c30);
  }
  function A9(t32) {
    return t32.__data__;
  }
  function x8(t32) {
    return "object" == typeof t32 && "length" in t32 ? t32 : Array.from(t32);
  }
  function S10(t32, n37) {
    return t32 < n37 ? -1 : t32 > n37 ? 1 : t32 >= n37 ? 0 : NaN;
  }
  function b10(t32) {
    return function() {
      this.removeAttribute(t32);
    };
  }
  function E7(t32) {
    return function() {
      this.removeAttributeNS(t32.space, t32.local);
    };
  }
  function N10(t32, n37) {
    return function() {
      this.setAttribute(t32, n37);
    };
  }
  function C6(t32, n37) {
    return function() {
      this.setAttributeNS(t32.space, t32.local, n37);
    };
  }
  function L10(t32, n37) {
    return function() {
      var e26 = n37.apply(this, arguments);
      null == e26 ? this.removeAttribute(t32) : this.setAttribute(t32, e26);
    };
  }
  function B9(t32, n37) {
    return function() {
      var e26 = n37.apply(this, arguments);
      null == e26 ? this.removeAttributeNS(t32.space, t32.local) : this.setAttributeNS(t32.space, t32.local, e26);
    };
  }
  function P9(t32) {
    return t32.ownerDocument && t32.ownerDocument.defaultView || t32.document && t32 || t32.defaultView;
  }
  function T9(t32) {
    return function() {
      this.style.removeProperty(t32);
    };
  }
  function q9(t32, n37, e26) {
    return function() {
      this.style.setProperty(t32, n37, e26);
    };
  }
  function M8(t32, n37, e26) {
    return function() {
      var r91 = n37.apply(this, arguments);
      null == r91 ? this.style.removeProperty(t32) : this.style.setProperty(t32, r91, e26);
    };
  }
  function D11(t32, n37) {
    return t32.style.getPropertyValue(n37) || P9(t32).getComputedStyle(t32, null).getPropertyValue(n37);
  }
  function V8(t32) {
    return function() {
      delete this[t32];
    };
  }
  function O10(t32, n37) {
    return function() {
      this[t32] = n37;
    };
  }
  function R10(t32, n37) {
    return function() {
      var e26 = n37.apply(this, arguments);
      null == e26 ? delete this[t32] : this[t32] = e26;
    };
  }
  function j10(t32) {
    return t32.trim().split(/^|\s+/);
  }
  function H9(t32) {
    return t32.classList || new I11(t32);
  }
  function I11(t32) {
    this._node = t32, this._names = j10(t32.getAttribute("class") || "");
  }
  function U10(t32, n37) {
    for (var e26 = H9(t32), r91 = -1, i29 = n37.length; ++r91 < i29; )
      e26.add(n37[r91]);
  }
  function X9(t32, n37) {
    for (var e26 = H9(t32), r91 = -1, i29 = n37.length; ++r91 < i29; )
      e26.remove(n37[r91]);
  }
  function G11(t32) {
    return function() {
      U10(this, t32);
    };
  }
  function Y9(t32) {
    return function() {
      X9(this, t32);
    };
  }
  function k9(t32, n37) {
    return function() {
      (n37.apply(this, arguments) ? U10 : X9)(this, t32);
    };
  }
  function z7() {
    this.textContent = "";
  }
  function F9(t32) {
    return function() {
      this.textContent = t32;
    };
  }
  function J8(t32) {
    return function() {
      var n37 = t32.apply(this, arguments);
      this.textContent = null == n37 ? "" : n37;
    };
  }
  function K9() {
    this.innerHTML = "";
  }
  function Q9(t32) {
    return function() {
      this.innerHTML = t32;
    };
  }
  function W9(t32) {
    return function() {
      var n37 = t32.apply(this, arguments);
      this.innerHTML = null == n37 ? "" : n37;
    };
  }
  function Z8() {
    this.nextSibling && this.parentNode.appendChild(this);
  }
  function $9() {
    this.previousSibling && this.parentNode.insertBefore(this, this.parentNode.firstChild);
  }
  function tt7() {
    return null;
  }
  function nt7() {
    var t32 = this.parentNode;
    t32 && t32.removeChild(this);
  }
  function et6() {
    var t32 = this.cloneNode(false), n37 = this.parentNode;
    return n37 ? n37.insertBefore(t32, this.nextSibling) : t32;
  }
  function rt6() {
    var t32 = this.cloneNode(true), n37 = this.parentNode;
    return n37 ? n37.insertBefore(t32, this.nextSibling) : t32;
  }
  function it8(t32) {
    return function() {
      var n37 = this.__on;
      if (n37) {
        for (var e26, r91 = 0, i29 = -1, o35 = n37.length; r91 < o35; ++r91)
          e26 = n37[r91], t32.type && e26.type !== t32.type || e26.name !== t32.name ? n37[++i29] = e26 : this.removeEventListener(e26.type, e26.listener, e26.options);
        ++i29 ? n37.length = i29 : delete this.__on;
      }
    };
  }
  function ot7(t32, n37, e26) {
    return function() {
      var r91, i29 = this.__on, o35 = /* @__PURE__ */ function(t33) {
        return function(n38) {
          t33.call(this, n38, this.__data__);
        };
      }(n37);
      if (i29) {
        for (var u30 = 0, s29 = i29.length; u30 < s29; ++u30)
          if ((r91 = i29[u30]).type === t32.type && r91.name === t32.name)
            return this.removeEventListener(r91.type, r91.listener, r91.options), this.addEventListener(r91.type, r91.listener = o35, r91.options = e26), void (r91.value = n37);
      }
      this.addEventListener(t32.type, o35, e26), r91 = { type: t32.type, name: t32.name, value: n37, listener: o35, options: e26 }, i29 ? i29.push(r91) : this.__on = [r91];
    };
  }
  function ut7(t32, n37, e26) {
    var r91 = P9(t32), i29 = r91.CustomEvent;
    "function" == typeof i29 ? i29 = new i29(n37, e26) : (i29 = r91.document.createEvent("Event"), e26 ? (i29.initEvent(n37, e26.bubbles, e26.cancelable), i29.detail = e26.detail) : i29.initEvent(n37, false, false)), t32.dispatchEvent(i29);
  }
  function st7(t32, n37) {
    return function() {
      return ut7(this, t32, n37);
    };
  }
  function ct7(t32, n37) {
    return function() {
      return ut7(this, t32, n37.apply(this, arguments));
    };
  }
  m8.prototype = { constructor: m8, appendChild: function(t32) {
    return this._parent.insertBefore(t32, this._next);
  }, insertBefore: function(t32, n37) {
    return this._parent.insertBefore(t32, n37);
  }, querySelector: function(t32) {
    return this._parent.querySelector(t32);
  }, querySelectorAll: function(t32) {
    return this._parent.querySelectorAll(t32);
  } }, I11.prototype = { add: function(t32) {
    this._names.indexOf(t32) < 0 && (this._names.push(t32), this._node.setAttribute("class", this._names.join(" ")));
  }, remove: function(t32) {
    var n37 = this._names.indexOf(t32);
    n37 >= 0 && (this._names.splice(n37, 1), this._node.setAttribute("class", this._names.join(" ")));
  }, contains: function(t32) {
    return this._names.indexOf(t32) >= 0;
  } };
  var at7 = [null];
  function lt7(t32, n37) {
    this._groups = t32, this._parents = n37;
  }
  function ft7() {
    return new lt7([[document.documentElement]], at7);
  }
  function ht7(t32) {
    return "string" == typeof t32 ? new lt7([[document.querySelector(t32)]], [document.documentElement]) : new lt7([[t32]], at7);
  }
  lt7.prototype = ft7.prototype = { constructor: lt7, select: function(t32) {
    "function" != typeof t32 && (t32 = s7(t32));
    for (var n37 = this._groups, e26 = n37.length, r91 = new Array(e26), i29 = 0; i29 < e26; ++i29)
      for (var o35, u30, c30 = n37[i29], a27 = c30.length, l35 = r91[i29] = new Array(a27), f25 = 0; f25 < a27; ++f25)
        (o35 = c30[f25]) && (u30 = t32.call(o35, o35.__data__, f25, c30)) && ("__data__" in o35 && (u30.__data__ = o35.__data__), l35[f25] = u30);
    return new lt7(r91, this._parents);
  }, selectAll: function(t32) {
    t32 = "function" == typeof t32 ? /* @__PURE__ */ function(t33) {
      return function() {
        return c9(t33.apply(this, arguments));
      };
    }(t32) : l11(t32);
    for (var n37 = this._groups, e26 = n37.length, r91 = [], i29 = [], o35 = 0; o35 < e26; ++o35)
      for (var u30, s29 = n37[o35], a27 = s29.length, f25 = 0; f25 < a27; ++f25)
        (u30 = s29[f25]) && (r91.push(t32.call(u30, u30.__data__, f25, s29)), i29.push(u30));
    return new lt7(r91, i29);
  }, selectChild: function(t32) {
    return this.select(null == t32 ? _8 : /* @__PURE__ */ function(t33) {
      return function() {
        return p9.call(this.children, t33);
      };
    }("function" == typeof t32 ? t32 : h12(t32)));
  }, selectChildren: function(t32) {
    return this.selectAll(null == t32 ? y9 : /* @__PURE__ */ function(t33) {
      return function() {
        return d9.call(this.children, t33);
      };
    }("function" == typeof t32 ? t32 : h12(t32)));
  }, filter: function(t32) {
    "function" != typeof t32 && (t32 = f8(t32));
    for (var n37 = this._groups, e26 = n37.length, r91 = new Array(e26), i29 = 0; i29 < e26; ++i29)
      for (var o35, u30 = n37[i29], s29 = u30.length, c30 = r91[i29] = [], a27 = 0; a27 < s29; ++a27)
        (o35 = u30[a27]) && t32.call(o35, o35.__data__, a27, u30) && c30.push(o35);
    return new lt7(r91, this._parents);
  }, data: function(t32, n37) {
    if (!arguments.length)
      return Array.from(this, A9);
    var e26, r91 = n37 ? w9 : g10, i29 = this._parents, o35 = this._groups;
    "function" != typeof t32 && (e26 = t32, t32 = function() {
      return e26;
    });
    for (var u30 = o35.length, s29 = new Array(u30), c30 = new Array(u30), a27 = new Array(u30), l35 = 0; l35 < u30; ++l35) {
      var f25 = i29[l35], h35 = o35[l35], p24 = h35.length, _24 = x8(t32.call(f25, f25 && f25.__data__, l35, i29)), d25 = _24.length, y24 = c30[l35] = new Array(d25), v31 = s29[l35] = new Array(d25);
      r91(f25, h35, y24, v31, a27[l35] = new Array(p24), _24, n37);
      for (var m27, S25, b28 = 0, E24 = 0; b28 < d25; ++b28)
        if (m27 = y24[b28]) {
          for (b28 >= E24 && (E24 = b28 + 1); !(S25 = v31[E24]) && ++E24 < d25; )
            ;
          m27._next = S25 || null;
        }
    }
    return (s29 = new lt7(s29, i29))._enter = c30, s29._exit = a27, s29;
  }, enter: function() {
    return new lt7(this._enter || this._groups.map(v10), this._parents);
  }, exit: function() {
    return new lt7(this._exit || this._groups.map(v10), this._parents);
  }, join: function(t32, n37, e26) {
    var r91 = this.enter(), i29 = this, o35 = this.exit();
    return "function" == typeof t32 ? (r91 = t32(r91)) && (r91 = r91.selection()) : r91 = r91.append(t32 + ""), null != n37 && (i29 = n37(i29)) && (i29 = i29.selection()), null == e26 ? o35.remove() : e26(o35), r91 && i29 ? r91.merge(i29).order() : i29;
  }, merge: function(t32) {
    for (var n37 = t32.selection ? t32.selection() : t32, e26 = this._groups, r91 = n37._groups, i29 = e26.length, o35 = r91.length, u30 = Math.min(i29, o35), s29 = new Array(i29), c30 = 0; c30 < u30; ++c30)
      for (var a27, l35 = e26[c30], f25 = r91[c30], h35 = l35.length, p24 = s29[c30] = new Array(h35), _24 = 0; _24 < h35; ++_24)
        (a27 = l35[_24] || f25[_24]) && (p24[_24] = a27);
    for (; c30 < i29; ++c30)
      s29[c30] = e26[c30];
    return new lt7(s29, this._parents);
  }, selection: function() {
    return this;
  }, order: function() {
    for (var t32 = this._groups, n37 = -1, e26 = t32.length; ++n37 < e26; )
      for (var r91, i29 = t32[n37], o35 = i29.length - 1, u30 = i29[o35]; --o35 >= 0; )
        (r91 = i29[o35]) && (u30 && 4 ^ r91.compareDocumentPosition(u30) && u30.parentNode.insertBefore(r91, u30), u30 = r91);
    return this;
  }, sort: function(t32) {
    function n37(n38, e27) {
      return n38 && e27 ? t32(n38.__data__, e27.__data__) : !n38 - !e27;
    }
    t32 || (t32 = S10);
    for (var e26 = this._groups, r91 = e26.length, i29 = new Array(r91), o35 = 0; o35 < r91; ++o35) {
      for (var u30, s29 = e26[o35], c30 = s29.length, a27 = i29[o35] = new Array(c30), l35 = 0; l35 < c30; ++l35)
        (u30 = s29[l35]) && (a27[l35] = u30);
      a27.sort(n37);
    }
    return new lt7(i29, this._parents).order();
  }, call: function() {
    var t32 = arguments[0];
    return arguments[0] = this, t32.apply(null, arguments), this;
  }, nodes: function() {
    return Array.from(this);
  }, node: function() {
    for (var t32 = this._groups, n37 = 0, e26 = t32.length; n37 < e26; ++n37)
      for (var r91 = t32[n37], i29 = 0, o35 = r91.length; i29 < o35; ++i29) {
        var u30 = r91[i29];
        if (u30)
          return u30;
      }
    return null;
  }, size: function() {
    let t32 = 0;
    for (const n37 of this)
      ++t32;
    return t32;
  }, empty: function() {
    return !this.node();
  }, each: function(t32) {
    for (var n37 = this._groups, e26 = 0, r91 = n37.length; e26 < r91; ++e26)
      for (var i29, o35 = n37[e26], u30 = 0, s29 = o35.length; u30 < s29; ++u30)
        (i29 = o35[u30]) && t32.call(i29, i29.__data__, u30, o35);
    return this;
  }, attr: function(t32, n37) {
    var r91 = e7(t32);
    if (arguments.length < 2) {
      var i29 = this.node();
      return r91.local ? i29.getAttributeNS(r91.space, r91.local) : i29.getAttribute(r91);
    }
    return this.each((null == n37 ? r91.local ? E7 : b10 : "function" == typeof n37 ? r91.local ? B9 : L10 : r91.local ? C6 : N10)(r91, n37));
  }, style: function(t32, n37, e26) {
    return arguments.length > 1 ? this.each((null == n37 ? T9 : "function" == typeof n37 ? M8 : q9)(t32, n37, null == e26 ? "" : e26)) : D11(this.node(), t32);
  }, property: function(t32, n37) {
    return arguments.length > 1 ? this.each((null == n37 ? V8 : "function" == typeof n37 ? R10 : O10)(t32, n37)) : this.node()[t32];
  }, classed: function(t32, n37) {
    var e26 = j10(t32 + "");
    if (arguments.length < 2) {
      for (var r91 = H9(this.node()), i29 = -1, o35 = e26.length; ++i29 < o35; )
        if (!r91.contains(e26[i29]))
          return false;
      return true;
    }
    return this.each(("function" == typeof n37 ? k9 : n37 ? G11 : Y9)(e26, n37));
  }, text: function(t32) {
    return arguments.length ? this.each(null == t32 ? z7 : ("function" == typeof t32 ? J8 : F9)(t32)) : this.node().textContent;
  }, html: function(t32) {
    return arguments.length ? this.each(null == t32 ? K9 : ("function" == typeof t32 ? W9 : Q9)(t32)) : this.node().innerHTML;
  }, raise: function() {
    return this.each(Z8);
  }, lower: function() {
    return this.each($9);
  }, append: function(t32) {
    var n37 = "function" == typeof t32 ? t32 : o10(t32);
    return this.select(function() {
      return this.appendChild(n37.apply(this, arguments));
    });
  }, insert: function(t32, n37) {
    var e26 = "function" == typeof t32 ? t32 : o10(t32), r91 = null == n37 ? tt7 : "function" == typeof n37 ? n37 : s7(n37);
    return this.select(function() {
      return this.insertBefore(e26.apply(this, arguments), r91.apply(this, arguments) || null);
    });
  }, remove: function() {
    return this.each(nt7);
  }, clone: function(t32) {
    return this.select(t32 ? rt6 : et6);
  }, datum: function(t32) {
    return arguments.length ? this.property("__data__", t32) : this.node().__data__;
  }, on: function(t32, n37, e26) {
    var r91, i29, o35 = function(t33) {
      return t33.trim().split(/^|\s+/).map(function(t34) {
        var n38 = "", e27 = t34.indexOf(".");
        return e27 >= 0 && (n38 = t34.slice(e27 + 1), t34 = t34.slice(0, e27)), { type: t34, name: n38 };
      });
    }(t32 + ""), u30 = o35.length;
    if (!(arguments.length < 2)) {
      for (s29 = n37 ? ot7 : it8, r91 = 0; r91 < u30; ++r91)
        this.each(s29(o35[r91], n37, e26));
      return this;
    }
    var s29 = this.node().__on;
    if (s29) {
      for (var c30, a27 = 0, l35 = s29.length; a27 < l35; ++a27)
        for (r91 = 0, c30 = s29[a27]; r91 < u30; ++r91)
          if ((i29 = o35[r91]).type === c30.type && i29.name === c30.name)
            return c30.value;
    }
  }, dispatch: function(t32, n37) {
    return this.each(("function" == typeof n37 ? ct7 : st7)(t32, n37));
  }, [Symbol.iterator]: function* () {
    for (var t32 = this._groups, n37 = 0, e26 = t32.length; n37 < e26; ++n37)
      for (var r91, i29 = t32[n37], o35 = 0, u30 = i29.length; o35 < u30; ++o35)
        (r91 = i29[o35]) && (yield r91);
  } };
  var _t6 = 0;
  function dt5() {
    return new yt7();
  }
  function yt7() {
    this._ = "@" + (++_t6).toString(36);
  }
  function vt7(t32) {
    let n37;
    for (; n37 = t32.sourceEvent; )
      t32 = n37;
    return t32;
  }
  function mt7(t32, n37) {
    if (t32 = vt7(t32), void 0 === n37 && (n37 = t32.currentTarget), n37) {
      var e26 = n37.ownerSVGElement || n37;
      if (e26.createSVGPoint) {
        var r91 = e26.createSVGPoint();
        return r91.x = t32.clientX, r91.y = t32.clientY, [(r91 = r91.matrixTransform(n37.getScreenCTM().inverse())).x, r91.y];
      }
      if (n37.getBoundingClientRect) {
        var i29 = n37.getBoundingClientRect();
        return [t32.clientX - i29.left - n37.clientLeft, t32.clientY - i29.top - n37.clientTop];
      }
    }
    return [t32.pageX, t32.pageY];
  }
  yt7.prototype = dt5.prototype = { constructor: yt7, get: function(t32) {
    for (var n37 = this._; !(n37 in t32); )
      if (!(t32 = t32.parentNode))
        return;
    return t32[n37];
  }, set: function(t32, n37) {
    return t32[this._] = n37;
  }, remove: function(t32) {
    return this._ in t32 && delete t32[this._];
  }, toString: function() {
    return this._;
  } };

  // https://cdn.jsdelivr.net/npm/d3-drag@3.0.0/+esm
  var o11 = { capture: true, passive: false };
  function i9(e26) {
    e26.preventDefault(), e26.stopImmediatePropagation();
  }
  function u11(e26) {
    var n37 = e26.document.documentElement, r91 = ht7(e26).on("dragstart.drag", i9, o11);
    "onselectstart" in n37 ? r91.on("selectstart.drag", i9, o11) : (n37.__noselect = n37.style.MozUserSelect, n37.style.MozUserSelect = "none");
  }
  function c10(e26, n37) {
    var r91 = e26.document.documentElement, a27 = ht7(e26).on("dragstart.drag", null);
    n37 && (a27.on("click.drag", i9, o11), setTimeout(function() {
      a27.on("click.drag", null);
    }, 0)), "onselectstart" in r91 ? a27.on("selectstart.drag", null) : (r91.style.MozUserSelect = r91.__noselect, delete r91.__noselect);
  }
  function s8(e26, { sourceEvent: t32, subject: n37, target: r91, identifier: o35, active: a27, x: i29, y: u30, dx: c30, dy: l35, dispatch: s29 }) {
    Object.defineProperties(this, { type: { value: e26, enumerable: true, configurable: true }, sourceEvent: { value: t32, enumerable: true, configurable: true }, subject: { value: n37, enumerable: true, configurable: true }, target: { value: r91, enumerable: true, configurable: true }, identifier: { value: o35, enumerable: true, configurable: true }, active: { value: a27, enumerable: true, configurable: true }, x: { value: i29, enumerable: true, configurable: true }, y: { value: u30, enumerable: true, configurable: true }, dx: { value: c30, enumerable: true, configurable: true }, dy: { value: l35, enumerable: true, configurable: true }, _: { value: s29 } });
  }
  s8.prototype.on = function() {
    var e26 = this._.on.apply(this._, arguments);
    return e26 === this._ ? this : e26;
  };

  // https://cdn.jsdelivr.net/npm/d3-color@3.1.0/+esm
  function t13(t32, e26, i29) {
    t32.prototype = e26.prototype = i29, i29.constructor = t32;
  }
  function e8(t32, e26) {
    var i29 = Object.create(t32.prototype);
    for (var n37 in e26)
      i29[n37] = e26[n37];
    return i29;
  }
  function i10() {
  }
  var n12 = 0.7;
  var r60 = 1 / n12;
  var a10 = "\\s*([+-]?\\d+)\\s*";
  var s9 = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*";
  var h13 = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*";
  var o12 = /^#([0-9a-f]{3,8})$/;
  var l12 = new RegExp(`^rgb\\(${a10},${a10},${a10}\\)$`);
  var u12 = new RegExp(`^rgb\\(${h13},${h13},${h13}\\)$`);
  var c11 = new RegExp(`^rgba\\(${a10},${a10},${a10},${s9}\\)$`);
  var g11 = new RegExp(`^rgba\\(${h13},${h13},${h13},${s9}\\)$`);
  var p10 = new RegExp(`^hsl\\(${s9},${h13},${h13}\\)$`);
  var b11 = new RegExp(`^hsla\\(${s9},${h13},${h13},${s9}\\)$`);
  var d10 = { aliceblue: 15792383, antiquewhite: 16444375, aqua: 65535, aquamarine: 8388564, azure: 15794175, beige: 16119260, bisque: 16770244, black: 0, blanchedalmond: 16772045, blue: 255, blueviolet: 9055202, brown: 10824234, burlywood: 14596231, cadetblue: 6266528, chartreuse: 8388352, chocolate: 13789470, coral: 16744272, cornflowerblue: 6591981, cornsilk: 16775388, crimson: 14423100, cyan: 65535, darkblue: 139, darkcyan: 35723, darkgoldenrod: 12092939, darkgray: 11119017, darkgreen: 25600, darkgrey: 11119017, darkkhaki: 12433259, darkmagenta: 9109643, darkolivegreen: 5597999, darkorange: 16747520, darkorchid: 10040012, darkred: 9109504, darksalmon: 15308410, darkseagreen: 9419919, darkslateblue: 4734347, darkslategray: 3100495, darkslategrey: 3100495, darkturquoise: 52945, darkviolet: 9699539, deeppink: 16716947, deepskyblue: 49151, dimgray: 6908265, dimgrey: 6908265, dodgerblue: 2003199, firebrick: 11674146, floralwhite: 16775920, forestgreen: 2263842, fuchsia: 16711935, gainsboro: 14474460, ghostwhite: 16316671, gold: 16766720, goldenrod: 14329120, gray: 8421504, green: 32768, greenyellow: 11403055, grey: 8421504, honeydew: 15794160, hotpink: 16738740, indianred: 13458524, indigo: 4915330, ivory: 16777200, khaki: 15787660, lavender: 15132410, lavenderblush: 16773365, lawngreen: 8190976, lemonchiffon: 16775885, lightblue: 11393254, lightcoral: 15761536, lightcyan: 14745599, lightgoldenrodyellow: 16448210, lightgray: 13882323, lightgreen: 9498256, lightgrey: 13882323, lightpink: 16758465, lightsalmon: 16752762, lightseagreen: 2142890, lightskyblue: 8900346, lightslategray: 7833753, lightslategrey: 7833753, lightsteelblue: 11584734, lightyellow: 16777184, lime: 65280, limegreen: 3329330, linen: 16445670, magenta: 16711935, maroon: 8388608, mediumaquamarine: 6737322, mediumblue: 205, mediumorchid: 12211667, mediumpurple: 9662683, mediumseagreen: 3978097, mediumslateblue: 8087790, mediumspringgreen: 64154, mediumturquoise: 4772300, mediumvioletred: 13047173, midnightblue: 1644912, mintcream: 16121850, mistyrose: 16770273, moccasin: 16770229, navajowhite: 16768685, navy: 128, oldlace: 16643558, olive: 8421376, olivedrab: 7048739, orange: 16753920, orangered: 16729344, orchid: 14315734, palegoldenrod: 15657130, palegreen: 10025880, paleturquoise: 11529966, palevioletred: 14381203, papayawhip: 16773077, peachpuff: 16767673, peru: 13468991, pink: 16761035, plum: 14524637, powderblue: 11591910, purple: 8388736, rebeccapurple: 6697881, red: 16711680, rosybrown: 12357519, royalblue: 4286945, saddlebrown: 9127187, salmon: 16416882, sandybrown: 16032864, seagreen: 3050327, seashell: 16774638, sienna: 10506797, silver: 12632256, skyblue: 8900331, slateblue: 6970061, slategray: 7372944, slategrey: 7372944, snow: 16775930, springgreen: 65407, steelblue: 4620980, tan: 13808780, teal: 32896, thistle: 14204888, tomato: 16737095, turquoise: 4251856, violet: 15631086, wheat: 16113331, white: 16777215, whitesmoke: 16119285, yellow: 16776960, yellowgreen: 10145074 };
  function f9() {
    return this.rgb().formatHex();
  }
  function w10() {
    return this.rgb().formatRgb();
  }
  function y10(t32) {
    var e26, i29;
    return t32 = (t32 + "").trim().toLowerCase(), (e26 = o12.exec(t32)) ? (i29 = e26[1].length, e26 = parseInt(e26[1], 16), 6 === i29 ? m9(e26) : 3 === i29 ? new M9(e26 >> 8 & 15 | e26 >> 4 & 240, e26 >> 4 & 15 | 240 & e26, (15 & e26) << 4 | 15 & e26, 1) : 8 === i29 ? $10(e26 >> 24 & 255, e26 >> 16 & 255, e26 >> 8 & 255, (255 & e26) / 255) : 4 === i29 ? $10(e26 >> 12 & 15 | e26 >> 8 & 240, e26 >> 8 & 15 | e26 >> 4 & 240, e26 >> 4 & 15 | 240 & e26, ((15 & e26) << 4 | 15 & e26) / 255) : null) : (e26 = l12.exec(t32)) ? new M9(e26[1], e26[2], e26[3], 1) : (e26 = u12.exec(t32)) ? new M9(255 * e26[1] / 100, 255 * e26[2] / 100, 255 * e26[3] / 100, 1) : (e26 = c11.exec(t32)) ? $10(e26[1], e26[2], e26[3], e26[4]) : (e26 = g11.exec(t32)) ? $10(255 * e26[1] / 100, 255 * e26[2] / 100, 255 * e26[3] / 100, e26[4]) : (e26 = p10.exec(t32)) ? E8(e26[1], e26[2] / 100, e26[3] / 100, 1) : (e26 = b11.exec(t32)) ? E8(e26[1], e26[2] / 100, e26[3] / 100, e26[4]) : d10.hasOwnProperty(t32) ? m9(d10[t32]) : "transparent" === t32 ? new M9(NaN, NaN, NaN, 0) : null;
  }
  function m9(t32) {
    return new M9(t32 >> 16 & 255, t32 >> 8 & 255, 255 & t32, 1);
  }
  function $10(t32, e26, i29, n37) {
    return n37 <= 0 && (t32 = e26 = i29 = NaN), new M9(t32, e26, i29, n37);
  }
  function N11(t32) {
    return t32 instanceof i10 || (t32 = y10(t32)), t32 ? new M9((t32 = t32.rgb()).r, t32.g, t32.b, t32.opacity) : new M9();
  }
  function k10(t32, e26, i29, n37) {
    return 1 === arguments.length ? N11(t32) : new M9(t32, e26, i29, null == n37 ? 1 : n37);
  }
  function M9(t32, e26, i29, n37) {
    this.r = +t32, this.g = +e26, this.b = +i29, this.opacity = +n37;
  }
  function v11() {
    return `#${R11(this.r)}${R11(this.g)}${R11(this.b)}`;
  }
  function x9() {
    const t32 = q10(this.opacity);
    return `${1 === t32 ? "rgb(" : "rgba("}${H10(this.r)}, ${H10(this.g)}, ${H10(this.b)}${1 === t32 ? ")" : `, ${t32})`}`;
  }
  function q10(t32) {
    return isNaN(t32) ? 1 : Math.max(0, Math.min(1, t32));
  }
  function H10(t32) {
    return Math.max(0, Math.min(255, Math.round(t32) || 0));
  }
  function R11(t32) {
    return ((t32 = H10(t32)) < 16 ? "0" : "") + t32.toString(16);
  }
  function E8(t32, e26, i29, n37) {
    return n37 <= 0 ? t32 = e26 = i29 = NaN : i29 <= 0 || i29 >= 1 ? t32 = e26 = NaN : e26 <= 0 && (t32 = NaN), new O11(t32, e26, i29, n37);
  }
  function j11(t32) {
    if (t32 instanceof O11)
      return new O11(t32.h, t32.s, t32.l, t32.opacity);
    if (t32 instanceof i10 || (t32 = y10(t32)), !t32)
      return new O11();
    if (t32 instanceof O11)
      return t32;
    var e26 = (t32 = t32.rgb()).r / 255, n37 = t32.g / 255, r91 = t32.b / 255, a27 = Math.min(e26, n37, r91), s29 = Math.max(e26, n37, r91), h35 = NaN, o35 = s29 - a27, l35 = (s29 + a27) / 2;
    return o35 ? (h35 = e26 === s29 ? (n37 - r91) / o35 + 6 * (n37 < r91) : n37 === s29 ? (r91 - e26) / o35 + 2 : (e26 - n37) / o35 + 4, o35 /= l35 < 0.5 ? s29 + a27 : 2 - s29 - a27, h35 *= 60) : o35 = l35 > 0 && l35 < 1 ? 0 : h35, new O11(h35, o35, l35, t32.opacity);
  }
  function I12(t32, e26, i29, n37) {
    return 1 === arguments.length ? j11(t32) : new O11(t32, e26, i29, null == n37 ? 1 : n37);
  }
  function O11(t32, e26, i29, n37) {
    this.h = +t32, this.s = +e26, this.l = +i29, this.opacity = +n37;
  }
  function P10(t32) {
    return (t32 = (t32 || 0) % 360) < 0 ? t32 + 360 : t32;
  }
  function S11(t32) {
    return Math.max(0, Math.min(1, t32 || 0));
  }
  function z8(t32, e26, i29) {
    return 255 * (t32 < 60 ? e26 + (i29 - e26) * t32 / 60 : t32 < 180 ? i29 : t32 < 240 ? e26 + (i29 - e26) * (240 - t32) / 60 : e26);
  }
  t13(i10, y10, { copy(t32) {
    return Object.assign(new this.constructor(), this, t32);
  }, displayable() {
    return this.rgb().displayable();
  }, hex: f9, formatHex: f9, formatHex8: function() {
    return this.rgb().formatHex8();
  }, formatHsl: function() {
    return j11(this).formatHsl();
  }, formatRgb: w10, toString: w10 }), t13(M9, k10, e8(i10, { brighter(t32) {
    return t32 = null == t32 ? r60 : Math.pow(r60, t32), new M9(this.r * t32, this.g * t32, this.b * t32, this.opacity);
  }, darker(t32) {
    return t32 = null == t32 ? n12 : Math.pow(n12, t32), new M9(this.r * t32, this.g * t32, this.b * t32, this.opacity);
  }, rgb() {
    return this;
  }, clamp() {
    return new M9(H10(this.r), H10(this.g), H10(this.b), q10(this.opacity));
  }, displayable() {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  }, hex: v11, formatHex: v11, formatHex8: function() {
    return `#${R11(this.r)}${R11(this.g)}${R11(this.b)}${R11(255 * (isNaN(this.opacity) ? 1 : this.opacity))}`;
  }, formatRgb: x9, toString: x9 })), t13(O11, I12, e8(i10, { brighter(t32) {
    return t32 = null == t32 ? r60 : Math.pow(r60, t32), new O11(this.h, this.s, this.l * t32, this.opacity);
  }, darker(t32) {
    return t32 = null == t32 ? n12 : Math.pow(n12, t32), new O11(this.h, this.s, this.l * t32, this.opacity);
  }, rgb() {
    var t32 = this.h % 360 + 360 * (this.h < 0), e26 = isNaN(t32) || isNaN(this.s) ? 0 : this.s, i29 = this.l, n37 = i29 + (i29 < 0.5 ? i29 : 1 - i29) * e26, r91 = 2 * i29 - n37;
    return new M9(z8(t32 >= 240 ? t32 - 240 : t32 + 120, r91, n37), z8(t32, r91, n37), z8(t32 < 120 ? t32 + 240 : t32 - 120, r91, n37), this.opacity);
  }, clamp() {
    return new O11(P10(this.h), S11(this.s), S11(this.l), q10(this.opacity));
  }, displayable() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  }, formatHsl() {
    const t32 = q10(this.opacity);
    return `${1 === t32 ? "hsl(" : "hsla("}${P10(this.h)}, ${100 * S11(this.s)}%, ${100 * S11(this.l)}%${1 === t32 ? ")" : `, ${t32})`}`;
  } }));
  var C7 = Math.PI / 180;
  var L11 = 180 / Math.PI;
  var A10 = 0.96422;
  var B10 = 1;
  var D12 = 0.82521;
  var F10 = 4 / 29;
  var G12 = 6 / 29;
  var J9 = 3 * G12 * G12;
  var K10 = G12 * G12 * G12;
  function Q10(t32) {
    if (t32 instanceof V9)
      return new V9(t32.l, t32.a, t32.b, t32.opacity);
    if (t32 instanceof it9)
      return nt8(t32);
    t32 instanceof M9 || (t32 = N11(t32));
    var e26, i29, n37 = Z9(t32.r), r91 = Z9(t32.g), a27 = Z9(t32.b), s29 = W10((0.2225045 * n37 + 0.7168786 * r91 + 0.0606169 * a27) / B10);
    return n37 === r91 && r91 === a27 ? e26 = i29 = s29 : (e26 = W10((0.4360747 * n37 + 0.3850649 * r91 + 0.1430804 * a27) / A10), i29 = W10((0.0139322 * n37 + 0.0971045 * r91 + 0.7141733 * a27) / D12)), new V9(116 * s29 - 16, 500 * (e26 - s29), 200 * (s29 - i29), t32.opacity);
  }
  function U11(t32, e26, i29, n37) {
    return 1 === arguments.length ? Q10(t32) : new V9(t32, e26, i29, null == n37 ? 1 : n37);
  }
  function V9(t32, e26, i29, n37) {
    this.l = +t32, this.a = +e26, this.b = +i29, this.opacity = +n37;
  }
  function W10(t32) {
    return t32 > K10 ? Math.pow(t32, 1 / 3) : t32 / J9 + F10;
  }
  function X10(t32) {
    return t32 > G12 ? t32 * t32 * t32 : J9 * (t32 - F10);
  }
  function Y10(t32) {
    return 255 * (t32 <= 31308e-7 ? 12.92 * t32 : 1.055 * Math.pow(t32, 1 / 2.4) - 0.055);
  }
  function Z9(t32) {
    return (t32 /= 255) <= 0.04045 ? t32 / 12.92 : Math.pow((t32 + 0.055) / 1.055, 2.4);
  }
  function _9(t32) {
    if (t32 instanceof it9)
      return new it9(t32.h, t32.c, t32.l, t32.opacity);
    if (t32 instanceof V9 || (t32 = Q10(t32)), 0 === t32.a && 0 === t32.b)
      return new it9(NaN, 0 < t32.l && t32.l < 100 ? 0 : NaN, t32.l, t32.opacity);
    var e26 = Math.atan2(t32.b, t32.a) * L11;
    return new it9(e26 < 0 ? e26 + 360 : e26, Math.sqrt(t32.a * t32.a + t32.b * t32.b), t32.l, t32.opacity);
  }
  function et7(t32, e26, i29, n37) {
    return 1 === arguments.length ? _9(t32) : new it9(t32, e26, i29, null == n37 ? 1 : n37);
  }
  function it9(t32, e26, i29, n37) {
    this.h = +t32, this.c = +e26, this.l = +i29, this.opacity = +n37;
  }
  function nt8(t32) {
    if (isNaN(t32.h))
      return new V9(t32.l, 0, 0, t32.opacity);
    var e26 = t32.h * C7;
    return new V9(t32.l, Math.cos(e26) * t32.c, Math.sin(e26) * t32.c, t32.opacity);
  }
  t13(V9, U11, e8(i10, { brighter(t32) {
    return new V9(this.l + 18 * (null == t32 ? 1 : t32), this.a, this.b, this.opacity);
  }, darker(t32) {
    return new V9(this.l - 18 * (null == t32 ? 1 : t32), this.a, this.b, this.opacity);
  }, rgb() {
    var t32 = (this.l + 16) / 116, e26 = isNaN(this.a) ? t32 : t32 + this.a / 500, i29 = isNaN(this.b) ? t32 : t32 - this.b / 200;
    return new M9(Y10(3.1338561 * (e26 = A10 * X10(e26)) - 1.6168667 * (t32 = B10 * X10(t32)) - 0.4906146 * (i29 = D12 * X10(i29))), Y10(-0.9787684 * e26 + 1.9161415 * t32 + 0.033454 * i29), Y10(0.0719453 * e26 - 0.2289914 * t32 + 1.4052427 * i29), this.opacity);
  } })), t13(it9, et7, e8(i10, { brighter(t32) {
    return new it9(this.h, this.c, this.l + 18 * (null == t32 ? 1 : t32), this.opacity);
  }, darker(t32) {
    return new it9(this.h, this.c, this.l - 18 * (null == t32 ? 1 : t32), this.opacity);
  }, rgb() {
    return nt8(this).rgb();
  } }));
  var rt7 = -0.14861;
  var at8 = 1.78277;
  var st8 = -0.29227;
  var ht8 = -0.90649;
  var ot8 = 1.97294;
  var lt8 = ot8 * ht8;
  var ut8 = ot8 * at8;
  var ct8 = at8 * st8 - ht8 * rt7;
  function gt7(t32, e26, i29, n37) {
    return 1 === arguments.length ? function(t33) {
      if (t33 instanceof pt7)
        return new pt7(t33.h, t33.s, t33.l, t33.opacity);
      t33 instanceof M9 || (t33 = N11(t33));
      var e27 = t33.r / 255, i30 = t33.g / 255, n38 = t33.b / 255, r91 = (ct8 * n38 + lt8 * e27 - ut8 * i30) / (ct8 + lt8 - ut8), a27 = n38 - r91, s29 = (ot8 * (i30 - r91) - st8 * a27) / ht8, h35 = Math.sqrt(s29 * s29 + a27 * a27) / (ot8 * r91 * (1 - r91)), o35 = h35 ? Math.atan2(s29, a27) * L11 - 120 : NaN;
      return new pt7(o35 < 0 ? o35 + 360 : o35, h35, r91, t33.opacity);
    }(t32) : new pt7(t32, e26, i29, null == n37 ? 1 : n37);
  }
  function pt7(t32, e26, i29, n37) {
    this.h = +t32, this.s = +e26, this.l = +i29, this.opacity = +n37;
  }
  t13(pt7, gt7, e8(i10, { brighter(t32) {
    return t32 = null == t32 ? r60 : Math.pow(r60, t32), new pt7(this.h, this.s, this.l * t32, this.opacity);
  }, darker(t32) {
    return t32 = null == t32 ? n12 : Math.pow(n12, t32), new pt7(this.h, this.s, this.l * t32, this.opacity);
  }, rgb() {
    var t32 = isNaN(this.h) ? 0 : (this.h + 120) * C7, e26 = +this.l, i29 = isNaN(this.s) ? 0 : this.s * e26 * (1 - e26), n37 = Math.cos(t32), r91 = Math.sin(t32);
    return new M9(255 * (e26 + i29 * (rt7 * n37 + at8 * r91)), 255 * (e26 + i29 * (st8 * n37 + ht8 * r91)), 255 * (e26 + i29 * (ot8 * n37)), this.opacity);
  } }));

  // https://cdn.jsdelivr.net/npm/d3-interpolate@3.0.1/+esm
  function u13(t32, n37, r91, e26, a27) {
    var o35 = t32 * t32, u30 = o35 * t32;
    return ((1 - 3 * t32 + 3 * o35 - u30) * n37 + (4 - 6 * o35 + 3 * u30) * r91 + (1 + 3 * t32 + 3 * o35 - 3 * u30) * e26 + u30 * a27) / 6;
  }
  function i11(t32) {
    var n37 = t32.length - 1;
    return function(r91) {
      var e26 = r91 <= 0 ? r91 = 0 : r91 >= 1 ? (r91 = 1, n37 - 1) : Math.floor(r91 * n37), a27 = t32[e26], o35 = t32[e26 + 1], i29 = e26 > 0 ? t32[e26 - 1] : 2 * a27 - o35, c30 = e26 < n37 - 1 ? t32[e26 + 2] : 2 * o35 - a27;
      return u13((r91 - e26 / n37) * n37, i29, a27, o35, c30);
    };
  }
  function c12(t32) {
    var n37 = t32.length;
    return function(r91) {
      var e26 = Math.floor(((r91 %= 1) < 0 ? ++r91 : r91) * n37), a27 = t32[(e26 + n37 - 1) % n37], o35 = t32[e26 % n37], i29 = t32[(e26 + 1) % n37], c30 = t32[(e26 + 2) % n37];
      return u13((r91 - e26 / n37) * n37, a27, o35, i29, c30);
    };
  }
  var l13 = (t32) => () => t32;
  function s10(t32, n37) {
    return function(r91) {
      return t32 + r91 * n37;
    };
  }
  function f10(t32, n37) {
    var r91 = n37 - t32;
    return r91 ? s10(t32, r91 > 180 || r91 < -180 ? r91 - 360 * Math.round(r91 / 360) : r91) : l13(isNaN(t32) ? n37 : t32);
  }
  function h14(t32) {
    return 1 == (t32 = +t32) ? p11 : function(n37, r91) {
      return r91 - n37 ? function(t33, n38, r92) {
        return t33 = Math.pow(t33, r92), n38 = Math.pow(n38, r92) - t33, r92 = 1 / r92, function(e26) {
          return Math.pow(t33 + e26 * n38, r92);
        };
      }(n37, r91, t32) : l13(isNaN(n37) ? r91 : n37);
    };
  }
  function p11(t32, n37) {
    var r91 = n37 - t32;
    return r91 ? s10(t32, r91) : l13(isNaN(t32) ? n37 : t32);
  }
  var v12 = function n13(r91) {
    var e26 = h14(r91);
    function a27(n37, r92) {
      var a28 = e26((n37 = k10(n37)).r, (r92 = k10(r92)).r), o35 = e26(n37.g, r92.g), u30 = e26(n37.b, r92.b), i29 = p11(n37.opacity, r92.opacity);
      return function(t32) {
        return n37.r = a28(t32), n37.g = o35(t32), n37.b = u30(t32), n37.opacity = i29(t32), n37 + "";
      };
    }
    return a27.gamma = n13, a27;
  }(1);
  function g12(n37) {
    return function(r91) {
      var e26, a27, o35 = r91.length, u30 = new Array(o35), i29 = new Array(o35), c30 = new Array(o35);
      for (e26 = 0; e26 < o35; ++e26)
        a27 = k10(r91[e26]), u30[e26] = a27.r || 0, i29[e26] = a27.g || 0, c30[e26] = a27.b || 0;
      return u30 = n37(u30), i29 = n37(i29), c30 = n37(c30), a27.opacity = 1, function(t32) {
        return a27.r = u30(t32), a27.g = i29(t32), a27.b = c30(t32), a27 + "";
      };
    };
  }
  var M10 = g12(i11);
  var x10 = g12(c12);
  function y11(t32, n37) {
    n37 || (n37 = []);
    var r91, e26 = t32 ? Math.min(n37.length, t32.length) : 0, a27 = n37.slice();
    return function(o35) {
      for (r91 = 0; r91 < e26; ++r91)
        a27[r91] = t32[r91] * (1 - o35) + n37[r91] * o35;
      return a27;
    };
  }
  function b12(t32) {
    return ArrayBuffer.isView(t32) && !(t32 instanceof DataView);
  }
  function m10(t32, n37) {
    var r91, e26 = n37 ? n37.length : 0, a27 = t32 ? Math.min(e26, t32.length) : 0, o35 = new Array(a27), u30 = new Array(e26);
    for (r91 = 0; r91 < a27; ++r91)
      o35[r91] = R12(t32[r91], n37[r91]);
    for (; r91 < e26; ++r91)
      u30[r91] = n37[r91];
    return function(t33) {
      for (r91 = 0; r91 < a27; ++r91)
        u30[r91] = o35[r91](t33);
      return u30;
    };
  }
  function d11(t32, n37) {
    var r91 = /* @__PURE__ */ new Date();
    return t32 = +t32, n37 = +n37, function(e26) {
      return r91.setTime(t32 * (1 - e26) + n37 * e26), r91;
    };
  }
  function X11(t32, n37) {
    return t32 = +t32, n37 = +n37, function(r91) {
      return t32 * (1 - r91) + n37 * r91;
    };
  }
  function A11(t32, n37) {
    var r91, e26 = {}, a27 = {};
    for (r91 in null !== t32 && "object" == typeof t32 || (t32 = {}), null !== n37 && "object" == typeof n37 || (n37 = {}), n37)
      r91 in t32 ? e26[r91] = R12(t32[r91], n37[r91]) : a27[r91] = n37[r91];
    return function(t33) {
      for (r91 in e26)
        a27[r91] = e26[r91](t33);
      return a27;
    };
  }
  var N12 = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
  var Y11 = new RegExp(N12.source, "g");
  function D13(t32, n37) {
    var r91, e26, a27, o35 = N12.lastIndex = Y11.lastIndex = 0, u30 = -1, i29 = [], c30 = [];
    for (t32 += "", n37 += ""; (r91 = N12.exec(t32)) && (e26 = Y11.exec(n37)); )
      (a27 = e26.index) > o35 && (a27 = n37.slice(o35, a27), i29[u30] ? i29[u30] += a27 : i29[++u30] = a27), (r91 = r91[0]) === (e26 = e26[0]) ? i29[u30] ? i29[u30] += e26 : i29[++u30] = e26 : (i29[++u30] = null, c30.push({ i: u30, x: X11(r91, e26) })), o35 = Y11.lastIndex;
    return o35 < n37.length && (a27 = n37.slice(o35), i29[u30] ? i29[u30] += a27 : i29[++u30] = a27), i29.length < 2 ? c30[0] ? /* @__PURE__ */ function(t33) {
      return function(n38) {
        return t33(n38) + "";
      };
    }(c30[0].x) : /* @__PURE__ */ function(t33) {
      return function() {
        return t33;
      };
    }(n37) : (n37 = c30.length, function(t33) {
      for (var r92, e27 = 0; e27 < n37; ++e27)
        i29[(r92 = c30[e27]).i] = r92.x(t33);
      return i29.join("");
    });
  }
  function R12(t32, r91) {
    var e26, a27 = typeof r91;
    return null == r91 || "boolean" === a27 ? l13(r91) : ("number" === a27 ? X11 : "string" === a27 ? (e26 = y10(r91)) ? (r91 = e26, v12) : D13 : r91 instanceof y10 ? v12 : r91 instanceof Date ? d11 : b12(r91) ? y11 : Array.isArray(r91) ? m10 : "function" != typeof r91.valueOf && "function" != typeof r91.toString || isNaN(r91) ? A11 : X11)(t32, r91);
  }
  function j12(t32, n37) {
    return t32 = +t32, n37 = +n37, function(r91) {
      return Math.round(t32 * (1 - r91) + n37 * r91);
    };
  }
  var q11;
  var B11 = 180 / Math.PI;
  var C8 = { translateX: 0, translateY: 0, rotate: 0, skewX: 0, scaleX: 1, scaleY: 1 };
  function H11(t32, n37, r91, e26, a27, o35) {
    var u30, i29, c30;
    return (u30 = Math.sqrt(t32 * t32 + n37 * n37)) && (t32 /= u30, n37 /= u30), (c30 = t32 * r91 + n37 * e26) && (r91 -= t32 * c30, e26 -= n37 * c30), (i29 = Math.sqrt(r91 * r91 + e26 * e26)) && (r91 /= i29, e26 /= i29, c30 /= i29), t32 * e26 < n37 * r91 && (t32 = -t32, n37 = -n37, c30 = -c30, u30 = -u30), { translateX: a27, translateY: o35, rotate: Math.atan2(n37, t32) * B11, skewX: Math.atan(c30) * B11, scaleX: u30, scaleY: i29 };
  }
  function I13(t32, n37, r91, e26) {
    function a27(t33) {
      return t33.length ? t33.pop() + " " : "";
    }
    return function(o35, u30) {
      var i29 = [], c30 = [];
      return o35 = t32(o35), u30 = t32(u30), function(t33, e27, a28, o36, u31, i30) {
        if (t33 !== a28 || e27 !== o36) {
          var c31 = u31.push("translate(", null, n37, null, r91);
          i30.push({ i: c31 - 4, x: X11(t33, a28) }, { i: c31 - 2, x: X11(e27, o36) });
        } else
          (a28 || o36) && u31.push("translate(" + a28 + n37 + o36 + r91);
      }(o35.translateX, o35.translateY, u30.translateX, u30.translateY, i29, c30), function(t33, n38, r92, o36) {
        t33 !== n38 ? (t33 - n38 > 180 ? n38 += 360 : n38 - t33 > 180 && (t33 += 360), o36.push({ i: r92.push(a27(r92) + "rotate(", null, e26) - 2, x: X11(t33, n38) })) : n38 && r92.push(a27(r92) + "rotate(" + n38 + e26);
      }(o35.rotate, u30.rotate, i29, c30), function(t33, n38, r92, o36) {
        t33 !== n38 ? o36.push({ i: r92.push(a27(r92) + "skewX(", null, e26) - 2, x: X11(t33, n38) }) : n38 && r92.push(a27(r92) + "skewX(" + n38 + e26);
      }(o35.skewX, u30.skewX, i29, c30), function(t33, n38, r92, e27, o36, u31) {
        if (t33 !== r92 || n38 !== e27) {
          var i30 = o36.push(a27(o36) + "scale(", null, ",", null, ")");
          u31.push({ i: i30 - 4, x: X11(t33, r92) }, { i: i30 - 2, x: X11(n38, e27) });
        } else
          1 === r92 && 1 === e27 || o36.push(a27(o36) + "scale(" + r92 + "," + e27 + ")");
      }(o35.scaleX, o35.scaleY, u30.scaleX, u30.scaleY, i29, c30), o35 = u30 = null, function(t33) {
        for (var n38, r92 = -1, e27 = c30.length; ++r92 < e27; )
          i29[(n38 = c30[r92]).i] = n38.x(t33);
        return i29.join("");
      };
    };
  }
  var L12 = I13(function(t32) {
    const n37 = new ("function" == typeof DOMMatrix ? DOMMatrix : WebKitCSSMatrix)(t32 + "");
    return n37.isIdentity ? C8 : H11(n37.a, n37.b, n37.c, n37.d, n37.e, n37.f);
  }, "px, ", "px)", "deg)");
  var O12 = I13(function(t32) {
    return null == t32 ? C8 : (q11 || (q11 = document.createElementNS("http://www.w3.org/2000/svg", "g")), q11.setAttribute("transform", t32), (t32 = q11.transform.baseVal.consolidate()) ? H11((t32 = t32.matrix).a, t32.b, t32.c, t32.d, t32.e, t32.f) : C8);
  }, ", ", ")", ")");
  function E9(t32) {
    return ((t32 = Math.exp(t32)) + 1 / t32) / 2;
  }
  var T10 = function t14(n37, r91, e26) {
    function a27(t32, a28) {
      var o35, u30, i29 = t32[0], c30 = t32[1], l35 = t32[2], s29 = a28[0], f25 = a28[1], h35 = a28[2], p24 = s29 - i29, v31 = f25 - c30, g31 = p24 * p24 + v31 * v31;
      if (g31 < 1e-12)
        u30 = Math.log(h35 / l35) / n37, o35 = function(t33) {
          return [i29 + t33 * p24, c30 + t33 * v31, l35 * Math.exp(n37 * t33 * u30)];
        };
      else {
        var M26 = Math.sqrt(g31), x22 = (h35 * h35 - l35 * l35 + e26 * g31) / (2 * l35 * r91 * M26), y24 = (h35 * h35 - l35 * l35 - e26 * g31) / (2 * h35 * r91 * M26), b28 = Math.log(Math.sqrt(x22 * x22 + 1) - x22), w26 = Math.log(Math.sqrt(y24 * y24 + 1) - y24);
        u30 = (w26 - b28) / n37, o35 = function(t33) {
          var e27, a29 = t33 * u30, o36 = E9(b28), s30 = l35 / (r91 * M26) * (o36 * (e27 = n37 * a29 + b28, ((e27 = Math.exp(2 * e27)) - 1) / (e27 + 1)) - function(t34) {
            return ((t34 = Math.exp(t34)) - 1 / t34) / 2;
          }(b28));
          return [i29 + s30 * p24, c30 + s30 * v31, l35 * o36 / E9(n37 * a29 + b28)];
        };
      }
      return o35.duration = 1e3 * u30 * n37 / Math.SQRT2, o35;
    }
    return a27.rho = function(n38) {
      var r92 = Math.max(1e-3, +n38), e27 = r92 * r92;
      return t14(r92, e27, e27 * e27);
    }, a27;
  }(Math.SQRT2, 2, 4);
  function V10(t32) {
    return function(n37, e26) {
      var a27 = t32((n37 = I12(n37)).h, (e26 = I12(e26)).h), o35 = p11(n37.s, e26.s), u30 = p11(n37.l, e26.l), i29 = p11(n37.opacity, e26.opacity);
      return function(t33) {
        return n37.h = a27(t33), n37.s = o35(t33), n37.l = u30(t33), n37.opacity = i29(t33), n37 + "";
      };
    };
  }
  var Q11 = V10(f10);
  var K11 = V10(p11);
  function P11(t32, n37) {
    var r91 = p11((t32 = U11(t32)).l, (n37 = U11(n37)).l), a27 = p11(t32.a, n37.a), o35 = p11(t32.b, n37.b), u30 = p11(t32.opacity, n37.opacity);
    return function(n38) {
      return t32.l = r91(n38), t32.a = a27(n38), t32.b = o35(n38), t32.opacity = u30(n38), t32 + "";
    };
  }
  function W11(t32) {
    return function(n37, r91) {
      var e26 = t32((n37 = et7(n37)).h, (r91 = et7(r91)).h), o35 = p11(n37.c, r91.c), u30 = p11(n37.l, r91.l), i29 = p11(n37.opacity, r91.opacity);
      return function(t33) {
        return n37.h = e26(t33), n37.c = o35(t33), n37.l = u30(t33), n37.opacity = i29(t33), n37 + "";
      };
    };
  }
  var Z10 = W11(f10);
  var z9 = W11(p11);
  function F11(t32) {
    return function n37(r91) {
      function e26(n38, e27) {
        var a27 = t32((n38 = gt7(n38)).h, (e27 = gt7(e27)).h), u30 = p11(n38.s, e27.s), i29 = p11(n38.l, e27.l), c30 = p11(n38.opacity, e27.opacity);
        return function(t33) {
          return n38.h = a27(t33), n38.s = u30(t33), n38.l = i29(Math.pow(t33, r91)), n38.opacity = c30(t33), n38 + "";
        };
      }
      return r91 = +r91, e26.gamma = n37, e26;
    }(1);
  }
  var G13 = F11(f10);
  var J10 = F11(p11);
  function U12(t32, n37) {
    void 0 === n37 && (n37 = t32, t32 = R12);
    for (var r91 = 0, e26 = n37.length - 1, a27 = n37[0], o35 = new Array(e26 < 0 ? 0 : e26); r91 < e26; )
      o35[r91] = t32(a27, a27 = n37[++r91]);
    return function(t33) {
      var n38 = Math.max(0, Math.min(e26 - 1, Math.floor(t33 *= e26)));
      return o35[n38](t33 - n38);
    };
  }
  function $11(t32, n37) {
    for (var r91 = new Array(n37), e26 = 0; e26 < n37; ++e26)
      r91[e26] = t32(e26 / (n37 - 1));
    return r91;
  }

  // https://cdn.jsdelivr.net/npm/d3-timer@3.0.1/+esm
  var t15;
  var n14;
  var e9 = 0;
  var r61 = 0;
  var o13 = 0;
  var i12 = 1e3;
  var a11 = 0;
  var l14 = 0;
  var u14 = 0;
  var c13 = "object" == typeof performance && performance.now ? performance : Date;
  var s11 = "object" == typeof window && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(t32) {
    setTimeout(t32, 17);
  };
  function f11() {
    return l14 || (s11(_10), l14 = c13.now() + u14);
  }
  function _10() {
    l14 = 0;
  }
  function w11() {
    this._call = this._time = this._next = null;
  }
  function m11(t32, n37, e26) {
    var r91 = new w11();
    return r91.restart(t32, n37, e26), r91;
  }
  function p12() {
    f11(), ++e9;
    for (var n37, r91 = t15; r91; )
      (n37 = l14 - r91._time) >= 0 && r91._call.call(void 0, n37), r91 = r91._next;
    --e9;
  }
  function h15() {
    l14 = (a11 = c13.now()) + u14, e9 = r61 = 0;
    try {
      p12();
    } finally {
      e9 = 0, function() {
        var e26, r91, o35 = t15, i29 = 1 / 0;
        for (; o35; )
          o35._call ? (i29 > o35._time && (i29 = o35._time), e26 = o35, o35 = o35._next) : (r91 = o35._next, o35._next = null, o35 = e26 ? e26._next = r91 : t15 = r91);
        n14 = e26, x11(i29);
      }(), l14 = 0;
    }
  }
  function v13() {
    var t32 = c13.now(), n37 = t32 - a11;
    n37 > i12 && (u14 -= n37, a11 = t32);
  }
  function x11(t32) {
    e9 || (r61 && (r61 = clearTimeout(r61)), t32 - l14 > 24 ? (t32 < 1 / 0 && (r61 = setTimeout(h15, t32 - c13.now() - u14)), o13 && (o13 = clearInterval(o13))) : (o13 || (a11 = c13.now(), o13 = setInterval(v13, i12)), e9 = 1, s11(h15)));
  }
  function y12(t32, n37, e26) {
    var r91 = new w11();
    return n37 = null == n37 ? 0 : +n37, r91.restart((e27) => {
      r91.stop(), t32(e27 + n37);
    }, n37, e26), r91;
  }
  w11.prototype = m11.prototype = { constructor: w11, restart: function(e26, r91, o35) {
    if ("function" != typeof e26)
      throw new TypeError("callback is not a function");
    o35 = (null == o35 ? f11() : +o35) + (null == r91 ? 0 : +r91), this._next || n14 === this || (n14 ? n14._next = this : t15 = this, n14 = this), this._call = e26, this._time = o35, x11();
  }, stop: function() {
    this._call && (this._call = null, this._time = 1 / 0, x11());
  } };

  // https://cdn.jsdelivr.net/npm/d3-ease@3.0.1/+esm
  function s12(n37) {
    return ((n37 *= 2) <= 1 ? n37 * n37 * n37 : (n37 -= 2) * n37 * n37 + 2) / 2;
  }
  var o14 = function n15(t32) {
    function e26(n37) {
      return Math.pow(n37, t32);
    }
    return t32 = +t32, e26.exponent = n15, e26;
  }(3);
  var i13 = function n16(t32) {
    function e26(n37) {
      return 1 - Math.pow(1 - n37, t32);
    }
    return t32 = +t32, e26.exponent = n16, e26;
  }(3);
  var c14 = function n17(t32) {
    function e26(n37) {
      return ((n37 *= 2) <= 1 ? Math.pow(n37, t32) : 2 - Math.pow(2 - n37, t32)) / 2;
    }
    return t32 = +t32, e26.exponent = n17, e26;
  }(3);
  var f12 = Math.PI;
  var h16 = f12 / 2;
  function l15(n37) {
    return 1.0009775171065494 * (Math.pow(2, -10 * n37) - 9765625e-10);
  }
  var E10 = 4 / 11;
  var m12 = 6 / 11;
  var P12 = 8 / 11;
  var w12 = 3 / 4;
  var b13 = 9 / 11;
  var k11 = 10 / 11;
  var q12 = 15 / 16;
  var y13 = 21 / 22;
  var Q12 = 63 / 64;
  var S12 = 1 / E10 / E10;
  var z10 = 1.70158;
  var A12 = function n18(t32) {
    function e26(n37) {
      return (n37 = +n37) * n37 * (t32 * (n37 - 1) + n37);
    }
    return t32 = +t32, e26.overshoot = n18, e26;
  }(z10);
  var D14 = function n19(t32) {
    function e26(n37) {
      return --n37 * n37 * ((n37 + 1) * t32 + n37) + 1;
    }
    return t32 = +t32, e26.overshoot = n19, e26;
  }(z10);
  var F12 = function n20(t32) {
    function e26(n37) {
      return ((n37 *= 2) < 1 ? n37 * n37 * ((t32 + 1) * n37 - t32) : (n37 -= 2) * n37 * ((t32 + 1) * n37 + t32) + 2) / 2;
    }
    return t32 = +t32, e26.overshoot = n20, e26;
  }(z10);
  var G14 = 2 * Math.PI;
  var H12 = function n21(t32, e26) {
    var a27 = Math.asin(1 / (t32 = Math.max(1, t32))) * (e26 /= G14);
    function u30(n37) {
      return t32 * l15(- --n37) * Math.sin((a27 - n37) / e26);
    }
    return u30.amplitude = function(t33) {
      return n21(t33, e26 * G14);
    }, u30.period = function(e27) {
      return n21(t32, e27);
    }, u30;
  }(1, 0.3);
  var J11 = function n22(t32, e26) {
    var a27 = Math.asin(1 / (t32 = Math.max(1, t32))) * (e26 /= G14);
    function u30(n37) {
      return 1 - t32 * l15(n37 = +n37) * Math.sin((n37 + a27) / e26);
    }
    return u30.amplitude = function(t33) {
      return n22(t33, e26 * G14);
    }, u30.period = function(e27) {
      return n22(t32, e27);
    }, u30;
  }(1, 0.3);
  var K12 = function n23(t32, e26) {
    var a27 = Math.asin(1 / (t32 = Math.max(1, t32))) * (e26 /= G14);
    function u30(n37) {
      return ((n37 = 2 * n37 - 1) < 0 ? t32 * l15(-n37) * Math.sin((a27 - n37) / e26) : 2 - t32 * l15(n37) * Math.sin((a27 + n37) / e26)) / 2;
    }
    return u30.amplitude = function(t33) {
      return n23(t33, e26 * G14);
    }, u30.period = function(e27) {
      return n23(t32, e27);
    }, u30;
  }(1, 0.3);

  // https://cdn.jsdelivr.net/npm/d3-transition@3.0.1/+esm
  var m13 = r58("start", "end", "cancel", "interrupt");
  var y14 = [];
  var w13 = 0;
  var g13 = 1;
  var x12 = 2;
  var A13 = 3;
  var b14 = 4;
  var E11 = 5;
  var C9 = 6;
  function N13(t32, n37, e26, r91, i29, o35) {
    var u30 = t32.__transition;
    if (u30) {
      if (e26 in u30)
        return;
    } else
      t32.__transition = {};
    !function(t33, n38, e27) {
      var r92, i30 = t33.__transition;
      function o36(t34) {
        e27.state = g13, e27.timer.restart(u31, e27.delay, e27.time), e27.delay <= t34 && u31(t34 - e27.delay);
      }
      function u31(o37) {
        var a27, c30, h35, _24;
        if (e27.state !== g13)
          return f25();
        for (a27 in i30)
          if ((_24 = i30[a27]).name === e27.name) {
            if (_24.state === A13)
              return y12(u31);
            _24.state === b14 ? (_24.state = C9, _24.timer.stop(), _24.on.call("interrupt", t33, t33.__data__, _24.index, _24.group), delete i30[a27]) : +a27 < n38 && (_24.state = C9, _24.timer.stop(), _24.on.call("cancel", t33, t33.__data__, _24.index, _24.group), delete i30[a27]);
          }
        if (y12(function() {
          e27.state === A13 && (e27.state = b14, e27.timer.restart(l35, e27.delay, e27.time), l35(o37));
        }), e27.state = x12, e27.on.call("start", t33, t33.__data__, e27.index, e27.group), e27.state === x12) {
          for (e27.state = A13, r92 = new Array(h35 = e27.tween.length), a27 = 0, c30 = -1; a27 < h35; ++a27)
            (_24 = e27.tween[a27].value.call(t33, t33.__data__, e27.index, e27.group)) && (r92[++c30] = _24);
          r92.length = c30 + 1;
        }
      }
      function l35(n39) {
        for (var i31 = n39 < e27.duration ? e27.ease.call(null, n39 / e27.duration) : (e27.timer.restart(f25), e27.state = E11, 1), o37 = -1, u32 = r92.length; ++o37 < u32; )
          r92[o37].call(t33, i31);
        e27.state === E11 && (e27.on.call("end", t33, t33.__data__, e27.index, e27.group), f25());
      }
      function f25() {
        for (var r93 in e27.state = C9, e27.timer.stop(), delete i30[n38], i30)
          return;
        delete t33.__transition;
      }
      i30[n38] = e27, e27.timer = m11(o36, 0, e27.time);
    }(t32, e26, { name: n37, index: r91, group: i29, on: m13, tween: y14, time: o35.time, delay: o35.delay, duration: o35.duration, ease: o35.ease, timer: null, state: w13 });
  }
  function S13(t32, n37) {
    var e26 = P13(t32, n37);
    if (e26.state > w13)
      throw new Error("too late; already scheduled");
    return e26;
  }
  function T11(t32, n37) {
    var e26 = P13(t32, n37);
    if (e26.state > A13)
      throw new Error("too late; already running");
    return e26;
  }
  function P13(t32, n37) {
    var e26 = t32.__transition;
    if (!e26 || !(e26 = e26[n37]))
      throw new Error("transition not found");
    return e26;
  }
  function z11(t32, n37) {
    var e26, r91, i29, o35 = t32.__transition, u30 = true;
    if (o35) {
      for (i29 in n37 = null == n37 ? null : n37 + "", o35)
        (e26 = o35[i29]).name === n37 ? (r91 = e26.state > x12 && e26.state < E11, e26.state = C9, e26.timer.stop(), e26.on.call(r91 ? "interrupt" : "cancel", t32, t32.__data__, e26.index, e26.group), delete o35[i29]) : u30 = false;
      u30 && delete t32.__transition;
    }
  }
  function k12(t32, n37) {
    var e26, r91;
    return function() {
      var i29 = T11(this, t32), o35 = i29.tween;
      if (o35 !== e26) {
        for (var u30 = 0, a27 = (r91 = e26 = o35).length; u30 < a27; ++u30)
          if (r91[u30].name === n37) {
            (r91 = r91.slice()).splice(u30, 1);
            break;
          }
      }
      i29.tween = r91;
    };
  }
  function M11(t32, n37, e26) {
    var r91, i29;
    if ("function" != typeof e26)
      throw new Error();
    return function() {
      var o35 = T11(this, t32), u30 = o35.tween;
      if (u30 !== r91) {
        i29 = (r91 = u30).slice();
        for (var a27 = { name: n37, value: e26 }, s29 = 0, l35 = i29.length; s29 < l35; ++s29)
          if (i29[s29].name === n37) {
            i29[s29] = a27;
            break;
          }
        s29 === l35 && i29.push(a27);
      }
      o35.tween = i29;
    };
  }
  function O13(t32, n37, e26) {
    var r91 = t32._id;
    return t32.each(function() {
      var t33 = T11(this, r91);
      (t33.value || (t33.value = {}))[n37] = e26.apply(this, arguments);
    }), function(t33) {
      return P13(t33, r91).value[n37];
    };
  }
  function V11(t32, n37) {
    var e26;
    return ("number" == typeof n37 ? X11 : n37 instanceof y10 ? v12 : (e26 = y10(n37)) ? (n37 = e26, v12) : D13)(t32, n37);
  }
  function $12(t32) {
    return function() {
      this.removeAttribute(t32);
    };
  }
  function j13(t32) {
    return function() {
      this.removeAttributeNS(t32.space, t32.local);
    };
  }
  function q13(t32, n37, e26) {
    var r91, i29, o35 = e26 + "";
    return function() {
      var u30 = this.getAttribute(t32);
      return u30 === o35 ? null : u30 === r91 ? i29 : i29 = n37(r91 = u30, e26);
    };
  }
  function B12(t32, n37, e26) {
    var r91, i29, o35 = e26 + "";
    return function() {
      var u30 = this.getAttributeNS(t32.space, t32.local);
      return u30 === o35 ? null : u30 === r91 ? i29 : i29 = n37(r91 = u30, e26);
    };
  }
  function D15(t32, n37, e26) {
    var r91, i29, o35;
    return function() {
      var u30, a27, s29 = e26(this);
      if (null != s29)
        return (u30 = this.getAttribute(t32)) === (a27 = s29 + "") ? null : u30 === r91 && a27 === i29 ? o35 : (i29 = a27, o35 = n37(r91 = u30, s29));
      this.removeAttribute(t32);
    };
  }
  function F13(t32, n37, e26) {
    var r91, i29, o35;
    return function() {
      var u30, a27, s29 = e26(this);
      if (null != s29)
        return (u30 = this.getAttributeNS(t32.space, t32.local)) === (a27 = s29 + "") ? null : u30 === r91 && a27 === i29 ? o35 : (i29 = a27, o35 = n37(r91 = u30, s29));
      this.removeAttributeNS(t32.space, t32.local);
    };
  }
  function G15(t32, n37) {
    var e26, r91;
    function i29() {
      var i30 = n37.apply(this, arguments);
      return i30 !== r91 && (e26 = (r91 = i30) && /* @__PURE__ */ function(t33, n38) {
        return function(e27) {
          this.setAttributeNS(t33.space, t33.local, n38.call(this, e27));
        };
      }(t32, i30)), e26;
    }
    return i29._value = n37, i29;
  }
  function H13(t32, n37) {
    var e26, r91;
    function i29() {
      var i30 = n37.apply(this, arguments);
      return i30 !== r91 && (e26 = (r91 = i30) && /* @__PURE__ */ function(t33, n38) {
        return function(e27) {
          this.setAttribute(t33, n38.call(this, e27));
        };
      }(t32, i30)), e26;
    }
    return i29._value = n37, i29;
  }
  function I14(t32, n37) {
    return function() {
      S13(this, t32).delay = +n37.apply(this, arguments);
    };
  }
  function J12(t32, n37) {
    return n37 = +n37, function() {
      S13(this, t32).delay = n37;
    };
  }
  function K13(t32, n37) {
    return function() {
      T11(this, t32).duration = +n37.apply(this, arguments);
    };
  }
  function L13(t32, n37) {
    return n37 = +n37, function() {
      T11(this, t32).duration = n37;
    };
  }
  var Q13 = ft7.prototype.constructor;
  function R13(t32) {
    return function() {
      this.style.removeProperty(t32);
    };
  }
  var U13 = 0;
  function W12(t32, n37, e26, r91) {
    this._groups = t32, this._parents = n37, this._name = e26, this._id = r91;
  }
  function X12(t32) {
    return ft7().transition(t32);
  }
  function Y12() {
    return ++U13;
  }
  var Z11 = ft7.prototype;
  W12.prototype = X12.prototype = { constructor: W12, select: function(t32) {
    var n37 = this._name, r91 = this._id;
    "function" != typeof t32 && (t32 = s7(t32));
    for (var i29 = this._groups, o35 = i29.length, u30 = new Array(o35), a27 = 0; a27 < o35; ++a27)
      for (var s29, l35, f25 = i29[a27], c30 = f25.length, h35 = u30[a27] = new Array(c30), _24 = 0; _24 < c30; ++_24)
        (s29 = f25[_24]) && (l35 = t32.call(s29, s29.__data__, _24, f25)) && ("__data__" in s29 && (l35.__data__ = s29.__data__), h35[_24] = l35, N13(h35[_24], n37, r91, _24, h35, P13(s29, r91)));
    return new W12(u30, this._parents, n37, r91);
  }, selectAll: function(t32) {
    var n37 = this._name, e26 = this._id;
    "function" != typeof t32 && (t32 = l11(t32));
    for (var i29 = this._groups, o35 = i29.length, u30 = [], a27 = [], s29 = 0; s29 < o35; ++s29)
      for (var l35, f25 = i29[s29], c30 = f25.length, h35 = 0; h35 < c30; ++h35)
        if (l35 = f25[h35]) {
          for (var _24, p24 = t32.call(l35, l35.__data__, h35, f25), v31 = P13(l35, e26), d25 = 0, m27 = p24.length; d25 < m27; ++d25)
            (_24 = p24[d25]) && N13(_24, n37, e26, d25, p24, v31);
          u30.push(p24), a27.push(l35);
        }
    return new W12(u30, a27, n37, e26);
  }, selectChild: Z11.selectChild, selectChildren: Z11.selectChildren, filter: function(t32) {
    "function" != typeof t32 && (t32 = f8(t32));
    for (var e26 = this._groups, r91 = e26.length, i29 = new Array(r91), o35 = 0; o35 < r91; ++o35)
      for (var u30, a27 = e26[o35], s29 = a27.length, l35 = i29[o35] = [], f25 = 0; f25 < s29; ++f25)
        (u30 = a27[f25]) && t32.call(u30, u30.__data__, f25, a27) && l35.push(u30);
    return new W12(i29, this._parents, this._name, this._id);
  }, merge: function(t32) {
    if (t32._id !== this._id)
      throw new Error();
    for (var n37 = this._groups, e26 = t32._groups, r91 = n37.length, i29 = e26.length, o35 = Math.min(r91, i29), u30 = new Array(r91), a27 = 0; a27 < o35; ++a27)
      for (var s29, l35 = n37[a27], f25 = e26[a27], c30 = l35.length, h35 = u30[a27] = new Array(c30), _24 = 0; _24 < c30; ++_24)
        (s29 = l35[_24] || f25[_24]) && (h35[_24] = s29);
    for (; a27 < r91; ++a27)
      u30[a27] = n37[a27];
    return new W12(u30, this._parents, this._name, this._id);
  }, selection: function() {
    return new Q13(this._groups, this._parents);
  }, transition: function() {
    for (var t32 = this._name, n37 = this._id, e26 = Y12(), r91 = this._groups, i29 = r91.length, o35 = 0; o35 < i29; ++o35)
      for (var u30, a27 = r91[o35], s29 = a27.length, l35 = 0; l35 < s29; ++l35)
        if (u30 = a27[l35]) {
          var f25 = P13(u30, n37);
          N13(u30, t32, e26, l35, a27, { time: f25.time + f25.delay + f25.duration, delay: 0, duration: f25.duration, ease: f25.ease });
        }
    return new W12(r91, this._parents, t32, e26);
  }, call: Z11.call, nodes: Z11.nodes, node: Z11.node, size: Z11.size, empty: Z11.empty, each: Z11.each, on: function(t32, n37) {
    var e26 = this._id;
    return arguments.length < 2 ? P13(this.node(), e26).on.on(t32) : this.each(function(t33, n38, e27) {
      var r91, i29, o35 = function(t34) {
        return (t34 + "").trim().split(/^|\s+/).every(function(t35) {
          var n39 = t35.indexOf(".");
          return n39 >= 0 && (t35 = t35.slice(0, n39)), !t35 || "start" === t35;
        });
      }(n38) ? S13 : T11;
      return function() {
        var u30 = o35(this, t33), a27 = u30.on;
        a27 !== r91 && (i29 = (r91 = a27).copy()).on(n38, e27), u30.on = i29;
      };
    }(e26, t32, n37));
  }, attr: function(n37, e26) {
    var r91 = e7(n37), i29 = "transform" === r91 ? O12 : V11;
    return this.attrTween(n37, "function" == typeof e26 ? (r91.local ? F13 : D15)(r91, i29, O13(this, "attr." + n37, e26)) : null == e26 ? (r91.local ? j13 : $12)(r91) : (r91.local ? B12 : q13)(r91, i29, e26));
  }, attrTween: function(n37, e26) {
    var r91 = "attr." + n37;
    if (arguments.length < 2)
      return (r91 = this.tween(r91)) && r91._value;
    if (null == e26)
      return this.tween(r91, null);
    if ("function" != typeof e26)
      throw new Error();
    var i29 = e7(n37);
    return this.tween(r91, (i29.local ? G15 : H13)(i29, e26));
  }, style: function(t32, n37, e26) {
    var r91 = "transform" == (t32 += "") ? L12 : V11;
    return null == n37 ? this.styleTween(t32, /* @__PURE__ */ function(t33, n38) {
      var e27, r92, i29;
      return function() {
        var u30 = D11(this, t33), a27 = (this.style.removeProperty(t33), D11(this, t33));
        return u30 === a27 ? null : u30 === e27 && a27 === r92 ? i29 : i29 = n38(e27 = u30, r92 = a27);
      };
    }(t32, r91)).on("end.style." + t32, R13(t32)) : "function" == typeof n37 ? this.styleTween(t32, /* @__PURE__ */ function(t33, n38, e27) {
      var r92, i29, u30;
      return function() {
        var a27 = D11(this, t33), s29 = e27(this), l35 = s29 + "";
        return null == s29 && (this.style.removeProperty(t33), l35 = s29 = D11(this, t33)), a27 === l35 ? null : a27 === r92 && l35 === i29 ? u30 : (i29 = l35, u30 = n38(r92 = a27, s29));
      };
    }(t32, r91, O13(this, "style." + t32, n37))).each(function(t33, n38) {
      var e27, r92, i29, o35, u30 = "style." + n38, a27 = "end." + u30;
      return function() {
        var s29 = T11(this, t33), l35 = s29.on, f25 = null == s29.value[u30] ? o35 || (o35 = R13(n38)) : void 0;
        l35 === e27 && i29 === f25 || (r92 = (e27 = l35).copy()).on(a27, i29 = f25), s29.on = r92;
      };
    }(this._id, t32)) : this.styleTween(t32, function(t33, n38, e27) {
      var r92, i29, u30 = e27 + "";
      return function() {
        var a27 = D11(this, t33);
        return a27 === u30 ? null : a27 === r92 ? i29 : i29 = n38(r92 = a27, e27);
      };
    }(t32, r91, n37), e26).on("end.style." + t32, null);
  }, styleTween: function(t32, n37, e26) {
    var r91 = "style." + (t32 += "");
    if (arguments.length < 2)
      return (r91 = this.tween(r91)) && r91._value;
    if (null == n37)
      return this.tween(r91, null);
    if ("function" != typeof n37)
      throw new Error();
    return this.tween(r91, function(t33, n38, e27) {
      var r92, i29;
      function o35() {
        var o36 = n38.apply(this, arguments);
        return o36 !== i29 && (r92 = (i29 = o36) && /* @__PURE__ */ function(t34, n39, e28) {
          return function(r93) {
            this.style.setProperty(t34, n39.call(this, r93), e28);
          };
        }(t33, o36, e27)), r92;
      }
      return o35._value = n38, o35;
    }(t32, n37, null == e26 ? "" : e26));
  }, text: function(t32) {
    return this.tween("text", "function" == typeof t32 ? /* @__PURE__ */ function(t33) {
      return function() {
        var n37 = t33(this);
        this.textContent = null == n37 ? "" : n37;
      };
    }(O13(this, "text", t32)) : /* @__PURE__ */ function(t33) {
      return function() {
        this.textContent = t33;
      };
    }(null == t32 ? "" : t32 + ""));
  }, textTween: function(t32) {
    var n37 = "text";
    if (arguments.length < 1)
      return (n37 = this.tween(n37)) && n37._value;
    if (null == t32)
      return this.tween(n37, null);
    if ("function" != typeof t32)
      throw new Error();
    return this.tween(n37, function(t33) {
      var n38, e26;
      function r91() {
        var r92 = t33.apply(this, arguments);
        return r92 !== e26 && (n38 = (e26 = r92) && /* @__PURE__ */ function(t34) {
          return function(n39) {
            this.textContent = t34.call(this, n39);
          };
        }(r92)), n38;
      }
      return r91._value = t33, r91;
    }(t32));
  }, remove: function() {
    return this.on("end.remove", /* @__PURE__ */ function(t32) {
      return function() {
        var n37 = this.parentNode;
        for (var e26 in this.__transition)
          if (+e26 !== t32)
            return;
        n37 && n37.removeChild(this);
      };
    }(this._id));
  }, tween: function(t32, n37) {
    var e26 = this._id;
    if (t32 += "", arguments.length < 2) {
      for (var r91, i29 = P13(this.node(), e26).tween, o35 = 0, u30 = i29.length; o35 < u30; ++o35)
        if ((r91 = i29[o35]).name === t32)
          return r91.value;
      return null;
    }
    return this.each((null == n37 ? k12 : M11)(e26, t32, n37));
  }, delay: function(t32) {
    var n37 = this._id;
    return arguments.length ? this.each(("function" == typeof t32 ? I14 : J12)(n37, t32)) : P13(this.node(), n37).delay;
  }, duration: function(t32) {
    var n37 = this._id;
    return arguments.length ? this.each(("function" == typeof t32 ? K13 : L13)(n37, t32)) : P13(this.node(), n37).duration;
  }, ease: function(t32) {
    var n37 = this._id;
    return arguments.length ? this.each(function(t33, n38) {
      if ("function" != typeof n38)
        throw new Error();
      return function() {
        T11(this, t33).ease = n38;
      };
    }(n37, t32)) : P13(this.node(), n37).ease;
  }, easeVarying: function(t32) {
    if ("function" != typeof t32)
      throw new Error();
    return this.each(/* @__PURE__ */ function(t33, n37) {
      return function() {
        var e26 = n37.apply(this, arguments);
        if ("function" != typeof e26)
          throw new Error();
        T11(this, t33).ease = e26;
      };
    }(this._id, t32));
  }, end: function() {
    var t32, n37, e26 = this, r91 = e26._id, i29 = e26.size();
    return new Promise(function(o35, u30) {
      var a27 = { value: u30 }, s29 = { value: function() {
        0 == --i29 && o35();
      } };
      e26.each(function() {
        var e27 = T11(this, r91), i30 = e27.on;
        i30 !== t32 && ((n37 = (t32 = i30).copy())._.cancel.push(a27), n37._.interrupt.push(a27), n37._.end.push(s29)), e27.on = n37;
      }), 0 === i29 && o35();
    });
  }, [Symbol.iterator]: Z11[Symbol.iterator] };
  var tt8 = { time: null, delay: 0, duration: 250, ease: s12 };
  function nt9(t32, n37) {
    for (var e26; !(e26 = t32.__transition) || !(e26 = e26[n37]); )
      if (!(t32 = t32.parentNode))
        throw new Error(`transition ${n37} not found`);
    return e26;
  }
  ft7.prototype.interrupt = function(t32) {
    return this.each(function() {
      z11(this, t32);
    });
  }, ft7.prototype.transition = function(t32) {
    var n37, e26;
    t32 instanceof W12 ? (n37 = t32._id, t32 = t32._name) : (n37 = Y12(), (e26 = tt8).time = f11(), t32 = null == t32 ? null : t32 + "");
    for (var r91 = this._groups, i29 = r91.length, o35 = 0; o35 < i29; ++o35)
      for (var u30, a27 = r91[o35], s29 = a27.length, f25 = 0; f25 < s29; ++f25)
        (u30 = a27[f25]) && N13(u30, t32, n37, f25, a27, e26 || nt9(u30, n37));
    return new W12(r91, this._parents, t32, n37);
  };

  // https://cdn.jsdelivr.net/npm/d3-brush@3.0.0/+esm
  var o15 = (t32) => () => t32;
  function a12(t32, { sourceEvent: e26, target: n37, selection: r91, mode: s29, dispatch: i29 }) {
    Object.defineProperties(this, { type: { value: t32, enumerable: true, configurable: true }, sourceEvent: { value: e26, enumerable: true, configurable: true }, target: { value: n37, enumerable: true, configurable: true }, selection: { value: r91, enumerable: true, configurable: true }, mode: { value: s29, enumerable: true, configurable: true }, _: { value: i29 } });
  }
  function l16(t32) {
    t32.preventDefault(), t32.stopImmediatePropagation();
  }
  var c15 = { name: "drag" };
  var h17 = { name: "space" };
  var f13 = { name: "handle" };
  var p13 = { name: "center" };
  var { abs: m14, max: d12, min: v14 } = Math;
  function y15(t32) {
    return [+t32[0], +t32[1]];
  }
  function b15(t32) {
    return [y15(t32[0]), y15(t32[1])];
  }
  var w14 = { name: "x", handles: ["w", "e"].map(K14), input: function(t32, e26) {
    return null == t32 ? null : [[+t32[0], e26[0][1]], [+t32[1], e26[1][1]]];
  }, output: function(t32) {
    return t32 && [t32[0][0], t32[1][0]];
  } };
  var g14 = { name: "y", handles: ["n", "s"].map(K14), input: function(t32, e26) {
    return null == t32 ? null : [[e26[0][0], +t32[0]], [e26[1][0], +t32[1]]];
  }, output: function(t32) {
    return t32 && [t32[0][1], t32[1][1]];
  } };
  var _11 = { name: "xy", handles: ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(K14), input: function(t32) {
    return null == t32 ? null : b15(t32);
  }, output: function(t32) {
    return t32;
  } };
  var x13 = { overlay: "crosshair", selection: "move", n: "ns-resize", e: "ew-resize", s: "ns-resize", w: "ew-resize", nw: "nwse-resize", ne: "nesw-resize", se: "nwse-resize", sw: "nesw-resize" };
  var k13 = { e: "w", w: "e", nw: "ne", ne: "nw", se: "sw", sw: "se" };
  var z12 = { n: "s", s: "n", nw: "sw", ne: "se", se: "ne", sw: "nw" };
  var A14 = { overlay: 1, selection: 1, n: null, e: 1, s: null, w: -1, nw: -1, ne: 1, se: 1, sw: -1 };
  var E12 = { overlay: 1, selection: 1, n: -1, e: null, s: 1, w: null, nw: -1, ne: -1, se: 1, sw: 1 };
  function K14(t32) {
    return { type: t32 };
  }
  function P14(t32) {
    return !t32.ctrlKey && !t32.button;
  }
  function T12() {
    var t32 = this.ownerSVGElement || this;
    return t32.hasAttribute("viewBox") ? [[(t32 = t32.viewBox.baseVal).x, t32.y], [t32.x + t32.width, t32.y + t32.height]] : [[0, 0], [t32.width.baseVal.value, t32.height.baseVal.value]];
  }
  function V12() {
    return navigator.maxTouchPoints || "ontouchstart" in this;
  }
  function B13(t32) {
    for (; !t32.__brush; )
      if (!(t32 = t32.parentNode))
        return;
    return t32.__brush;
  }
  function I15() {
    return j14(w14);
  }
  function M12() {
    return j14(g14);
  }
  function j14(y24) {
    var _24, C24 = T12, I26 = P14, M26 = V12, S25 = true, j26 = r58("start", "brush", "end"), D24 = 6;
    function G24(t32) {
      var e26 = t32.property("__brush", L25).selectAll(".overlay").data([K14("overlay")]);
      e26.enter().append("rect").attr("class", "overlay").attr("pointer-events", "all").attr("cursor", x13.overlay).merge(e26).each(function() {
        var t33 = B13(this).extent;
        ht7(this).attr("x", t33[0][0]).attr("y", t33[0][1]).attr("width", t33[1][0] - t33[0][0]).attr("height", t33[1][1] - t33[0][1]);
      }), t32.selectAll(".selection").data([K14("selection")]).enter().append("rect").attr("class", "selection").attr("cursor", x13.selection).attr("fill", "#777").attr("fill-opacity", 0.3).attr("stroke", "#fff").attr("shape-rendering", "crispEdges");
      var n37 = t32.selectAll(".handle").data(y24.handles, function(t33) {
        return t33.type;
      });
      n37.exit().remove(), n37.enter().append("rect").attr("class", function(t33) {
        return "handle handle--" + t33.type;
      }).attr("cursor", function(t33) {
        return x13[t33.type];
      }), t32.each(N28).attr("fill", "none").attr("pointer-events", "all").on("mousedown.brush", F26).filter(M26).on("touchstart.brush", F26).on("touchmove.brush", H26).on("touchend.brush touchcancel.brush", J25).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
    }
    function N28() {
      var t32 = ht7(this), e26 = B13(this).selection;
      e26 ? (t32.selectAll(".selection").style("display", null).attr("x", e26[0][0]).attr("y", e26[0][1]).attr("width", e26[1][0] - e26[0][0]).attr("height", e26[1][1] - e26[0][1]), t32.selectAll(".handle").style("display", null).attr("x", function(t33) {
        return "e" === t33.type[t33.type.length - 1] ? e26[1][0] - D24 / 2 : e26[0][0] - D24 / 2;
      }).attr("y", function(t33) {
        return "s" === t33.type[0] ? e26[1][1] - D24 / 2 : e26[0][1] - D24 / 2;
      }).attr("width", function(t33) {
        return "n" === t33.type || "s" === t33.type ? e26[1][0] - e26[0][0] + D24 : D24;
      }).attr("height", function(t33) {
        return "e" === t33.type || "w" === t33.type ? e26[1][1] - e26[0][1] + D24 : D24;
      })) : t32.selectAll(".selection,.handle").style("display", "none").attr("x", null).attr("y", null).attr("width", null).attr("height", null);
    }
    function O21(t32, e26, n37) {
      var r91 = t32.__brush.emitter;
      return !r91 || n37 && r91.clean ? new q25(t32, e26, n37) : r91;
    }
    function q25(t32, e26, n37) {
      this.that = t32, this.args = e26, this.state = t32.__brush, this.active = 0, this.clean = n37;
    }
    function F26(t32) {
      if ((!_24 || t32.touches) && I26.apply(this, arguments)) {
        var r91, o35, a27, b28, K26, P25, T23, V24, C25, M27, j27, D25 = this, G25 = t32.target.__data__.type, q26 = "selection" === (S25 && t32.metaKey ? G25 = "overlay" : G25) ? c15 : S25 && t32.altKey ? p13 : f13, F27 = y24 === g14 ? null : A14[G25], H27 = y24 === w14 ? null : E12[G25], J26 = B13(D25), L26 = J26.extent, Q24 = J26.selection, R25 = L26[0][0], U23 = L26[0][1], W25 = L26[1][0], X25 = L26[1][1], Y23 = 0, Z23 = 0, $26 = F27 && H27 && S25 && t32.shiftKey, tt17 = Array.from(t32.touches || [t32], (t33) => {
          const e26 = t33.identifier;
          return (t33 = mt7(t33, D25)).point0 = t33.slice(), t33.identifier = e26, t33;
        });
        z11(D25);
        var et14 = O21(D25, arguments, true).beforestart();
        if ("overlay" === G25) {
          Q24 && (C25 = true);
          const e26 = [tt17[0], tt17[1] || tt17[0]];
          J26.selection = Q24 = [[r91 = y24 === g14 ? R25 : v14(e26[0][0], e26[1][0]), a27 = y24 === w14 ? U23 : v14(e26[0][1], e26[1][1])], [K26 = y24 === g14 ? W25 : d12(e26[0][0], e26[1][0]), T23 = y24 === w14 ? X25 : d12(e26[0][1], e26[1][1])]], tt17.length > 1 && ut15(t32);
        } else
          r91 = Q24[0][0], a27 = Q24[0][1], K26 = Q24[1][0], T23 = Q24[1][1];
        o35 = r91, b28 = a27, P25 = K26, V24 = T23;
        var nt17 = ht7(D25).attr("pointer-events", "none"), rt16 = nt17.selectAll(".overlay").attr("cursor", x13[G25]);
        if (t32.touches)
          et14.moved = it15, et14.ended = ot14;
        else {
          var st14 = ht7(t32.view).on("mousemove.brush", it15, true).on("mouseup.brush", ot14, true);
          S25 && st14.on("keydown.brush", function(t33) {
            switch (t33.keyCode) {
              case 16:
                $26 = F27 && H27;
                break;
              case 18:
                q26 === f13 && (F27 && (K26 = P25 - Y23 * F27, r91 = o35 + Y23 * F27), H27 && (T23 = V24 - Z23 * H27, a27 = b28 + Z23 * H27), q26 = p13, ut15(t33));
                break;
              case 32:
                q26 !== f13 && q26 !== p13 || (F27 < 0 ? K26 = P25 - Y23 : F27 > 0 && (r91 = o35 - Y23), H27 < 0 ? T23 = V24 - Z23 : H27 > 0 && (a27 = b28 - Z23), q26 = h17, rt16.attr("cursor", x13.selection), ut15(t33));
                break;
              default:
                return;
            }
            l16(t33);
          }, true).on("keyup.brush", function(t33) {
            switch (t33.keyCode) {
              case 16:
                $26 && (M27 = j27 = $26 = false, ut15(t33));
                break;
              case 18:
                q26 === p13 && (F27 < 0 ? K26 = P25 : F27 > 0 && (r91 = o35), H27 < 0 ? T23 = V24 : H27 > 0 && (a27 = b28), q26 = f13, ut15(t33));
                break;
              case 32:
                q26 === h17 && (t33.altKey ? (F27 && (K26 = P25 - Y23 * F27, r91 = o35 + Y23 * F27), H27 && (T23 = V24 - Z23 * H27, a27 = b28 + Z23 * H27), q26 = p13) : (F27 < 0 ? K26 = P25 : F27 > 0 && (r91 = o35), H27 < 0 ? T23 = V24 : H27 > 0 && (a27 = b28), q26 = f13), rt16.attr("cursor", x13[G25]), ut15(t33));
                break;
              default:
                return;
            }
            l16(t33);
          }, true), u11(t32.view);
        }
        N28.call(D25), et14.start(t32, q26.name);
      }
      function it15(t33) {
        for (const e26 of t33.changedTouches || [t33])
          for (const t34 of tt17)
            t34.identifier === e26.identifier && (t34.cur = mt7(e26, D25));
        if ($26 && !M27 && !j27 && 1 === tt17.length) {
          const t34 = tt17[0];
          m14(t34.cur[0] - t34[0]) > m14(t34.cur[1] - t34[1]) ? j27 = true : M27 = true;
        }
        for (const t34 of tt17)
          t34.cur && (t34[0] = t34.cur[0], t34[1] = t34.cur[1]);
        C25 = true, l16(t33), ut15(t33);
      }
      function ut15(t33) {
        const e26 = tt17[0], n37 = e26.point0;
        var s29;
        switch (Y23 = e26[0] - n37[0], Z23 = e26[1] - n37[1], q26) {
          case h17:
          case c15:
            F27 && (Y23 = d12(R25 - r91, v14(W25 - K26, Y23)), o35 = r91 + Y23, P25 = K26 + Y23), H27 && (Z23 = d12(U23 - a27, v14(X25 - T23, Z23)), b28 = a27 + Z23, V24 = T23 + Z23);
            break;
          case f13:
            tt17[1] ? (F27 && (o35 = d12(R25, v14(W25, tt17[0][0])), P25 = d12(R25, v14(W25, tt17[1][0])), F27 = 1), H27 && (b28 = d12(U23, v14(X25, tt17[0][1])), V24 = d12(U23, v14(X25, tt17[1][1])), H27 = 1)) : (F27 < 0 ? (Y23 = d12(R25 - r91, v14(W25 - r91, Y23)), o35 = r91 + Y23, P25 = K26) : F27 > 0 && (Y23 = d12(R25 - K26, v14(W25 - K26, Y23)), o35 = r91, P25 = K26 + Y23), H27 < 0 ? (Z23 = d12(U23 - a27, v14(X25 - a27, Z23)), b28 = a27 + Z23, V24 = T23) : H27 > 0 && (Z23 = d12(U23 - T23, v14(X25 - T23, Z23)), b28 = a27, V24 = T23 + Z23));
            break;
          case p13:
            F27 && (o35 = d12(R25, v14(W25, r91 - Y23 * F27)), P25 = d12(R25, v14(W25, K26 + Y23 * F27))), H27 && (b28 = d12(U23, v14(X25, a27 - Z23 * H27)), V24 = d12(U23, v14(X25, T23 + Z23 * H27)));
        }
        P25 < o35 && (F27 *= -1, s29 = r91, r91 = K26, K26 = s29, s29 = o35, o35 = P25, P25 = s29, G25 in k13 && rt16.attr("cursor", x13[G25 = k13[G25]])), V24 < b28 && (H27 *= -1, s29 = a27, a27 = T23, T23 = s29, s29 = b28, b28 = V24, V24 = s29, G25 in z12 && rt16.attr("cursor", x13[G25 = z12[G25]])), J26.selection && (Q24 = J26.selection), M27 && (o35 = Q24[0][0], P25 = Q24[1][0]), j27 && (b28 = Q24[0][1], V24 = Q24[1][1]), Q24[0][0] === o35 && Q24[0][1] === b28 && Q24[1][0] === P25 && Q24[1][1] === V24 || (J26.selection = [[o35, b28], [P25, V24]], N28.call(D25), et14.brush(t33, q26.name));
      }
      function ot14(t33) {
        if (function(t34) {
          t34.stopImmediatePropagation();
        }(t33), t33.touches) {
          if (t33.touches.length)
            return;
          _24 && clearTimeout(_24), _24 = setTimeout(function() {
            _24 = null;
          }, 500);
        } else
          c10(t33.view, C25), st14.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
        nt17.attr("pointer-events", "all"), rt16.attr("cursor", x13.overlay), J26.selection && (Q24 = J26.selection), function(t34) {
          return t34[0][0] === t34[1][0] || t34[0][1] === t34[1][1];
        }(Q24) && (J26.selection = null, N28.call(D25)), et14.end(t33, q26.name);
      }
    }
    function H26(t32) {
      O21(this, arguments).moved(t32);
    }
    function J25(t32) {
      O21(this, arguments).ended(t32);
    }
    function L25() {
      var t32 = this.__brush || { selection: null };
      return t32.extent = b15(C24.apply(this, arguments)), t32.dim = y24, t32;
    }
    return G24.move = function(t32, e26, n37) {
      t32.tween ? t32.on("start.brush", function(t33) {
        O21(this, arguments).beforestart().start(t33);
      }).on("interrupt.brush end.brush", function(t33) {
        O21(this, arguments).end(t33);
      }).tween("brush", function() {
        var t33 = this, n38 = t33.__brush, s29 = O21(t33, arguments), i29 = n38.selection, u30 = y24.input("function" == typeof e26 ? e26.apply(this, arguments) : e26, n38.extent), o35 = R12(i29, u30);
        function a27(e27) {
          n38.selection = 1 === e27 && null === u30 ? null : o35(e27), N28.call(t33), s29.brush();
        }
        return null !== i29 && null !== u30 ? a27 : a27(1);
      }) : t32.each(function() {
        var t33 = this, r91 = arguments, s29 = t33.__brush, i29 = y24.input("function" == typeof e26 ? e26.apply(t33, r91) : e26, s29.extent), o35 = O21(t33, r91).beforestart();
        z11(t33), s29.selection = null === i29 ? null : i29, N28.call(t33), o35.start(n37).brush(n37).end(n37);
      });
    }, G24.clear = function(t32, e26) {
      G24.move(t32, null, e26);
    }, q25.prototype = { beforestart: function() {
      return 1 == ++this.active && (this.state.emitter = this, this.starting = true), this;
    }, start: function(t32, e26) {
      return this.starting ? (this.starting = false, this.emit("start", t32, e26)) : this.emit("brush", t32), this;
    }, brush: function(t32, e26) {
      return this.emit("brush", t32, e26), this;
    }, end: function(t32, e26) {
      return 0 == --this.active && (delete this.state.emitter, this.emit("end", t32, e26)), this;
    }, emit: function(t32, e26, n37) {
      var r91 = ht7(this.that).datum();
      j26.call(t32, this.that, new a12(t32, { sourceEvent: e26, target: G24, selection: y24.output(this.state.selection), mode: n37, dispatch: j26 }), r91);
    } }, G24.extent = function(t32) {
      return arguments.length ? (C24 = "function" == typeof t32 ? t32 : o15(b15(t32)), G24) : C24;
    }, G24.filter = function(t32) {
      return arguments.length ? (I26 = "function" == typeof t32 ? t32 : o15(!!t32), G24) : I26;
    }, G24.touchable = function(t32) {
      return arguments.length ? (M26 = "function" == typeof t32 ? t32 : o15(!!t32), G24) : M26;
    }, G24.handleSize = function(t32) {
      return arguments.length ? (D24 = +t32, G24) : D24;
    }, G24.keyModifiers = function(t32) {
      return arguments.length ? (S25 = !!t32, G24) : S25;
    }, G24.on = function() {
      var t32 = j26.on.apply(j26, arguments);
      return t32 === j26 ? G24 : t32;
    }, G24;
  }

  // https://cdn.jsdelivr.net/npm/d3-path@3.1.0/+esm
  var t16 = Math.PI;
  var i14 = 2 * t16;
  var h18 = 1e-6;
  var s13 = i14 - h18;
  function _12(t32) {
    this._ += t32[0];
    for (let i29 = 1, h35 = t32.length; i29 < h35; ++i29)
      this._ += arguments[i29] + t32[i29];
  }
  var e10 = class {
    constructor(t32) {
      this._x0 = this._y0 = this._x1 = this._y1 = null, this._ = "", this._append = null == t32 ? _12 : function(t33) {
        let i29 = Math.floor(t33);
        if (!(i29 >= 0))
          throw new Error(`invalid digits: ${t33}`);
        if (i29 > 15)
          return _12;
        const h35 = 10 ** i29;
        return function(t34) {
          this._ += t34[0];
          for (let i30 = 1, s29 = t34.length; i30 < s29; ++i30)
            this._ += Math.round(arguments[i30] * h35) / h35 + t34[i30];
        };
      }(t32);
    }
    moveTo(t32, i29) {
      this._append`M${this._x0 = this._x1 = +t32},${this._y0 = this._y1 = +i29}`;
    }
    closePath() {
      null !== this._x1 && (this._x1 = this._x0, this._y1 = this._y0, this._append`Z`);
    }
    lineTo(t32, i29) {
      this._append`L${this._x1 = +t32},${this._y1 = +i29}`;
    }
    quadraticCurveTo(t32, i29, h35, s29) {
      this._append`Q${+t32},${+i29},${this._x1 = +h35},${this._y1 = +s29}`;
    }
    bezierCurveTo(t32, i29, h35, s29, _24, e26) {
      this._append`C${+t32},${+i29},${+h35},${+s29},${this._x1 = +_24},${this._y1 = +e26}`;
    }
    arcTo(i29, s29, _24, e26, n37) {
      if (i29 = +i29, s29 = +s29, _24 = +_24, e26 = +e26, (n37 = +n37) < 0)
        throw new Error(`negative radius: ${n37}`);
      let $26 = this._x1, a27 = this._y1, r91 = _24 - i29, o35 = e26 - s29, p24 = $26 - i29, l35 = a27 - s29, u30 = p24 * p24 + l35 * l35;
      if (null === this._x1)
        this._append`M${this._x1 = i29},${this._y1 = s29}`;
      else if (u30 > h18)
        if (Math.abs(l35 * r91 - o35 * p24) > h18 && n37) {
          let x22 = _24 - $26, d25 = e26 - a27, y24 = r91 * r91 + o35 * o35, M26 = x22 * x22 + d25 * d25, c30 = Math.sqrt(y24), f25 = Math.sqrt(u30), w26 = n37 * Math.tan((t16 - Math.acos((y24 + u30 - M26) / (2 * c30 * f25))) / 2), v31 = w26 / f25, g31 = w26 / c30;
          Math.abs(v31 - 1) > h18 && this._append`L${i29 + v31 * p24},${s29 + v31 * l35}`, this._append`A${n37},${n37},0,0,${+(l35 * x22 > p24 * d25)},${this._x1 = i29 + g31 * r91},${this._y1 = s29 + g31 * o35}`;
        } else
          this._append`L${this._x1 = i29},${this._y1 = s29}`;
      else
        ;
    }
    arc(_24, e26, n37, $26, a27, r91) {
      if (_24 = +_24, e26 = +e26, r91 = !!r91, (n37 = +n37) < 0)
        throw new Error(`negative radius: ${n37}`);
      let o35 = n37 * Math.cos($26), p24 = n37 * Math.sin($26), l35 = _24 + o35, u30 = e26 + p24, x22 = 1 ^ r91, d25 = r91 ? $26 - a27 : a27 - $26;
      null === this._x1 ? this._append`M${l35},${u30}` : (Math.abs(this._x1 - l35) > h18 || Math.abs(this._y1 - u30) > h18) && this._append`L${l35},${u30}`, n37 && (d25 < 0 && (d25 = d25 % i14 + i14), d25 > s13 ? this._append`A${n37},${n37},0,1,${x22},${_24 - o35},${e26 - p24}A${n37},${n37},0,1,${x22},${this._x1 = l35},${this._y1 = u30}` : d25 > h18 && this._append`A${n37},${n37},0,${+(d25 >= t16)},${x22},${this._x1 = _24 + n37 * Math.cos(a27)},${this._y1 = e26 + n37 * Math.sin(a27)}`);
    }
    rect(t32, i29, h35, s29) {
      this._append`M${this._x0 = this._x1 = +t32},${this._y0 = this._y1 = +i29}h${h35 = +h35}v${+s29}h${-h35}Z`;
    }
    toString() {
      return this._;
    }
  };
  function n24() {
    return new e10();
  }
  function $13(t32 = 3) {
    return new e10(+t32);
  }
  n24.prototype = e10.prototype;

  // https://cdn.jsdelivr.net/npm/d3-chord@3.0.1/+esm
  var u15 = Math.PI;
  var l17 = u15 / 2;
  var o16 = 2 * u15;
  var h19 = Array.prototype.slice;

  // https://cdn.jsdelivr.net/npm/d3-contour@4.0.2/+esm
  var u16 = Array.prototype.slice;

  // https://cdn.jsdelivr.net/npm/robust-predicates@3.0.2/+esm
  var t17 = 11102230246251565e-32;
  var r62 = (3 + 8 * t17) * t17;
  function u17(t32) {
    return new Float64Array(t32);
  }
  var b16 = u17(4);
  var h20 = u17(8);
  var M13 = u17(12);
  var l18 = u17(16);
  var p14 = u17(4);
  var A15 = u17(4);
  var F14 = u17(4);
  var g15 = u17(4);
  var j15 = u17(4);
  var k14 = u17(4);
  var m15 = u17(4);
  var q14 = u17(4);
  var v15 = u17(4);
  var z13 = u17(4);
  var B14 = u17(8);
  var C10 = u17(8);
  var D16 = u17(8);
  var E13 = u17(4);
  var G16 = u17(8);
  var H14 = u17(8);
  var I16 = u17(8);
  var J13 = u17(12);
  var K15 = u17(192);
  var L14 = u17(192);
  var U14 = u17(4);
  var V13 = u17(4);
  var W13 = u17(4);
  var X13 = u17(4);
  var Y13 = u17(4);
  var Z12 = u17(4);
  var $14 = u17(4);
  var _13 = u17(4);
  var tt9 = u17(8);
  var nt10 = u17(8);
  var rt9 = u17(8);
  var st9 = u17(8);
  var at9 = u17(8);
  var et8 = u17(8);
  var ot9 = u17(8);
  var ct9 = u17(8);
  var ut9 = u17(8);
  var ft8 = u17(4);
  var it10 = u17(4);
  var bt7 = u17(4);
  var ht9 = u17(8);
  var Mt7 = u17(16);
  var lt9 = u17(16);
  var pt8 = u17(16);
  var xt7 = u17(32);
  var dt6 = u17(32);
  var wt6 = u17(48);
  var yt8 = u17(64);
  var At7 = u17(1152);
  var Ft6 = u17(1152);
  var vt8 = u17(4);
  var zt6 = u17(4);
  var Bt5 = u17(4);
  var Ct6 = u17(4);
  var Dt7 = u17(4);
  var Et6 = u17(4);
  var Gt6 = u17(4);
  var Ht6 = u17(4);
  var It6 = u17(4);
  var Jt5 = u17(4);
  var Kt6 = u17(24);
  var Lt6 = u17(24);
  var Nt7 = u17(24);
  var Ot6 = u17(24);
  var Pt6 = u17(24);
  var Qt5 = u17(24);
  var Rt7 = u17(24);
  var St6 = u17(24);
  var Tt6 = u17(24);
  var Ut6 = u17(24);
  var Vt6 = u17(1152);
  var Wt6 = u17(1152);
  var Xt6 = u17(1152);
  var Yt6 = u17(1152);
  var Zt6 = u17(1152);
  var $t6 = u17(2304);
  var _t7 = u17(2304);
  var tn5 = u17(3456);
  var nn4 = u17(5760);
  var rn5 = u17(8);
  var sn5 = u17(8);
  var an5 = u17(8);
  var en5 = u17(16);
  var on5 = u17(24);
  var cn5 = u17(48);
  var un5 = u17(48);
  var fn4 = u17(96);
  var bn5 = u17(192);
  var hn5 = u17(384);
  var Mn4 = u17(384);
  var ln5 = u17(384);
  var pn5 = u17(768);
  var wn5 = u17(96);
  var yn4 = u17(96);
  var An5 = u17(96);
  var Fn4 = u17(1152);

  // https://cdn.jsdelivr.net/npm/delaunator@5.0.0/+esm
  var s14 = Math.pow(2, -52);
  var i15 = new Uint32Array(512);

  // https://cdn.jsdelivr.net/npm/d3-delaunay@6.0.4/+esm
  var l19 = 2 * Math.PI;

  // https://cdn.jsdelivr.net/npm/d3-dsv@3.0.1/+esm
  var r63 = {};
  var n25 = {};
  function t18(r91) {
    return new Function("d", "return {" + r91.map(function(r92, n37) {
      return JSON.stringify(r92) + ": d[" + n37 + '] || ""';
    }).join(",") + "}");
  }
  function e12(r91) {
    var n37 = /* @__PURE__ */ Object.create(null), t32 = [];
    return r91.forEach(function(r92) {
      for (var e26 in r92)
        e26 in n37 || t32.push(n37[e26] = e26);
    }), t32;
  }
  function o17(r91, n37) {
    var t32 = r91 + "", e26 = t32.length;
    return e26 < n37 ? new Array(n37 - e26 + 1).join(0) + t32 : t32;
  }
  function a13(r91) {
    var n37, t32 = r91.getUTCHours(), e26 = r91.getUTCMinutes(), a27 = r91.getUTCSeconds(), u30 = r91.getUTCMilliseconds();
    return isNaN(r91) ? "Invalid Date" : ((n37 = r91.getUTCFullYear()) < 0 ? "-" + o17(-n37, 6) : n37 > 9999 ? "+" + o17(n37, 6) : o17(n37, 4)) + "-" + o17(r91.getUTCMonth() + 1, 2) + "-" + o17(r91.getUTCDate(), 2) + (u30 ? "T" + o17(t32, 2) + ":" + o17(e26, 2) + ":" + o17(a27, 2) + "." + o17(u30, 3) + "Z" : a27 ? "T" + o17(t32, 2) + ":" + o17(e26, 2) + ":" + o17(a27, 2) + "Z" : e26 || t32 ? "T" + o17(t32, 2) + ":" + o17(e26, 2) + "Z" : "");
  }
  function u18(o35) {
    var u30 = new RegExp('["' + o35 + "\n\r]"), i29 = o35.charCodeAt(0);
    function f25(t32, e26) {
      var o36, a27 = [], u31 = t32.length, f26 = 0, c31 = 0, s30 = u31 <= 0, l36 = false;
      function d25() {
        if (s30)
          return n25;
        if (l36)
          return l36 = false, r63;
        var e27, o37, a28 = f26;
        if (34 === t32.charCodeAt(a28)) {
          for (; f26++ < u31 && 34 !== t32.charCodeAt(f26) || 34 === t32.charCodeAt(++f26); )
            ;
          return (e27 = f26) >= u31 ? s30 = true : 10 === (o37 = t32.charCodeAt(f26++)) ? l36 = true : 13 === o37 && (l36 = true, 10 === t32.charCodeAt(f26) && ++f26), t32.slice(a28 + 1, e27 - 1).replace(/""/g, '"');
        }
        for (; f26 < u31; ) {
          if (10 === (o37 = t32.charCodeAt(e27 = f26++)))
            l36 = true;
          else if (13 === o37)
            l36 = true, 10 === t32.charCodeAt(f26) && ++f26;
          else if (o37 !== i29)
            continue;
          return t32.slice(a28, e27);
        }
        return s30 = true, t32.slice(a28, u31);
      }
      for (10 === t32.charCodeAt(u31 - 1) && --u31, 13 === t32.charCodeAt(u31 - 1) && --u31; (o36 = d25()) !== n25; ) {
        for (var m27 = []; o36 !== r63 && o36 !== n25; )
          m27.push(o36), o36 = d25();
        e26 && null == (m27 = e26(m27, c31++)) || a27.push(m27);
      }
      return a27;
    }
    function c30(r91, n37) {
      return r91.map(function(r92) {
        return n37.map(function(n38) {
          return l35(r92[n38]);
        }).join(o35);
      });
    }
    function s29(r91) {
      return r91.map(l35).join(o35);
    }
    function l35(r91) {
      return null == r91 ? "" : r91 instanceof Date ? a13(r91) : u30.test(r91 += "") ? '"' + r91.replace(/"/g, '""') + '"' : r91;
    }
    return { parse: function(r91, n37) {
      var e26, o36, a27 = f25(r91, function(r92, a28) {
        if (e26)
          return e26(r92, a28 - 1);
        o36 = r92, e26 = n37 ? function(r93, n38) {
          var e27 = t18(r93);
          return function(t32, o37) {
            return n38(e27(t32), o37, r93);
          };
        }(r92, n37) : t18(r92);
      });
      return a27.columns = o36 || [], a27;
    }, parseRows: f25, format: function(r91, n37) {
      return null == n37 && (n37 = e12(r91)), [n37.map(l35).join(o35)].concat(c30(r91, n37)).join("\n");
    }, formatBody: function(r91, n37) {
      return null == n37 && (n37 = e12(r91)), c30(r91, n37).join("\n");
    }, formatRows: function(r91) {
      return r91.map(s29).join("\n");
    }, formatRow: s29, formatValue: l35 };
  }
  var i16 = u18(",");
  var f14 = i16.parse;
  var c16 = i16.parseRows;
  var s15 = i16.format;
  var l20 = i16.formatBody;
  var d13 = i16.formatRows;
  var m16 = i16.formatRow;
  var p15 = i16.formatValue;
  var h21 = u18("	");
  var C11 = h21.parse;
  var g16 = h21.parseRows;
  var v16 = h21.format;
  var w15 = h21.formatBody;
  var T13 = h21.formatRows;
  var A16 = h21.formatRow;
  var R14 = h21.formatValue;
  var N14 = (/* @__PURE__ */ new Date("2019-01-01T00:00")).getHours() || (/* @__PURE__ */ new Date("2019-07-01T00:00")).getHours();

  // https://cdn.jsdelivr.net/npm/d3-fetch@3.0.1/+esm
  function i17(t32) {
    if (!t32.ok)
      throw new Error(t32.status + " " + t32.statusText);
    return t32.text();
  }
  function s16(t32, n37) {
    return fetch(t32, n37).then(i17);
  }
  function a14(t32) {
    return function(n37, r91, e26) {
      return 2 === arguments.length && "function" == typeof r91 && (e26 = r91, r91 = void 0), s16(n37, r91).then(function(n38) {
        return t32(n38, e26);
      });
    };
  }
  var h22 = a14(f14);
  var l21 = a14(C11);
  function x15(t32) {
    return (n37, r91) => s16(n37, r91).then((n38) => new DOMParser().parseFromString(n38, t32));
  }
  var v17 = x15("application/xml");
  var d14 = x15("text/html");
  var g17 = x15("image/svg+xml");

  // https://cdn.jsdelivr.net/npm/d3-quadtree@3.0.1/+esm
  function t19(t32, i29, r91, n37) {
    if (isNaN(i29) || isNaN(r91))
      return t32;
    var e26, h35, s29, o35, a27, u30, l35, _24, f25, x22 = t32._root, c30 = { data: n37 }, y24 = t32._x0, v31 = t32._y0, d25 = t32._x1, p24 = t32._y1;
    if (!x22)
      return t32._root = c30, t32;
    for (; x22.length; )
      if ((u30 = i29 >= (h35 = (y24 + d25) / 2)) ? y24 = h35 : d25 = h35, (l35 = r91 >= (s29 = (v31 + p24) / 2)) ? v31 = s29 : p24 = s29, e26 = x22, !(x22 = x22[_24 = l35 << 1 | u30]))
        return e26[_24] = c30, t32;
    if (o35 = +t32._x.call(null, x22.data), a27 = +t32._y.call(null, x22.data), i29 === o35 && r91 === a27)
      return c30.next = x22, e26 ? e26[_24] = c30 : t32._root = c30, t32;
    do {
      e26 = e26 ? e26[_24] = new Array(4) : t32._root = new Array(4), (u30 = i29 >= (h35 = (y24 + d25) / 2)) ? y24 = h35 : d25 = h35, (l35 = r91 >= (s29 = (v31 + p24) / 2)) ? v31 = s29 : p24 = s29;
    } while ((_24 = l35 << 1 | u30) == (f25 = (a27 >= s29) << 1 | o35 >= h35));
    return e26[f25] = x22, e26[_24] = c30, t32;
  }
  function i18(t32, i29, r91, n37, e26) {
    this.node = t32, this.x0 = i29, this.y0 = r91, this.x1 = n37, this.y1 = e26;
  }
  function r64(t32) {
    return t32[0];
  }
  function n26(t32) {
    return t32[1];
  }
  function e13(t32, i29, e26) {
    var s29 = new h23(null == i29 ? r64 : i29, null == e26 ? n26 : e26, NaN, NaN, NaN, NaN);
    return null == t32 ? s29 : s29.addAll(t32);
  }
  function h23(t32, i29, r91, n37, e26, h35) {
    this._x = t32, this._y = i29, this._x0 = r91, this._y0 = n37, this._x1 = e26, this._y1 = h35, this._root = void 0;
  }
  function s17(t32) {
    for (var i29 = { data: t32.data }, r91 = i29; t32 = t32.next; )
      r91 = r91.next = { data: t32.data };
    return i29;
  }
  var o18 = e13.prototype = h23.prototype;
  o18.copy = function() {
    var t32, i29, r91 = new h23(this._x, this._y, this._x0, this._y0, this._x1, this._y1), n37 = this._root;
    if (!n37)
      return r91;
    if (!n37.length)
      return r91._root = s17(n37), r91;
    for (t32 = [{ source: n37, target: r91._root = new Array(4) }]; n37 = t32.pop(); )
      for (var e26 = 0; e26 < 4; ++e26)
        (i29 = n37.source[e26]) && (i29.length ? t32.push({ source: i29, target: n37.target[e26] = new Array(4) }) : n37.target[e26] = s17(i29));
    return r91;
  }, o18.add = function(i29) {
    const r91 = +this._x.call(null, i29), n37 = +this._y.call(null, i29);
    return t19(this.cover(r91, n37), r91, n37, i29);
  }, o18.addAll = function(i29) {
    var r91, n37, e26, h35, s29 = i29.length, o35 = new Array(s29), a27 = new Array(s29), u30 = 1 / 0, l35 = 1 / 0, _24 = -1 / 0, f25 = -1 / 0;
    for (n37 = 0; n37 < s29; ++n37)
      isNaN(e26 = +this._x.call(null, r91 = i29[n37])) || isNaN(h35 = +this._y.call(null, r91)) || (o35[n37] = e26, a27[n37] = h35, e26 < u30 && (u30 = e26), e26 > _24 && (_24 = e26), h35 < l35 && (l35 = h35), h35 > f25 && (f25 = h35));
    if (u30 > _24 || l35 > f25)
      return this;
    for (this.cover(u30, l35).cover(_24, f25), n37 = 0; n37 < s29; ++n37)
      t19(this, o35[n37], a27[n37], i29[n37]);
    return this;
  }, o18.cover = function(t32, i29) {
    if (isNaN(t32 = +t32) || isNaN(i29 = +i29))
      return this;
    var r91 = this._x0, n37 = this._y0, e26 = this._x1, h35 = this._y1;
    if (isNaN(r91))
      e26 = (r91 = Math.floor(t32)) + 1, h35 = (n37 = Math.floor(i29)) + 1;
    else {
      for (var s29, o35, a27 = e26 - r91 || 1, u30 = this._root; r91 > t32 || t32 >= e26 || n37 > i29 || i29 >= h35; )
        switch (o35 = (i29 < n37) << 1 | t32 < r91, (s29 = new Array(4))[o35] = u30, u30 = s29, a27 *= 2, o35) {
          case 0:
            e26 = r91 + a27, h35 = n37 + a27;
            break;
          case 1:
            r91 = e26 - a27, h35 = n37 + a27;
            break;
          case 2:
            e26 = r91 + a27, n37 = h35 - a27;
            break;
          case 3:
            r91 = e26 - a27, n37 = h35 - a27;
        }
      this._root && this._root.length && (this._root = u30);
    }
    return this._x0 = r91, this._y0 = n37, this._x1 = e26, this._y1 = h35, this;
  }, o18.data = function() {
    var t32 = [];
    return this.visit(function(i29) {
      if (!i29.length)
        do {
          t32.push(i29.data);
        } while (i29 = i29.next);
    }), t32;
  }, o18.extent = function(t32) {
    return arguments.length ? this.cover(+t32[0][0], +t32[0][1]).cover(+t32[1][0], +t32[1][1]) : isNaN(this._x0) ? void 0 : [[this._x0, this._y0], [this._x1, this._y1]];
  }, o18.find = function(t32, r91, n37) {
    var e26, h35, s29, o35, a27, u30, l35, _24 = this._x0, f25 = this._y0, x22 = this._x1, c30 = this._y1, y24 = [], v31 = this._root;
    for (v31 && y24.push(new i18(v31, _24, f25, x22, c30)), null == n37 ? n37 = 1 / 0 : (_24 = t32 - n37, f25 = r91 - n37, x22 = t32 + n37, c30 = r91 + n37, n37 *= n37); u30 = y24.pop(); )
      if (!(!(v31 = u30.node) || (h35 = u30.x0) > x22 || (s29 = u30.y0) > c30 || (o35 = u30.x1) < _24 || (a27 = u30.y1) < f25))
        if (v31.length) {
          var d25 = (h35 + o35) / 2, p24 = (s29 + a27) / 2;
          y24.push(new i18(v31[3], d25, p24, o35, a27), new i18(v31[2], h35, p24, d25, a27), new i18(v31[1], d25, s29, o35, p24), new i18(v31[0], h35, s29, d25, p24)), (l35 = (r91 >= p24) << 1 | t32 >= d25) && (u30 = y24[y24.length - 1], y24[y24.length - 1] = y24[y24.length - 1 - l35], y24[y24.length - 1 - l35] = u30);
        } else {
          var w26 = t32 - +this._x.call(null, v31.data), N28 = r91 - +this._y.call(null, v31.data), g31 = w26 * w26 + N28 * N28;
          if (g31 < n37) {
            var A27 = Math.sqrt(n37 = g31);
            _24 = t32 - A27, f25 = r91 - A27, x22 = t32 + A27, c30 = r91 + A27, e26 = v31.data;
          }
        }
    return e26;
  }, o18.remove = function(t32) {
    if (isNaN(h35 = +this._x.call(null, t32)) || isNaN(s29 = +this._y.call(null, t32)))
      return this;
    var i29, r91, n37, e26, h35, s29, o35, a27, u30, l35, _24, f25, x22 = this._root, c30 = this._x0, y24 = this._y0, v31 = this._x1, d25 = this._y1;
    if (!x22)
      return this;
    if (x22.length)
      for (; ; ) {
        if ((u30 = h35 >= (o35 = (c30 + v31) / 2)) ? c30 = o35 : v31 = o35, (l35 = s29 >= (a27 = (y24 + d25) / 2)) ? y24 = a27 : d25 = a27, i29 = x22, !(x22 = x22[_24 = l35 << 1 | u30]))
          return this;
        if (!x22.length)
          break;
        (i29[_24 + 1 & 3] || i29[_24 + 2 & 3] || i29[_24 + 3 & 3]) && (r91 = i29, f25 = _24);
      }
    for (; x22.data !== t32; )
      if (n37 = x22, !(x22 = x22.next))
        return this;
    return (e26 = x22.next) && delete x22.next, n37 ? (e26 ? n37.next = e26 : delete n37.next, this) : i29 ? (e26 ? i29[_24] = e26 : delete i29[_24], (x22 = i29[0] || i29[1] || i29[2] || i29[3]) && x22 === (i29[3] || i29[2] || i29[1] || i29[0]) && !x22.length && (r91 ? r91[f25] = x22 : this._root = x22), this) : (this._root = e26, this);
  }, o18.removeAll = function(t32) {
    for (var i29 = 0, r91 = t32.length; i29 < r91; ++i29)
      this.remove(t32[i29]);
    return this;
  }, o18.root = function() {
    return this._root;
  }, o18.size = function() {
    var t32 = 0;
    return this.visit(function(i29) {
      if (!i29.length)
        do {
          ++t32;
        } while (i29 = i29.next);
    }), t32;
  }, o18.visit = function(t32) {
    var r91, n37, e26, h35, s29, o35, a27 = [], u30 = this._root;
    for (u30 && a27.push(new i18(u30, this._x0, this._y0, this._x1, this._y1)); r91 = a27.pop(); )
      if (!t32(u30 = r91.node, e26 = r91.x0, h35 = r91.y0, s29 = r91.x1, o35 = r91.y1) && u30.length) {
        var l35 = (e26 + s29) / 2, _24 = (h35 + o35) / 2;
        (n37 = u30[3]) && a27.push(new i18(n37, l35, _24, s29, o35)), (n37 = u30[2]) && a27.push(new i18(n37, e26, _24, l35, o35)), (n37 = u30[1]) && a27.push(new i18(n37, l35, h35, s29, _24)), (n37 = u30[0]) && a27.push(new i18(n37, e26, h35, l35, _24));
      }
    return this;
  }, o18.visitAfter = function(t32) {
    var r91, n37 = [], e26 = [];
    for (this._root && n37.push(new i18(this._root, this._x0, this._y0, this._x1, this._y1)); r91 = n37.pop(); ) {
      var h35 = r91.node;
      if (h35.length) {
        var s29, o35 = r91.x0, a27 = r91.y0, u30 = r91.x1, l35 = r91.y1, _24 = (o35 + u30) / 2, f25 = (a27 + l35) / 2;
        (s29 = h35[0]) && n37.push(new i18(s29, o35, a27, _24, f25)), (s29 = h35[1]) && n37.push(new i18(s29, _24, a27, u30, f25)), (s29 = h35[2]) && n37.push(new i18(s29, o35, f25, _24, l35)), (s29 = h35[3]) && n37.push(new i18(s29, _24, f25, u30, l35));
      }
      e26.push(r91);
    }
    for (; r91 = e26.pop(); )
      t32(r91.node, r91.x0, r91.y0, r91.x1, r91.y1);
    return this;
  }, o18.x = function(t32) {
    return arguments.length ? (this._x = t32, this) : this._x;
  }, o18.y = function(t32) {
    return arguments.length ? (this._y = t32, this) : this._y;
  };

  // https://cdn.jsdelivr.net/npm/d3-force@3.0.0/+esm
  var d15 = Math.PI * (3 - Math.sqrt(5));

  // https://cdn.jsdelivr.net/npm/d3-format@3.1.0/+esm
  function t20(t32, i29) {
    if ((n37 = (t32 = i29 ? t32.toExponential(i29 - 1) : t32.toExponential()).indexOf("e")) < 0)
      return null;
    var n37, r91 = t32.slice(0, n37);
    return [r91.length > 1 ? r91[0] + r91.slice(2) : r91, +t32.slice(n37 + 1)];
  }
  function i19(i29) {
    return (i29 = t20(Math.abs(i29))) ? i29[1] : NaN;
  }
  var n27;
  var r65 = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
  function e14(t32) {
    if (!(i29 = r65.exec(t32)))
      throw new Error("invalid format: " + t32);
    var i29;
    return new o19({ fill: i29[1], align: i29[2], sign: i29[3], symbol: i29[4], zero: i29[5], width: i29[6], comma: i29[7], precision: i29[8] && i29[8].slice(1), trim: i29[9], type: i29[10] });
  }
  function o19(t32) {
    this.fill = void 0 === t32.fill ? " " : t32.fill + "", this.align = void 0 === t32.align ? ">" : t32.align + "", this.sign = void 0 === t32.sign ? "-" : t32.sign + "", this.symbol = void 0 === t32.symbol ? "" : t32.symbol + "", this.zero = !!t32.zero, this.width = void 0 === t32.width ? void 0 : +t32.width, this.comma = !!t32.comma, this.precision = void 0 === t32.precision ? void 0 : +t32.precision, this.trim = !!t32.trim, this.type = void 0 === t32.type ? "" : t32.type + "";
  }
  function a15(i29, n37) {
    var r91 = t20(i29, n37);
    if (!r91)
      return i29 + "";
    var e26 = r91[0], o35 = r91[1];
    return o35 < 0 ? "0." + new Array(-o35).join("0") + e26 : e26.length > o35 + 1 ? e26.slice(0, o35 + 1) + "." + e26.slice(o35 + 1) : e26 + new Array(o35 - e26.length + 2).join("0");
  }
  e14.prototype = o19.prototype, o19.prototype.toString = function() {
    return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (void 0 === this.width ? "" : Math.max(1, 0 | this.width)) + (this.comma ? "," : "") + (void 0 === this.precision ? "" : "." + Math.max(0, 0 | this.precision)) + (this.trim ? "~" : "") + this.type;
  };
  var s18 = { "%": (t32, i29) => (100 * t32).toFixed(i29), b: (t32) => Math.round(t32).toString(2), c: (t32) => t32 + "", d: function(t32) {
    return Math.abs(t32 = Math.round(t32)) >= 1e21 ? t32.toLocaleString("en").replace(/,/g, "") : t32.toString(10);
  }, e: (t32, i29) => t32.toExponential(i29), f: (t32, i29) => t32.toFixed(i29), g: (t32, i29) => t32.toPrecision(i29), o: (t32) => Math.round(t32).toString(8), p: (t32, i29) => a15(100 * t32, i29), r: a15, s: function(i29, r91) {
    var e26 = t20(i29, r91);
    if (!e26)
      return i29 + "";
    var o35 = e26[0], a27 = e26[1], s29 = a27 - (n27 = 3 * Math.max(-8, Math.min(8, Math.floor(a27 / 3)))) + 1, h35 = o35.length;
    return s29 === h35 ? o35 : s29 > h35 ? o35 + new Array(s29 - h35 + 1).join("0") : s29 > 0 ? o35.slice(0, s29) + "." + o35.slice(s29) : "0." + new Array(1 - s29).join("0") + t20(i29, Math.max(0, r91 + s29 - 1))[0];
  }, X: (t32) => Math.round(t32).toString(16).toUpperCase(), x: (t32) => Math.round(t32).toString(16) };
  function h24(t32) {
    return t32;
  }
  var c17;
  var l22;
  var u19;
  var f15 = Array.prototype.map;
  var m17 = ["y", "z", "a", "f", "p", "n", "\xB5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
  function d16(t32) {
    var r91, o35, a27 = void 0 === t32.grouping || void 0 === t32.thousands ? h24 : (r91 = f15.call(t32.grouping, Number), o35 = t32.thousands + "", function(t33, i29) {
      for (var n37 = t33.length, e26 = [], a28 = 0, s29 = r91[0], h35 = 0; n37 > 0 && s29 > 0 && (h35 + s29 + 1 > i29 && (s29 = Math.max(1, i29 - h35)), e26.push(t33.substring(n37 -= s29, n37 + s29)), !((h35 += s29 + 1) > i29)); )
        s29 = r91[a28 = (a28 + 1) % r91.length];
      return e26.reverse().join(o35);
    }), c30 = void 0 === t32.currency ? "" : t32.currency[0] + "", l35 = void 0 === t32.currency ? "" : t32.currency[1] + "", u30 = void 0 === t32.decimal ? "." : t32.decimal + "", d25 = void 0 === t32.numerals ? h24 : /* @__PURE__ */ function(t33) {
      return function(i29) {
        return i29.replace(/[0-9]/g, function(i30) {
          return t33[+i30];
        });
      };
    }(f15.call(t32.numerals, String)), g31 = void 0 === t32.percent ? "%" : t32.percent + "", p24 = void 0 === t32.minus ? "\u2212" : t32.minus + "", v31 = void 0 === t32.nan ? "NaN" : t32.nan + "";
    function M26(t33) {
      var i29 = (t33 = e14(t33)).fill, r92 = t33.align, o36 = t33.sign, h35 = t33.symbol, f25 = t33.zero, M27 = t33.width, y24 = t33.comma, x22 = t33.precision, b28 = t33.trim, w26 = t33.type;
      "n" === w26 ? (y24 = true, w26 = "g") : s18[w26] || (void 0 === x22 && (x22 = 12), b28 = true, w26 = "g"), (f25 || "0" === i29 && "=" === r92) && (f25 = true, i29 = "0", r92 = "=");
      var S25 = "$" === h35 ? c30 : "#" === h35 && /[boxX]/.test(w26) ? "0" + w26.toLowerCase() : "", k24 = "$" === h35 ? l35 : /[%p]/.test(w26) ? g31 : "", z26 = s18[w26], A27 = /[defgprs%]/.test(w26);
      function N28(t34) {
        var e26, s29, h36, c31 = S25, l36 = k24;
        if ("c" === w26)
          l36 = z26(t34) + l36, t34 = "";
        else {
          var g32 = (t34 = +t34) < 0 || 1 / t34 < 0;
          if (t34 = isNaN(t34) ? v31 : z26(Math.abs(t34), x22), b28 && (t34 = function(t35) {
            t:
              for (var i30, n37 = t35.length, r93 = 1, e27 = -1; r93 < n37; ++r93)
                switch (t35[r93]) {
                  case ".":
                    e27 = i30 = r93;
                    break;
                  case "0":
                    0 === e27 && (e27 = r93), i30 = r93;
                    break;
                  default:
                    if (!+t35[r93])
                      break t;
                    e27 > 0 && (e27 = 0);
                }
            return e27 > 0 ? t35.slice(0, e27) + t35.slice(i30 + 1) : t35;
          }(t34)), g32 && 0 == +t34 && "+" !== o36 && (g32 = false), c31 = (g32 ? "(" === o36 ? o36 : p24 : "-" === o36 || "(" === o36 ? "" : o36) + c31, l36 = ("s" === w26 ? m17[8 + n27 / 3] : "") + l36 + (g32 && "(" === o36 ? ")" : ""), A27) {
            for (e26 = -1, s29 = t34.length; ++e26 < s29; )
              if (48 > (h36 = t34.charCodeAt(e26)) || h36 > 57) {
                l36 = (46 === h36 ? u30 + t34.slice(e26 + 1) : t34.slice(e26)) + l36, t34 = t34.slice(0, e26);
                break;
              }
          }
        }
        y24 && !f25 && (t34 = a27(t34, 1 / 0));
        var N29 = c31.length + t34.length + l36.length, j26 = N29 < M27 ? new Array(M27 - N29 + 1).join(i29) : "";
        switch (y24 && f25 && (t34 = a27(j26 + t34, j26.length ? M27 - l36.length : 1 / 0), j26 = ""), r92) {
          case "<":
            t34 = c31 + t34 + l36 + j26;
            break;
          case "=":
            t34 = c31 + j26 + t34 + l36;
            break;
          case "^":
            t34 = j26.slice(0, N29 = j26.length >> 1) + c31 + t34 + l36 + j26.slice(N29);
            break;
          default:
            t34 = j26 + c31 + t34 + l36;
        }
        return d25(t34);
      }
      return x22 = void 0 === x22 ? 6 : /[gprs]/.test(w26) ? Math.max(1, Math.min(21, x22)) : Math.max(0, Math.min(20, x22)), N28.toString = function() {
        return t33 + "";
      }, N28;
    }
    return { format: M26, formatPrefix: function(t33, n37) {
      var r92 = M26(((t33 = e14(t33)).type = "f", t33)), o36 = 3 * Math.max(-8, Math.min(8, Math.floor(i19(n37) / 3))), a28 = Math.pow(10, -o36), s29 = m17[8 + o36 / 3];
      return function(t34) {
        return r92(a28 * t34) + s29;
      };
    } };
  }
  function g18(t32) {
    return c17 = d16(t32), l22 = c17.format, u19 = c17.formatPrefix, c17;
  }
  function p16(t32) {
    return Math.max(0, -i19(Math.abs(t32)));
  }
  function v18(t32, n37) {
    return Math.max(0, 3 * Math.max(-8, Math.min(8, Math.floor(i19(n37) / 3))) - i19(Math.abs(t32)));
  }
  function M14(t32, n37) {
    return t32 = Math.abs(t32), n37 = Math.abs(n37) - t32, Math.max(0, i19(n37) - i19(t32)) + 1;
  }
  g18({ thousands: ",", grouping: [3], currency: ["$", ""] });

  // https://cdn.jsdelivr.net/npm/d3-geo@3.1.1/+esm
  var i20 = 1e-6;
  var e15 = 1e-12;
  var o20 = Math.PI;
  var u20 = o20 / 2;
  var a16 = o20 / 4;
  var c18 = 2 * o20;
  var l23 = 180 / o20;
  var f16 = o20 / 180;
  var s19 = Math.abs;
  var p17 = Math.atan;
  var h25 = Math.atan2;
  var g19 = Math.cos;
  var d17 = Math.exp;
  var y16 = Math.log;
  var S14 = Math.pow;
  var m18 = Math.sin;
  var M15 = Math.sign || function(n37) {
    return n37 > 0 ? 1 : n37 < 0 ? -1 : 0;
  };
  var w16 = Math.sqrt;
  var x16 = Math.tan;
  function _14(n37) {
    return n37 > 1 ? 0 : n37 < -1 ? o20 : Math.acos(n37);
  }
  function N15(n37) {
    return n37 > 1 ? u20 : n37 < -1 ? -u20 : Math.asin(n37);
  }
  function C12() {
  }
  function P15(n37, t32) {
    n37 && $15.hasOwnProperty(n37.type) && $15[n37.type](n37, t32);
  }
  var A17 = { Feature: function(n37, t32) {
    P15(n37.geometry, t32);
  }, FeatureCollection: function(n37, t32) {
    for (var r91 = n37.features, i29 = -1, e26 = r91.length; ++i29 < e26; )
      P15(r91[i29].geometry, t32);
  } };
  var $15 = { Sphere: function(n37, t32) {
    t32.sphere();
  }, Point: function(n37, t32) {
    n37 = n37.coordinates, t32.point(n37[0], n37[1], n37[2]);
  }, MultiPoint: function(n37, t32) {
    for (var r91 = n37.coordinates, i29 = -1, e26 = r91.length; ++i29 < e26; )
      n37 = r91[i29], t32.point(n37[0], n37[1], n37[2]);
  }, LineString: function(n37, t32) {
    q15(n37.coordinates, t32, 0);
  }, MultiLineString: function(n37, t32) {
    for (var r91 = n37.coordinates, i29 = -1, e26 = r91.length; ++i29 < e26; )
      q15(r91[i29], t32, 0);
  }, Polygon: function(n37, t32) {
    z14(n37.coordinates, t32);
  }, MultiPolygon: function(n37, t32) {
    for (var r91 = n37.coordinates, i29 = -1, e26 = r91.length; ++i29 < e26; )
      z14(r91[i29], t32);
  }, GeometryCollection: function(n37, t32) {
    for (var r91 = n37.geometries, i29 = -1, e26 = r91.length; ++i29 < e26; )
      P15(r91[i29], t32);
  } };
  function q15(n37, t32, r91) {
    var i29, e26 = -1, o35 = n37.length - r91;
    for (t32.lineStart(); ++e26 < o35; )
      i29 = n37[e26], t32.point(i29[0], i29[1], i29[2]);
    t32.lineEnd();
  }
  function z14(n37, t32) {
    var r91 = -1, i29 = n37.length;
    for (t32.polygonStart(); ++r91 < i29; )
      q15(n37[r91], t32, 1);
    t32.polygonEnd();
  }
  function j16(n37, t32) {
    n37 && A17.hasOwnProperty(n37.type) ? A17[n37.type](n37, t32) : P15(n37, t32);
  }
  var J14 = new F8();
  var K16 = new F8();
  function on6(n37) {
    return [h25(n37[1], n37[0]), N15(n37[2])];
  }
  function un6(n37) {
    var t32 = n37[0], r91 = n37[1], i29 = g19(r91);
    return [i29 * g19(t32), i29 * m18(t32), m18(r91)];
  }
  function an6(n37, t32) {
    return n37[0] * t32[0] + n37[1] * t32[1] + n37[2] * t32[2];
  }
  function cn6(n37, t32) {
    return [n37[1] * t32[2] - n37[2] * t32[1], n37[2] * t32[0] - n37[0] * t32[2], n37[0] * t32[1] - n37[1] * t32[0]];
  }
  function ln6(n37, t32) {
    n37[0] += t32[0], n37[1] += t32[1], n37[2] += t32[2];
  }
  function fn5(n37, t32) {
    return [n37[0] * t32, n37[1] * t32, n37[2] * t32];
  }
  function sn6(n37) {
    var t32 = w16(n37[0] * n37[0] + n37[1] * n37[1] + n37[2] * n37[2]);
    n37[0] /= t32, n37[1] /= t32, n37[2] /= t32;
  }
  function Vn4(n37, t32) {
    function r91(r92, i29) {
      return r92 = n37(r92, i29), t32(r92[0], r92[1]);
    }
    return n37.invert && t32.invert && (r91.invert = function(r92, i29) {
      return (r92 = t32.invert(r92, i29)) && n37.invert(r92[0], r92[1]);
    }), r91;
  }
  function nt11(n37, t32) {
    return s19(n37) > o20 && (n37 -= Math.round(n37 / c18) * c18), [n37, t32];
  }
  function tt10(n37, t32, r91) {
    return (n37 %= c18) ? t32 || r91 ? Vn4(it11(n37), et9(t32, r91)) : it11(n37) : t32 || r91 ? et9(t32, r91) : nt11;
  }
  function rt10(n37) {
    return function(t32, r91) {
      return s19(t32 += n37) > o20 && (t32 -= Math.round(t32 / c18) * c18), [t32, r91];
    };
  }
  function it11(n37) {
    var t32 = rt10(n37);
    return t32.invert = rt10(-n37), t32;
  }
  function et9(n37, t32) {
    var r91 = g19(n37), i29 = m18(n37), e26 = g19(t32), o35 = m18(t32);
    function u30(n38, t33) {
      var u31 = g19(t33), a27 = g19(n38) * u31, c30 = m18(n38) * u31, l35 = m18(t33), f25 = l35 * r91 + a27 * i29;
      return [h25(c30 * e26 - f25 * o35, a27 * r91 - l35 * i29), N15(f25 * e26 + c30 * o35)];
    }
    return u30.invert = function(n38, t33) {
      var u31 = g19(t33), a27 = g19(n38) * u31, c30 = m18(n38) * u31, l35 = m18(t33), f25 = l35 * e26 - c30 * o35;
      return [h25(c30 * e26 + l35 * o35, a27 * r91 + f25 * i29), N15(f25 * r91 - a27 * i29)];
    }, u30;
  }
  function ot10(n37) {
    function t32(t33) {
      return (t33 = n37(t33[0] * f16, t33[1] * f16))[0] *= l23, t33[1] *= l23, t33;
    }
    return n37 = tt10(n37[0] * f16, n37[1] * f16, n37.length > 2 ? n37[2] * f16 : 0), t32.invert = function(t33) {
      return (t33 = n37.invert(t33[0] * f16, t33[1] * f16))[0] *= l23, t33[1] *= l23, t33;
    }, t32;
  }
  function ut10(n37, t32, r91, i29, e26, o35) {
    if (r91) {
      var u30 = g19(t32), a27 = m18(t32), l35 = i29 * r91;
      null == e26 ? (e26 = t32 + i29 * c18, o35 = t32 - l35 / 2) : (e26 = at10(u30, e26), o35 = at10(u30, o35), (i29 > 0 ? e26 < o35 : e26 > o35) && (e26 += i29 * c18));
      for (var f25, s29 = e26; i29 > 0 ? s29 > o35 : s29 < o35; s29 -= l35)
        f25 = on6([u30, -a27 * g19(s29), -a27 * m18(s29)]), n37.point(f25[0], f25[1]);
    }
  }
  function at10(n37, t32) {
    (t32 = un6(t32))[0] -= n37, sn6(t32);
    var r91 = _14(-t32[1]);
    return ((-t32[2] < 0 ? -r91 : r91) + c18 - i20) % c18;
  }
  function lt10() {
    var n37, t32 = [];
    return { point: function(t33, r91, i29) {
      n37.push([t33, r91, i29]);
    }, lineStart: function() {
      t32.push(n37 = []);
    }, lineEnd: C12, rejoin: function() {
      t32.length > 1 && t32.push(t32.pop().concat(t32.shift()));
    }, result: function() {
      var r91 = t32;
      return t32 = [], n37 = null, r91;
    } };
  }
  function ft9(n37, t32) {
    return s19(n37[0] - t32[0]) < i20 && s19(n37[1] - t32[1]) < i20;
  }
  function st10(n37, t32, r91, i29) {
    this.x = n37, this.z = t32, this.o = r91, this.e = i29, this.v = false, this.n = this.p = null;
  }
  function pt9(n37, t32, r91, e26, o35) {
    var u30, a27, c30 = [], l35 = [];
    if (n37.forEach(function(n38) {
      if (!((t33 = n38.length - 1) <= 0)) {
        var t33, r92, e27 = n38[0], a28 = n38[t33];
        if (ft9(e27, a28)) {
          if (!e27[2] && !a28[2]) {
            for (o35.lineStart(), u30 = 0; u30 < t33; ++u30)
              o35.point((e27 = n38[u30])[0], e27[1]);
            return void o35.lineEnd();
          }
          a28[0] += 2 * i20;
        }
        c30.push(r92 = new st10(e27, n38, null, true)), l35.push(r92.o = new st10(e27, null, r92, false)), c30.push(r92 = new st10(a28, n38, null, false)), l35.push(r92.o = new st10(a28, null, r92, true));
      }
    }), c30.length) {
      for (l35.sort(t32), ht10(c30), ht10(l35), u30 = 0, a27 = l35.length; u30 < a27; ++u30)
        l35[u30].e = r91 = !r91;
      for (var f25, s29, p24 = c30[0]; ; ) {
        for (var h35 = p24, g31 = true; h35.v; )
          if ((h35 = h35.n) === p24)
            return;
        f25 = h35.z, o35.lineStart();
        do {
          if (h35.v = h35.o.v = true, h35.e) {
            if (g31)
              for (u30 = 0, a27 = f25.length; u30 < a27; ++u30)
                o35.point((s29 = f25[u30])[0], s29[1]);
            else
              e26(h35.x, h35.n.x, 1, o35);
            h35 = h35.n;
          } else {
            if (g31)
              for (f25 = h35.p.z, u30 = f25.length - 1; u30 >= 0; --u30)
                o35.point((s29 = f25[u30])[0], s29[1]);
            else
              e26(h35.x, h35.p.x, -1, o35);
            h35 = h35.p;
          }
          f25 = (h35 = h35.o).z, g31 = !g31;
        } while (!h35.v);
        o35.lineEnd();
      }
    }
  }
  function ht10(n37) {
    if (t32 = n37.length) {
      for (var t32, r91, i29 = 0, e26 = n37[0]; ++i29 < t32; )
        e26.n = r91 = n37[i29], r91.p = e26, e26 = r91;
      e26.n = r91 = n37[0], r91.p = e26;
    }
  }
  function gt8(n37) {
    return s19(n37[0]) <= o20 ? n37[0] : M15(n37[0]) * ((s19(n37[0]) + o20) % c18 - o20);
  }
  function vt9(t32, r91) {
    var l35 = gt8(r91), f25 = r91[1], s29 = m18(f25), p24 = [m18(l35), -g19(l35), 0], v31 = 0, d25 = 0, E24 = new F8();
    1 === s29 ? f25 = u20 + i20 : -1 === s29 && (f25 = -u20 - i20);
    for (var y24 = 0, S25 = t32.length; y24 < S25; ++y24)
      if (w26 = (M26 = t32[y24]).length)
        for (var M26, w26, x22 = M26[w26 - 1], _24 = gt8(x22), R25 = x22[1] / 2 + a16, C24 = m18(R25), P25 = g19(R25), A27 = 0; A27 < w26; ++A27, _24 = q25, C24 = j26, P25 = L25, x22 = $26) {
          var $26 = M26[A27], q25 = gt8($26), z26 = $26[1] / 2 + a16, j26 = m18(z26), L25 = g19(z26), b28 = q25 - _24, G24 = b28 >= 0 ? 1 : -1, O21 = G24 * b28, T23 = O21 > o20, k24 = C24 * j26;
          if (E24.add(h25(k24 * G24 * m18(O21), P25 * L25 + k24 * g19(O21))), v31 += T23 ? b28 + G24 * c18 : b28, T23 ^ _24 >= l35 ^ q25 >= l35) {
            var F26 = cn6(un6(x22), un6($26));
            sn6(F26);
            var H26 = cn6(p24, F26);
            sn6(H26);
            var I26 = (T23 ^ b28 >= 0 ? -1 : 1) * N15(H26[2]);
            (f25 > I26 || f25 === I26 && (F26[0] || F26[1])) && (d25 += T23 ^ b28 >= 0 ? 1 : -1);
          }
        }
    return (v31 < -i20 || v31 < i20 && E24 < -e15) ^ 1 & d25;
  }
  function dt7(n37, r91, i29, e26) {
    return function(o35) {
      var u30, a27, c30, l35 = r91(o35), f25 = lt10(), s29 = r91(f25), p24 = false, h35 = { point: g31, lineStart: d25, lineEnd: E24, polygonStart: function() {
        h35.point = y24, h35.lineStart = S25, h35.lineEnd = m27, a27 = [], u30 = [];
      }, polygonEnd: function() {
        h35.point = g31, h35.lineStart = d25, h35.lineEnd = E24, a27 = gt6(a27);
        var n38 = vt9(u30, e26);
        a27.length ? (p24 || (o35.polygonStart(), p24 = true), pt9(a27, yt9, n38, i29, o35)) : n38 && (p24 || (o35.polygonStart(), p24 = true), o35.lineStart(), i29(null, null, 1, o35), o35.lineEnd()), p24 && (o35.polygonEnd(), p24 = false), a27 = u30 = null;
      }, sphere: function() {
        o35.polygonStart(), o35.lineStart(), i29(null, null, 1, o35), o35.lineEnd(), o35.polygonEnd();
      } };
      function g31(t32, r92) {
        n37(t32, r92) && o35.point(t32, r92);
      }
      function v31(n38, t32) {
        l35.point(n38, t32);
      }
      function d25() {
        h35.point = v31, l35.lineStart();
      }
      function E24() {
        h35.point = g31, l35.lineEnd();
      }
      function y24(n38, t32) {
        c30.push([n38, t32]), s29.point(n38, t32);
      }
      function S25() {
        s29.lineStart(), c30 = [];
      }
      function m27() {
        y24(c30[0][0], c30[0][1]), s29.lineEnd();
        var n38, t32, r92, i30, e27 = s29.clean(), l36 = f25.result(), h36 = l36.length;
        if (c30.pop(), u30.push(c30), c30 = null, h36)
          if (1 & e27) {
            if ((t32 = (r92 = l36[0]).length - 1) > 0) {
              for (p24 || (o35.polygonStart(), p24 = true), o35.lineStart(), n38 = 0; n38 < t32; ++n38)
                o35.point((i30 = r92[n38])[0], i30[1]);
              o35.lineEnd();
            }
          } else
            h36 > 1 && 2 & e27 && l36.push(l36.pop().concat(l36.shift())), a27.push(l36.filter(Et7));
      }
      return h35;
    };
  }
  function Et7(n37) {
    return n37.length > 1;
  }
  function yt9(n37, t32) {
    return ((n37 = n37.x)[0] < 0 ? n37[1] - u20 - i20 : u20 - n37[1]) - ((t32 = t32.x)[0] < 0 ? t32[1] - u20 - i20 : u20 - t32[1]);
  }
  nt11.invert = nt11;
  var St7 = dt7(function() {
    return true;
  }, function(n37) {
    var t32, r91 = NaN, e26 = NaN, a27 = NaN;
    return { lineStart: function() {
      n37.lineStart(), t32 = 1;
    }, point: function(c30, l35) {
      var f25 = c30 > 0 ? o20 : -o20, h35 = s19(c30 - r91);
      s19(h35 - o20) < i20 ? (n37.point(r91, e26 = (e26 + l35) / 2 > 0 ? u20 : -u20), n37.point(a27, e26), n37.lineEnd(), n37.lineStart(), n37.point(f25, e26), n37.point(c30, e26), t32 = 0) : a27 !== f25 && h35 >= o20 && (s19(r91 - a27) < i20 && (r91 -= a27 * i20), s19(c30 - f25) < i20 && (c30 -= f25 * i20), e26 = function(n38, t33, r92, e27) {
        var o35, u30, a28 = m18(n38 - r92);
        return s19(a28) > i20 ? p17((m18(t33) * (u30 = g19(e27)) * m18(r92) - m18(e27) * (o35 = g19(t33)) * m18(n38)) / (o35 * u30 * a28)) : (t33 + e27) / 2;
      }(r91, e26, c30, l35), n37.point(a27, e26), n37.lineEnd(), n37.lineStart(), n37.point(f25, e26), t32 = 0), n37.point(r91 = c30, e26 = l35), a27 = f25;
    }, lineEnd: function() {
      n37.lineEnd(), r91 = e26 = NaN;
    }, clean: function() {
      return 2 - t32;
    } };
  }, function(n37, t32, r91, e26) {
    var a27;
    if (null == n37)
      a27 = r91 * u20, e26.point(-o20, a27), e26.point(0, a27), e26.point(o20, a27), e26.point(o20, 0), e26.point(o20, -a27), e26.point(0, -a27), e26.point(-o20, -a27), e26.point(-o20, 0), e26.point(-o20, a27);
    else if (s19(n37[0] - t32[0]) > i20) {
      var c30 = n37[0] < t32[0] ? o20 : -o20;
      a27 = r91 * c30 / 2, e26.point(-c30, a27), e26.point(0, a27), e26.point(c30, a27);
    } else
      e26.point(t32[0], t32[1]);
  }, [-o20, -u20]);
  function mt8(n37) {
    var t32 = g19(n37), r91 = 2 * f16, e26 = t32 > 0, u30 = s19(t32) > i20;
    function a27(n38, r92) {
      return g19(n38) * g19(r92) > t32;
    }
    function c30(n38, r92, e27) {
      var u31 = [1, 0, 0], a28 = cn6(un6(n38), un6(r92)), c31 = an6(a28, a28), l36 = a28[0], f25 = c31 - l36 * l36;
      if (!f25)
        return !e27 && n38;
      var p24 = t32 * c31 / f25, h35 = -t32 * l36 / f25, g31 = cn6(u31, a28), v31 = fn5(u31, p24);
      ln6(v31, fn5(a28, h35));
      var d25 = g31, E24 = an6(v31, d25), y24 = an6(d25, d25), S25 = E24 * E24 - y24 * (an6(v31, v31) - 1);
      if (!(S25 < 0)) {
        var m27 = w16(S25), M26 = fn5(d25, (-E24 - m27) / y24);
        if (ln6(M26, v31), M26 = on6(M26), !e27)
          return M26;
        var x22, _24 = n38[0], N28 = r92[0], R25 = n38[1], C24 = r92[1];
        N28 < _24 && (x22 = _24, _24 = N28, N28 = x22);
        var P25 = N28 - _24, A27 = s19(P25 - o20) < i20;
        if (!A27 && C24 < R25 && (x22 = R25, R25 = C24, C24 = x22), A27 || P25 < i20 ? A27 ? R25 + C24 > 0 ^ M26[1] < (s19(M26[0] - _24) < i20 ? R25 : C24) : R25 <= M26[1] && M26[1] <= C24 : P25 > o20 ^ (_24 <= M26[0] && M26[0] <= N28)) {
          var $26 = fn5(d25, (-E24 + m27) / y24);
          return ln6($26, v31), [M26, on6($26)];
        }
      }
    }
    function l35(t33, r92) {
      var i29 = e26 ? n37 : o20 - n37, u31 = 0;
      return t33 < -i29 ? u31 |= 1 : t33 > i29 && (u31 |= 2), r92 < -i29 ? u31 |= 4 : r92 > i29 && (u31 |= 8), u31;
    }
    return dt7(a27, function(n38) {
      var t33, r92, i29, f25, s29;
      return { lineStart: function() {
        f25 = i29 = false, s29 = 1;
      }, point: function(p24, h35) {
        var g31, v31 = [p24, h35], d25 = a27(p24, h35), E24 = e26 ? d25 ? 0 : l35(p24, h35) : d25 ? l35(p24 + (p24 < 0 ? o20 : -o20), h35) : 0;
        if (!t33 && (f25 = i29 = d25) && n38.lineStart(), d25 !== i29 && (!(g31 = c30(t33, v31)) || ft9(t33, g31) || ft9(v31, g31)) && (v31[2] = 1), d25 !== i29)
          s29 = 0, d25 ? (n38.lineStart(), g31 = c30(v31, t33), n38.point(g31[0], g31[1])) : (g31 = c30(t33, v31), n38.point(g31[0], g31[1], 2), n38.lineEnd()), t33 = g31;
        else if (u30 && t33 && e26 ^ d25) {
          var y24;
          E24 & r92 || !(y24 = c30(v31, t33, true)) || (s29 = 0, e26 ? (n38.lineStart(), n38.point(y24[0][0], y24[0][1]), n38.point(y24[1][0], y24[1][1]), n38.lineEnd()) : (n38.point(y24[1][0], y24[1][1]), n38.lineEnd(), n38.lineStart(), n38.point(y24[0][0], y24[0][1], 3)));
        }
        !d25 || t33 && ft9(t33, v31) || n38.point(v31[0], v31[1]), t33 = v31, i29 = d25, r92 = E24;
      }, lineEnd: function() {
        i29 && n38.lineEnd(), t33 = null;
      }, clean: function() {
        return s29 | (f25 && i29) << 1;
      } };
    }, function(t33, i29, e27, o35) {
      ut10(o35, n37, r91, e27, t33, i29);
    }, e26 ? [0, -n37] : [-o20, n37 - o20]);
  }
  var Nt8 = 1e9;
  var Rt8 = -Nt8;
  function Ct7(n37, r91, e26, o35) {
    function u30(t32, i29) {
      return n37 <= t32 && t32 <= e26 && r91 <= i29 && i29 <= o35;
    }
    function a27(t32, i29, u31, a28) {
      var l36 = 0, s29 = 0;
      if (null == t32 || (l36 = c30(t32, u31)) !== (s29 = c30(i29, u31)) || f25(t32, i29) < 0 ^ u31 > 0)
        do {
          a28.point(0 === l36 || 3 === l36 ? n37 : e26, l36 > 1 ? o35 : r91);
        } while ((l36 = (l36 + u31 + 4) % 4) !== s29);
      else
        a28.point(i29[0], i29[1]);
    }
    function c30(t32, o36) {
      return s19(t32[0] - n37) < i20 ? o36 > 0 ? 0 : 3 : s19(t32[0] - e26) < i20 ? o36 > 0 ? 2 : 1 : s19(t32[1] - r91) < i20 ? o36 > 0 ? 1 : 0 : o36 > 0 ? 3 : 2;
    }
    function l35(n38, t32) {
      return f25(n38.x, t32.x);
    }
    function f25(n38, t32) {
      var r92 = c30(n38, 1), i29 = c30(t32, 1);
      return r92 !== i29 ? r92 - i29 : 0 === r92 ? t32[1] - n38[1] : 1 === r92 ? n38[0] - t32[0] : 2 === r92 ? n38[1] - t32[1] : t32[0] - n38[0];
    }
    return function(i29) {
      var c31, f26, s29, p24, h35, g31, v31, d25, E24, y24, S25, m27 = i29, M26 = lt10(), w26 = { point: x22, lineStart: function() {
        w26.point = _24, f26 && f26.push(s29 = []);
        y24 = true, E24 = false, v31 = d25 = NaN;
      }, lineEnd: function() {
        c31 && (_24(p24, h35), g31 && E24 && M26.rejoin(), c31.push(M26.result()));
        w26.point = x22, E24 && m27.lineEnd();
      }, polygonStart: function() {
        m27 = M26, c31 = [], f26 = [], S25 = true;
      }, polygonEnd: function() {
        var r92 = function() {
          for (var t32 = 0, r93 = 0, i30 = f26.length; r93 < i30; ++r93)
            for (var e28, u32, a28 = f26[r93], c32 = 1, l36 = a28.length, s30 = a28[0], p25 = s30[0], h36 = s30[1]; c32 < l36; ++c32)
              e28 = p25, u32 = h36, p25 = (s30 = a28[c32])[0], h36 = s30[1], u32 <= o35 ? h36 > o35 && (p25 - e28) * (o35 - u32) > (h36 - u32) * (n37 - e28) && ++t32 : h36 <= o35 && (p25 - e28) * (o35 - u32) < (h36 - u32) * (n37 - e28) && --t32;
          return t32;
        }(), e27 = S25 && r92, u31 = (c31 = gt6(c31)).length;
        (e27 || u31) && (i29.polygonStart(), e27 && (i29.lineStart(), a27(null, null, 1, i29), i29.lineEnd()), u31 && pt9(c31, l35, r92, a27, i29), i29.polygonEnd());
        m27 = i29, c31 = f26 = s29 = null;
      } };
      function x22(n38, t32) {
        u30(n38, t32) && m27.point(n38, t32);
      }
      function _24(t32, i30) {
        var a28 = u30(t32, i30);
        if (f26 && s29.push([t32, i30]), y24)
          p24 = t32, h35 = i30, g31 = a28, y24 = false, a28 && (m27.lineStart(), m27.point(t32, i30));
        else if (a28 && E24)
          m27.point(t32, i30);
        else {
          var c32 = [v31 = Math.max(Rt8, Math.min(Nt8, v31)), d25 = Math.max(Rt8, Math.min(Nt8, d25))], l36 = [t32 = Math.max(Rt8, Math.min(Nt8, t32)), i30 = Math.max(Rt8, Math.min(Nt8, i30))];
          !function(n38, t33, r92, i31, e27, o36) {
            var u31, a29 = n38[0], c33 = n38[1], l37 = 0, f27 = 1, s30 = t33[0] - a29, p25 = t33[1] - c33;
            if (u31 = r92 - a29, s30 || !(u31 > 0)) {
              if (u31 /= s30, s30 < 0) {
                if (u31 < l37)
                  return;
                u31 < f27 && (f27 = u31);
              } else if (s30 > 0) {
                if (u31 > f27)
                  return;
                u31 > l37 && (l37 = u31);
              }
              if (u31 = e27 - a29, s30 || !(u31 < 0)) {
                if (u31 /= s30, s30 < 0) {
                  if (u31 > f27)
                    return;
                  u31 > l37 && (l37 = u31);
                } else if (s30 > 0) {
                  if (u31 < l37)
                    return;
                  u31 < f27 && (f27 = u31);
                }
                if (u31 = i31 - c33, p25 || !(u31 > 0)) {
                  if (u31 /= p25, p25 < 0) {
                    if (u31 < l37)
                      return;
                    u31 < f27 && (f27 = u31);
                  } else if (p25 > 0) {
                    if (u31 > f27)
                      return;
                    u31 > l37 && (l37 = u31);
                  }
                  if (u31 = o36 - c33, p25 || !(u31 < 0)) {
                    if (u31 /= p25, p25 < 0) {
                      if (u31 > f27)
                        return;
                      u31 > l37 && (l37 = u31);
                    } else if (p25 > 0) {
                      if (u31 < l37)
                        return;
                      u31 < f27 && (f27 = u31);
                    }
                    return l37 > 0 && (n38[0] = a29 + l37 * s30, n38[1] = c33 + l37 * p25), f27 < 1 && (t33[0] = a29 + f27 * s30, t33[1] = c33 + f27 * p25), true;
                  }
                }
              }
            }
          }(c32, l36, n37, r91, e26, o35) ? a28 && (m27.lineStart(), m27.point(t32, i30), S25 = false) : (E24 || (m27.lineStart(), m27.point(c32[0], c32[1])), m27.point(l36[0], l36[1]), a28 || m27.lineEnd(), S25 = false);
        }
        v31 = t32, d25 = i30, E24 = a28;
      }
      return w26;
    };
  }
  var Kt7;
  var Qt6;
  var Vt7;
  var nr5;
  var tr5 = (n37) => n37;
  var rr5 = new F8();
  var ir5 = new F8();
  var er5 = { point: C12, lineStart: C12, lineEnd: C12, polygonStart: function() {
    er5.lineStart = or5, er5.lineEnd = cr5;
  }, polygonEnd: function() {
    er5.lineStart = er5.lineEnd = er5.point = C12, rr5.add(s19(ir5)), ir5 = new F8();
  }, result: function() {
    var t32 = rr5 / 2;
    return rr5 = new F8(), t32;
  } };
  function or5() {
    er5.point = ur5;
  }
  function ur5(n37, t32) {
    er5.point = ar4, Kt7 = Vt7 = n37, Qt6 = nr5 = t32;
  }
  function ar4(n37, t32) {
    ir5.add(nr5 * n37 - Vt7 * t32), Vt7 = n37, nr5 = t32;
  }
  function cr5() {
    ar4(Kt7, Qt6);
  }
  var lr5 = 1 / 0;
  var fr5 = lr5;
  var sr4 = -lr5;
  var pr5 = sr4;
  var hr5 = { point: function(n37, t32) {
    n37 < lr5 && (lr5 = n37);
    n37 > sr4 && (sr4 = n37);
    t32 < fr5 && (fr5 = t32);
    t32 > pr5 && (pr5 = t32);
  }, lineStart: C12, lineEnd: C12, polygonStart: C12, polygonEnd: C12, result: function() {
    var n37 = [[lr5, fr5], [sr4, pr5]];
    return sr4 = pr5 = -(fr5 = lr5 = 1 / 0), n37;
  } };
  var gr5;
  var vr5;
  var dr4;
  var Er5;
  var yr4 = 0;
  var Sr5 = 0;
  var mr5 = 0;
  var Mr5 = 0;
  var wr5 = 0;
  var xr5 = 0;
  var _r4 = 0;
  var Nr5 = 0;
  var Rr4 = 0;
  var Cr5 = { point: Pr5, lineStart: Ar5, lineEnd: zr5, polygonStart: function() {
    Cr5.lineStart = jr5, Cr5.lineEnd = Lr5;
  }, polygonEnd: function() {
    Cr5.point = Pr5, Cr5.lineStart = Ar5, Cr5.lineEnd = zr5;
  }, result: function() {
    var n37 = Rr4 ? [_r4 / Rr4, Nr5 / Rr4] : xr5 ? [Mr5 / xr5, wr5 / xr5] : mr5 ? [yr4 / mr5, Sr5 / mr5] : [NaN, NaN];
    return yr4 = Sr5 = mr5 = Mr5 = wr5 = xr5 = _r4 = Nr5 = Rr4 = 0, n37;
  } };
  function Pr5(n37, t32) {
    yr4 += n37, Sr5 += t32, ++mr5;
  }
  function Ar5() {
    Cr5.point = $r4;
  }
  function $r4(n37, t32) {
    Cr5.point = qr5, Pr5(dr4 = n37, Er5 = t32);
  }
  function qr5(n37, t32) {
    var r91 = n37 - dr4, i29 = t32 - Er5, e26 = w16(r91 * r91 + i29 * i29);
    Mr5 += e26 * (dr4 + n37) / 2, wr5 += e26 * (Er5 + t32) / 2, xr5 += e26, Pr5(dr4 = n37, Er5 = t32);
  }
  function zr5() {
    Cr5.point = Pr5;
  }
  function jr5() {
    Cr5.point = br4;
  }
  function Lr5() {
    Gr5(gr5, vr5);
  }
  function br4(n37, t32) {
    Cr5.point = Gr5, Pr5(gr5 = dr4 = n37, vr5 = Er5 = t32);
  }
  function Gr5(n37, t32) {
    var r91 = n37 - dr4, i29 = t32 - Er5, e26 = w16(r91 * r91 + i29 * i29);
    Mr5 += e26 * (dr4 + n37) / 2, wr5 += e26 * (Er5 + t32) / 2, xr5 += e26, _r4 += (e26 = Er5 * n37 - dr4 * t32) * (dr4 + n37), Nr5 += e26 * (Er5 + t32), Rr4 += 3 * e26, Pr5(dr4 = n37, Er5 = t32);
  }
  function Or5(n37) {
    this._context = n37;
  }
  Or5.prototype = { _radius: 4.5, pointRadius: function(n37) {
    return this._radius = n37, this;
  }, polygonStart: function() {
    this._line = 0;
  }, polygonEnd: function() {
    this._line = NaN;
  }, lineStart: function() {
    this._point = 0;
  }, lineEnd: function() {
    0 === this._line && this._context.closePath(), this._point = NaN;
  }, point: function(n37, t32) {
    switch (this._point) {
      case 0:
        this._context.moveTo(n37, t32), this._point = 1;
        break;
      case 1:
        this._context.lineTo(n37, t32);
        break;
      default:
        this._context.moveTo(n37 + this._radius, t32), this._context.arc(n37, t32, this._radius, 0, c18);
    }
  }, result: C12 };
  var Tr5;
  var kr5;
  var Fr5;
  var Hr5;
  var Ir5;
  var Wr5 = new F8();
  var Xr5 = { point: C12, lineStart: function() {
    Xr5.point = Yr5;
  }, lineEnd: function() {
    Tr5 && Br5(kr5, Fr5), Xr5.point = C12;
  }, polygonStart: function() {
    Tr5 = true;
  }, polygonEnd: function() {
    Tr5 = null;
  }, result: function() {
    var t32 = +Wr5;
    return Wr5 = new F8(), t32;
  } };
  function Yr5(n37, t32) {
    Xr5.point = Br5, kr5 = Hr5 = n37, Fr5 = Ir5 = t32;
  }
  function Br5(n37, t32) {
    Hr5 -= n37, Ir5 -= t32, Wr5.add(w16(Hr5 * Hr5 + Ir5 * Ir5)), Hr5 = n37, Ir5 = t32;
  }
  var Dr4;
  var Ur5;
  var Zr4;
  var Jr5;
  var Kr5 = class {
    constructor(n37) {
      this._append = null == n37 ? Qr5 : function(n38) {
        const t32 = Math.floor(n38);
        if (!(t32 >= 0))
          throw new RangeError(`invalid digits: ${n38}`);
        if (t32 > 15)
          return Qr5;
        if (t32 !== Dr4) {
          const n39 = 10 ** t32;
          Dr4 = t32, Ur5 = function(t33) {
            let r91 = 1;
            this._ += t33[0];
            for (const i29 = t33.length; r91 < i29; ++r91)
              this._ += Math.round(arguments[r91] * n39) / n39 + t33[r91];
          };
        }
        return Ur5;
      }(n37), this._radius = 4.5, this._ = "";
    }
    pointRadius(n37) {
      return this._radius = +n37, this;
    }
    polygonStart() {
      this._line = 0;
    }
    polygonEnd() {
      this._line = NaN;
    }
    lineStart() {
      this._point = 0;
    }
    lineEnd() {
      0 === this._line && (this._ += "Z"), this._point = NaN;
    }
    point(n37, t32) {
      switch (this._point) {
        case 0:
          this._append`M${n37},${t32}`, this._point = 1;
          break;
        case 1:
          this._append`L${n37},${t32}`;
          break;
        default:
          if (this._append`M${n37},${t32}`, this._radius !== Zr4 || this._append !== Ur5) {
            const n38 = this._radius, t33 = this._;
            this._ = "", this._append`m0,${n38}a${n38},${n38} 0 1,1 0,${-2 * n38}a${n38},${n38} 0 1,1 0,${2 * n38}z`, Zr4 = n38, Ur5 = this._append, Jr5 = this._, this._ = t33;
          }
          this._ += Jr5;
      }
    }
    result() {
      const n37 = this._;
      return this._ = "", n37.length ? n37 : null;
    }
  };
  function Qr5(n37) {
    let t32 = 1;
    this._ += n37[0];
    for (const r91 = n37.length; t32 < r91; ++t32)
      this._ += arguments[t32] + n37[t32];
  }
  function Vr5(n37, t32) {
    let r91, i29, e26 = 3, o35 = 4.5;
    function u30(n38) {
      return n38 && ("function" == typeof o35 && i29.pointRadius(+o35.apply(this, arguments)), j16(n38, r91(i29))), i29.result();
    }
    return u30.area = function(n38) {
      return j16(n38, r91(er5)), er5.result();
    }, u30.measure = function(n38) {
      return j16(n38, r91(Xr5)), Xr5.result();
    }, u30.bounds = function(n38) {
      return j16(n38, r91(hr5)), hr5.result();
    }, u30.centroid = function(n38) {
      return j16(n38, r91(Cr5)), Cr5.result();
    }, u30.projection = function(t33) {
      return arguments.length ? (r91 = null == t33 ? (n37 = null, tr5) : (n37 = t33).stream, u30) : n37;
    }, u30.context = function(n38) {
      return arguments.length ? (i29 = null == n38 ? (t32 = null, new Kr5(e26)) : new Or5(t32 = n38), "function" != typeof o35 && i29.pointRadius(o35), u30) : t32;
    }, u30.pointRadius = function(n38) {
      return arguments.length ? (o35 = "function" == typeof n38 ? n38 : (i29.pointRadius(+n38), +n38), u30) : o35;
    }, u30.digits = function(n38) {
      if (!arguments.length)
        return e26;
      if (null == n38)
        e26 = null;
      else {
        const t33 = Math.floor(n38);
        if (!(t33 >= 0))
          throw new RangeError(`invalid digits: ${n38}`);
        e26 = t33;
      }
      return null === t32 && (i29 = new Kr5(e26)), u30;
    }, u30.projection(n37).digits(e26).context(t32);
  }
  function ni4(n37) {
    return { stream: ti4(n37) };
  }
  function ti4(n37) {
    return function(t32) {
      var r91 = new ri4();
      for (var i29 in n37)
        r91[i29] = n37[i29];
      return r91.stream = t32, r91;
    };
  }
  function ri4() {
  }
  function ii5(n37, t32, r91) {
    var i29 = n37.clipExtent && n37.clipExtent();
    return n37.scale(150).translate([0, 0]), null != i29 && n37.clipExtent(null), j16(r91, n37.stream(hr5)), t32(hr5.result()), null != i29 && n37.clipExtent(i29), n37;
  }
  function ei4(n37, t32, r91) {
    return ii5(n37, function(r92) {
      var i29 = t32[1][0] - t32[0][0], e26 = t32[1][1] - t32[0][1], o35 = Math.min(i29 / (r92[1][0] - r92[0][0]), e26 / (r92[1][1] - r92[0][1])), u30 = +t32[0][0] + (i29 - o35 * (r92[1][0] + r92[0][0])) / 2, a27 = +t32[0][1] + (e26 - o35 * (r92[1][1] + r92[0][1])) / 2;
      n37.scale(150 * o35).translate([u30, a27]);
    }, r91);
  }
  function oi4(n37, t32, r91) {
    return ei4(n37, [[0, 0], t32], r91);
  }
  function ui4(n37, t32, r91) {
    return ii5(n37, function(r92) {
      var i29 = +t32, e26 = i29 / (r92[1][0] - r92[0][0]), o35 = (i29 - e26 * (r92[1][0] + r92[0][0])) / 2, u30 = -e26 * r92[0][1];
      n37.scale(150 * e26).translate([o35, u30]);
    }, r91);
  }
  function ai4(n37, t32, r91) {
    return ii5(n37, function(r92) {
      var i29 = +t32, e26 = i29 / (r92[1][1] - r92[0][1]), o35 = -e26 * r92[0][0], u30 = (i29 - e26 * (r92[1][1] + r92[0][1])) / 2;
      n37.scale(150 * e26).translate([o35, u30]);
    }, r91);
  }
  ri4.prototype = { constructor: ri4, point: function(n37, t32) {
    this.stream.point(n37, t32);
  }, sphere: function() {
    this.stream.sphere();
  }, lineStart: function() {
    this.stream.lineStart();
  }, lineEnd: function() {
    this.stream.lineEnd();
  }, polygonStart: function() {
    this.stream.polygonStart();
  }, polygonEnd: function() {
    this.stream.polygonEnd();
  } };
  var ci5 = 16;
  var li4 = g19(30 * f16);
  function fi4(n37, t32) {
    return +t32 ? /* @__PURE__ */ function(n38, t33) {
      function r91(e26, o35, u30, a27, c30, l35, f25, p24, g31, v31, d25, E24, y24, S25) {
        var m27 = f25 - e26, M26 = p24 - o35, x22 = m27 * m27 + M26 * M26;
        if (x22 > 4 * t33 && y24--) {
          var _24 = a27 + v31, R25 = c30 + d25, C24 = l35 + E24, P25 = w16(_24 * _24 + R25 * R25 + C24 * C24), A27 = N15(C24 /= P25), $26 = s19(s19(C24) - 1) < i20 || s19(u30 - g31) < i20 ? (u30 + g31) / 2 : h25(R25, _24), q25 = n38($26, A27), z26 = q25[0], j26 = q25[1], L25 = z26 - e26, b28 = j26 - o35, G24 = M26 * L25 - m27 * b28;
          (G24 * G24 / x22 > t33 || s19((m27 * L25 + M26 * b28) / x22 - 0.5) > 0.3 || a27 * v31 + c30 * d25 + l35 * E24 < li4) && (r91(e26, o35, u30, a27, c30, l35, z26, j26, $26, _24 /= P25, R25 /= P25, C24, y24, S25), S25.point(z26, j26), r91(z26, j26, $26, _24, R25, C24, f25, p24, g31, v31, d25, E24, y24, S25));
        }
      }
      return function(t34) {
        var i29, e26, o35, u30, a27, c30, l35, f25, s29, p24, h35, g31, v31 = { point: d25, lineStart: E24, lineEnd: S25, polygonStart: function() {
          t34.polygonStart(), v31.lineStart = m27;
        }, polygonEnd: function() {
          t34.polygonEnd(), v31.lineStart = E24;
        } };
        function d25(r92, i30) {
          r92 = n38(r92, i30), t34.point(r92[0], r92[1]);
        }
        function E24() {
          f25 = NaN, v31.point = y24, t34.lineStart();
        }
        function y24(i30, e27) {
          var o36 = un6([i30, e27]), u31 = n38(i30, e27);
          r91(f25, s29, l35, p24, h35, g31, f25 = u31[0], s29 = u31[1], l35 = i30, p24 = o36[0], h35 = o36[1], g31 = o36[2], ci5, t34), t34.point(f25, s29);
        }
        function S25() {
          v31.point = d25, t34.lineEnd();
        }
        function m27() {
          E24(), v31.point = M26, v31.lineEnd = w26;
        }
        function M26(n39, t35) {
          y24(i29 = n39, t35), e26 = f25, o35 = s29, u30 = p24, a27 = h35, c30 = g31, v31.point = y24;
        }
        function w26() {
          r91(f25, s29, l35, p24, h35, g31, e26, o35, i29, u30, a27, c30, ci5, t34), v31.lineEnd = S25, S25();
        }
        return v31;
      };
    }(n37, t32) : function(n38) {
      return ti4({ point: function(t33, r91) {
        t33 = n38(t33, r91), this.stream.point(t33[0], t33[1]);
      } });
    }(n37);
  }
  var si5 = ti4({ point: function(n37, t32) {
    this.stream.point(n37 * f16, t32 * f16);
  } });
  function pi4(n37, t32, r91, i29, e26, o35) {
    if (!o35)
      return function(n38, t33, r92, i30, e27) {
        function o36(o37, u31) {
          return [t33 + n38 * (o37 *= i30), r92 - n38 * (u31 *= e27)];
        }
        return o36.invert = function(o37, u31) {
          return [(o37 - t33) / n38 * i30, (r92 - u31) / n38 * e27];
        }, o36;
      }(n37, t32, r91, i29, e26);
    var u30 = g19(o35), a27 = m18(o35), c30 = u30 * n37, l35 = a27 * n37, f25 = u30 / n37, s29 = a27 / n37, p24 = (a27 * r91 - u30 * t32) / n37, h35 = (a27 * t32 + u30 * r91) / n37;
    function v31(n38, o36) {
      return [c30 * (n38 *= i29) - l35 * (o36 *= e26) + t32, r91 - l35 * n38 - c30 * o36];
    }
    return v31.invert = function(n38, t33) {
      return [i29 * (f25 * n38 - s29 * t33 + p24), e26 * (h35 - s29 * n38 - f25 * t33)];
    }, v31;
  }
  function hi5(n37) {
    return gi5(function() {
      return n37;
    })();
  }
  function gi5(n37) {
    var t32, r91, i29, e26, o35, u30, a27, c30, s29, p24, h35 = 150, g31 = 480, v31 = 250, d25 = 0, E24 = 0, y24 = 0, S25 = 0, m27 = 0, M26 = 0, x22 = 1, _24 = 1, N28 = null, R25 = St7, C24 = null, P25 = tr5, A27 = 0.5;
    function $26(n38) {
      return c30(n38[0] * f16, n38[1] * f16);
    }
    function q25(n38) {
      return (n38 = c30.invert(n38[0], n38[1])) && [n38[0] * l23, n38[1] * l23];
    }
    function z26() {
      var n38 = pi4(h35, 0, 0, x22, _24, M26).apply(null, t32(d25, E24)), i30 = pi4(h35, g31 - n38[0], v31 - n38[1], x22, _24, M26);
      return r91 = tt10(y24, S25, m27), a27 = Vn4(t32, i30), c30 = Vn4(r91, a27), u30 = fi4(a27, A27), j26();
    }
    function j26() {
      return s29 = p24 = null, $26;
    }
    return $26.stream = function(n38) {
      return s29 && p24 === n38 ? s29 : s29 = si5(function(n39) {
        return ti4({ point: function(t33, r92) {
          var i30 = n39(t33, r92);
          return this.stream.point(i30[0], i30[1]);
        } });
      }(r91)(R25(u30(P25(p24 = n38)))));
    }, $26.preclip = function(n38) {
      return arguments.length ? (R25 = n38, N28 = void 0, j26()) : R25;
    }, $26.postclip = function(n38) {
      return arguments.length ? (P25 = n38, C24 = i29 = e26 = o35 = null, j26()) : P25;
    }, $26.clipAngle = function(n38) {
      return arguments.length ? (R25 = +n38 ? mt8(N28 = n38 * f16) : (N28 = null, St7), j26()) : N28 * l23;
    }, $26.clipExtent = function(n38) {
      return arguments.length ? (P25 = null == n38 ? (C24 = i29 = e26 = o35 = null, tr5) : Ct7(C24 = +n38[0][0], i29 = +n38[0][1], e26 = +n38[1][0], o35 = +n38[1][1]), j26()) : null == C24 ? null : [[C24, i29], [e26, o35]];
    }, $26.scale = function(n38) {
      return arguments.length ? (h35 = +n38, z26()) : h35;
    }, $26.translate = function(n38) {
      return arguments.length ? (g31 = +n38[0], v31 = +n38[1], z26()) : [g31, v31];
    }, $26.center = function(n38) {
      return arguments.length ? (d25 = n38[0] % 360 * f16, E24 = n38[1] % 360 * f16, z26()) : [d25 * l23, E24 * l23];
    }, $26.rotate = function(n38) {
      return arguments.length ? (y24 = n38[0] % 360 * f16, S25 = n38[1] % 360 * f16, m27 = n38.length > 2 ? n38[2] % 360 * f16 : 0, z26()) : [y24 * l23, S25 * l23, m27 * l23];
    }, $26.angle = function(n38) {
      return arguments.length ? (M26 = n38 % 360 * f16, z26()) : M26 * l23;
    }, $26.reflectX = function(n38) {
      return arguments.length ? (x22 = n38 ? -1 : 1, z26()) : x22 < 0;
    }, $26.reflectY = function(n38) {
      return arguments.length ? (_24 = n38 ? -1 : 1, z26()) : _24 < 0;
    }, $26.precision = function(n38) {
      return arguments.length ? (u30 = fi4(a27, A27 = n38 * n38), j26()) : w16(A27);
    }, $26.fitExtent = function(n38, t33) {
      return ei4($26, n38, t33);
    }, $26.fitSize = function(n38, t33) {
      return oi4($26, n38, t33);
    }, $26.fitWidth = function(n38, t33) {
      return ui4($26, n38, t33);
    }, $26.fitHeight = function(n38, t33) {
      return ai4($26, n38, t33);
    }, function() {
      return t32 = n37.apply(this, arguments), $26.invert = t32.invert && q25, z26();
    };
  }
  function vi5(n37) {
    var t32 = 0, r91 = o20 / 3, i29 = gi5(n37), e26 = i29(t32, r91);
    return e26.parallels = function(n38) {
      return arguments.length ? i29(t32 = n38[0] * f16, r91 = n38[1] * f16) : [t32 * l23, r91 * l23];
    }, e26;
  }
  function di5(n37, t32) {
    var r91 = m18(n37), e26 = (r91 + m18(t32)) / 2;
    if (s19(e26) < i20)
      return function(n38) {
        var t33 = g19(n38);
        function r92(n39, r93) {
          return [n39 * t33, m18(r93) / t33];
        }
        return r92.invert = function(n39, r93) {
          return [n39 / t33, N15(r93 * t33)];
        }, r92;
      }(n37);
    var u30 = 1 + r91 * (2 * e26 - r91), a27 = w16(u30) / e26;
    function c30(n38, t33) {
      var r92 = w16(u30 - 2 * e26 * m18(t33)) / e26;
      return [r92 * m18(n38 *= e26), a27 - r92 * g19(n38)];
    }
    return c30.invert = function(n38, t33) {
      var r92 = a27 - t33, i29 = h25(n38, s19(r92)) * M15(r92);
      return r92 * e26 < 0 && (i29 -= o20 * M15(n38) * M15(r92)), [i29 / e26, N15((u30 - (n38 * n38 + r92 * r92) * e26 * e26) / (2 * e26))];
    }, c30;
  }
  function Ei5() {
    return vi5(di5).scale(155.424).center([0, 33.6442]);
  }
  function yi3() {
    return Ei5().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);
  }
  function Si5() {
    var n37, t32, r91, e26, o35, u30, a27 = yi3(), c30 = Ei5().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), l35 = Ei5().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), f25 = { point: function(n38, t33) {
      u30 = [n38, t33];
    } };
    function s29(n38) {
      var t33 = n38[0], i29 = n38[1];
      return u30 = null, r91.point(t33, i29), u30 || (e26.point(t33, i29), u30) || (o35.point(t33, i29), u30);
    }
    function p24() {
      return n37 = t32 = null, s29;
    }
    return s29.invert = function(n38) {
      var t33 = a27.scale(), r92 = a27.translate(), i29 = (n38[0] - r92[0]) / t33, e27 = (n38[1] - r92[1]) / t33;
      return (e27 >= 0.12 && e27 < 0.234 && i29 >= -0.425 && i29 < -0.214 ? c30 : e27 >= 0.166 && e27 < 0.234 && i29 >= -0.214 && i29 < -0.115 ? l35 : a27).invert(n38);
    }, s29.stream = function(r92) {
      return n37 && t32 === r92 ? n37 : (i29 = [a27.stream(t32 = r92), c30.stream(r92), l35.stream(r92)], e27 = i29.length, n37 = { point: function(n38, t33) {
        for (var r93 = -1; ++r93 < e27; )
          i29[r93].point(n38, t33);
      }, sphere: function() {
        for (var n38 = -1; ++n38 < e27; )
          i29[n38].sphere();
      }, lineStart: function() {
        for (var n38 = -1; ++n38 < e27; )
          i29[n38].lineStart();
      }, lineEnd: function() {
        for (var n38 = -1; ++n38 < e27; )
          i29[n38].lineEnd();
      }, polygonStart: function() {
        for (var n38 = -1; ++n38 < e27; )
          i29[n38].polygonStart();
      }, polygonEnd: function() {
        for (var n38 = -1; ++n38 < e27; )
          i29[n38].polygonEnd();
      } });
      var i29, e27;
    }, s29.precision = function(n38) {
      return arguments.length ? (a27.precision(n38), c30.precision(n38), l35.precision(n38), p24()) : a27.precision();
    }, s29.scale = function(n38) {
      return arguments.length ? (a27.scale(n38), c30.scale(0.35 * n38), l35.scale(n38), s29.translate(a27.translate())) : a27.scale();
    }, s29.translate = function(n38) {
      if (!arguments.length)
        return a27.translate();
      var t33 = a27.scale(), u31 = +n38[0], s30 = +n38[1];
      return r91 = a27.translate(n38).clipExtent([[u31 - 0.455 * t33, s30 - 0.238 * t33], [u31 + 0.455 * t33, s30 + 0.238 * t33]]).stream(f25), e26 = c30.translate([u31 - 0.307 * t33, s30 + 0.201 * t33]).clipExtent([[u31 - 0.425 * t33 + i20, s30 + 0.12 * t33 + i20], [u31 - 0.214 * t33 - i20, s30 + 0.234 * t33 - i20]]).stream(f25), o35 = l35.translate([u31 - 0.205 * t33, s30 + 0.212 * t33]).clipExtent([[u31 - 0.214 * t33 + i20, s30 + 0.166 * t33 + i20], [u31 - 0.115 * t33 - i20, s30 + 0.234 * t33 - i20]]).stream(f25), p24();
    }, s29.fitExtent = function(n38, t33) {
      return ei4(s29, n38, t33);
    }, s29.fitSize = function(n38, t33) {
      return oi4(s29, n38, t33);
    }, s29.fitWidth = function(n38, t33) {
      return ui4(s29, n38, t33);
    }, s29.fitHeight = function(n38, t33) {
      return ai4(s29, n38, t33);
    }, s29.scale(1070);
  }
  function mi4(n37) {
    return function(t32, r91) {
      var i29 = g19(t32), e26 = g19(r91), o35 = n37(i29 * e26);
      return o35 === 1 / 0 ? [2, 0] : [o35 * e26 * m18(t32), o35 * m18(r91)];
    };
  }
  function Mi5(n37) {
    return function(t32, r91) {
      var i29 = w16(t32 * t32 + r91 * r91), e26 = n37(i29), o35 = m18(e26), u30 = g19(e26);
      return [h25(t32 * o35, i29 * u30), N15(i29 && r91 * o35 / i29)];
    };
  }
  var wi5 = mi4(function(n37) {
    return w16(2 / (1 + n37));
  });
  function xi5() {
    return hi5(wi5).scale(124.75).clipAngle(179.999);
  }
  wi5.invert = Mi5(function(n37) {
    return 2 * N15(n37 / 2);
  });
  var _i5 = mi4(function(n37) {
    return (n37 = _14(n37)) && n37 / m18(n37);
  });
  function Ni5() {
    return hi5(_i5).scale(79.4188).clipAngle(179.999);
  }
  function Ri5(n37, t32) {
    return [n37, y16(x16((u20 + t32) / 2))];
  }
  function Ci5() {
    return Pi5(Ri5).scale(961 / c18);
  }
  function Pi5(n37) {
    var t32, r91, i29, e26 = hi5(n37), u30 = e26.center, a27 = e26.scale, c30 = e26.translate, l35 = e26.clipExtent, f25 = null;
    function s29() {
      var u31 = o20 * a27(), c31 = e26(ot10(e26.rotate()).invert([0, 0]));
      return l35(null == f25 ? [[c31[0] - u31, c31[1] - u31], [c31[0] + u31, c31[1] + u31]] : n37 === Ri5 ? [[Math.max(c31[0] - u31, f25), t32], [Math.min(c31[0] + u31, r91), i29]] : [[f25, Math.max(c31[1] - u31, t32)], [r91, Math.min(c31[1] + u31, i29)]]);
    }
    return e26.scale = function(n38) {
      return arguments.length ? (a27(n38), s29()) : a27();
    }, e26.translate = function(n38) {
      return arguments.length ? (c30(n38), s29()) : c30();
    }, e26.center = function(n38) {
      return arguments.length ? (u30(n38), s29()) : u30();
    }, e26.clipExtent = function(n38) {
      return arguments.length ? (null == n38 ? f25 = t32 = r91 = i29 = null : (f25 = +n38[0][0], t32 = +n38[0][1], r91 = +n38[1][0], i29 = +n38[1][1]), s29()) : null == f25 ? null : [[f25, t32], [r91, i29]];
    }, s29();
  }
  function Ai5(n37) {
    return x16((u20 + n37) / 2);
  }
  function $i5(n37, t32) {
    var r91 = g19(n37), e26 = n37 === t32 ? m18(n37) : y16(r91 / g19(t32)) / y16(Ai5(t32) / Ai5(n37)), a27 = r91 * S14(Ai5(n37), e26) / e26;
    if (!e26)
      return Ri5;
    function c30(n38, t33) {
      a27 > 0 ? t33 < -u20 + i20 && (t33 = -u20 + i20) : t33 > u20 - i20 && (t33 = u20 - i20);
      var r92 = a27 / S14(Ai5(t33), e26);
      return [r92 * m18(e26 * n38), a27 - r92 * g19(e26 * n38)];
    }
    return c30.invert = function(n38, t33) {
      var r92 = a27 - t33, i29 = M15(e26) * w16(n38 * n38 + r92 * r92), c31 = h25(n38, s19(r92)) * M15(r92);
      return r92 * e26 < 0 && (c31 -= o20 * M15(n38) * M15(r92)), [c31 / e26, 2 * p17(S14(a27 / i29, 1 / e26)) - u20];
    }, c30;
  }
  function qi5() {
    return vi5($i5).scale(109.5).parallels([30, 30]);
  }
  function zi5(n37, t32) {
    return [n37, t32];
  }
  function ji5() {
    return hi5(zi5).scale(152.63);
  }
  function Li5(n37, t32) {
    var r91 = g19(n37), e26 = n37 === t32 ? m18(n37) : (r91 - g19(t32)) / (t32 - n37), u30 = r91 / e26 + n37;
    if (s19(e26) < i20)
      return zi5;
    function a27(n38, t33) {
      var r92 = u30 - t33, i29 = e26 * n38;
      return [r92 * m18(i29), u30 - r92 * g19(i29)];
    }
    return a27.invert = function(n38, t33) {
      var r92 = u30 - t33, i29 = h25(n38, s19(r92)) * M15(r92);
      return r92 * e26 < 0 && (i29 -= o20 * M15(n38) * M15(r92)), [i29 / e26, u30 - M15(e26) * w16(n38 * n38 + r92 * r92)];
    }, a27;
  }
  function bi5() {
    return vi5(Li5).scale(131.154).center([0, 13.9389]);
  }
  _i5.invert = Mi5(function(n37) {
    return n37;
  }), Ri5.invert = function(n37, t32) {
    return [n37, 2 * p17(d17(t32)) - u20];
  }, zi5.invert = zi5;
  var Gi5 = 1.340264;
  var Oi5 = -0.081106;
  var Ti5 = 893e-6;
  var ki5 = 3796e-6;
  var Fi5 = w16(3) / 2;
  function Hi5(n37, t32) {
    var r91 = N15(Fi5 * m18(t32)), i29 = r91 * r91, e26 = i29 * i29 * i29;
    return [n37 * g19(r91) / (Fi5 * (Gi5 + 3 * Oi5 * i29 + e26 * (7 * Ti5 + 9 * ki5 * i29))), r91 * (Gi5 + Oi5 * i29 + e26 * (Ti5 + ki5 * i29))];
  }
  function Ii5() {
    return hi5(Hi5).scale(177.158);
  }
  function Wi5(n37, t32) {
    var r91 = g19(t32), i29 = g19(n37) * r91;
    return [r91 * m18(n37) / i29, m18(t32) / i29];
  }
  function Xi5() {
    return hi5(Wi5).scale(144.049).clipAngle(60);
  }
  function Bi5(n37, t32) {
    var r91 = t32 * t32, i29 = r91 * r91;
    return [n37 * (0.8707 - 0.131979 * r91 + i29 * (i29 * (3971e-6 * r91 - 1529e-6 * i29) - 0.013791)), t32 * (1.007226 + r91 * (0.015085 + i29 * (0.028874 * r91 - 0.044475 - 5916e-6 * i29)))];
  }
  function Ui4(n37, t32) {
    return [g19(t32) * m18(n37), m18(t32)];
  }
  function Zi5() {
    return hi5(Ui4).scale(249.5).clipAngle(90 + i20);
  }
  function Ji5(n37, t32) {
    var r91 = g19(t32), i29 = 1 + g19(n37) * r91;
    return [r91 * m18(n37) / i29, m18(t32) / i29];
  }
  function Ki5() {
    return hi5(Ji5).scale(250).clipAngle(142);
  }
  function Qi5(n37, t32) {
    return [y16(x16((u20 + t32) / 2)), -n37];
  }
  function Vi5() {
    var n37 = Pi5(Qi5), t32 = n37.center, r91 = n37.rotate;
    return n37.center = function(n38) {
      return arguments.length ? t32([-n38[1], n38[0]]) : [(n38 = t32())[1], -n38[0]];
    }, n37.rotate = function(n38) {
      return arguments.length ? r91([n38[0], n38[1], n38.length > 2 ? n38[2] + 90 : 90]) : [(n38 = r91())[0], n38[1], n38[2] - 90];
    }, r91([0, 0, 90]).scale(159.155);
  }
  Hi5.invert = function(n37, t32) {
    for (var r91, i29 = t32, o35 = i29 * i29, u30 = o35 * o35 * o35, a27 = 0; a27 < 12 && (u30 = (o35 = (i29 -= r91 = (i29 * (Gi5 + Oi5 * o35 + u30 * (Ti5 + ki5 * o35)) - t32) / (Gi5 + 3 * Oi5 * o35 + u30 * (7 * Ti5 + 9 * ki5 * o35))) * i29) * o35 * o35, !(s19(r91) < e15)); ++a27)
      ;
    return [Fi5 * n37 * (Gi5 + 3 * Oi5 * o35 + u30 * (7 * Ti5 + 9 * ki5 * o35)) / g19(i29), N15(m18(i29) / Fi5)];
  }, Wi5.invert = Mi5(p17), Bi5.invert = function(n37, t32) {
    var r91, e26 = t32, o35 = 25;
    do {
      var u30 = e26 * e26, a27 = u30 * u30;
      e26 -= r91 = (e26 * (1.007226 + u30 * (0.015085 + a27 * (0.028874 * u30 - 0.044475 - 5916e-6 * a27))) - t32) / (1.007226 + u30 * (0.045255 + a27 * (0.259866 * u30 - 0.311325 - 5916e-6 * 11 * a27)));
    } while (s19(r91) > i20 && --o35 > 0);
    return [n37 / (0.8707 + (u30 = e26 * e26) * (u30 * (u30 * u30 * u30 * (3971e-6 - 1529e-6 * u30) - 0.013791) - 0.131979)), e26];
  }, Ui4.invert = Mi5(N15), Ji5.invert = Mi5(function(n37) {
    return 2 * p17(n37);
  }), Qi5.invert = function(n37, t32) {
    return [-t32, 2 * p17(d17(n37)) - u20];
  };

  // https://cdn.jsdelivr.net/npm/d3-hierarchy@3.1.2/+esm
  function u21(n37) {
    var r91 = 0, t32 = n37.children, e26 = t32 && t32.length;
    if (e26)
      for (; --e26 >= 0; )
        r91 += t32[e26].value;
    else
      r91 = 1;
    n37.value = r91;
  }
  function i21(n37, r91) {
    n37 instanceof Map ? (n37 = [void 0, n37], void 0 === r91 && (r91 = a17)) : void 0 === r91 && (r91 = o21);
    for (var t32, e26, u30, i29, f25, l35 = new h26(n37), p24 = [l35]; t32 = p24.pop(); )
      if ((u30 = r91(t32.data)) && (f25 = (u30 = Array.from(u30)).length))
        for (t32.children = u30, i29 = f25 - 1; i29 >= 0; --i29)
          p24.push(e26 = u30[i29] = new h26(u30[i29])), e26.parent = t32, e26.depth = t32.depth + 1;
    return l35.eachBefore(c19);
  }
  function o21(n37) {
    return n37.children;
  }
  function a17(n37) {
    return Array.isArray(n37) ? n37[1] : null;
  }
  function f17(n37) {
    void 0 !== n37.data.value && (n37.value = n37.data.value), n37.data = n37.data.data;
  }
  function c19(n37) {
    var r91 = 0;
    do {
      n37.height = r91;
    } while ((n37 = n37.parent) && n37.height < ++r91);
  }
  function h26(n37) {
    this.data = n37, this.depth = this.height = 0, this.parent = null;
  }
  h26.prototype = i21.prototype = { constructor: h26, count: function() {
    return this.eachAfter(u21);
  }, each: function(n37, r91) {
    let t32 = -1;
    for (const e26 of this)
      n37.call(r91, e26, ++t32, this);
    return this;
  }, eachAfter: function(n37, r91) {
    for (var t32, e26, u30, i29 = this, o35 = [i29], a27 = [], f25 = -1; i29 = o35.pop(); )
      if (a27.push(i29), t32 = i29.children)
        for (e26 = 0, u30 = t32.length; e26 < u30; ++e26)
          o35.push(t32[e26]);
    for (; i29 = a27.pop(); )
      n37.call(r91, i29, ++f25, this);
    return this;
  }, eachBefore: function(n37, r91) {
    for (var t32, e26, u30 = this, i29 = [u30], o35 = -1; u30 = i29.pop(); )
      if (n37.call(r91, u30, ++o35, this), t32 = u30.children)
        for (e26 = t32.length - 1; e26 >= 0; --e26)
          i29.push(t32[e26]);
    return this;
  }, find: function(n37, r91) {
    let t32 = -1;
    for (const e26 of this)
      if (n37.call(r91, e26, ++t32, this))
        return e26;
  }, sum: function(n37) {
    return this.eachAfter(function(r91) {
      for (var t32 = +n37(r91.data) || 0, e26 = r91.children, u30 = e26 && e26.length; --u30 >= 0; )
        t32 += e26[u30].value;
      r91.value = t32;
    });
  }, sort: function(n37) {
    return this.eachBefore(function(r91) {
      r91.children && r91.children.sort(n37);
    });
  }, path: function(n37) {
    for (var r91 = this, t32 = function(n38, r92) {
      if (n38 === r92)
        return n38;
      var t33 = n38.ancestors(), e27 = r92.ancestors(), u31 = null;
      n38 = t33.pop(), r92 = e27.pop();
      for (; n38 === r92; )
        u31 = n38, n38 = t33.pop(), r92 = e27.pop();
      return u31;
    }(r91, n37), e26 = [r91]; r91 !== t32; )
      r91 = r91.parent, e26.push(r91);
    for (var u30 = e26.length; n37 !== t32; )
      e26.splice(u30, 0, n37), n37 = n37.parent;
    return e26;
  }, ancestors: function() {
    for (var n37 = this, r91 = [n37]; n37 = n37.parent; )
      r91.push(n37);
    return r91;
  }, descendants: function() {
    return Array.from(this);
  }, leaves: function() {
    var n37 = [];
    return this.eachBefore(function(r91) {
      r91.children || n37.push(r91);
    }), n37;
  }, links: function() {
    var n37 = this, r91 = [];
    return n37.each(function(t32) {
      t32 !== n37 && r91.push({ source: t32.parent, target: t32 });
    }), r91;
  }, copy: function() {
    return i21(this).eachBefore(f17);
  }, [Symbol.iterator]: function* () {
    var n37, r91, t32, e26, u30 = this, i29 = [u30];
    do {
      for (n37 = i29.reverse(), i29 = []; u30 = n37.pop(); )
        if (yield u30, r91 = u30.children)
          for (t32 = 0, e26 = r91.length; t32 < e26; ++t32)
            i29.push(r91[t32]);
    } while (i29.length);
  } };
  function C13(n37, r91, t32, e26, u30) {
    for (var i29, o35 = n37.children, a27 = -1, f25 = o35.length, c30 = n37.value && (e26 - r91) / n37.value; ++a27 < f25; )
      (i29 = o35[a27]).y0 = t32, i29.y1 = u30, i29.x0 = r91, i29.x1 = r91 += i29.value * c30;
  }
  function rn6(n37, r91) {
    this._ = n37, this.parent = null, this.children = null, this.A = null, this.a = this, this.z = 0, this.m = 0, this.c = 0, this.s = 0, this.t = null, this.i = r91;
  }
  function en6(n37, r91, t32, e26, u30) {
    for (var i29, o35 = n37.children, a27 = -1, f25 = o35.length, c30 = n37.value && (u30 - t32) / n37.value; ++a27 < f25; )
      (i29 = o35[a27]).x0 = r91, i29.x1 = e26, i29.y0 = t32, i29.y1 = t32 += i29.value * c30;
  }
  rn6.prototype = Object.create(h26.prototype);
  var un7 = (1 + Math.sqrt(5)) / 2;
  function on7(n37, r91, t32, e26, u30, i29) {
    for (var o35, a27, f25, c30, h35, l35, p24, s29, d25, v31, x22, y24 = [], g31 = r91.children, m27 = 0, w26 = 0, _24 = g31.length, M26 = r91.value; m27 < _24; ) {
      f25 = u30 - t32, c30 = i29 - e26;
      do {
        h35 = g31[w26++].value;
      } while (!h35 && w26 < _24);
      for (l35 = p24 = h35, x22 = h35 * h35 * (v31 = Math.max(c30 / f25, f25 / c30) / (M26 * n37)), d25 = Math.max(p24 / x22, x22 / l35); w26 < _24; ++w26) {
        if (h35 += a27 = g31[w26].value, a27 < l35 && (l35 = a27), a27 > p24 && (p24 = a27), x22 = h35 * h35 * v31, (s29 = Math.max(p24 / x22, x22 / l35)) > d25) {
          h35 -= a27;
          break;
        }
        d25 = s29;
      }
      y24.push(o35 = { value: h35, dice: f25 < c30, children: g31.slice(m27, w26) }), o35.dice ? C13(o35, t32, e26, u30, M26 ? e26 += c30 * h35 / M26 : i29) : en6(o35, t32, e26, M26 ? t32 += f25 * h35 / M26 : u30, i29), M26 -= h35, m27 = w26;
    }
    return y24;
  }
  var an7 = function n28(r91) {
    function t32(n37, t33, e26, u30, i29) {
      on7(r91, n37, t33, e26, u30, i29);
    }
    return t32.ratio = function(r92) {
      return n28((r92 = +r92) > 1 ? r92 : 1);
    }, t32;
  }(un7);
  var ln7 = function n29(r91) {
    function t32(n37, t33, e26, u30, i29) {
      if ((o35 = n37._squarify) && o35.ratio === r91)
        for (var o35, a27, f25, c30, h35, l35 = -1, p24 = o35.length, s29 = n37.value; ++l35 < p24; ) {
          for (f25 = (a27 = o35[l35]).children, c30 = a27.value = 0, h35 = f25.length; c30 < h35; ++c30)
            a27.value += f25[c30].value;
          a27.dice ? C13(a27, t33, e26, u30, s29 ? e26 += (i29 - e26) * a27.value / s29 : i29) : en6(a27, t33, e26, s29 ? t33 += (u30 - t33) * a27.value / s29 : u30, i29), s29 -= a27.value;
        }
      else
        n37._squarify = o35 = on7(r91, n37, t33, e26, u30, i29), o35.ratio = r91;
    }
    return t32.ratio = function(r92) {
      return n29((r92 = +r92) > 1 ? r92 : 1);
    }, t32;
  }(un7);

  // https://cdn.jsdelivr.net/npm/d3-random@3.0.1/+esm
  var r66 = Math.random;
  var n30 = function r67(n37) {
    function t32(r91, t33) {
      return r91 = null == r91 ? 0 : +r91, t33 = null == t33 ? 1 : +t33, 1 === arguments.length ? (t33 = r91, r91 = 0) : t33 -= r91, function() {
        return n37() * t33 + r91;
      };
    }
    return t32.source = r67, t32;
  }(r66);
  var t21 = function r68(n37) {
    function t32(r91, t33) {
      return arguments.length < 2 && (t33 = r91, r91 = 0), r91 = Math.floor(r91), t33 = Math.floor(t33) - r91, function() {
        return Math.floor(n37() * t33 + r91);
      };
    }
    return t32.source = r68, t32;
  }(r66);
  var o22 = function r69(n37) {
    function t32(r91, t33) {
      var o35, u30;
      return r91 = null == r91 ? 0 : +r91, t33 = null == t33 ? 1 : +t33, function() {
        var a27;
        if (null != o35)
          a27 = o35, o35 = null;
        else
          do {
            o35 = 2 * n37() - 1, a27 = 2 * n37() - 1, u30 = o35 * o35 + a27 * a27;
          } while (!u30 || u30 > 1);
        return r91 + t33 * a27 * Math.sqrt(-2 * Math.log(u30) / u30);
      };
    }
    return t32.source = r69, t32;
  }(r66);
  var u22 = function r70(n37) {
    var t32 = o22.source(n37);
    function u30() {
      var r91 = t32.apply(this, arguments);
      return function() {
        return Math.exp(r91());
      };
    }
    return u30.source = r70, u30;
  }(r66);
  var a18 = function r71(n37) {
    function t32(r91) {
      return (r91 = +r91) <= 0 ? () => 0 : function() {
        for (var t33 = 0, o35 = r91; o35 > 1; --o35)
          t33 += n37();
        return t33 + o35 * n37();
      };
    }
    return t32.source = r71, t32;
  }(r66);
  var e16 = function r72(n37) {
    var t32 = a18.source(n37);
    function o35(r91) {
      if (0 == (r91 = +r91))
        return n37;
      var o36 = t32(r91);
      return function() {
        return o36() / r91;
      };
    }
    return o35.source = r72, o35;
  }(r66);
  var i22 = function r73(n37) {
    function t32(r91) {
      return function() {
        return -Math.log1p(-n37()) / r91;
      };
    }
    return t32.source = r73, t32;
  }(r66);
  var c20 = function r74(n37) {
    function t32(r91) {
      if ((r91 = +r91) < 0)
        throw new RangeError("invalid alpha");
      return r91 = 1 / -r91, function() {
        return Math.pow(1 - n37(), r91);
      };
    }
    return t32.source = r74, t32;
  }(r66);
  var f18 = function r75(n37) {
    function t32(r91) {
      if ((r91 = +r91) < 0 || r91 > 1)
        throw new RangeError("invalid p");
      return function() {
        return Math.floor(n37() + r91);
      };
    }
    return t32.source = r75, t32;
  }(r66);
  var l24 = function r76(n37) {
    function t32(r91) {
      if ((r91 = +r91) < 0 || r91 > 1)
        throw new RangeError("invalid p");
      return 0 === r91 ? () => 1 / 0 : 1 === r91 ? () => 1 : (r91 = Math.log1p(-r91), function() {
        return 1 + Math.floor(Math.log1p(-n37()) / r91);
      });
    }
    return t32.source = r76, t32;
  }(r66);
  var s20 = function r77(n37) {
    var t32 = o22.source(n37)();
    function u30(r91, o35) {
      if ((r91 = +r91) < 0)
        throw new RangeError("invalid k");
      if (0 === r91)
        return () => 0;
      if (o35 = null == o35 ? 1 : +o35, 1 === r91)
        return () => -Math.log1p(-n37()) * o35;
      var u31 = (r91 < 1 ? r91 + 1 : r91) - 1 / 3, a27 = 1 / (3 * Math.sqrt(u31)), e26 = r91 < 1 ? () => Math.pow(n37(), 1 / r91) : () => 1;
      return function() {
        do {
          do {
            var r92 = t32(), i29 = 1 + a27 * r92;
          } while (i29 <= 0);
          i29 *= i29 * i29;
          var c30 = 1 - n37();
        } while (c30 >= 1 - 0.0331 * r92 * r92 * r92 * r92 && Math.log(c30) >= 0.5 * r92 * r92 + u31 * (1 - i29 + Math.log(i29)));
        return u31 * i29 * e26() * o35;
      };
    }
    return u30.source = r77, u30;
  }(r66);
  var h27 = function r78(n37) {
    var t32 = s20.source(n37);
    function o35(r91, n38) {
      var o36 = t32(r91), u30 = t32(n38);
      return function() {
        var r92 = o36();
        return 0 === r92 ? 0 : r92 / (r92 + u30());
      };
    }
    return o35.source = r78, o35;
  }(r66);
  var M16 = function r79(n37) {
    var t32 = l24.source(n37), o35 = h27.source(n37);
    function u30(r91, n38) {
      return r91 = +r91, (n38 = +n38) >= 1 ? () => r91 : n38 <= 0 ? () => 0 : function() {
        for (var u31 = 0, a27 = r91, e26 = n38; a27 * e26 > 16 && a27 * (1 - e26) > 16; ) {
          var i29 = Math.floor((a27 + 1) * e26), c30 = o35(i29, a27 - i29 + 1)();
          c30 <= e26 ? (u31 += i29, a27 -= i29, e26 = (e26 - c30) / (1 - c30)) : (a27 = i29 - 1, e26 /= c30);
        }
        for (var f25 = e26 < 0.5, l35 = t32(f25 ? e26 : 1 - e26), s29 = l35(), h35 = 0; s29 <= a27; ++h35)
          s29 += l35();
        return u31 + (f25 ? h35 : a27 - h35);
      };
    }
    return u30.source = r79, u30;
  }(r66);
  var v19 = function r80(n37) {
    function t32(r91, t33, o35) {
      var u30;
      return 0 == (r91 = +r91) ? u30 = (r92) => -Math.log(r92) : (r91 = 1 / r91, u30 = (n38) => Math.pow(n38, r91)), t33 = null == t33 ? 0 : +t33, o35 = null == o35 ? 1 : +o35, function() {
        return t33 + o35 * u30(-Math.log1p(-n37()));
      };
    }
    return t32.source = r80, t32;
  }(r66);
  var d18 = function r81(n37) {
    function t32(r91, t33) {
      return r91 = null == r91 ? 0 : +r91, t33 = null == t33 ? 1 : +t33, function() {
        return r91 + t33 * Math.tan(Math.PI * n37());
      };
    }
    return t32.source = r81, t32;
  }(r66);
  var m19 = function r82(n37) {
    function t32(r91, t33) {
      return r91 = null == r91 ? 0 : +r91, t33 = null == t33 ? 1 : +t33, function() {
        var o35 = n37();
        return r91 + t33 * Math.log(o35 / (1 - o35));
      };
    }
    return t32.source = r82, t32;
  }(r66);
  var g20 = function r83(n37) {
    var t32 = s20.source(n37), o35 = M16.source(n37);
    function u30(r91) {
      return function() {
        for (var u31 = 0, a27 = r91; a27 > 16; ) {
          var e26 = Math.floor(0.875 * a27), i29 = t32(e26)();
          if (i29 > a27)
            return u31 + o35(e26 - 1, a27 / i29)();
          u31 += e26, a27 -= i29;
        }
        for (var c30 = -Math.log1p(-n37()), f25 = 0; c30 <= a27; ++f25)
          c30 -= Math.log1p(-n37());
        return u31 + f25;
      };
    }
    return u30.source = r83, u30;
  }(r66);
  var p18 = 1 / 4294967296;

  // https://cdn.jsdelivr.net/npm/d3-time@3.1.0/+esm
  var n31 = /* @__PURE__ */ new Date();
  var s21 = /* @__PURE__ */ new Date();
  function r84(e26, t32, a27, o35) {
    function l35(t33) {
      return e26(t33 = 0 === arguments.length ? /* @__PURE__ */ new Date() : /* @__PURE__ */ new Date(+t33)), t33;
    }
    return l35.floor = (t33) => (e26(t33 = /* @__PURE__ */ new Date(+t33)), t33), l35.ceil = (n37) => (e26(n37 = new Date(n37 - 1)), t32(n37, 1), e26(n37), n37), l35.round = (e27) => {
      const t33 = l35(e27), n37 = l35.ceil(e27);
      return e27 - t33 < n37 - e27 ? t33 : n37;
    }, l35.offset = (e27, n37) => (t32(e27 = /* @__PURE__ */ new Date(+e27), null == n37 ? 1 : Math.floor(n37)), e27), l35.range = (n37, s29, r91) => {
      const a28 = [];
      if (n37 = l35.ceil(n37), r91 = null == r91 ? 1 : Math.floor(r91), !(n37 < s29 && r91 > 0))
        return a28;
      let o36;
      do {
        a28.push(o36 = /* @__PURE__ */ new Date(+n37)), t32(n37, r91), e26(n37);
      } while (o36 < n37 && n37 < s29);
      return a28;
    }, l35.filter = (n37) => r84((t33) => {
      if (t33 >= t33)
        for (; e26(t33), !n37(t33); )
          t33.setTime(t33 - 1);
    }, (e27, s29) => {
      if (e27 >= e27)
        if (s29 < 0)
          for (; ++s29 <= 0; )
            for (; t32(e27, -1), !n37(e27); )
              ;
        else
          for (; --s29 >= 0; )
            for (; t32(e27, 1), !n37(e27); )
              ;
    }), a27 && (l35.count = (t33, r91) => (n31.setTime(+t33), s21.setTime(+r91), e26(n31), e26(s21), Math.floor(a27(n31, s21))), l35.every = (e27) => (e27 = Math.floor(e27), isFinite(e27) && e27 > 0 ? e27 > 1 ? l35.filter(o35 ? (t33) => o35(t33) % e27 == 0 : (t33) => l35.count(0, t33) % e27 == 0) : l35 : null)), l35;
  }
  var a19 = r84(() => {
  }, (e26, t32) => {
    e26.setTime(+e26 + t32);
  }, (e26, t32) => t32 - e26);
  a19.every = (e26) => (e26 = Math.floor(e26), isFinite(e26) && e26 > 0 ? e26 > 1 ? r84((t32) => {
    t32.setTime(Math.floor(t32 / e26) * e26);
  }, (t32, n37) => {
    t32.setTime(+t32 + n37 * e26);
  }, (t32, n37) => (n37 - t32) / e26) : a19 : null);
  var o23 = a19.range;
  var l25 = 1e3;
  var g21 = 6e4;
  var u23 = 36e5;
  var i23 = 864e5;
  var T14 = 6048e5;
  var c21 = 2592e6;
  var f19 = 31536e6;
  var C14 = r84((e26) => {
    e26.setTime(e26 - e26.getMilliseconds());
  }, (e26, t32) => {
    e26.setTime(+e26 + t32 * l25);
  }, (e26, t32) => (t32 - e26) / l25, (e26) => e26.getUTCSeconds());
  var U15 = C14.range;
  var M17 = r84((e26) => {
    e26.setTime(e26 - e26.getMilliseconds() - e26.getSeconds() * l25);
  }, (e26, t32) => {
    e26.setTime(+e26 + t32 * g21);
  }, (e26, t32) => (t32 - e26) / g21, (e26) => e26.getMinutes());
  var h28 = M17.range;
  var m20 = r84((e26) => {
    e26.setUTCSeconds(0, 0);
  }, (e26, t32) => {
    e26.setTime(+e26 + t32 * g21);
  }, (e26, t32) => (t32 - e26) / g21, (e26) => e26.getUTCMinutes());
  var D17 = m20.range;
  var F15 = r84((e26) => {
    e26.setTime(e26 - e26.getMilliseconds() - e26.getSeconds() * l25 - e26.getMinutes() * g21);
  }, (e26, t32) => {
    e26.setTime(+e26 + t32 * u23);
  }, (e26, t32) => (t32 - e26) / u23, (e26) => e26.getHours());
  var Y14 = F15.range;
  var d19 = r84((e26) => {
    e26.setUTCMinutes(0, 0, 0);
  }, (e26, t32) => {
    e26.setTime(+e26 + t32 * u23);
  }, (e26, t32) => (t32 - e26) / u23, (e26) => e26.getUTCHours());
  var H15 = d19.range;
  var y17 = r84((e26) => e26.setHours(0, 0, 0, 0), (e26, t32) => e26.setDate(e26.getDate() + t32), (e26, t32) => (t32 - e26 - (t32.getTimezoneOffset() - e26.getTimezoneOffset()) * g21) / i23, (e26) => e26.getDate() - 1);
  var w17 = y17.range;
  var v20 = r84((e26) => {
    e26.setUTCHours(0, 0, 0, 0);
  }, (e26, t32) => {
    e26.setUTCDate(e26.getUTCDate() + t32);
  }, (e26, t32) => (t32 - e26) / i23, (e26) => e26.getUTCDate() - 1);
  var S15 = v20.range;
  var p19 = r84((e26) => {
    e26.setUTCHours(0, 0, 0, 0);
  }, (e26, t32) => {
    e26.setUTCDate(e26.getUTCDate() + t32);
  }, (e26, t32) => (t32 - e26) / i23, (e26) => Math.floor(e26 / i23));
  var k15 = p19.range;
  function z15(e26) {
    return r84((t32) => {
      t32.setDate(t32.getDate() - (t32.getDay() + 7 - e26) % 7), t32.setHours(0, 0, 0, 0);
    }, (e27, t32) => {
      e27.setDate(e27.getDate() + 7 * t32);
    }, (e27, t32) => (t32 - e27 - (t32.getTimezoneOffset() - e27.getTimezoneOffset()) * g21) / T14);
  }
  var O14 = z15(0);
  var W14 = z15(1);
  var x17 = z15(2);
  var b17 = z15(3);
  var j17 = z15(4);
  var q16 = z15(5);
  var A18 = z15(6);
  var B15 = O14.range;
  var E14 = W14.range;
  var G17 = x17.range;
  var I17 = b17.range;
  var J15 = j17.range;
  var K17 = q16.range;
  var L15 = A18.range;
  function N16(e26) {
    return r84((t32) => {
      t32.setUTCDate(t32.getUTCDate() - (t32.getUTCDay() + 7 - e26) % 7), t32.setUTCHours(0, 0, 0, 0);
    }, (e27, t32) => {
      e27.setUTCDate(e27.getUTCDate() + 7 * t32);
    }, (e27, t32) => (t32 - e27) / T14);
  }
  var P16 = N16(0);
  var Q14 = N16(1);
  var R15 = N16(2);
  var V14 = N16(3);
  var X14 = N16(4);
  var Z13 = N16(5);
  var $16 = N16(6);
  var _15 = P16.range;
  var ee7 = Q14.range;
  var te9 = R15.range;
  var ne5 = V14.range;
  var se8 = X14.range;
  var re7 = Z13.range;
  var ae7 = $16.range;
  var oe8 = r84((e26) => {
    e26.setDate(1), e26.setHours(0, 0, 0, 0);
  }, (e26, t32) => {
    e26.setMonth(e26.getMonth() + t32);
  }, (e26, t32) => t32.getMonth() - e26.getMonth() + 12 * (t32.getFullYear() - e26.getFullYear()), (e26) => e26.getMonth());
  var le8 = oe8.range;
  var ge7 = r84((e26) => {
    e26.setUTCDate(1), e26.setUTCHours(0, 0, 0, 0);
  }, (e26, t32) => {
    e26.setUTCMonth(e26.getUTCMonth() + t32);
  }, (e26, t32) => t32.getUTCMonth() - e26.getUTCMonth() + 12 * (t32.getUTCFullYear() - e26.getUTCFullYear()), (e26) => e26.getUTCMonth());
  var ue7 = ge7.range;
  var ie8 = r84((e26) => {
    e26.setMonth(0, 1), e26.setHours(0, 0, 0, 0);
  }, (e26, t32) => {
    e26.setFullYear(e26.getFullYear() + t32);
  }, (e26, t32) => t32.getFullYear() - e26.getFullYear(), (e26) => e26.getFullYear());
  ie8.every = (e26) => isFinite(e26 = Math.floor(e26)) && e26 > 0 ? r84((t32) => {
    t32.setFullYear(Math.floor(t32.getFullYear() / e26) * e26), t32.setMonth(0, 1), t32.setHours(0, 0, 0, 0);
  }, (t32, n37) => {
    t32.setFullYear(t32.getFullYear() + n37 * e26);
  }) : null;
  var Te7 = ie8.range;
  var ce6 = r84((e26) => {
    e26.setUTCMonth(0, 1), e26.setUTCHours(0, 0, 0, 0);
  }, (e26, t32) => {
    e26.setUTCFullYear(e26.getUTCFullYear() + t32);
  }, (e26, t32) => t32.getUTCFullYear() - e26.getUTCFullYear(), (e26) => e26.getUTCFullYear());
  ce6.every = (e26) => isFinite(e26 = Math.floor(e26)) && e26 > 0 ? r84((t32) => {
    t32.setUTCFullYear(Math.floor(t32.getUTCFullYear() / e26) * e26), t32.setUTCMonth(0, 1), t32.setUTCHours(0, 0, 0, 0);
  }, (t32, n37) => {
    t32.setUTCFullYear(t32.getUTCFullYear() + n37 * e26);
  }) : null;
  var fe6 = ce6.range;
  function Ce6(n37, s29, r91, o35, U23, M26) {
    const h35 = [[C14, 1, l25], [C14, 5, 5e3], [C14, 15, 15e3], [C14, 30, 3e4], [M26, 1, g21], [M26, 5, 3e5], [M26, 15, 9e5], [M26, 30, 18e5], [U23, 1, u23], [U23, 3, 108e5], [U23, 6, 216e5], [U23, 12, 432e5], [o35, 1, i23], [o35, 2, 1728e5], [r91, 1, T14], [s29, 1, c21], [s29, 3, 7776e6], [n37, 1, f19]];
    function m27(s30, r92, o36) {
      const l35 = Math.abs(r92 - s30) / o36, g31 = e4(([, , e26]) => e26).right(h35, l35);
      if (g31 === h35.length)
        return n37.every(nt6(s30 / f19, r92 / f19, o36));
      if (0 === g31)
        return a19.every(Math.max(nt6(s30, r92, o36), 1));
      const [u30, i29] = h35[l35 / h35[g31 - 1][2] < h35[g31][2] / l35 ? g31 - 1 : g31];
      return u30.every(i29);
    }
    return [function(e26, t32, n38) {
      const s30 = t32 < e26;
      s30 && ([e26, t32] = [t32, e26]);
      const r92 = n38 && "function" == typeof n38.range ? n38 : m27(e26, t32, n38), a27 = r92 ? r92.range(e26, +t32 + 1) : [];
      return s30 ? a27.reverse() : a27;
    }, m27];
  }
  var [Ue6, Me6] = Ce6(ce6, ge7, P16, p19, d19, m20);
  var [he6, me7] = Ce6(ie8, oe8, O14, y17, F15, M17);

  // https://cdn.jsdelivr.net/npm/d3-time-format@4.1.0/+esm
  function l26(n37) {
    if (0 <= n37.y && n37.y < 100) {
      var t32 = new Date(-1, n37.m, n37.d, n37.H, n37.M, n37.S, n37.L);
      return t32.setFullYear(n37.y), t32;
    }
    return new Date(n37.y, n37.m, n37.d, n37.H, n37.M, n37.S, n37.L);
  }
  function g22(n37) {
    if (0 <= n37.y && n37.y < 100) {
      var t32 = new Date(Date.UTC(-1, n37.m, n37.d, n37.H, n37.M, n37.S, n37.L));
      return t32.setUTCFullYear(n37.y), t32;
    }
    return new Date(Date.UTC(n37.y, n37.m, n37.d, n37.H, n37.M, n37.S, n37.L));
  }
  function s22(n37, t32, e26) {
    return { y: n37, m: t32, d: e26, H: 0, M: 0, S: 0, L: 0 };
  }
  function h29(t32) {
    var e26 = t32.dateTime, r91 = t32.date, o35 = t32.time, c30 = t32.periods, a27 = t32.days, h35 = t32.shortDays, y24 = t32.months, v31 = t32.shortMonths, d25 = p20(c30), m27 = S16(c30), D24 = p20(a27), M26 = S16(a27), T23 = p20(h35), U23 = S16(h35), x22 = p20(y24), w26 = S16(y24), un12 = p20(v31), pn8 = S16(v31), qn6 = { a: function(n37) {
      return h35[n37.getDay()];
    }, A: function(n37) {
      return a27[n37.getDay()];
    }, b: function(n37) {
      return v31[n37.getMonth()];
    }, B: function(n37) {
      return y24[n37.getMonth()];
    }, c: null, d: $17, e: $17, f: k16, g: ln8, G: sn7, H: z16, I: E15, j: R16, L: _16, m: K18, M: nn5, p: function(n37) {
      return c30[+(n37.getHours() >= 12)];
    }, q: function(n37) {
      return 1 + ~~(n37.getMonth() / 3);
    }, Q: Vn5, s: jn4, S: tn6, u: en7, U: rn7, V: on8, w: cn7, W: an8, x: null, X: null, y: fn6, Y: gn5, Z: hn6, "%": bn6 }, In7 = { a: function(n37) {
      return h35[n37.getUTCDay()];
    }, A: function(n37) {
      return a27[n37.getUTCDay()];
    }, b: function(n37) {
      return v31[n37.getUTCMonth()];
    }, B: function(n37) {
      return y24[n37.getUTCMonth()];
    }, c: null, d: yn5, e: yn5, f: Cn4, g: Yn5, G: Zn5, H: vn5, I: dn5, j: mn4, L: Dn5, m: Mn5, M: Tn3, p: function(n37) {
      return c30[+(n37.getUTCHours() >= 12)];
    }, q: function(n37) {
      return 1 + ~~(n37.getUTCMonth() / 3);
    }, Q: Vn5, s: jn4, S: Un4, u: xn5, U: wn6, V: Sn4, w: Fn5, W: Ln4, x: null, X: null, y: Hn5, Y: An6, Z: Wn4, "%": bn6 }, Jn7 = { a: function(n37, t33, e27) {
      var r92 = T23.exec(t33.slice(e27));
      return r92 ? (n37.w = U23.get(r92[0].toLowerCase()), e27 + r92[0].length) : -1;
    }, A: function(n37, t33, e27) {
      var r92 = D24.exec(t33.slice(e27));
      return r92 ? (n37.w = M26.get(r92[0].toLowerCase()), e27 + r92[0].length) : -1;
    }, b: function(n37, t33, e27) {
      var r92 = un12.exec(t33.slice(e27));
      return r92 ? (n37.m = pn8.get(r92[0].toLowerCase()), e27 + r92[0].length) : -1;
    }, B: function(n37, t33, e27) {
      var r92 = x22.exec(t33.slice(e27));
      return r92 ? (n37.m = w26.get(r92[0].toLowerCase()), e27 + r92[0].length) : -1;
    }, c: function(n37, t33, r92) {
      return On5(n37, e26, t33, r92);
    }, d: q17, e: q17, f: N17, g: W15, G: Z14, H: J16, I: J16, j: I18, L: O15, m: j18, M: Q15, p: function(n37, t33, e27) {
      var r92 = d25.exec(t33.slice(e27));
      return r92 ? (n37.p = m27.get(r92[0].toLowerCase()), e27 + r92[0].length) : -1;
    }, q: V15, Q: B16, s: G18, S: X15, u: L16, U: H16, V: Y15, w: F16, W: A19, x: function(n37, t33, e27) {
      return On5(n37, r91, t33, e27);
    }, X: function(n37, t33, e27) {
      return On5(n37, o35, t33, e27);
    }, y: W15, Y: Z14, Z: b18, "%": P17 };
    function Qn6(n37, t33) {
      return function(e27) {
        var r92, u30, i29, o36 = [], c31 = -1, a28 = 0, f25 = n37.length;
        for (e27 instanceof Date || (e27 = /* @__PURE__ */ new Date(+e27)); ++c31 < f25; )
          37 === n37.charCodeAt(c31) && (o36.push(n37.slice(a28, c31)), null != (u30 = C15[r92 = n37.charAt(++c31)]) ? r92 = n37.charAt(++c31) : u30 = "e" === r92 ? " " : "0", (i29 = t33[r92]) && (r92 = i29(e27, u30)), o36.push(r92), a28 = c31 + 1);
        return o36.push(n37.slice(a28, c31)), o36.join("");
      };
    }
    function Xn5(t33, e27) {
      return function(r92) {
        var o36, c31, a28 = s22(1900, void 0, 1);
        if (On5(a28, t33, r92 += "", 0) != r92.length)
          return null;
        if ("Q" in a28)
          return new Date(a28.Q);
        if ("s" in a28)
          return new Date(1e3 * a28.s + ("L" in a28 ? a28.L : 0));
        if (e27 && !("Z" in a28) && (a28.Z = 0), "p" in a28 && (a28.H = a28.H % 12 + 12 * a28.p), void 0 === a28.m && (a28.m = "q" in a28 ? a28.q : 0), "V" in a28) {
          if (a28.V < 1 || a28.V > 53)
            return null;
          "w" in a28 || (a28.w = 1), "Z" in a28 ? (c31 = (o36 = g22(s22(a28.y, 0, 1))).getUTCDay(), o36 = c31 > 4 || 0 === c31 ? Q14.ceil(o36) : Q14(o36), o36 = v20.offset(o36, 7 * (a28.V - 1)), a28.y = o36.getUTCFullYear(), a28.m = o36.getUTCMonth(), a28.d = o36.getUTCDate() + (a28.w + 6) % 7) : (c31 = (o36 = l26(s22(a28.y, 0, 1))).getDay(), o36 = c31 > 4 || 0 === c31 ? W14.ceil(o36) : W14(o36), o36 = y17.offset(o36, 7 * (a28.V - 1)), a28.y = o36.getFullYear(), a28.m = o36.getMonth(), a28.d = o36.getDate() + (a28.w + 6) % 7);
        } else
          ("W" in a28 || "U" in a28) && ("w" in a28 || (a28.w = "u" in a28 ? a28.u % 7 : "W" in a28 ? 1 : 0), c31 = "Z" in a28 ? g22(s22(a28.y, 0, 1)).getUTCDay() : l26(s22(a28.y, 0, 1)).getDay(), a28.m = 0, a28.d = "W" in a28 ? (a28.w + 6) % 7 + 7 * a28.W - (c31 + 5) % 7 : a28.w + 7 * a28.U - (c31 + 6) % 7);
        return "Z" in a28 ? (a28.H += a28.Z / 100 | 0, a28.M += a28.Z % 100, g22(a28)) : l26(a28);
      };
    }
    function On5(n37, t33, e27, r92) {
      for (var u30, i29, o36 = 0, c31 = t33.length, a28 = e27.length; o36 < c31; ) {
        if (r92 >= a28)
          return -1;
        if (37 === (u30 = t33.charCodeAt(o36++))) {
          if (u30 = t33.charAt(o36++), !(i29 = Jn7[u30 in C15 ? t33.charAt(o36++) : u30]) || (r92 = i29(n37, e27, r92)) < 0)
            return -1;
        } else if (u30 != e27.charCodeAt(r92++))
          return -1;
      }
      return r92;
    }
    return qn6.x = Qn6(r91, qn6), qn6.X = Qn6(o35, qn6), qn6.c = Qn6(e26, qn6), In7.x = Qn6(r91, In7), In7.X = Qn6(o35, In7), In7.c = Qn6(e26, In7), { format: function(n37) {
      var t33 = Qn6(n37 += "", qn6);
      return t33.toString = function() {
        return n37;
      }, t33;
    }, parse: function(n37) {
      var t33 = Xn5(n37 += "", false);
      return t33.toString = function() {
        return n37;
      }, t33;
    }, utcFormat: function(n37) {
      var t33 = Qn6(n37 += "", In7);
      return t33.toString = function() {
        return n37;
      }, t33;
    }, utcParse: function(n37) {
      var t33 = Xn5(n37 += "", true);
      return t33.toString = function() {
        return n37;
      }, t33;
    } };
  }
  var y18;
  var v21;
  var d20;
  var m21;
  var D18;
  var C15 = { "-": "", _: " ", 0: "0" };
  var M18 = /^\s*\d+/;
  var T15 = /^%/;
  var U16 = /[\\^$*+?|[\]().{}]/g;
  function x18(n37, t32, e26) {
    var r91 = n37 < 0 ? "-" : "", u30 = (r91 ? -n37 : n37) + "", i29 = u30.length;
    return r91 + (i29 < e26 ? new Array(e26 - i29 + 1).join(t32) + u30 : u30);
  }
  function w18(n37) {
    return n37.replace(U16, "\\$&");
  }
  function p20(n37) {
    return new RegExp("^(?:" + n37.map(w18).join("|") + ")", "i");
  }
  function S16(n37) {
    return new Map(n37.map((n38, t32) => [n38.toLowerCase(), t32]));
  }
  function F16(n37, t32, e26) {
    var r91 = M18.exec(t32.slice(e26, e26 + 1));
    return r91 ? (n37.w = +r91[0], e26 + r91[0].length) : -1;
  }
  function L16(n37, t32, e26) {
    var r91 = M18.exec(t32.slice(e26, e26 + 1));
    return r91 ? (n37.u = +r91[0], e26 + r91[0].length) : -1;
  }
  function H16(n37, t32, e26) {
    var r91 = M18.exec(t32.slice(e26, e26 + 2));
    return r91 ? (n37.U = +r91[0], e26 + r91[0].length) : -1;
  }
  function Y15(n37, t32, e26) {
    var r91 = M18.exec(t32.slice(e26, e26 + 2));
    return r91 ? (n37.V = +r91[0], e26 + r91[0].length) : -1;
  }
  function A19(n37, t32, e26) {
    var r91 = M18.exec(t32.slice(e26, e26 + 2));
    return r91 ? (n37.W = +r91[0], e26 + r91[0].length) : -1;
  }
  function Z14(n37, t32, e26) {
    var r91 = M18.exec(t32.slice(e26, e26 + 4));
    return r91 ? (n37.y = +r91[0], e26 + r91[0].length) : -1;
  }
  function W15(n37, t32, e26) {
    var r91 = M18.exec(t32.slice(e26, e26 + 2));
    return r91 ? (n37.y = +r91[0] + (+r91[0] > 68 ? 1900 : 2e3), e26 + r91[0].length) : -1;
  }
  function b18(n37, t32, e26) {
    var r91 = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(t32.slice(e26, e26 + 6));
    return r91 ? (n37.Z = r91[1] ? 0 : -(r91[2] + (r91[3] || "00")), e26 + r91[0].length) : -1;
  }
  function V15(n37, t32, e26) {
    var r91 = M18.exec(t32.slice(e26, e26 + 1));
    return r91 ? (n37.q = 3 * r91[0] - 3, e26 + r91[0].length) : -1;
  }
  function j18(n37, t32, e26) {
    var r91 = M18.exec(t32.slice(e26, e26 + 2));
    return r91 ? (n37.m = r91[0] - 1, e26 + r91[0].length) : -1;
  }
  function q17(n37, t32, e26) {
    var r91 = M18.exec(t32.slice(e26, e26 + 2));
    return r91 ? (n37.d = +r91[0], e26 + r91[0].length) : -1;
  }
  function I18(n37, t32, e26) {
    var r91 = M18.exec(t32.slice(e26, e26 + 3));
    return r91 ? (n37.m = 0, n37.d = +r91[0], e26 + r91[0].length) : -1;
  }
  function J16(n37, t32, e26) {
    var r91 = M18.exec(t32.slice(e26, e26 + 2));
    return r91 ? (n37.H = +r91[0], e26 + r91[0].length) : -1;
  }
  function Q15(n37, t32, e26) {
    var r91 = M18.exec(t32.slice(e26, e26 + 2));
    return r91 ? (n37.M = +r91[0], e26 + r91[0].length) : -1;
  }
  function X15(n37, t32, e26) {
    var r91 = M18.exec(t32.slice(e26, e26 + 2));
    return r91 ? (n37.S = +r91[0], e26 + r91[0].length) : -1;
  }
  function O15(n37, t32, e26) {
    var r91 = M18.exec(t32.slice(e26, e26 + 3));
    return r91 ? (n37.L = +r91[0], e26 + r91[0].length) : -1;
  }
  function N17(n37, t32, e26) {
    var r91 = M18.exec(t32.slice(e26, e26 + 6));
    return r91 ? (n37.L = Math.floor(r91[0] / 1e3), e26 + r91[0].length) : -1;
  }
  function P17(n37, t32, e26) {
    var r91 = T15.exec(t32.slice(e26, e26 + 1));
    return r91 ? e26 + r91[0].length : -1;
  }
  function B16(n37, t32, e26) {
    var r91 = M18.exec(t32.slice(e26));
    return r91 ? (n37.Q = +r91[0], e26 + r91[0].length) : -1;
  }
  function G18(n37, t32, e26) {
    var r91 = M18.exec(t32.slice(e26));
    return r91 ? (n37.s = +r91[0], e26 + r91[0].length) : -1;
  }
  function $17(n37, t32) {
    return x18(n37.getDate(), t32, 2);
  }
  function z16(n37, t32) {
    return x18(n37.getHours(), t32, 2);
  }
  function E15(n37, t32) {
    return x18(n37.getHours() % 12 || 12, t32, 2);
  }
  function R16(e26, r91) {
    return x18(1 + y17.count(ie8(e26), e26), r91, 3);
  }
  function _16(n37, t32) {
    return x18(n37.getMilliseconds(), t32, 3);
  }
  function k16(n37, t32) {
    return _16(n37, t32) + "000";
  }
  function K18(n37, t32) {
    return x18(n37.getMonth() + 1, t32, 2);
  }
  function nn5(n37, t32) {
    return x18(n37.getMinutes(), t32, 2);
  }
  function tn6(n37, t32) {
    return x18(n37.getSeconds(), t32, 2);
  }
  function en7(n37) {
    var t32 = n37.getDay();
    return 0 === t32 ? 7 : t32;
  }
  function rn7(n37, r91) {
    return x18(O14.count(ie8(n37) - 1, n37), r91, 2);
  }
  function un8(n37) {
    var t32 = n37.getDay();
    return t32 >= 4 || 0 === t32 ? j17(n37) : j17.ceil(n37);
  }
  function on8(n37, e26) {
    return n37 = un8(n37), x18(j17.count(ie8(n37), n37) + (4 === ie8(n37).getDay()), e26, 2);
  }
  function cn7(n37) {
    return n37.getDay();
  }
  function an8(n37, e26) {
    return x18(W14.count(ie8(n37) - 1, n37), e26, 2);
  }
  function fn6(n37, t32) {
    return x18(n37.getFullYear() % 100, t32, 2);
  }
  function ln8(n37, t32) {
    return x18((n37 = un8(n37)).getFullYear() % 100, t32, 2);
  }
  function gn5(n37, t32) {
    return x18(n37.getFullYear() % 1e4, t32, 4);
  }
  function sn7(n37, t32) {
    var e26 = n37.getDay();
    return x18((n37 = e26 >= 4 || 0 === e26 ? j17(n37) : j17.ceil(n37)).getFullYear() % 1e4, t32, 4);
  }
  function hn6(n37) {
    var t32 = n37.getTimezoneOffset();
    return (t32 > 0 ? "-" : (t32 *= -1, "+")) + x18(t32 / 60 | 0, "0", 2) + x18(t32 % 60, "0", 2);
  }
  function yn5(n37, t32) {
    return x18(n37.getUTCDate(), t32, 2);
  }
  function vn5(n37, t32) {
    return x18(n37.getUTCHours(), t32, 2);
  }
  function dn5(n37, t32) {
    return x18(n37.getUTCHours() % 12 || 12, t32, 2);
  }
  function mn4(n37, t32) {
    return x18(1 + v20.count(ce6(n37), n37), t32, 3);
  }
  function Dn5(n37, t32) {
    return x18(n37.getUTCMilliseconds(), t32, 3);
  }
  function Cn4(n37, t32) {
    return Dn5(n37, t32) + "000";
  }
  function Mn5(n37, t32) {
    return x18(n37.getUTCMonth() + 1, t32, 2);
  }
  function Tn3(n37, t32) {
    return x18(n37.getUTCMinutes(), t32, 2);
  }
  function Un4(n37, t32) {
    return x18(n37.getUTCSeconds(), t32, 2);
  }
  function xn5(n37) {
    var t32 = n37.getUTCDay();
    return 0 === t32 ? 7 : t32;
  }
  function wn6(n37, t32) {
    return x18(P16.count(ce6(n37) - 1, n37), t32, 2);
  }
  function pn6(n37) {
    var t32 = n37.getUTCDay();
    return t32 >= 4 || 0 === t32 ? X14(n37) : X14.ceil(n37);
  }
  function Sn4(n37, t32) {
    return n37 = pn6(n37), x18(X14.count(ce6(n37), n37) + (4 === ce6(n37).getUTCDay()), t32, 2);
  }
  function Fn5(n37) {
    return n37.getUTCDay();
  }
  function Ln4(n37, t32) {
    return x18(Q14.count(ce6(n37) - 1, n37), t32, 2);
  }
  function Hn5(n37, t32) {
    return x18(n37.getUTCFullYear() % 100, t32, 2);
  }
  function Yn5(n37, t32) {
    return x18((n37 = pn6(n37)).getUTCFullYear() % 100, t32, 2);
  }
  function An6(n37, t32) {
    return x18(n37.getUTCFullYear() % 1e4, t32, 4);
  }
  function Zn5(n37, t32) {
    var e26 = n37.getUTCDay();
    return x18((n37 = e26 >= 4 || 0 === e26 ? X14(n37) : X14.ceil(n37)).getUTCFullYear() % 1e4, t32, 4);
  }
  function Wn4() {
    return "+0000";
  }
  function bn6() {
    return "%";
  }
  function Vn5(n37) {
    return +n37;
  }
  function jn4(n37) {
    return Math.floor(+n37 / 1e3);
  }
  function qn5(n37) {
    return y18 = h29(n37), v21 = y18.format, d20 = y18.parse, m21 = y18.utcFormat, D18 = y18.utcParse, y18;
  }
  qn5({ dateTime: "%x, %X", date: "%-m/%-d/%Y", time: "%-I:%M:%S %p", periods: ["AM", "PM"], days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"] });
  var In5 = "%Y-%m-%dT%H:%M:%S.%LZ";
  var Jn5 = Date.prototype.toISOString ? function(n37) {
    return n37.toISOString();
  } : m21(In5);
  var Qn5 = +/* @__PURE__ */ new Date("2000-01-01T00:00:00.000Z") ? function(n37) {
    var t32 = new Date(n37);
    return isNaN(t32) ? null : t32;
  } : D18(In5);

  // https://cdn.jsdelivr.net/npm/d3-scale@4.0.2/+esm
  function B17(n37, t32) {
    switch (arguments.length) {
      case 0:
        break;
      case 1:
        this.range(n37);
        break;
      default:
        this.range(t32).domain(n37);
    }
    return this;
  }
  function C16(n37, t32) {
    switch (arguments.length) {
      case 0:
        break;
      case 1:
        "function" == typeof n37 ? this.interpolator(n37) : this.range(n37);
        break;
      default:
        this.domain(n37), "function" == typeof t32 ? this.interpolator(t32) : this.range(t32);
    }
    return this;
  }
  var z17 = Symbol("implicit");
  function Y16() {
    var t32 = new e3(), r91 = [], e26 = [], u30 = z17;
    function a27(n37) {
      let a28 = t32.get(n37);
      if (void 0 === a28) {
        if (u30 !== z17)
          return u30;
        t32.set(n37, a28 = r91.push(n37) - 1);
      }
      return e26[a28 % e26.length];
    }
    return a27.domain = function(e27) {
      if (!arguments.length)
        return r91.slice();
      r91 = [], t32 = new e3();
      for (const n37 of e27)
        t32.has(n37) || t32.set(n37, r91.push(n37) - 1);
      return a27;
    }, a27.range = function(n37) {
      return arguments.length ? (e26 = Array.from(n37), a27) : e26.slice();
    }, a27.unknown = function(n37) {
      return arguments.length ? (u30 = n37, a27) : u30;
    }, a27.copy = function() {
      return Y16(r91, e26).unknown(u30);
    }, B17.apply(a27, arguments), a27;
  }
  function j19() {
    var n37, r91, e26 = Y16().unknown(void 0), u30 = e26.domain, a27 = e26.range, o35 = 0, i29 = 1, c30 = false, l35 = 0, f25 = 0, s29 = 0.5;
    function p24() {
      var e27 = u30().length, p25 = i29 < o35, h35 = p25 ? i29 : o35, g31 = p25 ? o35 : i29;
      n37 = (g31 - h35) / Math.max(1, e27 - l35 + 2 * f25), c30 && (n37 = Math.floor(n37)), h35 += (g31 - h35 - n37 * (e27 - l35)) * s29, r91 = n37 * (1 - l35), c30 && (h35 = Math.round(h35), r91 = Math.round(r91));
      var m27 = Nt6(e27).map(function(t32) {
        return h35 + n37 * t32;
      });
      return a27(p25 ? m27.reverse() : m27);
    }
    return delete e26.unknown, e26.domain = function(n38) {
      return arguments.length ? (u30(n38), p24()) : u30();
    }, e26.range = function(n38) {
      return arguments.length ? ([o35, i29] = n38, o35 = +o35, i29 = +i29, p24()) : [o35, i29];
    }, e26.rangeRound = function(n38) {
      return [o35, i29] = n38, o35 = +o35, i29 = +i29, c30 = true, p24();
    }, e26.bandwidth = function() {
      return r91;
    }, e26.step = function() {
      return n37;
    }, e26.round = function(n38) {
      return arguments.length ? (c30 = !!n38, p24()) : c30;
    }, e26.padding = function(n38) {
      return arguments.length ? (l35 = Math.min(1, f25 = +n38), p24()) : l35;
    }, e26.paddingInner = function(n38) {
      return arguments.length ? (l35 = Math.min(1, n38), p24()) : l35;
    }, e26.paddingOuter = function(n38) {
      return arguments.length ? (f25 = +n38, p24()) : f25;
    }, e26.align = function(n38) {
      return arguments.length ? (s29 = Math.max(0, Math.min(1, n38)), p24()) : s29;
    }, e26.copy = function() {
      return j19(u30(), [o35, i29]).round(c30).paddingInner(l35).paddingOuter(f25).align(s29);
    }, B17.apply(p24(), arguments);
  }
  function G19(n37) {
    var t32 = n37.copy;
    return n37.padding = n37.paddingOuter, delete n37.paddingInner, delete n37.paddingOuter, n37.copy = function() {
      return G19(t32());
    }, n37;
  }
  function H17() {
    return G19(j19.apply(null, arguments).paddingInner(1));
  }
  function J17(n37) {
    return +n37;
  }
  var K19 = [0, 1];
  function V16(n37) {
    return n37;
  }
  function W16(n37, t32) {
    return (t32 -= n37 = +n37) ? function(r92) {
      return (r92 - n37) / t32;
    } : (r91 = isNaN(t32) ? NaN : 0.5, function() {
      return r91;
    });
    var r91;
  }
  function X16(n37, t32, r91) {
    var e26 = n37[0], u30 = n37[1], a27 = t32[0], o35 = t32[1];
    return u30 < e26 ? (e26 = W16(u30, e26), a27 = r91(o35, a27)) : (e26 = W16(e26, u30), a27 = r91(a27, o35)), function(n38) {
      return a27(e26(n38));
    };
  }
  function Z15(n37, t32, e26) {
    var u30 = Math.min(n37.length, t32.length) - 1, a27 = new Array(u30), o35 = new Array(u30), i29 = -1;
    for (n37[u30] < n37[0] && (n37 = n37.slice().reverse(), t32 = t32.slice().reverse()); ++i29 < u30; )
      a27[i29] = W16(n37[i29], n37[i29 + 1]), o35[i29] = e26(t32[i29], t32[i29 + 1]);
    return function(t33) {
      var e27 = l9(n37, t33, 1, u30) - 1;
      return o35[e27](a27[e27](t33));
    };
  }
  function $18(n37, t32) {
    return t32.domain(n37.domain()).range(n37.range()).interpolate(n37.interpolate()).clamp(n37.clamp()).unknown(n37.unknown());
  }
  function _17() {
    var n37, t32, r91, e26, u30, a27, o35 = K19, i29 = K19, c30 = R12, p24 = V16;
    function h35() {
      var n38, t33, r92, c31 = Math.min(o35.length, i29.length);
      return p24 !== V16 && (n38 = o35[0], t33 = o35[c31 - 1], n38 > t33 && (r92 = n38, n38 = t33, t33 = r92), p24 = function(r93) {
        return Math.max(n38, Math.min(t33, r93));
      }), e26 = c31 > 2 ? Z15 : X16, u30 = a27 = null, g31;
    }
    function g31(t33) {
      return null == t33 || isNaN(t33 = +t33) ? r91 : (u30 || (u30 = e26(o35.map(n37), i29, c30)))(n37(p24(t33)));
    }
    return g31.invert = function(r92) {
      return p24(t32((a27 || (a27 = e26(i29, o35.map(n37), X11)))(r92)));
    }, g31.domain = function(n38) {
      return arguments.length ? (o35 = Array.from(n38, J17), h35()) : o35.slice();
    }, g31.range = function(n38) {
      return arguments.length ? (i29 = Array.from(n38), h35()) : i29.slice();
    }, g31.rangeRound = function(n38) {
      return i29 = Array.from(n38), c30 = j12, h35();
    }, g31.clamp = function(n38) {
      return arguments.length ? (p24 = !!n38 || V16, h35()) : p24 !== V16;
    }, g31.interpolate = function(n38) {
      return arguments.length ? (c30 = n38, h35()) : c30;
    }, g31.unknown = function(n38) {
      return arguments.length ? (r91 = n38, g31) : r91;
    }, function(r92, e27) {
      return n37 = r92, t32 = e27, h35();
    };
  }
  function nn6() {
    return _17()(V16, V16);
  }
  function tn7(n37, t32, r91, u30) {
    var a27, o35 = nt6(n37, t32, r91);
    switch ((u30 = e14(null == u30 ? ",f" : u30)).type) {
      case "s":
        var i29 = Math.max(Math.abs(n37), Math.abs(t32));
        return null != u30.precision || isNaN(a27 = v18(o35, i29)) || (u30.precision = a27), u19(u30, i29);
      case "":
      case "e":
      case "g":
      case "p":
      case "r":
        null != u30.precision || isNaN(a27 = M14(o35, Math.max(Math.abs(n37), Math.abs(t32)))) || (u30.precision = a27 - ("e" === u30.type));
        break;
      case "f":
      case "%":
        null != u30.precision || isNaN(a27 = p16(o35)) || (u30.precision = a27 - 2 * ("%" === u30.type));
    }
    return l22(u30);
  }
  function rn8(n37) {
    var t32 = n37.domain;
    return n37.ticks = function(n38) {
      var r91 = t32();
      return $8(r91[0], r91[r91.length - 1], null == n38 ? 10 : n38);
    }, n37.tickFormat = function(n38, r91) {
      var e26 = t32();
      return tn7(e26[0], e26[e26.length - 1], null == n38 ? 10 : n38, r91);
    }, n37.nice = function(r91) {
      null == r91 && (r91 = 10);
      var e26, u30, o35 = t32(), i29 = 0, c30 = o35.length - 1, l35 = o35[i29], f25 = o35[c30], s29 = 10;
      for (f25 < l35 && (u30 = l35, l35 = f25, f25 = u30, u30 = i29, i29 = c30, c30 = u30); s29-- > 0; ) {
        if ((u30 = tt6(l35, f25, r91)) === e26)
          return o35[i29] = l35, o35[c30] = f25, t32(o35);
        if (u30 > 0)
          l35 = Math.floor(l35 / u30) * u30, f25 = Math.ceil(f25 / u30) * u30;
        else {
          if (!(u30 < 0))
            break;
          l35 = Math.ceil(l35 * u30) / u30, f25 = Math.floor(f25 * u30) / u30;
        }
        e26 = u30;
      }
      return n37;
    }, n37;
  }
  function en8() {
    var n37 = nn6();
    return n37.copy = function() {
      return $18(n37, en8());
    }, B17.apply(n37, arguments), rn8(n37);
  }
  function un9(n37) {
    var t32;
    function r91(n38) {
      return null == n38 || isNaN(n38 = +n38) ? t32 : n38;
    }
    return r91.invert = r91, r91.domain = r91.range = function(t33) {
      return arguments.length ? (n37 = Array.from(t33, J17), r91) : n37.slice();
    }, r91.unknown = function(n38) {
      return arguments.length ? (t32 = n38, r91) : t32;
    }, r91.copy = function() {
      return un9(n37).unknown(t32);
    }, n37 = arguments.length ? Array.from(n37, J17) : [0, 1], rn8(r91);
  }
  function an9(n37, t32) {
    var r91, e26 = 0, u30 = (n37 = n37.slice()).length - 1, a27 = n37[e26], o35 = n37[u30];
    return o35 < a27 && (r91 = e26, e26 = u30, u30 = r91, r91 = a27, a27 = o35, o35 = r91), n37[e26] = t32.floor(a27), n37[u30] = t32.ceil(o35), n37;
  }
  function on9(n37) {
    return Math.log(n37);
  }
  function cn8(n37) {
    return Math.exp(n37);
  }
  function ln9(n37) {
    return -Math.log(-n37);
  }
  function fn7(n37) {
    return -Math.exp(-n37);
  }
  function sn8(n37) {
    return isFinite(n37) ? +("1e" + n37) : n37 < 0 ? 0 : n37;
  }
  function pn7(n37) {
    return (t32, r91) => -n37(-t32, r91);
  }
  function hn7(n37) {
    const t32 = n37(on9, cn8), r91 = t32.domain;
    let e26, a27, o35 = 10;
    function i29() {
      return e26 = function(n38) {
        return n38 === Math.E ? Math.log : 10 === n38 && Math.log10 || 2 === n38 && Math.log2 || (n38 = Math.log(n38), (t33) => Math.log(t33) / n38);
      }(o35), a27 = /* @__PURE__ */ function(n38) {
        return 10 === n38 ? sn8 : n38 === Math.E ? Math.exp : (t33) => Math.pow(n38, t33);
      }(o35), r91()[0] < 0 ? (e26 = pn7(e26), a27 = pn7(a27), n37(ln9, fn7)) : n37(on9, cn8), t32;
    }
    return t32.base = function(n38) {
      return arguments.length ? (o35 = +n38, i29()) : o35;
    }, t32.domain = function(n38) {
      return arguments.length ? (r91(n38), i29()) : r91();
    }, t32.ticks = (n38) => {
      const t33 = r91();
      let i30 = t33[0], c30 = t33[t33.length - 1];
      const l35 = c30 < i30;
      l35 && ([i30, c30] = [c30, i30]);
      let f25, s29, p24 = e26(i30), h35 = e26(c30);
      const g31 = null == n38 ? 10 : +n38;
      let m27 = [];
      if (!(o35 % 1) && h35 - p24 < g31) {
        if (p24 = Math.floor(p24), h35 = Math.ceil(h35), i30 > 0) {
          for (; p24 <= h35; ++p24)
            for (f25 = 1; f25 < o35; ++f25)
              if (s29 = p24 < 0 ? f25 / a27(-p24) : f25 * a27(p24), !(s29 < i30)) {
                if (s29 > c30)
                  break;
                m27.push(s29);
              }
        } else
          for (; p24 <= h35; ++p24)
            for (f25 = o35 - 1; f25 >= 1; --f25)
              if (s29 = p24 > 0 ? f25 / a27(-p24) : f25 * a27(p24), !(s29 < i30)) {
                if (s29 > c30)
                  break;
                m27.push(s29);
              }
        2 * m27.length < g31 && (m27 = $8(i30, c30, g31));
      } else
        m27 = $8(p24, h35, Math.min(h35 - p24, g31)).map(a27);
      return l35 ? m27.reverse() : m27;
    }, t32.tickFormat = (n38, r92) => {
      if (null == n38 && (n38 = 10), null == r92 && (r92 = 10 === o35 ? "s" : ","), "function" != typeof r92 && (o35 % 1 || null != (r92 = e14(r92)).precision || (r92.trim = true), r92 = l22(r92)), n38 === 1 / 0)
        return r92;
      const u30 = Math.max(1, o35 * n38 / t32.ticks().length);
      return (n39) => {
        let t33 = n39 / a27(Math.round(e26(n39)));
        return t33 * o35 < o35 - 0.5 && (t33 *= o35), t33 <= u30 ? r92(n39) : "";
      };
    }, t32.nice = () => r91(an9(r91(), { floor: (n38) => a27(Math.floor(e26(n38))), ceil: (n38) => a27(Math.ceil(e26(n38))) })), t32;
  }
  function gn6() {
    const n37 = hn7(_17()).domain([1, 10]);
    return n37.copy = () => $18(n37, gn6()).base(n37.base()), B17.apply(n37, arguments), n37;
  }
  function mn5(n37) {
    return function(t32) {
      return Math.sign(t32) * Math.log1p(Math.abs(t32 / n37));
    };
  }
  function dn6(n37) {
    return function(t32) {
      return Math.sign(t32) * Math.expm1(Math.abs(t32)) * n37;
    };
  }
  function yn6(n37) {
    var t32 = 1, r91 = n37(mn5(t32), dn6(t32));
    return r91.constant = function(r92) {
      return arguments.length ? n37(mn5(t32 = +r92), dn6(t32)) : t32;
    }, rn8(r91);
  }
  function vn6() {
    var n37 = yn6(_17());
    return n37.copy = function() {
      return $18(n37, vn6()).constant(n37.constant());
    }, B17.apply(n37, arguments);
  }
  function Mn6(n37) {
    return function(t32) {
      return t32 < 0 ? -Math.pow(-t32, n37) : Math.pow(t32, n37);
    };
  }
  function wn7(n37) {
    return n37 < 0 ? -Math.sqrt(-n37) : Math.sqrt(n37);
  }
  function kn4(n37) {
    return n37 < 0 ? -n37 * n37 : n37 * n37;
  }
  function Nn4(n37) {
    var t32 = n37(V16, V16), r91 = 1;
    return t32.exponent = function(t33) {
      return arguments.length ? 1 === (r91 = +t33) ? n37(V16, V16) : 0.5 === r91 ? n37(wn7, kn4) : n37(Mn6(r91), Mn6(1 / r91)) : r91;
    }, rn8(t32);
  }
  function xn6() {
    var n37 = Nn4(_17());
    return n37.copy = function() {
      return $18(n37, xn6()).exponent(n37.exponent());
    }, B17.apply(n37, arguments), n37;
  }
  function Sn5() {
    var n37, t32 = [], e26 = [], u30 = [];
    function a27() {
      var n38 = 0, r91 = Math.max(1, e26.length);
      for (u30 = new Array(r91 - 1); ++n38 < r91; )
        u30[n38 - 1] = yt6(t32, n38 / r91);
      return c30;
    }
    function c30(t33) {
      return null == t33 || isNaN(t33 = +t33) ? n37 : e26[l9(u30, t33)];
    }
    return c30.invertExtent = function(n38) {
      var r91 = e26.indexOf(n38);
      return r91 < 0 ? [NaN, NaN] : [r91 > 0 ? u30[r91 - 1] : t32[0], r91 < u30.length ? u30[r91] : t32[t32.length - 1]];
    }, c30.domain = function(n38) {
      if (!arguments.length)
        return t32.slice();
      t32 = [];
      for (let r91 of n38)
        null == r91 || isNaN(r91 = +r91) || t32.push(r91);
      return t32.sort(r56), a27();
    }, c30.range = function(n38) {
      return arguments.length ? (e26 = Array.from(n38), a27()) : e26.slice();
    }, c30.unknown = function(t33) {
      return arguments.length ? (n37 = t33, c30) : n37;
    }, c30.quantiles = function() {
      return u30.slice();
    }, c30.copy = function() {
      return Sn5().domain(t32).range(e26).unknown(n37);
    }, B17.apply(c30, arguments);
  }
  function In6() {
    var n37, t32 = [0.5], e26 = [0, 1], u30 = 1;
    function a27(a28) {
      return null != a28 && a28 <= a28 ? e26[l9(t32, a28, 0, u30)] : n37;
    }
    return a27.domain = function(n38) {
      return arguments.length ? (t32 = Array.from(n38), u30 = Math.min(t32.length, e26.length - 1), a27) : t32.slice();
    }, a27.range = function(n38) {
      return arguments.length ? (e26 = Array.from(n38), u30 = Math.min(t32.length, e26.length - 1), a27) : e26.slice();
    }, a27.invertExtent = function(n38) {
      var r91 = e26.indexOf(n38);
      return [t32[r91 - 1], t32[r91]];
    }, a27.unknown = function(t33) {
      return arguments.length ? (n37 = t33, a27) : n37;
    }, a27.copy = function() {
      return In6().domain(t32).range(e26).unknown(n37);
    }, B17.apply(a27, arguments);
  }
  function On4(n37) {
    return new Date(n37);
  }
  function Rn4(n37) {
    return n37 instanceof Date ? +n37 : +/* @__PURE__ */ new Date(+n37);
  }
  function En4(n37, t32, r91, e26, u30, a27, o35, i29, c30, l35) {
    var f25 = nn6(), s29 = f25.invert, p24 = f25.domain, h35 = l35(".%L"), g31 = l35(":%S"), m27 = l35("%I:%M"), d25 = l35("%I %p"), y24 = l35("%a %d"), v31 = l35("%b %d"), M26 = l35("%B"), w26 = l35("%Y");
    function k24(n38) {
      return (c30(n38) < n38 ? h35 : i29(n38) < n38 ? g31 : o35(n38) < n38 ? m27 : a27(n38) < n38 ? d25 : e26(n38) < n38 ? u30(n38) < n38 ? y24 : v31 : r91(n38) < n38 ? M26 : w26)(n38);
    }
    return f25.invert = function(n38) {
      return new Date(s29(n38));
    }, f25.domain = function(n38) {
      return arguments.length ? p24(Array.from(n38, Rn4)) : p24().map(On4);
    }, f25.ticks = function(t33) {
      var r92 = p24();
      return n37(r92[0], r92[r92.length - 1], null == t33 ? 10 : t33);
    }, f25.tickFormat = function(n38, t33) {
      return null == t33 ? k24 : l35(t33);
    }, f25.nice = function(n38) {
      var r92 = p24();
      return n38 && "function" == typeof n38.range || (n38 = t32(r92[0], r92[r92.length - 1], null == n38 ? 10 : n38)), n38 ? p24(an9(r92, n38)) : f25;
    }, f25.copy = function() {
      return $18(f25, En4(n37, t32, r91, e26, u30, a27, o35, i29, c30, l35));
    }, f25;
  }
  function Ln5() {
    return B17.apply(En4(he6, me7, ie8, oe8, O14, y17, F15, M17, C14, v21).domain([new Date(2e3, 0, 1), new Date(2e3, 0, 2)]), arguments);
  }
  function Fn6() {
    return B17.apply(En4(Ue6, Me6, ce6, ge7, P16, v20, d19, m20, C14, m21).domain([Date.UTC(2e3, 0, 1), Date.UTC(2e3, 0, 2)]), arguments);
  }
  function Tn4(n37, t32) {
    return t32.domain(n37.domain()).interpolator(n37.interpolator()).clamp(n37.clamp()).unknown(n37.unknown());
  }
  function jn5() {
    var n37, t32, r91, e26, u30, a27, o35, i29 = 0, c30 = 0.5, l35 = 1, h35 = 1, g31 = V16, m27 = false;
    function d25(n38) {
      return isNaN(n38 = +n38) ? o35 : (n38 = 0.5 + ((n38 = +a27(n38)) - t32) * (h35 * n38 < h35 * t32 ? e26 : u30), g31(m27 ? Math.max(0, Math.min(1, n38)) : n38));
    }
    function y24(n38) {
      return function(t33) {
        var r92, e27, u31;
        return arguments.length ? ([r92, e27, u31] = t33, g31 = U12(n38, [r92, e27, u31]), d25) : [g31(0), g31(0.5), g31(1)];
      };
    }
    return d25.domain = function(o36) {
      return arguments.length ? ([i29, c30, l35] = o36, n37 = a27(i29 = +i29), t32 = a27(c30 = +c30), r91 = a27(l35 = +l35), e26 = n37 === t32 ? 0 : 0.5 / (t32 - n37), u30 = t32 === r91 ? 0 : 0.5 / (r91 - t32), h35 = t32 < n37 ? -1 : 1, d25) : [i29, c30, l35];
    }, d25.clamp = function(n38) {
      return arguments.length ? (m27 = !!n38, d25) : m27;
    }, d25.interpolator = function(n38) {
      return arguments.length ? (g31 = n38, d25) : g31;
    }, d25.range = y24(R12), d25.rangeRound = y24(j12), d25.unknown = function(n38) {
      return arguments.length ? (o35 = n38, d25) : o35;
    }, function(o36) {
      return a27 = o36, n37 = o36(i29), t32 = o36(c30), r91 = o36(l35), e26 = n37 === t32 ? 0 : 0.5 / (t32 - n37), u30 = t32 === r91 ? 0 : 0.5 / (r91 - t32), h35 = t32 < n37 ? -1 : 1, d25;
    };
  }
  function Gn5() {
    var n37 = rn8(jn5()(V16));
    return n37.copy = function() {
      return Tn4(n37, Gn5());
    }, C16.apply(n37, arguments);
  }
  function Hn6() {
    var n37 = hn7(jn5()).domain([0.1, 1, 10]);
    return n37.copy = function() {
      return Tn4(n37, Hn6()).base(n37.base());
    }, C16.apply(n37, arguments);
  }
  function Jn6() {
    var n37 = yn6(jn5());
    return n37.copy = function() {
      return Tn4(n37, Jn6()).constant(n37.constant());
    }, C16.apply(n37, arguments);
  }
  function Kn4() {
    var n37 = Nn4(jn5());
    return n37.copy = function() {
      return Tn4(n37, Kn4()).exponent(n37.exponent());
    }, C16.apply(n37, arguments);
  }

  // https://cdn.jsdelivr.net/npm/d3-scale-chromatic@3.1.0/+esm
  function c22(f25) {
    for (var e26 = f25.length / 6 | 0, a27 = new Array(e26), d25 = 0; d25 < e26; )
      a27[d25] = "#" + f25.slice(6 * d25, 6 * ++d25);
    return a27;
  }
  var b19 = c22("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");
  var t22 = c22("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666");
  var r85 = c22("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666");
  var n32 = c22("4269d0efb118ff725c6cc5b03ca951ff8ab7a463f297bbf59c6b4e9498a0");
  var s23 = c22("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");
  var o24 = c22("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2");
  var m22 = c22("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc");
  var h30 = c22("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999");
  var l27 = c22("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3");
  var p21 = c22("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");
  var i24 = c22("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab");
  var u24 = (e26) => M10(e26[e26.length - 1]);
  var M19 = new Array(3).concat("d8b365f5f5f55ab4ac", "a6611adfc27d80cdc1018571", "a6611adfc27df5f5f580cdc1018571", "8c510ad8b365f6e8c3c7eae55ab4ac01665e", "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e", "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e", "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e", "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30", "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(c22);
  var y19 = u24(M19);
  var w19 = new Array(3).concat("af8dc3f7f7f77fbf7b", "7b3294c2a5cfa6dba0008837", "7b3294c2a5cff7f7f7a6dba0008837", "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837", "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837", "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837", "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837", "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b", "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(c22);
  var A20 = u24(w19);
  var P18 = new Array(3).concat("e9a3c9f7f7f7a1d76a", "d01c8bf1b6dab8e1864dac26", "d01c8bf1b6daf7f7f7b8e1864dac26", "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221", "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221", "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221", "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221", "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419", "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(c22);
  var B18 = u24(P18);
  var G20 = new Array(3).concat("998ec3f7f7f7f1a340", "5e3c99b2abd2fdb863e66101", "5e3c99b2abd2f7f7f7fdb863e66101", "542788998ec3d8daebfee0b6f1a340b35806", "542788998ec3d8daebf7f7f7fee0b6f1a340b35806", "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806", "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806", "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08", "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(c22);
  var R17 = u24(G20);
  var Y17 = new Array(3).concat("ef8a62f7f7f767a9cf", "ca0020f4a58292c5de0571b0", "ca0020f4a582f7f7f792c5de0571b0", "b2182bef8a62fddbc7d1e5f067a9cf2166ac", "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac", "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac", "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac", "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061", "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(c22);
  var x19 = u24(Y17);
  var O16 = new Array(3).concat("ef8a62ffffff999999", "ca0020f4a582bababa404040", "ca0020f4a582ffffffbababa404040", "b2182bef8a62fddbc7e0e0e09999994d4d4d", "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d", "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d", "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d", "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a", "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(c22);
  var g23 = u24(O16);
  var v22 = new Array(3).concat("fc8d59ffffbf91bfdb", "d7191cfdae61abd9e92c7bb6", "d7191cfdae61ffffbfabd9e92c7bb6", "d73027fc8d59fee090e0f3f891bfdb4575b4", "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4", "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4", "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4", "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695", "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(c22);
  var S17 = u24(v22);
  var C17 = new Array(3).concat("fc8d59ffffbf91cf60", "d7191cfdae61a6d96a1a9641", "d7191cfdae61ffffbfa6d96a1a9641", "d73027fc8d59fee08bd9ef8b91cf601a9850", "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850", "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850", "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850", "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837", "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(c22);
  var I19 = u24(C17);
  var D19 = new Array(3).concat("fc8d59ffffbf99d594", "d7191cfdae61abdda42b83ba", "d7191cfdae61ffffbfabdda42b83ba", "d53e4ffc8d59fee08be6f59899d5943288bd", "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd", "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd", "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd", "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2", "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(c22);
  var T16 = u24(D19);
  var k17 = new Array(3).concat("e5f5f999d8c92ca25f", "edf8fbb2e2e266c2a4238b45", "edf8fbb2e2e266c2a42ca25f006d2c", "edf8fbccece699d8c966c2a42ca25f006d2c", "edf8fbccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(c22);
  var V17 = u24(k17);
  var W17 = new Array(3).concat("e0ecf49ebcda8856a7", "edf8fbb3cde38c96c688419d", "edf8fbb3cde38c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(c22);
  var j20 = u24(W17);
  var q18 = new Array(3).concat("e0f3dba8ddb543a2ca", "f0f9e8bae4bc7bccc42b8cbe", "f0f9e8bae4bc7bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(c22);
  var z18 = u24(q18);
  var E16 = new Array(3).concat("fee8c8fdbb84e34a33", "fef0d9fdcc8afc8d59d7301f", "fef0d9fdcc8afc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(c22);
  var F17 = u24(E16);
  var H18 = new Array(3).concat("ece2f0a6bddb1c9099", "f6eff7bdc9e167a9cf02818a", "f6eff7bdc9e167a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(c22);
  var J18 = u24(H18);
  var K20 = new Array(3).concat("ece7f2a6bddb2b8cbe", "f1eef6bdc9e174a9cf0570b0", "f1eef6bdc9e174a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(c22);
  var L17 = u24(K20);
  var N18 = new Array(3).concat("e7e1efc994c7dd1c77", "f1eef6d7b5d8df65b0ce1256", "f1eef6d7b5d8df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(c22);
  var Q16 = u24(N18);
  var U17 = new Array(3).concat("fde0ddfa9fb5c51b8a", "feebe2fbb4b9f768a1ae017e", "feebe2fbb4b9f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(c22);
  var X17 = u24(U17);
  var Z16 = new Array(3).concat("edf8b17fcdbb2c7fb8", "ffffcca1dab441b6c4225ea8", "ffffcca1dab441b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(c22);
  var $19 = u24(Z16);
  var _18 = new Array(3).concat("f7fcb9addd8e31a354", "ffffccc2e69978c679238443", "ffffccc2e69978c67931a354006837", "ffffccd9f0a3addd8e78c67931a354006837", "ffffccd9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(c22);
  var ff = u24(_18);
  var ef = new Array(3).concat("fff7bcfec44fd95f0e", "ffffd4fed98efe9929cc4c02", "ffffd4fed98efe9929d95f0e993404", "ffffd4fee391fec44ffe9929d95f0e993404", "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(c22);
  var af = u24(ef);
  var df = new Array(3).concat("ffeda0feb24cf03b20", "ffffb2fecc5cfd8d3ce31a1c", "ffffb2fecc5cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(c22);
  var cf = u24(df);
  var bf = new Array(3).concat("deebf79ecae13182bd", "eff3ffbdd7e76baed62171b5", "eff3ffbdd7e76baed63182bd08519c", "eff3ffc6dbef9ecae16baed63182bd08519c", "eff3ffc6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(c22);
  var tf = u24(bf);
  var rf = new Array(3).concat("e5f5e0a1d99b31a354", "edf8e9bae4b374c476238b45", "edf8e9bae4b374c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(c22);
  var nf = u24(rf);
  var sf = new Array(3).concat("f0f0f0bdbdbd636363", "f7f7f7cccccc969696525252", "f7f7f7cccccc969696636363252525", "f7f7f7d9d9d9bdbdbd969696636363252525", "f7f7f7d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(c22);
  var of = u24(sf);
  var mf = new Array(3).concat("efedf5bcbddc756bb1", "f2f0f7cbc9e29e9ac86a51a3", "f2f0f7cbc9e29e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(c22);
  var hf = u24(mf);
  var lf = new Array(3).concat("fee0d2fc9272de2d26", "fee5d9fcae91fb6a4acb181d", "fee5d9fcae91fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(c22);
  var pf = u24(lf);
  var uf = new Array(3).concat("fee6cefdae6be6550d", "feeddefdbe85fd8d3cd94701", "feeddefdbe85fd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(c22);
  var Mf = u24(uf);
  function yf(f25) {
    return f25 = Math.max(0, Math.min(1, f25)), "rgb(" + Math.max(0, Math.min(255, Math.round(-4.54 - f25 * (35.34 - f25 * (2381.73 - f25 * (6402.7 - f25 * (7024.72 - 2710.57 * f25))))))) + ", " + Math.max(0, Math.min(255, Math.round(32.49 + f25 * (170.73 + f25 * (52.82 - f25 * (131.46 - f25 * (176.58 - 67.37 * f25))))))) + ", " + Math.max(0, Math.min(255, Math.round(81.24 + f25 * (442.36 - f25 * (2482.43 - f25 * (6167.24 - f25 * (6614.94 - 2475.67 * f25))))))) + ")";
  }
  var wf = J10(gt7(300, 0.5, 0), gt7(-240, 0.5, 1));
  var Af = J10(gt7(-100, 0.75, 0.35), gt7(80, 1.5, 0.8));
  var Pf = J10(gt7(260, 0.75, 0.35), gt7(80, 1.5, 0.8));
  var Bf = gt7();
  function Gf(f25) {
    (f25 < 0 || f25 > 1) && (f25 -= Math.floor(f25));
    var e26 = Math.abs(f25 - 0.5);
    return Bf.h = 360 * f25 - 100, Bf.s = 1.5 - 1.5 * e26, Bf.l = 0.8 - 0.9 * e26, Bf + "";
  }
  var Rf = k10();
  var Yf = Math.PI / 3;
  var xf = 2 * Math.PI / 3;
  function Of(f25) {
    var e26;
    return f25 = (0.5 - f25) * Math.PI, Rf.r = 255 * (e26 = Math.sin(f25)) * e26, Rf.g = 255 * (e26 = Math.sin(f25 + Yf)) * e26, Rf.b = 255 * (e26 = Math.sin(f25 + xf)) * e26, Rf + "";
  }
  function gf(f25) {
    return f25 = Math.max(0, Math.min(1, f25)), "rgb(" + Math.max(0, Math.min(255, Math.round(34.61 + f25 * (1172.33 - f25 * (10793.56 - f25 * (33300.12 - f25 * (38394.49 - 14825.05 * f25))))))) + ", " + Math.max(0, Math.min(255, Math.round(23.31 + f25 * (557.33 + f25 * (1225.33 - f25 * (3574.96 - f25 * (1073.77 + 707.56 * f25))))))) + ", " + Math.max(0, Math.min(255, Math.round(27.2 + f25 * (3211.1 - f25 * (15327.97 - f25 * (27814 - f25 * (22569.18 - 6838.66 * f25))))))) + ")";
  }
  function vf(f25) {
    var e26 = f25.length;
    return function(a27) {
      return f25[Math.max(0, Math.min(e26 - 1, Math.floor(a27 * e26)))];
    };
  }
  var Sf = vf(c22("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));
  var Cf = vf(c22("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));
  var If = vf(c22("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));
  var Df = vf(c22("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));

  // https://cdn.jsdelivr.net/npm/d3-shape@3.2.0/+esm
  function n33(t32) {
    return function() {
      return t32;
    };
  }
  var s24 = Math.cos;
  var h31 = Math.min;
  var _19 = Math.sin;
  var r86 = Math.sqrt;
  var a20 = 1e-12;
  var l28 = Math.PI;
  var c23 = l28 / 2;
  var u25 = 2 * l28;
  function y20(n37) {
    let i29 = 3;
    return n37.digits = function(t32) {
      if (!arguments.length)
        return i29;
      if (null == t32)
        i29 = null;
      else {
        const n38 = Math.floor(t32);
        if (!(n38 >= 0))
          throw new RangeError(`invalid digits: ${t32}`);
        i29 = n38;
      }
      return n37;
    }, () => new e10(i29);
  }
  var b20 = Array.prototype.slice;
  function w20(t32) {
    return "object" == typeof t32 && "length" in t32 ? t32 : Array.from(t32);
  }
  function k18(t32) {
    this._context = t32;
  }
  function N19(t32) {
    return new k18(t32);
  }
  function S18(t32) {
    return t32[0];
  }
  function E17(t32) {
    return t32[1];
  }
  function A21(t32, i29) {
    var e26 = n33(true), s29 = null, o35 = N19, h35 = null, _24 = y20(r91);
    function r91(n37) {
      var r92, a27, l35, c30 = (n37 = w20(n37)).length, u30 = false;
      for (null == s29 && (h35 = o35(l35 = _24())), r92 = 0; r92 <= c30; ++r92)
        !(r92 < c30 && e26(a27 = n37[r92], r92, n37)) === u30 && ((u30 = !u30) ? h35.lineStart() : h35.lineEnd()), u30 && h35.point(+t32(a27, r92, n37), +i29(a27, r92, n37));
      if (l35)
        return h35 = null, l35 + "" || null;
    }
    return t32 = "function" == typeof t32 ? t32 : void 0 === t32 ? S18 : n33(t32), i29 = "function" == typeof i29 ? i29 : void 0 === i29 ? E17 : n33(i29), r91.x = function(i30) {
      return arguments.length ? (t32 = "function" == typeof i30 ? i30 : n33(+i30), r91) : t32;
    }, r91.y = function(t33) {
      return arguments.length ? (i29 = "function" == typeof t33 ? t33 : n33(+t33), r91) : i29;
    }, r91.defined = function(t33) {
      return arguments.length ? (e26 = "function" == typeof t33 ? t33 : n33(!!t33), r91) : e26;
    }, r91.curve = function(t33) {
      return arguments.length ? (o35 = t33, null != s29 && (h35 = o35(s29)), r91) : o35;
    }, r91.context = function(t33) {
      return arguments.length ? (null == t33 ? s29 = h35 = null : h35 = o35(s29 = t33), r91) : s29;
    }, r91;
  }
  function M20(t32, i29, e26) {
    var s29 = null, o35 = n33(true), h35 = null, _24 = N19, r91 = null, a27 = y20(l35);
    function l35(n37) {
      var l36, c31, u30, f25, y24, x22 = (n37 = w20(n37)).length, p24 = false, v31 = new Array(x22), d25 = new Array(x22);
      for (null == h35 && (r91 = _24(y24 = a27())), l36 = 0; l36 <= x22; ++l36) {
        if (!(l36 < x22 && o35(f25 = n37[l36], l36, n37)) === p24)
          if (p24 = !p24)
            c31 = l36, r91.areaStart(), r91.lineStart();
          else {
            for (r91.lineEnd(), r91.lineStart(), u30 = l36 - 1; u30 >= c31; --u30)
              r91.point(v31[u30], d25[u30]);
            r91.lineEnd(), r91.areaEnd();
          }
        p24 && (v31[l36] = +t32(f25, l36, n37), d25[l36] = +i29(f25, l36, n37), r91.point(s29 ? +s29(f25, l36, n37) : v31[l36], e26 ? +e26(f25, l36, n37) : d25[l36]));
      }
      if (y24)
        return r91 = null, y24 + "" || null;
    }
    function c30() {
      return A21().defined(o35).curve(_24).context(h35);
    }
    return t32 = "function" == typeof t32 ? t32 : void 0 === t32 ? S18 : n33(+t32), i29 = "function" == typeof i29 ? i29 : n33(void 0 === i29 ? 0 : +i29), e26 = "function" == typeof e26 ? e26 : void 0 === e26 ? E17 : n33(+e26), l35.x = function(i30) {
      return arguments.length ? (t32 = "function" == typeof i30 ? i30 : n33(+i30), s29 = null, l35) : t32;
    }, l35.x0 = function(i30) {
      return arguments.length ? (t32 = "function" == typeof i30 ? i30 : n33(+i30), l35) : t32;
    }, l35.x1 = function(t33) {
      return arguments.length ? (s29 = null == t33 ? null : "function" == typeof t33 ? t33 : n33(+t33), l35) : s29;
    }, l35.y = function(t33) {
      return arguments.length ? (i29 = "function" == typeof t33 ? t33 : n33(+t33), e26 = null, l35) : i29;
    }, l35.y0 = function(t33) {
      return arguments.length ? (i29 = "function" == typeof t33 ? t33 : n33(+t33), l35) : i29;
    }, l35.y1 = function(t33) {
      return arguments.length ? (e26 = null == t33 ? null : "function" == typeof t33 ? t33 : n33(+t33), l35) : e26;
    }, l35.lineX0 = l35.lineY0 = function() {
      return c30().x(t32).y(i29);
    }, l35.lineY1 = function() {
      return c30().x(t32).y(e26);
    }, l35.lineX1 = function() {
      return c30().x(s29).y(i29);
    }, l35.defined = function(t33) {
      return arguments.length ? (o35 = "function" == typeof t33 ? t33 : n33(!!t33), l35) : o35;
    }, l35.curve = function(t33) {
      return arguments.length ? (_24 = t33, null != h35 && (r91 = _24(h35)), l35) : _24;
    }, l35.context = function(t33) {
      return arguments.length ? (null == t33 ? h35 = r91 = null : r91 = _24(h35 = t33), l35) : h35;
    }, l35;
  }
  k18.prototype = { areaStart: function() {
    this._line = 0;
  }, areaEnd: function() {
    this._line = NaN;
  }, lineStart: function() {
    this._point = 0;
  }, lineEnd: function() {
    (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath(), this._line = 1 - this._line;
  }, point: function(t32, n37) {
    switch (t32 = +t32, n37 = +n37, this._point) {
      case 0:
        this._point = 1, this._line ? this._context.lineTo(t32, n37) : this._context.moveTo(t32, n37);
        break;
      case 1:
        this._point = 2;
      default:
        this._context.lineTo(t32, n37);
    }
  } };
  var R18 = X18(N19);
  function z19(t32) {
    this._curve = t32;
  }
  function X18(t32) {
    function n37(n38) {
      return new z19(t32(n38));
    }
    return n37._curve = t32, n37;
  }
  z19.prototype = { areaStart: function() {
    this._curve.areaStart();
  }, areaEnd: function() {
    this._curve.areaEnd();
  }, lineStart: function() {
    this._curve.lineStart();
  }, lineEnd: function() {
    this._curve.lineEnd();
  }, point: function(t32, n37) {
    this._curve.point(n37 * Math.sin(t32), n37 * -Math.cos(t32));
  } };
  var I20 = class {
    constructor(t32, n37) {
      this._context = t32, this._x = n37;
    }
    areaStart() {
      this._line = 0;
    }
    areaEnd() {
      this._line = NaN;
    }
    lineStart() {
      this._point = 0;
    }
    lineEnd() {
      (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath(), this._line = 1 - this._line;
    }
    point(t32, n37) {
      switch (t32 = +t32, n37 = +n37, this._point) {
        case 0:
          this._point = 1, this._line ? this._context.lineTo(t32, n37) : this._context.moveTo(t32, n37);
          break;
        case 1:
          this._point = 2;
        default:
          this._x ? this._context.bezierCurveTo(this._x0 = (this._x0 + t32) / 2, this._y0, this._x0, n37, t32, n37) : this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + n37) / 2, t32, this._y0, t32, n37);
      }
      this._x0 = t32, this._y0 = n37;
    }
  };
  function L18(t32) {
    return new I20(t32, true);
  }
  function W18(t32) {
    return new I20(t32, false);
  }
  var Q17 = r86(3);
  var U18 = { draw(t32, n37) {
    const i29 = 0.59436 * r86(n37 + h31(n37 / 28, 0.75)), e26 = i29 / 2, s29 = e26 * Q17;
    t32.moveTo(0, i29), t32.lineTo(0, -i29), t32.moveTo(-s29, -e26), t32.lineTo(s29, e26), t32.moveTo(-s29, e26), t32.lineTo(s29, -e26);
  } };
  var Z17 = { draw(t32, n37) {
    const i29 = r86(n37 / l28);
    t32.moveTo(i29, 0), t32.arc(0, 0, i29, 0, u25);
  } };
  var tt11 = { draw(t32, n37) {
    const i29 = r86(n37 / 5) / 2;
    t32.moveTo(-3 * i29, -i29), t32.lineTo(-i29, -i29), t32.lineTo(-i29, -3 * i29), t32.lineTo(i29, -3 * i29), t32.lineTo(i29, -i29), t32.lineTo(3 * i29, -i29), t32.lineTo(3 * i29, i29), t32.lineTo(i29, i29), t32.lineTo(i29, 3 * i29), t32.lineTo(-i29, 3 * i29), t32.lineTo(-i29, i29), t32.lineTo(-3 * i29, i29), t32.closePath();
  } };
  var nt12 = r86(1 / 3);
  var it12 = 2 * nt12;
  var et10 = { draw(t32, n37) {
    const i29 = r86(n37 / it12), e26 = i29 * nt12;
    t32.moveTo(0, -i29), t32.lineTo(e26, 0), t32.lineTo(0, i29), t32.lineTo(-e26, 0), t32.closePath();
  } };
  var st11 = { draw(t32, n37) {
    const i29 = 0.62625 * r86(n37);
    t32.moveTo(0, -i29), t32.lineTo(i29, 0), t32.lineTo(0, i29), t32.lineTo(-i29, 0), t32.closePath();
  } };
  var ot11 = { draw(t32, n37) {
    const i29 = 0.87559 * r86(n37 - h31(n37 / 7, 2));
    t32.moveTo(-i29, 0), t32.lineTo(i29, 0), t32.moveTo(0, i29), t32.lineTo(0, -i29);
  } };
  var ht11 = { draw(t32, n37) {
    const i29 = r86(n37), e26 = -i29 / 2;
    t32.rect(e26, e26, i29, i29);
  } };
  var _t8 = { draw(t32, n37) {
    const i29 = 0.4431 * r86(n37);
    t32.moveTo(i29, i29), t32.lineTo(i29, -i29), t32.lineTo(-i29, -i29), t32.lineTo(-i29, i29), t32.closePath();
  } };
  var rt11 = _19(l28 / 10) / _19(7 * l28 / 10);
  var at11 = _19(u25 / 10) * rt11;
  var lt11 = -s24(u25 / 10) * rt11;
  var ct10 = { draw(t32, n37) {
    const i29 = r86(0.8908130915292852 * n37), e26 = at11 * i29, o35 = lt11 * i29;
    t32.moveTo(0, -i29), t32.lineTo(e26, o35);
    for (let n38 = 1; n38 < 5; ++n38) {
      const h35 = u25 * n38 / 5, r91 = s24(h35), a27 = _19(h35);
      t32.lineTo(a27 * i29, -r91 * i29), t32.lineTo(r91 * e26 - a27 * o35, a27 * e26 + r91 * o35);
    }
    t32.closePath();
  } };
  var ut11 = r86(3);
  var ft10 = { draw(t32, n37) {
    const i29 = -r86(n37 / (3 * ut11));
    t32.moveTo(0, 2 * i29), t32.lineTo(-ut11 * i29, -i29), t32.lineTo(ut11 * i29, -i29), t32.closePath();
  } };
  var yt10 = r86(3);
  var xt8 = { draw(t32, n37) {
    const i29 = 0.6824 * r86(n37), e26 = i29 / 2, s29 = i29 * yt10 / 2;
    t32.moveTo(0, -i29), t32.lineTo(s29, e26), t32.lineTo(-s29, e26), t32.closePath();
  } };
  var pt10 = -0.5;
  var vt10 = r86(3) / 2;
  var dt8 = 1 / r86(12);
  var Tt7 = 3 * (dt8 / 2 + 1);
  var gt9 = { draw(t32, n37) {
    const i29 = r86(n37 / Tt7), e26 = i29 / 2, s29 = i29 * dt8, o35 = e26, h35 = i29 * dt8 + i29, _24 = -o35, a27 = h35;
    t32.moveTo(e26, s29), t32.lineTo(o35, h35), t32.lineTo(_24, a27), t32.lineTo(pt10 * e26 - vt10 * s29, vt10 * e26 + pt10 * s29), t32.lineTo(pt10 * o35 - vt10 * h35, vt10 * o35 + pt10 * h35), t32.lineTo(pt10 * _24 - vt10 * a27, vt10 * _24 + pt10 * a27), t32.lineTo(pt10 * e26 + vt10 * s29, pt10 * s29 - vt10 * e26), t32.lineTo(pt10 * o35 + vt10 * h35, pt10 * h35 - vt10 * o35), t32.lineTo(pt10 * _24 + vt10 * a27, pt10 * a27 - vt10 * _24), t32.closePath();
  } };
  var mt9 = { draw(t32, n37) {
    const i29 = 0.6189 * r86(n37 - h31(n37 / 6, 1.7));
    t32.moveTo(-i29, -i29), t32.lineTo(i29, i29), t32.moveTo(-i29, i29), t32.lineTo(i29, -i29);
  } };
  var bt8 = [Z17, tt11, et10, ht11, ct10, ft10, gt9];
  var wt7 = [Z17, ot11, mt9, xt8, U18, _t8, st11];
  function Nt9() {
  }
  function St8(t32, n37, i29) {
    t32._context.bezierCurveTo((2 * t32._x0 + t32._x1) / 3, (2 * t32._y0 + t32._y1) / 3, (t32._x0 + 2 * t32._x1) / 3, (t32._y0 + 2 * t32._y1) / 3, (t32._x0 + 4 * t32._x1 + n37) / 6, (t32._y0 + 4 * t32._y1 + i29) / 6);
  }
  function Et8(t32) {
    this._context = t32;
  }
  function At8(t32) {
    return new Et8(t32);
  }
  function Mt8(t32) {
    this._context = t32;
  }
  function Pt7(t32) {
    return new Mt8(t32);
  }
  function Ct8(t32) {
    this._context = t32;
  }
  function Ot7(t32) {
    return new Ct8(t32);
  }
  function Rt9(t32, n37) {
    this._basis = new Et8(t32), this._beta = n37;
  }
  Et8.prototype = { areaStart: function() {
    this._line = 0;
  }, areaEnd: function() {
    this._line = NaN;
  }, lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN, this._point = 0;
  }, lineEnd: function() {
    switch (this._point) {
      case 3:
        St8(this, this._x1, this._y1);
      case 2:
        this._context.lineTo(this._x1, this._y1);
    }
    (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath(), this._line = 1 - this._line;
  }, point: function(t32, n37) {
    switch (t32 = +t32, n37 = +n37, this._point) {
      case 0:
        this._point = 1, this._line ? this._context.lineTo(t32, n37) : this._context.moveTo(t32, n37);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3, this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);
      default:
        St8(this, t32, n37);
    }
    this._x0 = this._x1, this._x1 = t32, this._y0 = this._y1, this._y1 = n37;
  } }, Mt8.prototype = { areaStart: Nt9, areaEnd: Nt9, lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN, this._point = 0;
  }, lineEnd: function() {
    switch (this._point) {
      case 1:
        this._context.moveTo(this._x2, this._y2), this._context.closePath();
        break;
      case 2:
        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3), this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3), this._context.closePath();
        break;
      case 3:
        this.point(this._x2, this._y2), this.point(this._x3, this._y3), this.point(this._x4, this._y4);
    }
  }, point: function(t32, n37) {
    switch (t32 = +t32, n37 = +n37, this._point) {
      case 0:
        this._point = 1, this._x2 = t32, this._y2 = n37;
        break;
      case 1:
        this._point = 2, this._x3 = t32, this._y3 = n37;
        break;
      case 2:
        this._point = 3, this._x4 = t32, this._y4 = n37, this._context.moveTo((this._x0 + 4 * this._x1 + t32) / 6, (this._y0 + 4 * this._y1 + n37) / 6);
        break;
      default:
        St8(this, t32, n37);
    }
    this._x0 = this._x1, this._x1 = t32, this._y0 = this._y1, this._y1 = n37;
  } }, Ct8.prototype = { areaStart: function() {
    this._line = 0;
  }, areaEnd: function() {
    this._line = NaN;
  }, lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN, this._point = 0;
  }, lineEnd: function() {
    (this._line || 0 !== this._line && 3 === this._point) && this._context.closePath(), this._line = 1 - this._line;
  }, point: function(t32, n37) {
    switch (t32 = +t32, n37 = +n37, this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        var i29 = (this._x0 + 4 * this._x1 + t32) / 6, e26 = (this._y0 + 4 * this._y1 + n37) / 6;
        this._line ? this._context.lineTo(i29, e26) : this._context.moveTo(i29, e26);
        break;
      case 3:
        this._point = 4;
      default:
        St8(this, t32, n37);
    }
    this._x0 = this._x1, this._x1 = t32, this._y0 = this._y1, this._y1 = n37;
  } }, Rt9.prototype = { lineStart: function() {
    this._x = [], this._y = [], this._basis.lineStart();
  }, lineEnd: function() {
    var t32 = this._x, n37 = this._y, i29 = t32.length - 1;
    if (i29 > 0)
      for (var e26, s29 = t32[0], o35 = n37[0], h35 = t32[i29] - s29, _24 = n37[i29] - o35, r91 = -1; ++r91 <= i29; )
        e26 = r91 / i29, this._basis.point(this._beta * t32[r91] + (1 - this._beta) * (s29 + e26 * h35), this._beta * n37[r91] + (1 - this._beta) * (o35 + e26 * _24));
    this._x = this._y = null, this._basis.lineEnd();
  }, point: function(t32, n37) {
    this._x.push(+t32), this._y.push(+n37);
  } };
  var zt7 = function t23(n37) {
    function i29(t32) {
      return 1 === n37 ? new Et8(t32) : new Rt9(t32, n37);
    }
    return i29.beta = function(n38) {
      return t23(+n38);
    }, i29;
  }(0.85);
  function Xt7(t32, n37, i29) {
    t32._context.bezierCurveTo(t32._x1 + t32._k * (t32._x2 - t32._x0), t32._y1 + t32._k * (t32._y2 - t32._y0), t32._x2 + t32._k * (t32._x1 - n37), t32._y2 + t32._k * (t32._y1 - i29), t32._x2, t32._y2);
  }
  function Yt7(t32, n37) {
    this._context = t32, this._k = (1 - n37) / 6;
  }
  Yt7.prototype = { areaStart: function() {
    this._line = 0;
  }, areaEnd: function() {
    this._line = NaN;
  }, lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN, this._point = 0;
  }, lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        Xt7(this, this._x1, this._y1);
    }
    (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath(), this._line = 1 - this._line;
  }, point: function(t32, n37) {
    switch (t32 = +t32, n37 = +n37, this._point) {
      case 0:
        this._point = 1, this._line ? this._context.lineTo(t32, n37) : this._context.moveTo(t32, n37);
        break;
      case 1:
        this._point = 2, this._x1 = t32, this._y1 = n37;
        break;
      case 2:
        this._point = 3;
      default:
        Xt7(this, t32, n37);
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = t32, this._y0 = this._y1, this._y1 = this._y2, this._y2 = n37;
  } };
  var Bt6 = function t24(n37) {
    function i29(t32) {
      return new Yt7(t32, n37);
    }
    return i29.tension = function(n38) {
      return t24(+n38);
    }, i29;
  }(0);
  function qt7(t32, n37) {
    this._context = t32, this._k = (1 - n37) / 6;
  }
  qt7.prototype = { areaStart: Nt9, areaEnd: Nt9, lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN, this._point = 0;
  }, lineEnd: function() {
    switch (this._point) {
      case 1:
        this._context.moveTo(this._x3, this._y3), this._context.closePath();
        break;
      case 2:
        this._context.lineTo(this._x3, this._y3), this._context.closePath();
        break;
      case 3:
        this.point(this._x3, this._y3), this.point(this._x4, this._y4), this.point(this._x5, this._y5);
    }
  }, point: function(t32, n37) {
    switch (t32 = +t32, n37 = +n37, this._point) {
      case 0:
        this._point = 1, this._x3 = t32, this._y3 = n37;
        break;
      case 1:
        this._point = 2, this._context.moveTo(this._x4 = t32, this._y4 = n37);
        break;
      case 2:
        this._point = 3, this._x5 = t32, this._y5 = n37;
        break;
      default:
        Xt7(this, t32, n37);
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = t32, this._y0 = this._y1, this._y1 = this._y2, this._y2 = n37;
  } };
  var Dt8 = function t25(n37) {
    function i29(t32) {
      return new qt7(t32, n37);
    }
    return i29.tension = function(n38) {
      return t25(+n38);
    }, i29;
  }(0);
  function It7(t32, n37) {
    this._context = t32, this._k = (1 - n37) / 6;
  }
  It7.prototype = { areaStart: function() {
    this._line = 0;
  }, areaEnd: function() {
    this._line = NaN;
  }, lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN, this._point = 0;
  }, lineEnd: function() {
    (this._line || 0 !== this._line && 3 === this._point) && this._context.closePath(), this._line = 1 - this._line;
  }, point: function(t32, n37) {
    switch (t32 = +t32, n37 = +n37, this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3, this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        Xt7(this, t32, n37);
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = t32, this._y0 = this._y1, this._y1 = this._y2, this._y2 = n37;
  } };
  var jt7 = function t26(n37) {
    function i29(t32) {
      return new It7(t32, n37);
    }
    return i29.tension = function(n38) {
      return t26(+n38);
    }, i29;
  }(0);
  function Lt7(t32, n37, i29) {
    var e26 = t32._x1, s29 = t32._y1, o35 = t32._x2, h35 = t32._y2;
    if (t32._l01_a > a20) {
      var _24 = 2 * t32._l01_2a + 3 * t32._l01_a * t32._l12_a + t32._l12_2a, r91 = 3 * t32._l01_a * (t32._l01_a + t32._l12_a);
      e26 = (e26 * _24 - t32._x0 * t32._l12_2a + t32._x2 * t32._l01_2a) / r91, s29 = (s29 * _24 - t32._y0 * t32._l12_2a + t32._y2 * t32._l01_2a) / r91;
    }
    if (t32._l23_a > a20) {
      var l35 = 2 * t32._l23_2a + 3 * t32._l23_a * t32._l12_a + t32._l12_2a, c30 = 3 * t32._l23_a * (t32._l23_a + t32._l12_a);
      o35 = (o35 * l35 + t32._x1 * t32._l23_2a - n37 * t32._l12_2a) / c30, h35 = (h35 * l35 + t32._y1 * t32._l23_2a - i29 * t32._l12_2a) / c30;
    }
    t32._context.bezierCurveTo(e26, s29, o35, h35, t32._x2, t32._y2);
  }
  function Wt7(t32, n37) {
    this._context = t32, this._alpha = n37;
  }
  Wt7.prototype = { areaStart: function() {
    this._line = 0;
  }, areaEnd: function() {
    this._line = NaN;
  }, lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN, this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  }, lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        this.point(this._x2, this._y2);
    }
    (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath(), this._line = 1 - this._line;
  }, point: function(t32, n37) {
    if (t32 = +t32, n37 = +n37, this._point) {
      var i29 = this._x2 - t32, e26 = this._y2 - n37;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(i29 * i29 + e26 * e26, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1, this._line ? this._context.lineTo(t32, n37) : this._context.moveTo(t32, n37);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
      default:
        Lt7(this, t32, n37);
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a, this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a, this._x0 = this._x1, this._x1 = this._x2, this._x2 = t32, this._y0 = this._y1, this._y1 = this._y2, this._y2 = n37;
  } };
  var Vt8 = function t27(n37) {
    function i29(t32) {
      return n37 ? new Wt7(t32, n37) : new Yt7(t32, 0);
    }
    return i29.alpha = function(n38) {
      return t27(+n38);
    }, i29;
  }(0.5);
  function $t7(t32, n37) {
    this._context = t32, this._alpha = n37;
  }
  $t7.prototype = { areaStart: Nt9, areaEnd: Nt9, lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN, this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  }, lineEnd: function() {
    switch (this._point) {
      case 1:
        this._context.moveTo(this._x3, this._y3), this._context.closePath();
        break;
      case 2:
        this._context.lineTo(this._x3, this._y3), this._context.closePath();
        break;
      case 3:
        this.point(this._x3, this._y3), this.point(this._x4, this._y4), this.point(this._x5, this._y5);
    }
  }, point: function(t32, n37) {
    if (t32 = +t32, n37 = +n37, this._point) {
      var i29 = this._x2 - t32, e26 = this._y2 - n37;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(i29 * i29 + e26 * e26, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1, this._x3 = t32, this._y3 = n37;
        break;
      case 1:
        this._point = 2, this._context.moveTo(this._x4 = t32, this._y4 = n37);
        break;
      case 2:
        this._point = 3, this._x5 = t32, this._y5 = n37;
        break;
      default:
        Lt7(this, t32, n37);
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a, this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a, this._x0 = this._x1, this._x1 = this._x2, this._x2 = t32, this._y0 = this._y1, this._y1 = this._y2, this._y2 = n37;
  } };
  var Ft7 = function t28(n37) {
    function i29(t32) {
      return n37 ? new $t7(t32, n37) : new qt7(t32, 0);
    }
    return i29.alpha = function(n38) {
      return t28(+n38);
    }, i29;
  }(0.5);
  function Gt7(t32, n37) {
    this._context = t32, this._alpha = n37;
  }
  Gt7.prototype = { areaStart: function() {
    this._line = 0;
  }, areaEnd: function() {
    this._line = NaN;
  }, lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN, this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  }, lineEnd: function() {
    (this._line || 0 !== this._line && 3 === this._point) && this._context.closePath(), this._line = 1 - this._line;
  }, point: function(t32, n37) {
    if (t32 = +t32, n37 = +n37, this._point) {
      var i29 = this._x2 - t32, e26 = this._y2 - n37;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(i29 * i29 + e26 * e26, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3, this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        Lt7(this, t32, n37);
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a, this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a, this._x0 = this._x1, this._x1 = this._x2, this._x2 = t32, this._y0 = this._y1, this._y1 = this._y2, this._y2 = n37;
  } };
  var Ht7 = function t29(n37) {
    function i29(t32) {
      return n37 ? new Gt7(t32, n37) : new It7(t32, 0);
    }
    return i29.alpha = function(n38) {
      return t29(+n38);
    }, i29;
  }(0.5);
  function Jt6(t32) {
    this._context = t32;
  }
  function Kt8(t32) {
    return new Jt6(t32);
  }
  function Qt7(t32) {
    return t32 < 0 ? -1 : 1;
  }
  function Ut7(t32, n37, i29) {
    var e26 = t32._x1 - t32._x0, s29 = n37 - t32._x1, o35 = (t32._y1 - t32._y0) / (e26 || s29 < 0 && -0), h35 = (i29 - t32._y1) / (s29 || e26 < 0 && -0), _24 = (o35 * s29 + h35 * e26) / (e26 + s29);
    return (Qt7(o35) + Qt7(h35)) * Math.min(Math.abs(o35), Math.abs(h35), 0.5 * Math.abs(_24)) || 0;
  }
  function Zt7(t32, n37) {
    var i29 = t32._x1 - t32._x0;
    return i29 ? (3 * (t32._y1 - t32._y0) / i29 - n37) / 2 : n37;
  }
  function tn8(t32, n37, i29) {
    var e26 = t32._x0, s29 = t32._y0, o35 = t32._x1, h35 = t32._y1, _24 = (o35 - e26) / 3;
    t32._context.bezierCurveTo(e26 + _24, s29 + _24 * n37, o35 - _24, h35 - _24 * i29, o35, h35);
  }
  function nn7(t32) {
    this._context = t32;
  }
  function en9(t32) {
    this._context = new sn9(t32);
  }
  function sn9(t32) {
    this._context = t32;
  }
  function on10(t32) {
    return new nn7(t32);
  }
  function hn8(t32) {
    return new en9(t32);
  }
  function _n5(t32) {
    this._context = t32;
  }
  function rn9(t32) {
    var n37, i29, e26 = t32.length - 1, s29 = new Array(e26), o35 = new Array(e26), h35 = new Array(e26);
    for (s29[0] = 0, o35[0] = 2, h35[0] = t32[0] + 2 * t32[1], n37 = 1; n37 < e26 - 1; ++n37)
      s29[n37] = 1, o35[n37] = 4, h35[n37] = 4 * t32[n37] + 2 * t32[n37 + 1];
    for (s29[e26 - 1] = 2, o35[e26 - 1] = 7, h35[e26 - 1] = 8 * t32[e26 - 1] + t32[e26], n37 = 1; n37 < e26; ++n37)
      i29 = s29[n37] / o35[n37 - 1], o35[n37] -= i29, h35[n37] -= i29 * h35[n37 - 1];
    for (s29[e26 - 1] = h35[e26 - 1] / o35[e26 - 1], n37 = e26 - 2; n37 >= 0; --n37)
      s29[n37] = (h35[n37] - s29[n37 + 1]) / o35[n37];
    for (o35[e26 - 1] = (t32[e26] + s29[e26 - 1]) / 2, n37 = 0; n37 < e26 - 1; ++n37)
      o35[n37] = 2 * t32[n37 + 1] - s29[n37 + 1];
    return [s29, o35];
  }
  function an10(t32) {
    return new _n5(t32);
  }
  function ln10(t32, n37) {
    this._context = t32, this._t = n37;
  }
  function cn9(t32) {
    return new ln10(t32, 0.5);
  }
  function un10(t32) {
    return new ln10(t32, 0);
  }
  function fn8(t32) {
    return new ln10(t32, 1);
  }
  Jt6.prototype = { areaStart: Nt9, areaEnd: Nt9, lineStart: function() {
    this._point = 0;
  }, lineEnd: function() {
    this._point && this._context.closePath();
  }, point: function(t32, n37) {
    t32 = +t32, n37 = +n37, this._point ? this._context.lineTo(t32, n37) : (this._point = 1, this._context.moveTo(t32, n37));
  } }, nn7.prototype = { areaStart: function() {
    this._line = 0;
  }, areaEnd: function() {
    this._line = NaN;
  }, lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN, this._point = 0;
  }, lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
      case 3:
        tn8(this, this._t0, Zt7(this, this._t0));
    }
    (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath(), this._line = 1 - this._line;
  }, point: function(t32, n37) {
    var i29 = NaN;
    if (n37 = +n37, (t32 = +t32) !== this._x1 || n37 !== this._y1) {
      switch (this._point) {
        case 0:
          this._point = 1, this._line ? this._context.lineTo(t32, n37) : this._context.moveTo(t32, n37);
          break;
        case 1:
          this._point = 2;
          break;
        case 2:
          this._point = 3, tn8(this, Zt7(this, i29 = Ut7(this, t32, n37)), i29);
          break;
        default:
          tn8(this, this._t0, i29 = Ut7(this, t32, n37));
      }
      this._x0 = this._x1, this._x1 = t32, this._y0 = this._y1, this._y1 = n37, this._t0 = i29;
    }
  } }, (en9.prototype = Object.create(nn7.prototype)).point = function(t32, n37) {
    nn7.prototype.point.call(this, n37, t32);
  }, sn9.prototype = { moveTo: function(t32, n37) {
    this._context.moveTo(n37, t32);
  }, closePath: function() {
    this._context.closePath();
  }, lineTo: function(t32, n37) {
    this._context.lineTo(n37, t32);
  }, bezierCurveTo: function(t32, n37, i29, e26, s29, o35) {
    this._context.bezierCurveTo(n37, t32, e26, i29, o35, s29);
  } }, _n5.prototype = { areaStart: function() {
    this._line = 0;
  }, areaEnd: function() {
    this._line = NaN;
  }, lineStart: function() {
    this._x = [], this._y = [];
  }, lineEnd: function() {
    var t32 = this._x, n37 = this._y, i29 = t32.length;
    if (i29)
      if (this._line ? this._context.lineTo(t32[0], n37[0]) : this._context.moveTo(t32[0], n37[0]), 2 === i29)
        this._context.lineTo(t32[1], n37[1]);
      else
        for (var e26 = rn9(t32), s29 = rn9(n37), o35 = 0, h35 = 1; h35 < i29; ++o35, ++h35)
          this._context.bezierCurveTo(e26[0][o35], s29[0][o35], e26[1][o35], s29[1][o35], t32[h35], n37[h35]);
    (this._line || 0 !== this._line && 1 === i29) && this._context.closePath(), this._line = 1 - this._line, this._x = this._y = null;
  }, point: function(t32, n37) {
    this._x.push(+t32), this._y.push(+n37);
  } }, ln10.prototype = { areaStart: function() {
    this._line = 0;
  }, areaEnd: function() {
    this._line = NaN;
  }, lineStart: function() {
    this._x = this._y = NaN, this._point = 0;
  }, lineEnd: function() {
    0 < this._t && this._t < 1 && 2 === this._point && this._context.lineTo(this._x, this._y), (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath(), this._line >= 0 && (this._t = 1 - this._t, this._line = 1 - this._line);
  }, point: function(t32, n37) {
    switch (t32 = +t32, n37 = +n37, this._point) {
      case 0:
        this._point = 1, this._line ? this._context.lineTo(t32, n37) : this._context.moveTo(t32, n37);
        break;
      case 1:
        this._point = 2;
      default:
        if (this._t <= 0)
          this._context.lineTo(this._x, n37), this._context.lineTo(t32, n37);
        else {
          var i29 = this._x * (1 - this._t) + t32 * this._t;
          this._context.lineTo(i29, this._y), this._context.lineTo(i29, n37);
        }
    }
    this._x = t32, this._y = n37;
  } };

  // https://cdn.jsdelivr.net/npm/d3-zoom@3.0.0/+esm
  function a21(t32, n37, e26) {
    this.k = t32, this.x = n37, this.y = e26;
  }
  a21.prototype = { constructor: a21, scale: function(t32) {
    return 1 === t32 ? this : new a21(this.k * t32, this.x, this.y);
  }, translate: function(t32, n37) {
    return 0 === t32 & 0 === n37 ? this : new a21(this.k, this.x + this.k * t32, this.y + this.k * n37);
  }, apply: function(t32) {
    return [t32[0] * this.k + this.x, t32[1] * this.k + this.y];
  }, applyX: function(t32) {
    return t32 * this.k + this.x;
  }, applyY: function(t32) {
    return t32 * this.k + this.y;
  }, invert: function(t32) {
    return [(t32[0] - this.x) / this.k, (t32[1] - this.y) / this.k];
  }, invertX: function(t32) {
    return (t32 - this.x) / this.k;
  }, invertY: function(t32) {
    return (t32 - this.y) / this.k;
  }, rescaleX: function(t32) {
    return t32.copy().domain(t32.range().map(this.invertX, this).map(t32.invert, t32));
  }, rescaleY: function(t32) {
    return t32.copy().domain(t32.range().map(this.invertY, this).map(t32.invert, t32));
  }, toString: function() {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  } };
  var c24 = new a21(1, 0, 0);
  function l29(t32) {
    for (; !t32.__zoom; )
      if (!(t32 = t32.parentNode))
        return c24;
    return t32.__zoom;
  }
  l29.prototype = a21.prototype;

  // https://cdn.jsdelivr.net/npm/isoformat@0.2.1/+esm
  function t30(t32, n37) {
    if (t32 instanceof Date || (t32 = /* @__PURE__ */ new Date(+t32)), isNaN(t32))
      return "function" == typeof n37 ? n37(t32) : n37;
    const o35 = t32.getUTCHours(), d25 = t32.getUTCMinutes(), r91 = t32.getUTCSeconds(), u30 = t32.getUTCMilliseconds();
    return `${$26 = t32.getUTCFullYear(), $26 < 0 ? `-${e17(-$26, 6)}` : $26 > 9999 ? `+${e17($26, 6)}` : e17($26, 4)}-${e17(t32.getUTCMonth() + 1, 2)}-${e17(t32.getUTCDate(), 2)}${o35 || d25 || r91 || u30 ? `T${e17(o35, 2)}:${e17(d25, 2)}${r91 || u30 ? `:${e17(r91, 2)}${u30 ? `.${e17(u30, 3)}` : ""}` : ""}Z` : ""}`;
    var $26;
  }
  function e17(t32, e26) {
    return `${t32}`.padStart(e26, "0");
  }
  var n34 = /^(?:[-+]\d{2})?\d{4}(?:-\d{2}(?:-\d{2})?)?(?:T\d{2}:\d{2}(?::\d{2}(?:\.\d{3})?)?(?:Z|[-+]\d{2}:?\d{2})?)?$/;
  function o25(t32, e26) {
    return n34.test(t32 += "") ? new Date(t32) : "function" == typeof e26 ? e26(t32) : e26;
  }

  // https://cdn.jsdelivr.net/npm/binary-search-bounds@2.0.5/+esm
  function r87(r91, n37, t32, o35, e26) {
    for (var u30 = e26 + 1; o35 <= e26; ) {
      var i29 = o35 + e26 >>> 1, f25 = r91[i29];
      (void 0 !== t32 ? t32(f25, n37) : f25 - n37) >= 0 ? (u30 = i29, e26 = i29 - 1) : o35 = i29 + 1;
    }
    return u30;
  }
  function n35(r91, n37, t32, o35, e26) {
    for (var u30 = e26 + 1; o35 <= e26; ) {
      var i29 = o35 + e26 >>> 1, f25 = r91[i29];
      (void 0 !== t32 ? t32(f25, n37) : f25 - n37) > 0 ? (u30 = i29, e26 = i29 - 1) : o35 = i29 + 1;
    }
    return u30;
  }
  function t31(r91, n37, t32, o35, e26) {
    for (var u30 = o35 - 1; o35 <= e26; ) {
      var i29 = o35 + e26 >>> 1, f25 = r91[i29];
      (void 0 !== t32 ? t32(f25, n37) : f25 - n37) < 0 ? (u30 = i29, o35 = i29 + 1) : e26 = i29 - 1;
    }
    return u30;
  }
  function o26(r91, n37, t32, o35, e26) {
    for (var u30 = o35 - 1; o35 <= e26; ) {
      var i29 = o35 + e26 >>> 1, f25 = r91[i29];
      (void 0 !== t32 ? t32(f25, n37) : f25 - n37) <= 0 ? (u30 = i29, o35 = i29 + 1) : e26 = i29 - 1;
    }
    return u30;
  }
  function e18(r91, n37, t32, o35, e26) {
    for (; o35 <= e26; ) {
      var u30 = o35 + e26 >>> 1, i29 = r91[u30], f25 = void 0 !== t32 ? t32(i29, n37) : i29 - n37;
      if (0 === f25)
        return u30;
      f25 <= 0 ? o35 = u30 + 1 : e26 = u30 - 1;
    }
    return -1;
  }
  function u26(r91, n37, t32, o35, e26, u30) {
    return "function" == typeof t32 ? u30(r91, n37, t32, void 0 === o35 ? 0 : 0 | o35, void 0 === e26 ? r91.length - 1 : 0 | e26) : u30(r91, n37, void 0, void 0 === t32 ? 0 : 0 | t32, void 0 === o35 ? r91.length - 1 : 0 | o35);
  }
  var i25 = { ge: function(n37, t32, o35, e26, i29) {
    return u26(n37, t32, o35, e26, i29, r87);
  }, gt: function(r91, t32, o35, e26, i29) {
    return u26(r91, t32, o35, e26, i29, n35);
  }, lt: function(r91, n37, o35, e26, i29) {
    return u26(r91, n37, o35, e26, i29, t31);
  }, le: function(r91, n37, t32, e26, i29) {
    return u26(r91, n37, t32, e26, i29, o26);
  }, eq: function(r91, n37, t32, o35, i29) {
    return u26(r91, n37, t32, o35, i29, e18);
  } };
  var f20 = i25.eq;
  var v23 = i25.ge;
  var a22 = i25.gt;
  var c25 = i25.le;
  var d21 = i25.lt;

  // https://cdn.jsdelivr.net/npm/interval-tree-1d@1.0.4/+esm
  var i26 = i25;
  function n36(t32, i29, r91, n37, s29) {
    this.mid = t32, this.left = i29, this.right = r91, this.leftPoints = n37, this.rightPoints = s29, this.count = (i29 ? i29.count : 0) + (r91 ? r91.count : 0) + n37.length;
  }
  var s25 = n36.prototype;
  function h32(t32, i29) {
    t32.mid = i29.mid, t32.left = i29.left, t32.right = i29.right, t32.leftPoints = i29.leftPoints, t32.rightPoints = i29.rightPoints, t32.count = i29.count;
  }
  function e19(t32, i29) {
    var r91 = v24(i29);
    t32.mid = r91.mid, t32.left = r91.left, t32.right = r91.right, t32.leftPoints = r91.leftPoints, t32.rightPoints = r91.rightPoints, t32.count = r91.count;
  }
  function o27(t32, i29) {
    var r91 = t32.intervals([]);
    r91.push(i29), e19(t32, r91);
  }
  function f21(t32, i29) {
    var r91 = t32.intervals([]), n37 = r91.indexOf(i29);
    return n37 < 0 ? 0 : (r91.splice(n37, 1), e19(t32, r91), 1);
  }
  function u27(t32, i29, r91) {
    for (var n37 = 0; n37 < t32.length && t32[n37][0] <= i29; ++n37) {
      var s29 = r91(t32[n37]);
      if (s29)
        return s29;
    }
  }
  function l30(t32, i29, r91) {
    for (var n37 = t32.length - 1; n37 >= 0 && t32[n37][1] >= i29; --n37) {
      var s29 = r91(t32[n37]);
      if (s29)
        return s29;
    }
  }
  function g24(t32, i29) {
    for (var r91 = 0; r91 < t32.length; ++r91) {
      var n37 = i29(t32[r91]);
      if (n37)
        return n37;
    }
  }
  function c26(t32, i29) {
    return t32 - i29;
  }
  function P19(t32, i29) {
    var r91 = t32[0] - i29[0];
    return r91 || t32[1] - i29[1];
  }
  function a23(t32, i29) {
    var r91 = t32[1] - i29[1];
    return r91 || t32[0] - i29[0];
  }
  function v24(t32) {
    if (0 === t32.length)
      return null;
    for (var i29 = [], r91 = 0; r91 < t32.length; ++r91)
      i29.push(t32[r91][0], t32[r91][1]);
    i29.sort(c26);
    var s29 = i29[i29.length >> 1], h35 = [], e26 = [], o35 = [];
    for (r91 = 0; r91 < t32.length; ++r91) {
      var f25 = t32[r91];
      f25[1] < s29 ? h35.push(f25) : s29 < f25[0] ? e26.push(f25) : o35.push(f25);
    }
    var u30 = o35, l35 = o35.slice();
    return u30.sort(P19), l35.sort(a23), new n36(s29, v24(h35), v24(e26), u30, l35);
  }
  function m23(t32) {
    this.root = t32;
  }
  s25.intervals = function(t32) {
    return t32.push.apply(t32, this.leftPoints), this.left && this.left.intervals(t32), this.right && this.right.intervals(t32), t32;
  }, s25.insert = function(t32) {
    var r91 = this.count - this.leftPoints.length;
    if (this.count += 1, t32[1] < this.mid)
      this.left ? 4 * (this.left.count + 1) > 3 * (r91 + 1) ? o27(this, t32) : this.left.insert(t32) : this.left = v24([t32]);
    else if (t32[0] > this.mid)
      this.right ? 4 * (this.right.count + 1) > 3 * (r91 + 1) ? o27(this, t32) : this.right.insert(t32) : this.right = v24([t32]);
    else {
      var n37 = i26.ge(this.leftPoints, t32, P19), s29 = i26.ge(this.rightPoints, t32, a23);
      this.leftPoints.splice(n37, 0, t32), this.rightPoints.splice(s29, 0, t32);
    }
  }, s25.remove = function(t32) {
    var r91 = this.count - this.leftPoints;
    if (t32[1] < this.mid)
      return this.left ? 4 * (this.right ? this.right.count : 0) > 3 * (r91 - 1) ? f21(this, t32) : 2 === (o35 = this.left.remove(t32)) ? (this.left = null, this.count -= 1, 1) : (1 === o35 && (this.count -= 1), o35) : 0;
    if (t32[0] > this.mid)
      return this.right ? 4 * (this.left ? this.left.count : 0) > 3 * (r91 - 1) ? f21(this, t32) : 2 === (o35 = this.right.remove(t32)) ? (this.right = null, this.count -= 1, 1) : (1 === o35 && (this.count -= 1), o35) : 0;
    if (1 === this.count)
      return this.leftPoints[0] === t32 ? 2 : 0;
    if (1 === this.leftPoints.length && this.leftPoints[0] === t32) {
      if (this.left && this.right) {
        for (var n37 = this, s29 = this.left; s29.right; )
          n37 = s29, s29 = s29.right;
        if (n37 === this)
          s29.right = this.right;
        else {
          var e26 = this.left, o35 = this.right;
          n37.count -= s29.count, n37.right = s29.left, s29.left = e26, s29.right = o35;
        }
        h32(this, s29), this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;
      } else
        this.left ? h32(this, this.left) : h32(this, this.right);
      return 1;
    }
    for (e26 = i26.ge(this.leftPoints, t32, P19); e26 < this.leftPoints.length && this.leftPoints[e26][0] === t32[0]; ++e26)
      if (this.leftPoints[e26] === t32) {
        this.count -= 1, this.leftPoints.splice(e26, 1);
        for (o35 = i26.ge(this.rightPoints, t32, a23); o35 < this.rightPoints.length && this.rightPoints[o35][1] === t32[1]; ++o35)
          if (this.rightPoints[o35] === t32)
            return this.rightPoints.splice(o35, 1), 1;
      }
    return 0;
  }, s25.queryPoint = function(t32, i29) {
    if (t32 < this.mid) {
      if (this.left) {
        if (r91 = this.left.queryPoint(t32, i29))
          return r91;
      }
      return u27(this.leftPoints, t32, i29);
    }
    if (t32 > this.mid) {
      var r91;
      if (this.right) {
        if (r91 = this.right.queryPoint(t32, i29))
          return r91;
      }
      return l30(this.rightPoints, t32, i29);
    }
    return g24(this.leftPoints, i29);
  }, s25.queryInterval = function(t32, i29, r91) {
    var n37;
    if (t32 < this.mid && this.left && (n37 = this.left.queryInterval(t32, i29, r91)))
      return n37;
    if (i29 > this.mid && this.right && (n37 = this.right.queryInterval(t32, i29, r91)))
      return n37;
    return i29 < this.mid ? u27(this.leftPoints, i29, r91) : t32 > this.mid ? l30(this.rightPoints, t32, r91) : g24(this.leftPoints, r91);
  };
  var p22 = m23.prototype;
  p22.insert = function(t32) {
    this.root ? this.root.insert(t32) : this.root = new n36(t32[0], null, null, [t32], [t32]);
  }, p22.remove = function(t32) {
    if (this.root) {
      var i29 = this.root.remove(t32);
      return 2 === i29 && (this.root = null), 0 !== i29;
    }
    return false;
  }, p22.queryPoint = function(t32, i29) {
    if (this.root)
      return this.root.queryPoint(t32, i29);
  }, p22.queryInterval = function(t32, i29, r91) {
    if (t32 <= i29 && this.root)
      return this.root.queryInterval(t32, i29, r91);
  }, Object.defineProperty(p22, "count", { get: function() {
    return this.root ? this.root.count : 0;
  } }), Object.defineProperty(p22, "intervals", { get: function() {
    return this.root ? this.root.intervals([]) : [];
  } });

  // https://cdn.jsdelivr.net/npm/@observablehq/plot@0.6.15/+esm
  function Tr6(t32) {
    return null != t32 && !Number.isNaN(t32);
  }
  function Rr5(n37, e26) {
    return +Tr6(e26) - +Tr6(n37) || r56(n37, e26);
  }
  function Ir6(t32, e26) {
    return +Tr6(e26) - +Tr6(t32) || o7(t32, e26);
  }
  function Wr6(t32) {
    return null != t32 && "" != `${t32}`;
  }
  function jr6(t32) {
    return isFinite(t32) ? t32 : NaN;
  }
  function Br6(t32) {
    return t32 > 0 && isFinite(t32) ? t32 : NaN;
  }
  function Fr6(t32) {
    return t32 < 0 && isFinite(t32) ? t32 : NaN;
  }
  function Dr5(t32) {
    if (null == t32)
      return;
    const e26 = t32[0], r91 = t32[t32.length - 1];
    return o7(e26, r91);
  }
  var qr6 = 1e3;
  var _r5 = 6e4;
  var Pr6 = 36e5;
  var Vr6 = 864e5;
  var Hr6 = 7 * Vr6;
  var Yr6 = 30 * Vr6;
  var Ur6 = 365 * Vr6;
  var Xr6 = [["millisecond", 1], ["2 milliseconds", 2], ["5 milliseconds", 5], ["10 milliseconds", 10], ["20 milliseconds", 20], ["50 milliseconds", 50], ["100 milliseconds", 100], ["200 milliseconds", 200], ["500 milliseconds", 500], ["second", qr6], ["5 seconds", 5e3], ["15 seconds", 15e3], ["30 seconds", 3e4], ["minute", _r5], ["5 minutes", 3e5], ["15 minutes", 9e5], ["30 minutes", 18e5], ["hour", Pr6], ["3 hours", 108e5], ["6 hours", 216e5], ["12 hours", 432e5], ["day", Vr6], ["2 days", 2 * Vr6], ["week", Hr6], ["2 weeks", 2 * Hr6], ["month", Yr6], ["3 months", 3 * Yr6], ["6 months", 6 * Yr6], ["year", Ur6], ["2 years", 2 * Ur6], ["5 years", 5 * Ur6], ["10 years", 10 * Ur6], ["20 years", 20 * Ur6], ["50 years", 50 * Ur6], ["100 years", 100 * Ur6]];
  var Gr6 = /* @__PURE__ */ new Map([["second", qr6], ["minute", _r5], ["hour", Pr6], ["day", Vr6], ["monday", Hr6], ["tuesday", Hr6], ["wednesday", Hr6], ["thursday", Hr6], ["friday", Hr6], ["saturday", Hr6], ["sunday", Hr6], ["week", Hr6], ["month", Yr6], ["year", Ur6]]);
  var Zr5 = /* @__PURE__ */ new Map([["second", C14], ["minute", M17], ["hour", F15], ["day", y17], ["monday", W14], ["tuesday", x17], ["wednesday", b17], ["thursday", j17], ["friday", q16], ["saturday", A18], ["sunday", O14], ["week", O14], ["month", oe8], ["year", ie8]]);
  var Jr6 = /* @__PURE__ */ new Map([["second", C14], ["minute", m20], ["hour", d19], ["day", p19], ["monday", Q14], ["tuesday", R15], ["wednesday", V14], ["thursday", X14], ["friday", Z13], ["saturday", $16], ["sunday", P16], ["week", P16], ["month", ge7], ["year", ce6]]);
  var Kr6 = Symbol("intervalDuration");
  var Qr6 = Symbol("intervalType");
  for (const [t32, n37] of Zr5)
    n37[Kr6] = Gr6.get(t32), n37[Qr6] = "time";
  for (const [t32, n37] of Jr6)
    n37[Kr6] = Gr6.get(t32), n37[Qr6] = "utc";
  var to5 = [["year", ce6, "utc"], ["month", ge7, "utc"], ["day", p19, "utc", 6 * Yr6], ["hour", d19, "utc", 3 * Vr6], ["minute", m20, "utc", 216e5], ["second", C14, "utc", 18e5]];
  var no4 = [["year", ie8, "time"], ["month", oe8, "time"], ["day", y17, "time", 6 * Yr6], ["hour", F15, "time", 3 * Vr6], ["minute", M17, "time", 216e5], ["second", C14, "time", 18e5]];
  var eo5 = [to5[0], no4[0], to5[1], no4[1], to5[2], no4[2], ...to5.slice(3)];
  function ro5(t32) {
    let n37 = `${t32}`.toLowerCase();
    n37.endsWith("s") && (n37 = n37.slice(0, -1));
    let e26 = 1;
    const r91 = /^(?:(\d+)\s+)/.exec(n37);
    switch (r91 && (n37 = n37.slice(r91[0].length), e26 = +r91[1]), n37) {
      case "quarter":
        n37 = "month", e26 *= 3;
        break;
      case "half":
        n37 = "month", e26 *= 6;
    }
    let o35 = Jr6.get(n37);
    if (!o35)
      throw new Error(`unknown interval: ${t32}`);
    if (e26 > 1 && !o35.every)
      throw new Error(`non-periodic interval: ${n37}`);
    return [n37, e26];
  }
  function oo4(t32) {
    return ao5(ro5(t32), "time");
  }
  function io5(t32) {
    return ao5(ro5(t32), "utc");
  }
  function ao5([t32, n37], e26) {
    let r91 = ("time" === e26 ? Zr5 : Jr6).get(t32);
    return n37 > 1 && (r91 = r91.every(n37), r91[Kr6] = Gr6.get(t32) * n37, r91[Qr6] = e26), r91;
  }
  function lo5(t32, n37) {
    if (!(n37 > 1))
      return;
    const e26 = t32[Kr6];
    if (!Xr6.some(([, t33]) => t33 === e26))
      return;
    if (e26 % Vr6 == 0 && Vr6 < e26 && e26 < Yr6)
      return;
    const [r91] = Xr6[e4(([, t33]) => Math.log(t33)).center(Xr6, Math.log(e26 * n37))];
    return ("time" === t32[Qr6] ? oo4 : io5)(r91);
  }
  function so5(t32, n37, e26) {
    const r91 = "time" === n37 ? v21 : m21;
    if (null == e26)
      return r91("year" === t32 ? "%Y" : "month" === t32 ? "%Y-%m" : "day" === t32 ? "%Y-%m-%d" : "hour" === t32 || "minute" === t32 ? "%Y-%m-%dT%H:%M" : "second" === t32 ? "%Y-%m-%dT%H:%M:%S" : "%Y-%m-%dT%H:%M:%S.%L");
    const o35 = /* @__PURE__ */ function(t33) {
      return "left" === t33 || "right" === t33 ? (t34, n38) => `
${t34}
${n38}` : "top" === t33 ? (t34, n38) => `${n38}
${t34}` : (t34, n38) => `${t34}
${n38}`;
    }(e26);
    switch (t32) {
      case "millisecond":
        return uo5(r91(".%L"), r91(":%M:%S"), o35);
      case "second":
        return uo5(r91(":%S"), r91("%-I:%M"), o35);
      case "minute":
        return uo5(r91("%-I:%M"), r91("%p"), o35);
      case "hour":
        return uo5(r91("%-I %p"), r91("%b %-d"), o35);
      case "day":
        return uo5(r91("%-d"), r91("%b"), o35);
      case "month":
        return uo5(r91("%b"), r91("%Y"), o35);
      case "year":
        return r91("%Y");
    }
    throw new Error("unable to format time ticks");
  }
  function co5(t32, n37, e26) {
    const r91 = ft6(bt6(n37, (t33, n38) => Math.abs(n38 - t33)));
    if (r91 < 1e3)
      return so5("millisecond", "utc", e26);
    for (const [o35, i29, a27, l35] of /* @__PURE__ */ function(t33) {
      return "time" === t33 ? no4 : "utc" === t33 ? to5 : eo5;
    }(t32)) {
      if (r91 > l35)
        break;
      if ("hour" === o35 && !r91)
        break;
      if (n37.every((t33) => i29.floor(t33) >= t33))
        return so5(o35, a27, e26);
    }
  }
  function uo5(t32, n37, e26) {
    return (r91, o35, i29) => {
      const a27 = t32(r91, o35), l35 = n37(r91, o35), s29 = o35 - Dr5(i29);
      return o35 !== s29 && void 0 !== i29[s29] && l35 === n37(i29[s29], s29) ? a27 : e26(a27, l35);
    };
  }
  var fo5 = Object.getPrototypeOf(Uint8Array);
  var ho5 = Object.prototype.toString;
  var po5 = Symbol("reindex");
  function mo5(t32, n37, e26) {
    const r91 = typeof n37;
    return "string" === r91 ? yo5(t32, xo5(n37), e26) : "function" === r91 ? yo5(t32, n37, e26) : "number" === r91 || n37 instanceof Date || "boolean" === r91 ? Do4(t32, Oo4(n37), e26) : "function" == typeof n37?.transform ? go5(n37.transform(t32), e26) : function(t33, n38) {
      return null != t33 && n38 ? Qo5(t33, n38) : t33;
    }(go5(n37, e26), t32?.[po5]);
  }
  function yo5(t32, n37, e26) {
    return Do4(t32, e26?.prototype instanceof fo5 ? /* @__PURE__ */ function(t33) {
      return (n38, e27) => Co5(t33(n38, e27));
    }(n37) : n37, e26);
  }
  function go5(t32, n37) {
    return void 0 === n37 ? Fo5(t32) : t32 instanceof n37 ? t32 : n37.prototype instanceof fo5 && !(t32 instanceof fo5) ? n37.from(t32, Co5) : n37.from(t32);
  }
  var vo5 = [null];
  var xo5 = (t32) => (n37) => n37[t32];
  var wo5 = { transform: Ko3 };
  var bo5 = { transform: (t32) => t32 };
  var ko4 = () => 1;
  var $o4 = () => true;
  var Mo4 = (t32) => null == t32 ? t32 : `${t32}`;
  var Lo5 = (t32) => null == t32 ? t32 : +t32;
  var Ao5 = (t32) => t32 ? t32[0] : void 0;
  var Eo5 = (t32) => t32 ? t32[1] : void 0;
  var Oo4 = (t32) => () => t32;
  function So5(t32) {
    const n37 = +`${t32}`.slice(1) / 100;
    return (t33, e26) => ht6(t33, n37, e26);
  }
  function No5(t32) {
    return t32 instanceof fo5 ? t32 : Do4(t32, Co5, Float64Array);
  }
  function Co5(t32) {
    return null == t32 ? NaN : Number(t32);
  }
  function To4(t32) {
    return Do4(t32, Ro5);
  }
  function Ro5(t32) {
    return t32 instanceof Date && !isNaN(t32) ? t32 : "string" == typeof t32 ? o25(t32) : null == t32 || isNaN(t32 = +t32) ? void 0 : new Date(t32);
  }
  function Io5(t32, n37) {
    return void 0 === t32 && (t32 = n37), null === t32 ? [void 0, "none"] : Mi6(t32) ? [void 0, t32] : [t32, void 0];
  }
  function Wo5(t32, n37) {
    return void 0 === t32 && (t32 = n37), null === t32 || "number" == typeof t32 ? [void 0, t32] : [t32, void 0];
  }
  function jo2(t32, n37, e26) {
    if (null != t32)
      return Bo4(t32, n37, e26);
  }
  function Bo4(t32, n37, e26) {
    const r91 = `${t32}`.toLowerCase();
    if (!e26.includes(r91))
      throw new Error(`invalid ${n37}: ${t32}`);
    return r91;
  }
  function Fo5(t32) {
    return null == t32 || t32 instanceof Array || t32 instanceof fo5 ? t32 : Array.from(t32);
  }
  function Do4(t32, n37, e26 = Array) {
    return null == t32 ? t32 : t32 instanceof e26 ? t32.map(n37) : e26.from(t32, n37);
  }
  function qo5(t32, n37 = Array) {
    return t32 instanceof n37 ? t32.slice() : n37.from(t32);
  }
  function _o5({ x: t32, x1: n37, x2: e26 }) {
    return void 0 !== t32 || void 0 !== n37 || void 0 !== e26;
  }
  function Po3({ y: t32, y1: n37, y2: e26 }) {
    return void 0 !== t32 || void 0 !== n37 || void 0 !== e26;
  }
  function Vo5(t32) {
    return _o5(t32) || Po3(t32) || void 0 !== t32.interval;
  }
  function Ho5(t32) {
    return t32?.toString === ho5;
  }
  function Yo4(t32) {
    return Ho5(t32) && (void 0 !== t32.type || void 0 !== t32.domain);
  }
  function Uo4(t32) {
    return Ho5(t32) && "function" != typeof t32.transform;
  }
  function Xo4(t32) {
    return Uo4(t32) && void 0 === t32.value && void 0 === t32.channel;
  }
  function Go5(t32, n37, e26, r91 = bo5) {
    return void 0 === n37 && void 0 === e26 ? (n37 = 0, e26 = void 0 === t32 ? r91 : t32) : void 0 === n37 ? n37 = void 0 === t32 ? 0 : t32 : void 0 === e26 && (e26 = void 0 === t32 ? 0 : t32), [n37, e26];
  }
  function Zo5(t32, n37) {
    return void 0 === t32 && void 0 === n37 ? [Ao5, Eo5] : [t32, n37];
  }
  function Jo5({ z: t32, fill: n37, stroke: e26 } = {}) {
    return void 0 === t32 && ([t32] = Io5(n37)), void 0 === t32 && ([t32] = Io5(e26)), t32;
  }
  function Ko3(t32) {
    const n37 = t32.length, e26 = new Uint32Array(n37);
    for (let t33 = 0; t33 < n37; ++t33)
      e26[t33] = t33;
    return e26;
  }
  function Qo5(t32, n37) {
    return Do4(n37, (n38) => t32[n38], t32.constructor);
  }
  function ni5(t32, n37, e26) {
    return t32.subarray ? t32.subarray(n37, e26) : t32.slice(n37, e26);
  }
  function ei5(t32) {
    return null !== t32 && "object" == typeof t32 ? t32.valueOf() : t32;
  }
  function ri5(t32, n37) {
    if (void 0 !== n37[t32])
      return n37[t32];
    switch (t32) {
      case "x1":
      case "x2":
        t32 = "x";
        break;
      case "y1":
      case "y2":
        t32 = "y";
    }
    return n37[t32];
  }
  function oi5(t32) {
    let n37;
    return [{ transform: () => n37, label: ai5(t32) }, (t33) => n37 = t33];
  }
  function ii6(t32) {
    return null == t32 ? [t32] : oi5(t32);
  }
  function ai5(t32, n37) {
    return "string" == typeof t32 ? t32 : t32 && void 0 !== t32.label ? t32.label : n37;
  }
  function li5(t32, n37) {
    return { transform(e26) {
      const r91 = t32.transform(e26), o35 = n37.transform(e26);
      return vi6(r91) || vi6(o35) ? Do4(r91, (t33, n38) => new Date((+r91[n38] + +o35[n38]) / 2)) : Do4(r91, (t33, n38) => (+r91[n38] + +o35[n38]) / 2, Float64Array);
    }, label: t32.label };
  }
  function si6(t32, n37) {
    const e26 = ci6(n37?.interval, n37?.type);
    return e26 ? Do4(t32, e26) : t32;
  }
  function ci6(t32, n37) {
    const e26 = ui5(t32, n37);
    return e26 && ((t33) => Tr6(t33) ? e26.floor(t33) : t33);
  }
  function ui5(t32, n37) {
    if (null != t32) {
      if ("number" == typeof t32)
        return fi5(t32);
      if ("string" == typeof t32)
        return ("time" === n37 ? oo4 : io5)(t32);
      if ("function" != typeof t32.floor)
        throw new Error("invalid interval; missing floor method");
      if ("function" != typeof t32.offset)
        throw new Error("invalid interval; missing offset method");
      return t32;
    }
  }
  function fi5(t32) {
    0 < (t32 = +t32) && t32 < 1 && Number.isInteger(1 / t32) && (t32 = -1 / t32);
    const n37 = Math.abs(t32);
    return t32 < 0 ? { floor: (t33) => Math.floor(t33 * n37) / n37, offset: (t33, e26 = 1) => (t33 * n37 + Math.floor(e26)) / n37, range: (t33, e26) => Nt6(Math.ceil(t33 * n37), e26 * n37).map((t34) => t34 / n37) } : { floor: (t33) => Math.floor(t33 / n37) * n37, offset: (t33, e26 = 1) => t33 + n37 * Math.floor(e26), range: (t33, e26) => Nt6(Math.ceil(t33 / n37), e26 / n37).map((t34) => t34 * n37) };
  }
  function hi6(t32, n37) {
    if ((t32 = ui5(t32, n37)) && "function" != typeof t32.range)
      throw new Error("invalid interval: missing range method");
    return t32;
  }
  function di6(t32) {
    return "function" == typeof t32?.range;
  }
  function pi5(t32) {
    return void 0 === t32 || Uo4(t32) ? t32 : { value: t32 };
  }
  function mi5(t32) {
    return t32 && "function" == typeof t32[Symbol.iterator];
  }
  function yi4(t32) {
    for (const n37 of t32)
      if (null != n37)
        return "object" != typeof n37 || n37 instanceof Date;
  }
  function gi6(t32) {
    for (const n37 of t32) {
      if (null == n37)
        continue;
      const t33 = typeof n37;
      return "string" === t33 || "boolean" === t33;
    }
  }
  function vi6(t32) {
    for (const n37 of t32)
      if (null != n37)
        return n37 instanceof Date;
  }
  function xi6(t32) {
    for (const n37 of t32)
      if (null != n37)
        return "string" == typeof n37 && isNaN(n37) && o25(n37);
  }
  function wi6(t32) {
    for (const n37 of t32)
      if (null != n37) {
        if ("string" != typeof n37)
          return false;
        if (n37.trim())
          return !isNaN(n37);
      }
  }
  function bi6(t32) {
    for (const n37 of t32)
      if (null != n37)
        return "number" == typeof n37;
  }
  function ki6(t32, n37) {
    let e26;
    for (const r91 of t32)
      if (null != r91) {
        if (!n37(r91))
          return false;
        e26 = true;
      }
    return e26;
  }
  var $i6 = new Set("none,currentcolor,transparent,aliceblue,antiquewhite,aqua,aquamarine,azure,beige,bisque,black,blanchedalmond,blue,blueviolet,brown,burlywood,cadetblue,chartreuse,chocolate,coral,cornflowerblue,cornsilk,crimson,cyan,darkblue,darkcyan,darkgoldenrod,darkgray,darkgreen,darkgrey,darkkhaki,darkmagenta,darkolivegreen,darkorange,darkorchid,darkred,darksalmon,darkseagreen,darkslateblue,darkslategray,darkslategrey,darkturquoise,darkviolet,deeppink,deepskyblue,dimgray,dimgrey,dodgerblue,firebrick,floralwhite,forestgreen,fuchsia,gainsboro,ghostwhite,gold,goldenrod,gray,green,greenyellow,grey,honeydew,hotpink,indianred,indigo,ivory,khaki,lavender,lavenderblush,lawngreen,lemonchiffon,lightblue,lightcoral,lightcyan,lightgoldenrodyellow,lightgray,lightgreen,lightgrey,lightpink,lightsalmon,lightseagreen,lightskyblue,lightslategray,lightslategrey,lightsteelblue,lightyellow,lime,limegreen,linen,magenta,maroon,mediumaquamarine,mediumblue,mediumorchid,mediumpurple,mediumseagreen,mediumslateblue,mediumspringgreen,mediumturquoise,mediumvioletred,midnightblue,mintcream,mistyrose,moccasin,navajowhite,navy,oldlace,olive,olivedrab,orange,orangered,orchid,palegoldenrod,palegreen,paleturquoise,palevioletred,papayawhip,peachpuff,peru,pink,plum,powderblue,purple,rebeccapurple,red,rosybrown,royalblue,saddlebrown,salmon,sandybrown,seagreen,seashell,sienna,silver,skyblue,slateblue,slategray,slategrey,snow,springgreen,steelblue,tan,teal,thistle,tomato,turquoise,violet,wheat,white,whitesmoke,yellow".split(","));
  function Mi6(t32) {
    return "string" == typeof t32 && (t32 = t32.toLowerCase().trim(), /^#[0-9a-f]{3,8}$/.test(t32) || /^(?:url|var|rgb|rgba|hsl|hsla|hwb|lab|lch|oklab|oklch|color|color-mix)\(.*\)$/.test(t32) || $i6.has(t32));
  }
  function Li6(t32) {
    return "number" == typeof t32 && (0 <= t32 && t32 <= 1 || isNaN(t32));
  }
  function Ai6(t32) {
    return null == t32 || Ei6(t32);
  }
  function Ei6(t32) {
    return /^\s*none\s*$/i.test(t32);
  }
  function zi6(t32, n37) {
    return jo2(t32, n37, ["middle", "top-left", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left"]);
  }
  function Oi6(t32 = "middle") {
    return zi6(t32, "frameAnchor");
  }
  function Si6(t32) {
    return mi5(t32) ? function(t33) {
      console.warn("named iterables are deprecated; please use an object instead");
      const n37 = /* @__PURE__ */ new Set();
      return Object.fromEntries(Array.from(t33, (t34) => {
        const { name: e26 } = t34;
        if (null == e26)
          throw new Error("missing name");
        const r91 = `${e26}`;
        if ("__proto__" === r91)
          throw new Error(`illegal name: ${r91}`);
        if (n37.has(r91))
          throw new Error(`duplicate name: ${r91}`);
        return n37.add(r91), [e26, t34];
      }));
    }(t32) : t32;
  }
  function Ni6(t32) {
    return true === t32 ? t32 = "frame" : false === t32 ? t32 = null : null != t32 && (t32 = Bo4(t32, "clip", ["frame", "sphere"])), t32;
  }
  var Ci6 = Symbol("position");
  var Ti6 = Symbol("color");
  var Ri6 = Symbol("radius");
  var Ii6 = Symbol("length");
  var Wi6 = Symbol("opacity");
  var ji6 = Symbol("symbol");
  var Bi6 = Symbol("projection");
  var Fi6 = /* @__PURE__ */ new Map([["x", Ci6], ["y", Ci6], ["fx", Ci6], ["fy", Ci6], ["r", Ri6], ["color", Ti6], ["opacity", Wi6], ["symbol", ji6], ["length", Ii6], ["projection", Bi6]]);
  var Di5 = Math.sqrt(3);
  var qi6 = 2 / Di5;
  var _i6 = /* @__PURE__ */ new Map([["asterisk", U18], ["circle", Z17], ["cross", tt11], ["diamond", et10], ["diamond2", st11], ["hexagon", { draw(t32, n37) {
    const e26 = Math.sqrt(n37 / Math.PI), r91 = e26 * qi6, o35 = r91 / 2;
    t32.moveTo(0, r91), t32.lineTo(e26, o35), t32.lineTo(e26, -o35), t32.lineTo(0, -r91), t32.lineTo(-e26, -o35), t32.lineTo(-e26, o35), t32.closePath();
  } }], ["plus", ot11], ["square", ht11], ["square2", _t8], ["star", ct10], ["times", mt9], ["triangle", ft10], ["triangle2", xt8], ["wye", gt9]]);
  function Pi6(t32) {
    return t32 && "function" == typeof t32.draw;
  }
  function Vi6(t32) {
    return !!Pi6(t32) || "string" == typeof t32 && _i6.has(t32.toLowerCase());
  }
  function Hi6(t32) {
    if (null == t32 || Pi6(t32))
      return t32;
    const n37 = _i6.get(`${t32}`.toLowerCase());
    if (n37)
      return n37;
    throw new Error(`invalid symbol: ${t32}`);
  }
  function Yi5({ filter: t32, sort: n37, reverse: e26, transform: r91, initializer: o35, ...i29 } = {}, a27) {
    if (void 0 === r91 && (null != t32 && (r91 = Ki6(t32)), null == n37 || Xo4(n37) || (r91 = Xi6(r91, ra4(n37))), e26 && (r91 = Xi6(r91, ta4))), null != a27 && null != o35)
      throw new Error("transforms cannot be applied after initializers");
    return { ...i29, ...(null === n37 || Xo4(n37)) && { sort: n37 }, transform: Xi6(r91, a27) };
  }
  function Ui5({ filter: t32, sort: n37, reverse: e26, initializer: r91, ...o35 } = {}, i29) {
    return void 0 === r91 && (null != t32 && (r91 = Ki6(t32)), null == n37 || Xo4(n37) || (r91 = Gi6(r91, ra4(n37))), e26 && (r91 = Gi6(r91, ta4))), { ...o35, ...(null === n37 || Xo4(n37)) && { sort: n37 }, initializer: Gi6(r91, i29) };
  }
  function Xi6(t32, n37) {
    return null == t32 ? null === n37 ? void 0 : n37 : null == n37 ? null === t32 ? void 0 : t32 : function(e26, r91, o35) {
      return { data: e26, facets: r91 } = t32.call(this, e26, r91, o35), n37.call(this, Fo5(e26), r91, o35);
    };
  }
  function Gi6(t32, n37) {
    return null == t32 ? null === n37 ? void 0 : n37 : null == n37 ? null === t32 ? void 0 : t32 : function(e26, r91, o35, ...i29) {
      let a27, l35, s29, c30, u30, f25;
      return { data: l35 = e26, facets: s29 = r91, channels: a27 } = t32.call(this, e26, r91, o35, ...i29), { data: u30 = l35, facets: f25 = s29, channels: c30 } = n37.call(this, l35, s29, { ...o35, ...a27 }, ...i29), { data: u30, facets: f25, channels: { ...a27, ...c30 } };
    };
  }
  function Zi6(t32, n37) {
    return (null != t32.initializer ? Ui5 : Yi5)(t32, n37);
  }
  function Ki6(t32) {
    return (n37, e26) => {
      const r91 = mo5(n37, t32);
      return { data: n37, facets: e26.map((t33) => t33.filter((t34) => r91[t34])) };
    };
  }
  function ta4(t32, n37) {
    return { data: t32, facets: n37.map((t33) => t33.slice().reverse()) };
  }
  function ea4(t32, { sort: n37, ...e26 } = {}) {
    return { ...(Uo4(t32) && void 0 !== t32.channel ? Ui5 : Zi6)(e26, ra4(t32)), sort: Xo4(n37) ? n37 : null };
  }
  function ra4(t32) {
    return ("function" == typeof t32 && 1 !== t32.length ? oa4 : ia4)(t32);
  }
  function oa4(t32) {
    return (n37, e26) => {
      const r91 = (e27, r92) => t32(n37[e27], n37[r92]);
      return { data: n37, facets: e26.map((t33) => t33.slice().sort(r91)) };
    };
  }
  function ia4(t32) {
    let n37, e26;
    ({ channel: n37, value: t32, order: e26 } = { ...pi5(t32) });
    const r91 = n37?.startsWith("-");
    if (r91 && (n37 = n37.slice(1)), void 0 === e26 && (e26 = r91 ? Ir6 : Rr5), "function" != typeof e26)
      switch (`${e26}`.toLowerCase()) {
        case "ascending":
          e26 = Rr5;
          break;
        case "descending":
          e26 = Ir6;
          break;
        default:
          throw new Error(`invalid order: ${e26}`);
      }
    return (r92, o35, i29) => {
      let a27;
      if (void 0 === n37)
        a27 = mo5(r92, t32);
      else {
        if (void 0 === i29)
          throw new Error("channel sort requires an initializer");
        if (a27 = i29[n37], !a27)
          return {};
        a27 = a27.value;
      }
      const l35 = (t33, n38) => e26(a27[t33], a27[n38]);
      return { data: r92, facets: o35.map((t33) => t33.slice().sort(l35)) };
    };
  }
  function la4(t32 = { y: "count" }, n37 = {}) {
    const { x: e26 = bo5 } = n37;
    if (null == e26)
      throw new Error("missing channel: x");
    return ua4(e26, null, t32, n37);
  }
  function sa4(t32 = { x: "count" }, n37 = {}) {
    const { y: e26 = bo5 } = n37;
    if (null == e26)
      throw new Error("missing channel: y");
    return ua4(null, e26, t32, n37);
  }
  function ca4(t32 = { fill: "count" }, n37 = {}) {
    let { x: e26, y: r91 } = n37;
    if ([e26, r91] = Zo5(e26, r91), null == e26)
      throw new Error("missing channel: x");
    if (null == r91)
      throw new Error("missing channel: y");
    return ua4(e26, r91, t32, n37);
  }
  function ua4(t32, n37, { data: e26 = Ea5, filter: r91, sort: o35, reverse: i29, ...a27 } = {}, l35 = {}) {
    a27 = va4(a27, l35), e26 = ba4(e26, bo5), o35 = null == o35 ? void 0 : xa4("sort", o35, l35), r91 = null == r91 ? void 0 : wa4("filter", r91, l35);
    const [s29, c30] = ii6(t32), [u30, f25] = ii6(n37), { z: h35, fill: d25, stroke: p24, x1: m27, x2: y24, y1: g31, y2: v31, ...x22 } = l35, [w26, b28] = ii6(h35), [k24] = Io5(d25), [$26] = Io5(p24), [M26, L25] = ii6(k24), [A27, E24] = ii6($26);
    return { ..."z" in l35 && { z: w26 || h35 }, ..."fill" in l35 && { fill: M26 || d25 }, ..."stroke" in l35 && { stroke: A27 || p24 }, ...Yi5(x22, (l36, s30, u31) => {
      const d26 = si6(mo5(l36, t32), u31?.x), p25 = si6(mo5(l36, n37), u31?.y), m28 = mo5(l36, h35), y25 = mo5(l36, k24), g32 = mo5(l36, $26), v32 = $a5(a27, { z: m28, fill: y25, stroke: g32 }), x23 = [], w27 = [], M27 = d26 && c30([]), A28 = p25 && f25([]), z26 = m28 && b28([]), O21 = y25 && L25([]), S25 = g32 && E24([]);
      let N28 = 0;
      for (const t33 of a27)
        t33.initialize(l36);
      o35 && o35.initialize(l36), r91 && r91.initialize(l36);
      for (const t33 of s30) {
        const n38 = [];
        for (const n39 of a27)
          n39.scope("facet", t33);
        o35 && o35.scope("facet", t33), r91 && r91.scope("facet", t33);
        for (const [i30, s31] of ma4(t33, v32))
          for (const [t34, c31] of ma4(s31, p25))
            for (const [s32, u32] of ma4(c31, d26)) {
              const c32 = { data: l36 };
              if (d26 && (c32.x = s32), p25 && (c32.y = t34), v32 && (c32.z = i30), !r91 || r91.reduce(u32, c32)) {
                n38.push(N28++), w27.push(e26.reduceIndex(u32, l36, c32)), d26 && M27.push(s32), p25 && A28.push(t34), m28 && z26.push(v32 === m28 ? i30 : m28[u32[0]]), y25 && O21.push(v32 === y25 ? i30 : y25[u32[0]]), g32 && S25.push(v32 === g32 ? i30 : g32[u32[0]]);
                for (const t35 of a27)
                  t35.reduce(u32, c32);
                o35 && o35.reduce(u32, c32);
              }
            }
        x23.push(n38);
      }
      return Ma5(x23, o35, i29), { data: w27, facets: x23 };
    }), ...!fa4(a27, "x") && (s29 ? { x: s29 } : { x1: m27, x2: y24 }), ...!fa4(a27, "y") && (u30 ? { y: u30 } : { y1: g31, y2: v31 }), ...Object.fromEntries(a27.map(({ name: t33, output: n38 }) => [t33, n38])) };
  }
  function fa4(t32, ...n37) {
    for (const { name: e26 } of t32)
      if (n37.includes(e26))
        return true;
    return false;
  }
  function ha4(t32, n37, e26 = da4) {
    const r91 = Object.entries(t32);
    return null != n37.title && void 0 === t32.title && r91.push(["title", Oa5]), null != n37.href && void 0 === t32.href && r91.push(["href", za5]), r91.filter(([, t33]) => void 0 !== t33).map(([t33, r92]) => null === r92 ? /* @__PURE__ */ function(t34) {
      return { name: t34, initialize() {
      }, scope() {
      }, reduce() {
      } };
    }(t33) : e26(t33, r92, n37));
  }
  function da4(t32, n37, e26, r91 = pa4) {
    let o35;
    Ho5(n37) && "reduce" in n37 && (o35 = n37.scale, n37 = n37.reduce);
    const i29 = r91(t32, n37, e26), [a27, l35] = oi5(i29.label);
    let s29;
    return { name: t32, output: void 0 === o35 ? a27 : { value: a27, scale: o35 }, initialize(t33) {
      i29.initialize(t33), s29 = l35([]);
    }, scope(t33, n38) {
      i29.scope(t33, n38);
    }, reduce(t33, n38) {
      s29.push(i29.reduce(t33, n38));
    } };
  }
  function pa4(t32, n37, e26, r91 = ya4) {
    const o35 = ri5(t32, e26), i29 = r91(n37, o35);
    let a27, l35;
    return { label: ai5(i29 === Na5 ? null : o35, i29.label), initialize(t33) {
      a27 = void 0 === o35 ? t33 : mo5(t33, o35), "data" === i29.scope && (l35 = i29.reduceIndex(Ko3(t33), a27));
    }, scope(t33, n38) {
      i29.scope === t33 && (l35 = i29.reduceIndex(n38, a27));
    }, reduce: (t33, n38) => null == i29.scope ? i29.reduceIndex(t33, a27, n38) : i29.reduceIndex(t33, a27, l35, n38) };
  }
  function ma4(t32, n37) {
    return n37 ? q8(t32, (t33) => n37[t33]) : [[, t32]];
  }
  function ya4(t32, n37, e26 = ga4) {
    if (null == t32)
      return e26(t32);
    if ("function" == typeof t32.reduceIndex)
      return t32;
    if ("function" == typeof t32.reduce && Ho5(t32))
      return function(t33) {
        return console.warn("deprecated reduce interface; implement reduceIndex instead."), { ...t33, reduceIndex: t33.reduce.bind(t33) };
      }(t32);
    if ("function" == typeof t32)
      return r91 = t32, { reduceIndex: (t33, n38, e27) => r91(Qo5(n38, t33), e27) };
    var r91;
    if (/^p\d{2}$/i.test(t32))
      return La5(So5(t32));
    switch (`${t32}`.toLowerCase()) {
      case "first":
        return za5;
      case "last":
        return Sa4;
      case "identity":
        return Ea5;
      case "count":
        return Na5;
      case "distinct":
        return Ca5;
      case "sum":
        return null == n37 ? Na5 : Ta5;
      case "proportion":
        return Ra5(n37, "data");
      case "proportion-facet":
        return Ra5(n37, "facet");
      case "deviation":
        return La5(E6);
      case "min":
        return La5(ut6);
      case "min-index":
        return La5(lt6);
      case "max":
        return La5(ft6);
      case "max-index":
        return La5(it7);
      case "mean":
        return Aa4(Mt6);
      case "median":
        return Aa4(vt6);
      case "variance":
        return La5(N9);
      case "mode":
        return La5(At6);
    }
    return e26(t32);
  }
  function ga4(t32) {
    throw new Error(`invalid reduce: ${t32}`);
  }
  function va4(t32, n37) {
    return ha4(t32, n37, xa4);
  }
  function xa4(t32, n37, e26) {
    return da4(t32, n37, e26, wa4);
  }
  function wa4(t32, n37, e26) {
    return pa4(t32, n37, e26, ba4);
  }
  function ba4(t32, n37) {
    return ya4(t32, n37, ka5);
  }
  function ka5(t32) {
    switch (`${t32}`.toLowerCase()) {
      case "x":
        return Ia4;
      case "y":
        return Wa5;
      case "z":
        return ja5;
    }
    throw new Error(`invalid group reduce: ${t32}`);
  }
  function $a5(t32, n37) {
    for (const e26 in n37) {
      const r91 = n37[e26];
      if (void 0 !== r91 && !t32.some((t33) => t33.name === e26))
        return r91;
    }
  }
  function Ma5(t32, n37, e26) {
    if (n37) {
      const e27 = n37.output.transform(), r91 = (t33, n38) => Rr5(e27[t33], e27[n38]);
      t32.forEach((t33) => t33.sort(r91));
    }
    e26 && t32.forEach((t33) => t33.reverse());
  }
  function La5(t32) {
    return { reduceIndex: (n37, e26) => t32(n37, (t33) => e26[t33]) };
  }
  function Aa4(t32) {
    return { reduceIndex(n37, e26) {
      const r91 = t32(n37, (t33) => e26[t33]);
      return vi6(e26) ? new Date(r91) : r91;
    } };
  }
  var Ea5 = { reduceIndex: (t32, n37) => Qo5(n37, t32) };
  var za5 = { reduceIndex: (t32, n37) => n37[t32[0]] };
  var Oa5 = { reduceIndex(t32, n37) {
    const e26 = H8(I10(t32, (t33) => t33.length, (t33) => n37[t33]), Eo5), r91 = e26.slice(-5).reverse();
    if (r91.length < e26.length) {
      const t33 = e26.slice(0, -4);
      r91[4] = [`\u2026 ${t33.length.toLocaleString("en-US")} more`, jt6(t33, Eo5)];
    }
    return r91.map(([t33, n38]) => `${t33} (${n38.toLocaleString("en-US")})`).join("\n");
  } };
  var Sa4 = { reduceIndex: (t32, n37) => n37[t32[t32.length - 1]] };
  var Na5 = { label: "Frequency", reduceIndex: (t32) => t32.length };
  var Ca5 = { label: "Distinct", reduceIndex(t32, n37) {
    const e26 = new t9();
    for (const r91 of t32)
      e26.add(n37[r91]);
    return e26.size;
  } };
  var Ta5 = La5(jt6);
  function Ra5(t32, n37) {
    return null == t32 ? { scope: n37, label: "Frequency", reduceIndex: (t33, n38, e26 = 1) => t33.length / e26 } : { scope: n37, reduceIndex: (t33, n38, e26 = 1) => jt6(t33, (t34) => n38[t34]) / e26 };
  }
  var Ia4 = { reduceIndex: (t32, n37, { x: e26 }) => e26 };
  var Wa5 = { reduceIndex: (t32, n37, { y: e26 }) => e26 };
  var ja5 = { reduceIndex: (t32, n37, { z: e26 }) => e26 };
  function Fa5(t32, { scale: n37, type: e26, value: r91, filter: o35, hint: i29, label: a27 = ai5(r91) }, l35) {
    return void 0 === i29 && "function" == typeof r91?.transform && (i29 = r91.hint), _a4(l35, { scale: n37, type: e26, value: mo5(t32, r91), label: a27, filter: o35, hint: i29 });
  }
  function Da4(t32, n37) {
    return Object.fromEntries(Object.entries(t32).map(([t33, e26]) => [t33, Fa5(n37, e26, t33)]));
  }
  function qa3(t32, n37) {
    const e26 = Object.fromEntries(Object.entries(t32).map(([t33, { scale: e27, value: r91 }]) => {
      const o35 = null == e27 ? null : n37[e27];
      return [t33, null == o35 ? r91 : Do4(r91, o35)];
    }));
    return e26.channels = t32, e26;
  }
  function _a4(t32, n37) {
    const { scale: e26, value: r91 } = n37;
    if (true === e26 || "auto" === e26)
      switch (t32) {
        case "fill":
        case "stroke":
        case "color":
          n37.scale = true !== e26 && ki6(r91, Mi6) ? null : "color";
          break;
        case "fillOpacity":
        case "strokeOpacity":
        case "opacity":
          n37.scale = true !== e26 && ki6(r91, Li6) ? null : "opacity";
          break;
        case "symbol":
          true !== e26 && ki6(r91, Vi6) ? (n37.scale = null, n37.value = Do4(r91, Hi6)) : n37.scale = "symbol";
          break;
        default:
          n37.scale = Fi6.has(t32) ? t32 : null;
      }
    else if (false === e26)
      n37.scale = null;
    else if (null != e26 && !Fi6.has(e26))
      throw new Error(`unknown scale: ${e26}`);
    return n37;
  }
  function Pa5(t32, n37) {
    for (const e26 in t32) {
      const r91 = t32[e26];
      if (r91.scale === n37)
        return r91;
    }
  }
  function Va5(t32, n37) {
    const e26 = t32.original;
    if (e26 === t32)
      return n37;
    const r91 = n37.value, o35 = n37.value = [];
    for (let n38 = 0; n38 < e26.length; ++n38) {
      const i29 = r91[e26[n38][0]];
      for (const e27 of t32[n38])
        o35[e27] = i29;
    }
    return n37;
  }
  function Ha5(t32, n37, e26) {
    const r91 = Ya5(t32, n37);
    return Do4(Ya5(t32, e26), (t33, n38) => Math.abs(t33 - r91[n38]), Float64Array);
  }
  function Ya5(t32, n37, e26) {
    let r91 = t32[n37];
    if (r91 || void 0 === e26 || (r91 = t32[e26]), r91)
      return r91.value;
    throw new Error(`missing channel: ${n37}`);
  }
  function Ua5(t32) {
    if (null == t32 || "function" == typeof t32)
      return t32;
    switch (`${t32}`.toLowerCase()) {
      case "ascending":
        return Xa5;
      case "descending":
        return Ga5;
    }
    throw new Error(`invalid order: ${t32}`);
  }
  function Xa5([t32, n37], [e26, r91]) {
    return Rr5(n37, r91) || Rr5(t32, e26);
  }
  function Ga5([t32, n37], [e26, r91]) {
    return Ir6(n37, r91) || Rr5(t32, e26);
  }
  function Za5(t32, n37) {
    let e26 = t32[n37];
    if (e26) {
      for (; e26.source; )
        e26 = e26.source;
      return null === e26.source ? null : e26;
    }
  }
  var Ja5 = /* @__PURE__ */ new Map([["accent", t22], ["category10", b19], ["dark2", r85], ["observable10", n32], ["paired", s23], ["pastel1", o24], ["pastel2", m22], ["set1", h30], ["set2", l27], ["set3", p21], ["tableau10", i24]]);
  var Ka5 = new Map([...Ja5, ["brbg", tl3(M19, y19)], ["prgn", tl3(w19, A20)], ["piyg", tl3(P18, B18)], ["puor", tl3(G20, R17)], ["rdbu", tl3(Y17, x19)], ["rdgy", tl3(O16, g23)], ["rdylbu", tl3(v22, S17)], ["rdylgn", tl3(C17, I19)], ["spectral", tl3(D19, T16)], ["burd", nl3(Y17, x19)], ["buylrd", nl3(v22, S17)], ["blues", Qa4(bf, tf)], ["greens", Qa4(rf, nf)], ["greys", Qa4(sf, of)], ["oranges", Qa4(uf, Mf)], ["purples", Qa4(mf, hf)], ["reds", Qa4(lf, pf)], ["turbo", el3(gf)], ["viridis", el3(Sf)], ["magma", el3(Cf)], ["inferno", el3(If)], ["plasma", el3(Df)], ["cividis", el3(yf)], ["cubehelix", el3(wf)], ["warm", el3(Af)], ["cool", el3(Pf)], ["bugn", Qa4(k17, V17)], ["bupu", Qa4(W17, j20)], ["gnbu", Qa4(q18, z18)], ["orrd", Qa4(E16, F17)], ["pubu", Qa4(K20, L17)], ["pubugn", Qa4(H18, J18)], ["purd", Qa4(N18, Q16)], ["rdpu", Qa4(U17, X17)], ["ylgn", Qa4(_18, ff)], ["ylgnbu", Qa4(Z16, $19)], ["ylorbr", Qa4(ef, af)], ["ylorrd", Qa4(df, cf)], ["rainbow", rl3(Gf)], ["sinebow", rl3(Of)]]);
  function Qa4(t32, n37) {
    return ({ length: e26 }) => 1 === e26 ? [t32[3][1]] : 2 === e26 ? [t32[3][1], t32[3][2]] : (e26 = Math.max(3, Math.floor(e26))) > 9 ? $11(n37, e26) : t32[e26];
  }
  function tl3(t32, n37) {
    return ({ length: e26 }) => 2 === e26 ? [t32[3][0], t32[3][2]] : (e26 = Math.max(3, Math.floor(e26))) > 11 ? $11(n37, e26) : t32[e26];
  }
  function nl3(t32, n37) {
    return ({ length: e26 }) => 2 === e26 ? [t32[3][2], t32[3][0]] : (e26 = Math.max(3, Math.floor(e26))) > 11 ? $11((t33) => n37(1 - t33), e26) : t32[e26].slice().reverse();
  }
  function el3(t32) {
    return ({ length: n37 }) => $11(t32, Math.max(2, Math.floor(n37)));
  }
  function rl3(t32) {
    return ({ length: n37 }) => $11(t32, Math.floor(n37) + 1).slice(0, -1);
  }
  function ol4(t32) {
    const n37 = `${t32}`.toLowerCase();
    if (!Ka5.has(n37))
      throw new Error(`unknown ordinal scheme: ${n37}`);
    return Ka5.get(n37);
  }
  function il3(t32, n37) {
    const e26 = ol4(t32), r91 = "function" == typeof e26 ? e26({ length: n37 }) : e26;
    return r91.length !== n37 ? r91.slice(0, n37) : r91;
  }
  var al4 = /* @__PURE__ */ new Map([["brbg", y19], ["prgn", A20], ["piyg", B18], ["puor", R17], ["rdbu", x19], ["rdgy", g23], ["rdylbu", S17], ["rdylgn", I19], ["spectral", T16], ["burd", (t32) => x19(1 - t32)], ["buylrd", (t32) => S17(1 - t32)], ["blues", tf], ["greens", nf], ["greys", of], ["purples", hf], ["reds", pf], ["oranges", Mf], ["turbo", gf], ["viridis", Sf], ["magma", Cf], ["inferno", If], ["plasma", Df], ["cividis", yf], ["cubehelix", wf], ["warm", Af], ["cool", Pf], ["bugn", V17], ["bupu", j20], ["gnbu", z18], ["orrd", F17], ["pubugn", J18], ["pubu", L17], ["purd", Q16], ["rdpu", X17], ["ylgnbu", $19], ["ylgn", ff], ["ylorbr", af], ["ylorrd", cf], ["rainbow", Gf], ["sinebow", Of]]);
  function ll2(t32) {
    const n37 = `${t32}`.toLowerCase();
    if (!al4.has(n37))
      throw new Error(`unknown quantitative scheme: ${n37}`);
    return al4.get(n37);
  }
  var sl2 = /* @__PURE__ */ new Set(["brbg", "prgn", "piyg", "puor", "rdbu", "rdgy", "rdylbu", "rdylgn", "spectral", "burd", "buylrd"]);
  var cl4 = (t32) => (n37) => t32(1 - n37);
  var ul2 = [0, 1];
  var fl3 = /* @__PURE__ */ new Map([["number", X11], ["rgb", v12], ["hsl", Q11], ["hcl", Z10], ["lab", P11]]);
  function hl4(t32) {
    const n37 = `${t32}`.toLowerCase();
    if (!fl3.has(n37))
      throw new Error(`unknown interpolator: ${n37}`);
    return fl3.get(n37);
  }
  function dl3(t32, n37, e26, { type: r91, nice: o35, clamp: i29, zero: a27, domain: l35 = gl2(t32, e26), unknown: s29, round: c30, scheme: u30, interval: f25, range: h35 = Fi6.get(t32) === Ri6 ? xl2(e26, l35) : Fi6.get(t32) === Ii6 ? wl3(e26, l35) : Fi6.get(t32) === Wi6 ? ul2 : void 0, interpolate: d25 = Fi6.get(t32) === Ti6 ? null == u30 && void 0 !== h35 ? v12 : ll2(void 0 !== u30 ? u30 : "cyclical" === r91 ? "rainbow" : "turbo") : c30 ? j12 : X11, reverse: p24 }) {
    if (f25 = hi6(f25, r91), "cyclical" !== r91 && "sequential" !== r91 || (r91 = "linear"), "function" != typeof d25 && (d25 = hl4(d25)), p24 = !!p24, void 0 !== h35) {
      if ((l35 = Fo5(l35)).length !== (h35 = Fo5(h35)).length) {
        if (1 === d25.length)
          throw new Error("invalid piecewise interpolator");
        d25 = U12(d25, h35), h35 = void 0;
      }
    }
    if (1 === d25.length ? (p24 && (d25 = cl4(d25), p24 = false), void 0 === h35 && 2 === (h35 = Float64Array.from(l35, (t33, n38) => n38 / (l35.length - 1))).length && (h35 = ul2), n37.interpolate((h35 === ul2 ? Oo4 : $l2)(d25))) : n37.interpolate(d25), a27) {
      const [t33, n38] = T8(l35);
      if (t33 > 0 || n38 < 0) {
        (Dr5(l35 = qo5(l35)) || 1) === Math.sign(t33) ? l35[0] = 0 : l35[l35.length - 1] = 0;
      }
    }
    return p24 && (l35 = Dt6(l35)), n37.domain(l35).unknown(s29), o35 && (n37.nice(function(t33, n38) {
      return true === t33 ? void 0 : "number" == typeof t33 ? t33 : function(t34, n39) {
        if ((t34 = hi6(t34, n39)) && "function" != typeof t34.ceil)
          throw new Error("invalid interval: missing ceil method");
        return t34;
      }(t33, n38);
    }(o35, r91)), l35 = n37.domain()), void 0 !== h35 && n37.range(h35), i29 && n37.clamp(i29), { type: r91, domain: l35, range: h35, scale: n37, interpolate: d25, interval: f25 };
  }
  function pl3(t32, n37, { exponent: e26 = 1, ...r91 }) {
    return dl3(t32, xn6().exponent(e26), n37, { ...r91, type: "pow" });
  }
  function ml(t32, e26, { domain: r91 = [0], unknown: o35, scheme: i29 = "rdylbu", interpolate: a27, range: l35 = void 0 !== a27 ? $11(a27, r91.length + 1) : Fi6.get(t32) === Ti6 ? il3(i29, r91.length + 1) : void 0, reverse: s29 }) {
    const c30 = Dr5(r91 = Fo5(r91));
    if (!isNaN(c30) && !function(t33, e27) {
      for (let r92 = 1, o36 = t33.length, i30 = t33[0]; r92 < o36; ++r92) {
        const o37 = o7(i30, i30 = t33[r92]);
        if (0 !== o37 && o37 !== e27)
          return false;
      }
      return true;
    }(r91, c30))
      throw new Error(`the ${t32} scale has a non-monotonic domain`);
    return s29 && (l35 = Dt6(l35)), { type: "threshold", scale: In6(c30 < 0 ? Dt6(r91) : r91, void 0 === l35 ? [] : l35).unknown(o35), domain: r91, range: l35 };
  }
  function yl4(t32, n37 = jr6) {
    return t32.length ? [ut6(t32, ({ value: t33 }) => void 0 === t33 ? t33 : ut6(t33, n37)), ft6(t32, ({ value: t33 }) => void 0 === t33 ? t33 : ft6(t33, n37))] : [0, 1];
  }
  function gl2(t32, n37) {
    const e26 = Fi6.get(t32);
    return (e26 === Ri6 || e26 === Wi6 || e26 === Ii6 ? vl4 : yl4)(n37);
  }
  function vl4(t32) {
    return [0, t32.length ? ft6(t32, ({ value: t33 }) => void 0 === t33 ? t33 : ft6(t33, jr6)) : 1];
  }
  function xl2(t32, n37) {
    const e26 = t32.find(({ radius: t33 }) => void 0 !== t33);
    if (void 0 !== e26)
      return [0, e26.radius];
    const r91 = ht6(t32, 0.5, ({ value: t33 }) => void 0 === t33 ? NaN : ht6(t33, 0.25, Br6)), o35 = n37.map((t33) => 3 * Math.sqrt(t33 / r91)), i29 = 30 / ft6(o35);
    return i29 < 1 ? o35.map((t33) => t33 * i29) : o35;
  }
  function wl3(t32, n37) {
    const e26 = vt6(t32, ({ value: t33 }) => void 0 === t33 ? NaN : vt6(t33, Math.abs)), r91 = n37.map((t33) => 12 * t33 / e26), o35 = 60 / ft6(r91);
    return o35 < 1 ? r91.map((t33) => t33 * o35) : r91;
  }
  function bl4(t32) {
    for (const { value: n37 } of t32)
      if (void 0 !== n37)
        for (let e26 of n37) {
          if (e26 > 0)
            return yl4(t32, Br6);
          if (e26 < 0)
            return yl4(t32, Fr6);
        }
    return [1, 10];
  }
  function kl2(t32) {
    const n37 = [];
    for (const { value: e26 } of t32)
      if (void 0 !== e26)
        for (const t33 of e26)
          n37.push(t33);
    return n37;
  }
  function $l2(t32) {
    return (n37, e26) => (r91) => t32(n37 + r91 * (e26 - n37));
  }
  var Ml2;
  var Ll2 = 0;
  function Al2(t32) {
    t32 !== Ml2 && (Ml2 = t32, console.warn(t32), ++Ll2);
  }
  function El2(t32, e26, r91, o35, { type: i29, nice: a27, clamp: l35, domain: s29 = yl4(o35), unknown: c30, pivot: u30 = 0, scheme: f25, range: h35, symmetric: d25 = true, interpolate: p24 = Fi6.get(t32) === Ti6 ? null == f25 && void 0 !== h35 ? v12 : ll2(void 0 !== f25 ? f25 : "rdbu") : X11, reverse: m27 }) {
    u30 = +u30, s29 = Fo5(s29);
    let [y24, g31] = s29;
    if (s29.length > 2 && Al2(`Warning: the diverging ${t32} scale domain contains extra elements.`), o7(y24, g31) < 0 && ([y24, g31] = [g31, y24], m27 = !m27), y24 = Math.min(y24, u30), g31 = Math.max(g31, u30), "function" != typeof p24 && (p24 = hl4(p24)), void 0 !== h35 && (p24 = 1 === p24.length ? $l2(p24)(...h35) : U12(p24, h35)), m27 && (p24 = cl4(p24)), d25) {
      const t33 = r91.apply(u30), n37 = t33 - r91.apply(y24), e27 = r91.apply(g31) - t33;
      n37 < e27 ? y24 = r91.invert(t33 - e27) : n37 > e27 && (g31 = r91.invert(t33 + n37));
    }
    return e26.domain([y24, u30, g31]).unknown(c30).interpolator(p24), l35 && e26.clamp(l35), a27 && e26.nice(a27), { type: i29, domain: [y24, g31], pivot: u30, interpolate: p24, scale: e26 };
  }
  function zl2(t32, n37, { exponent: e26 = 1, ...r91 }) {
    return El2(t32, Kn4().exponent(e26 = +e26), /* @__PURE__ */ function(t33) {
      return 0.5 === t33 ? Cl2 : { apply: (n38) => Math.sign(n38) * Math.pow(Math.abs(n38), t33), invert: (n38) => Math.sign(n38) * Math.pow(Math.abs(n38), 1 / t33) };
    }(e26), n37, { ...r91, type: "diverging-pow" });
  }
  function Ol2(t32, n37, { constant: e26 = 1, ...r91 }) {
    return El2(t32, Jn6().constant(e26 = +e26), /* @__PURE__ */ function(t33) {
      return { apply: (n38) => Math.sign(n38) * Math.log1p(Math.abs(n38 / t33)), invert: (n38) => Math.sign(n38) * Math.expm1(Math.abs(n38)) * t33 };
    }(e26), n37, r91);
  }
  var Sl = { apply: (t32) => t32, invert: (t32) => t32 };
  var Nl2 = { apply: Math.log, invert: Math.exp };
  var Cl2 = { apply: (t32) => Math.sign(t32) * Math.sqrt(Math.abs(t32)), invert: (t32) => Math.sign(t32) * (t32 * t32) };
  function Tl2(t32, n37, e26, r91) {
    return dl3(t32, n37, e26, r91);
  }
  var Rl2 = Symbol("ordinal");
  function Il(t32, n37, e26, { type: r91, interval: o35, domain: i29, range: a27, reverse: l35, hint: s29 }) {
    return o35 = hi6(o35, r91), void 0 === i29 && (i29 = Bl(e26, o35, t32)), "categorical" !== r91 && r91 !== Rl2 || (r91 = "ordinal"), l35 && (i29 = Dt6(i29)), i29 = n37.domain(i29).domain(), void 0 !== a27 && ("function" == typeof a27 && (a27 = a27(i29)), n37.range(a27)), { type: r91, domain: i29, range: a27, scale: n37, hint: s29, interval: o35 };
  }
  function Wl2(t32, n37, { type: e26, interval: r91, domain: o35, range: i29, scheme: a27, unknown: l35, ...s29 }) {
    let c30;
    if (r91 = hi6(r91, e26), void 0 === o35 && (o35 = Bl(n37, r91, t32)), Fi6.get(t32) === ji6)
      c30 = function(t33) {
        return { fill: Fl2(t33, "fill"), stroke: Fl2(t33, "stroke") };
      }(n37), i29 = void 0 === i29 ? function(t33) {
        return Ai6(t33.fill) ? wt7 : bt8;
      }(c30) : Do4(i29, Hi6);
    else if (Fi6.get(t32) === Ti6 && (void 0 !== i29 || "ordinal" !== e26 && e26 !== Rl2 || (i29 = function(t33, n38 = "greys") {
      const e27 = /* @__PURE__ */ new Set(), [r92, o36] = il3(n38, 2);
      for (const n39 of t33)
        if (null != n39)
          if (true === n39)
            e27.add(o36);
          else {
            if (false !== n39)
              return;
            e27.add(r92);
          }
      return [...e27];
    }(o35, a27), void 0 !== i29 && (a27 = void 0)), void 0 === a27 && void 0 === i29 && (a27 = "ordinal" === e26 ? "turbo" : "observable10"), void 0 !== a27))
      if (void 0 !== i29) {
        const t33 = ll2(a27), n38 = i29[0], e27 = i29[1] - i29[0];
        i29 = ({ length: r92 }) => $11((r93) => t33(n38 + e27 * r93), r92);
      } else
        i29 = ol4(a27);
    if (l35 === z17)
      throw new Error(`implicit unknown on ${t32} scale is not supported`);
    return Il(t32, Y16().unknown(l35), n37, { ...s29, type: e26, domain: o35, range: i29, hint: c30 });
  }
  function jl2(t32, n37, e26, r91) {
    let { round: o35 } = e26;
    return void 0 !== o35 && t32.round(o35 = !!o35), (t32 = Il(r91, t32, n37, e26)).round = o35, t32;
  }
  function Bl(t32, n37, e26) {
    const r91 = new t9();
    for (const { value: n38, domain: e27 } of t32) {
      if (void 0 !== e27)
        return e27();
      if (void 0 !== n38)
        for (const t33 of n38)
          r91.add(t33);
    }
    if (void 0 !== n37) {
      const [t33, e27] = T8(r91).map(n37.floor, n37);
      return n37.range(t33, n37.offset(e27));
    }
    if (r91.size > 1e4 && Fi6.get(e26) === Ci6)
      throw new Error(`implicit ordinal domain of ${e26} scale has more than 10,000 values`);
    return H8(r91, Rr5);
  }
  function Fl2(t32, n37) {
    let e26;
    for (const { hint: r91 } of t32) {
      const t33 = r91?.[n37];
      if (void 0 !== t33) {
        if (void 0 === e26)
          e26 = t33;
        else if (e26 !== t33)
          return;
      }
    }
    return e26;
  }
  function Dl(t32, { label: n37, inset: e26 = 0, insetTop: r91 = e26, insetRight: o35 = e26, insetBottom: i29 = e26, insetLeft: a27 = e26, round: l35, nice: s29, clamp: c30, zero: u30, align: f25, padding: h35, projection: d25, facet: { label: p24 = n37 } = {}, ...m27 } = {}) {
    const y24 = {};
    for (const [e27, g31] of t32) {
      const t33 = m27[e27], v31 = Jl2(e27, g31, { round: Fi6.get(e27) === Ci6 ? l35 : void 0, nice: s29, clamp: c30, zero: u30, align: f25, padding: h35, projection: d25, ...t33 });
      if (v31) {
        let { label: l36 = "fx" === e27 || "fy" === e27 ? p24 : n37, percent: s30, transform: c31, inset: u31, insetTop: f26 = void 0 !== u31 ? u31 : "y" === e27 ? r91 : 0, insetRight: h36 = void 0 !== u31 ? u31 : "x" === e27 ? o35 : 0, insetBottom: d26 = void 0 !== u31 ? u31 : "y" === e27 ? i29 : 0, insetLeft: m28 = void 0 !== u31 ? u31 : "x" === e27 ? a27 : 0 } = t33 || {};
        if (null == c31)
          c31 = void 0;
        else if ("function" != typeof c31)
          throw new Error("invalid scale transform; not a function");
        v31.percent = !!s30, v31.label = void 0 === l36 ? _l3(g31, v31) : l36, v31.transform = c31, "x" === e27 || "fx" === e27 ? (v31.insetLeft = +m28, v31.insetRight = +h36) : "y" !== e27 && "fy" !== e27 || (v31.insetTop = +f26, v31.insetBottom = +d26), y24[e27] = v31;
      }
    }
    return y24;
  }
  function ql2(t32) {
    const n37 = {}, e26 = { scales: n37 };
    for (const [r91, o35] of Object.entries(t32)) {
      const { scale: t33, type: i29, interval: a27, label: l35 } = o35;
      n37[r91] = ss5(o35), e26[r91] = t33, t33.type = i29, null != a27 && (t33.interval = a27), null != l35 && (t33.label = l35);
    }
    return e26;
  }
  function _l3(t32 = [], n37) {
    let e26;
    for (const { label: n38 } of t32)
      if (void 0 !== n38) {
        if (void 0 === e26)
          e26 = n38;
        else if (e26 !== n38)
          return;
      }
    if (void 0 !== e26)
      return !es5(n37) && n37.percent && (e26 = `${e26} (%)`), { inferred: true, toString: () => e26 };
  }
  function Pl2(t32) {
    return Math.sign(Dr5(t32.domain())) * Math.sign(Dr5(t32.range()));
  }
  function Vl2(t32) {
    const { marginTop: n37, marginRight: e26, marginBottom: r91, marginLeft: o35, width: i29, height: a27, facet: { marginTop: l35, marginRight: s29, marginBottom: c30, marginLeft: u30 } } = t32;
    return { marginTop: Math.max(n37, l35), marginRight: Math.max(e26, s29), marginBottom: Math.max(r91, c30), marginLeft: Math.max(o35, u30), width: i29, height: a27 };
  }
  function Hl2({ fx: t32, fy: n37 }, e26) {
    const { marginTop: r91, marginRight: o35, marginBottom: i29, marginLeft: a27, width: l35, height: s29 } = Vl2(e26);
    return { marginTop: r91, marginRight: o35, marginBottom: i29, marginLeft: a27, width: t32 ? t32.scale.bandwidth() + a27 + o35 : l35, height: n37 ? n37.scale.bandwidth() + r91 + i29 : s29, facet: { width: l35, height: s29 } };
  }
  function Yl2(t32, n37) {
    if (void 0 === t32.range) {
      const { insetLeft: e26, insetRight: r91 } = t32, { width: o35, marginLeft: i29 = 0, marginRight: a27 = 0 } = n37, l35 = i29 + e26, s29 = o35 - a27 - r91;
      t32.range = [l35, Math.max(l35, s29)], es5(t32) || (t32.range = Gl2(t32)), t32.scale.range(t32.range);
    }
    Xl2(t32);
  }
  function Ul2(t32, n37) {
    if (void 0 === t32.range) {
      const { insetTop: e26, insetBottom: r91 } = t32, { height: o35, marginTop: i29 = 0, marginBottom: a27 = 0 } = n37, l35 = i29 + e26, s29 = o35 - a27 - r91;
      t32.range = [Math.max(l35, s29), l35], es5(t32) ? t32.range.reverse() : t32.range = Gl2(t32), t32.scale.range(t32.range);
    }
    Xl2(t32);
  }
  function Xl2(t32) {
    void 0 === t32.round && function({ type: t33 }) {
      return "point" === t33 || "band" === t33;
    }(t32) && function({ scale: t33 }) {
      const n37 = t33.domain().length, [e26, r91] = t33.range(), o35 = t33.paddingInner ? t33.paddingInner() : 1, i29 = t33.paddingOuter ? t33.paddingOuter() : t33.padding(), a27 = n37 - o35, l35 = Math.abs(r91 - e26) / Math.max(1, a27 + 2 * i29);
      return (l35 - Math.floor(l35)) * a27;
    }(t32) <= 30 && t32.scale.round(true);
  }
  function Gl2(t32) {
    const n37 = t32.scale.domain().length + rs5(t32);
    if (!(n37 > 2))
      return t32.range;
    const [e26, r91] = t32.range;
    return Array.from({ length: n37 }, (t33, o35) => e26 + o35 / (n37 - 1) * (r91 - e26));
  }
  function Jl2(t32, n37 = [], e26 = {}) {
    const r91 = function(t33, n38, { type: e27, domain: r92, range: o35, scheme: i29, pivot: a27, projection: l35 }) {
      if (e27 = Ql2(e27), "fx" === t33 || "fy" === t33)
        return "band";
      "x" !== t33 && "y" !== t33 || null == l35 || (e27 = ts5);
      for (const t34 of n38) {
        const n39 = Ql2(t34.type);
        if (void 0 !== n39) {
          if (void 0 === e27)
            e27 = n39;
          else if (e27 !== n39)
            throw new Error(`scale incompatible with channel: ${e27} !== ${n39}`);
        }
      }
      if (e27 === ts5)
        return;
      if (void 0 !== e27)
        return e27;
      if (void 0 === r92 && !n38.some(({ value: t34 }) => void 0 !== t34))
        return;
      const s29 = Fi6.get(t33);
      if (s29 === Ri6)
        return "sqrt";
      if (s29 === Wi6 || s29 === Ii6)
        return "linear";
      if (s29 === ji6)
        return "ordinal";
      if ((r92 || o35 || []).length > 2)
        return ns5(s29);
      if (void 0 !== r92) {
        if (gi6(r92))
          return ns5(s29);
        if (vi6(r92))
          return "utc";
      } else {
        const t34 = n38.map(({ value: t35 }) => t35).filter((t35) => void 0 !== t35);
        if (t34.some(gi6))
          return ns5(s29);
        if (t34.some(vi6))
          return "utc";
      }
      if (s29 === Ti6) {
        if (null != a27 || function(t34) {
          return null != t34 && sl2.has(`${t34}`.toLowerCase());
        }(i29))
          return "diverging";
        if (function(t34) {
          return null != t34 && Ja5.has(`${t34}`.toLowerCase());
        }(i29))
          return "categorical";
      }
      return "linear";
    }(t32, n37, e26);
    if (void 0 === e26.type && void 0 === e26.domain && void 0 === e26.range && null == e26.interval && "fx" !== t32 && "fy" !== t32 && es5({ type: r91 })) {
      const e27 = n37.map(({ value: t33 }) => t33).filter((t33) => void 0 !== t33);
      e27.some(vi6) ? Al2(`Warning: some data associated with the ${t32} scale are dates. Dates are typically associated with a "utc" or "time" scale rather than a "${Kl2(r91)}" scale. If you are using a bar mark, you probably want a rect mark with the interval option instead; if you are using a group transform, you probably want a bin transform instead. If you want to treat this data as ordinal, you can specify the interval of the ${t32} scale (e.g., d3.utcDay), or you can suppress this warning by setting the type of the ${t32} scale to "${Kl2(r91)}".`) : e27.some(xi6) ? Al2(`Warning: some data associated with the ${t32} scale are strings that appear to be dates (e.g., YYYY-MM-DD). If these strings represent dates, you should parse them to Date objects. Dates are typically associated with a "utc" or "time" scale rather than a "${Kl2(r91)}" scale. If you are using a bar mark, you probably want a rect mark with the interval option instead; if you are using a group transform, you probably want a bin transform instead. If you want to treat this data as ordinal, you can suppress this warning by setting the type of the ${t32} scale to "${Kl2(r91)}".`) : e27.some(wi6) && Al2(`Warning: some data associated with the ${t32} scale are strings that appear to be numbers. If these strings represent numbers, you should parse or coerce them to numbers. Numbers are typically associated with a "linear" scale rather than a "${Kl2(r91)}" scale. If you want to treat this data as ordinal, you can specify the interval of the ${t32} scale (e.g., 1 for integers), or you can suppress this warning by setting the type of the ${t32} scale to "${Kl2(r91)}".`);
    }
    switch (e26.type = r91, r91) {
      case "diverging":
      case "diverging-sqrt":
      case "diverging-pow":
      case "diverging-log":
      case "diverging-symlog":
      case "cyclical":
      case "sequential":
      case "linear":
      case "sqrt":
      case "threshold":
      case "quantile":
      case "pow":
      case "log":
      case "symlog":
        e26 = is5(n37, e26, No5);
        break;
      case "identity":
        switch (Fi6.get(t32)) {
          case Ci6:
            e26 = is5(n37, e26, No5);
            break;
          case ji6:
            e26 = is5(n37, e26, as5);
        }
        break;
      case "utc":
      case "time":
        e26 = is5(n37, e26, To4);
    }
    switch (r91) {
      case "diverging":
        return function(t33, n38, e27) {
          return El2(t33, Gn5(), Sl, n38, e27);
        }(t32, n37, e26);
      case "diverging-sqrt":
        return function(t33, n38, e27) {
          return zl2(t33, n38, { ...e27, exponent: 0.5 });
        }(t32, n37, e26);
      case "diverging-pow":
        return zl2(t32, n37, e26);
      case "diverging-log":
        return function(t33, n38, { base: e27 = 10, pivot: r92 = 1, domain: o35 = yl4(n38, r92 < 0 ? Fr6 : Br6), ...i29 }) {
          return El2(t33, Hn6().base(e27 = +e27), Nl2, n38, { domain: o35, pivot: r92, ...i29 });
        }(t32, n37, e26);
      case "diverging-symlog":
        return Ol2(t32, n37, e26);
      case "categorical":
      case "ordinal":
      case Rl2:
        return Wl2(t32, n37, e26);
      case "cyclical":
      case "sequential":
      case "linear":
        return function(t33, n38, e27) {
          return dl3(t33, en8(), n38, e27);
        }(t32, n37, e26);
      case "sqrt":
        return function(t33, n38, e27) {
          return pl3(t33, n38, { ...e27, exponent: 0.5 });
        }(t32, n37, e26);
      case "threshold":
        return ml(t32, 0, e26);
      case "quantile":
        return function(t33, n38, { range: e27, quantiles: r92 = void 0 === e27 ? 5 : (e27 = [...e27]).length, n: o35 = r92, scheme: i29 = "rdylbu", domain: a27 = kl2(n38), unknown: l35, interpolate: s29, reverse: c30 }) {
          return void 0 === e27 && (e27 = void 0 !== s29 ? $11(s29, o35) : Fi6.get(t33) === Ti6 ? il3(i29, o35) : void 0), a27.length > 0 && (a27 = Sn5(a27, void 0 === e27 ? { length: o35 } : e27).quantiles()), ml(t33, 0, { domain: a27, range: e27, reverse: c30, unknown: l35 });
        }(t32, n37, e26);
      case "quantize":
        return function(t33, n38, { range: e27, n: r92 = void 0 === e27 ? 5 : (e27 = [...e27]).length, scheme: o35 = "rdylbu", domain: i29 = gl2(t33, n38), unknown: a27, interpolate: l35, reverse: s29 }) {
          const [c30, u30] = T8(i29);
          let f25;
          return void 0 === e27 ? (f25 = $8(c30, u30, r92), f25[0] <= c30 && f25.splice(0, 1), f25[f25.length - 1] >= u30 && f25.pop(), r92 = f25.length + 1, e27 = void 0 !== l35 ? $11(l35, r92) : Fi6.get(t33) === Ti6 ? il3(o35, r92) : void 0) : (f25 = $11(X11(c30, u30), r92 + 1).slice(1, -1), c30 instanceof Date && (f25 = f25.map((t34) => new Date(t34)))), Dr5(Fo5(i29)) < 0 && f25.reverse(), ml(t33, 0, { domain: f25, range: e27, reverse: s29, unknown: a27 });
        }(t32, n37, e26);
      case "pow":
        return pl3(t32, n37, e26);
      case "log":
        return function(t33, n38, { base: e27 = 10, domain: r92 = bl4(n38), ...o35 }) {
          return dl3(t33, gn6().base(e27), n38, { ...o35, domain: r92 });
        }(t32, n37, e26);
      case "symlog":
        return function(t33, n38, { constant: e27 = 1, ...r92 }) {
          return dl3(t33, vn6().constant(e27), n38, r92);
        }(t32, n37, e26);
      case "utc":
        return function(t33, n38, e27) {
          return Tl2(t33, Fn6(), n38, e27);
        }(t32, n37, e26);
      case "time":
        return function(t33, n38, e27) {
          return Tl2(t33, Ln5(), n38, e27);
        }(t32, n37, e26);
      case "point":
        return function(t33, n38, { align: e27 = 0.5, padding: r92 = 0.5, ...o35 }) {
          return jl2(H17().align(e27).padding(r92), n38, o35, t33);
        }(t32, n37, e26);
      case "band":
        return function(t33, n38, { align: e27 = 0.5, padding: r92 = 0.1, paddingInner: o35 = r92, paddingOuter: i29 = "fx" === t33 || "fy" === t33 ? 0 : r92, ...a27 }) {
          return jl2(j19().align(e27).paddingInner(o35).paddingOuter(i29), n38, a27, t33);
        }(t32, n37, e26);
      case "identity":
        return function(t33) {
          return { type: "identity", scale: (n38 = Fi6.get(t33), n38 === Ci6 || n38 === Ri6 || n38 === Ii6 || n38 === Wi6 ? un9() : (t34) => t34) };
          var n38;
        }(t32);
      case void 0:
        return;
      default:
        throw new Error(`unknown scale type: ${r91}`);
    }
  }
  function Kl2(t32) {
    return "symbol" == typeof t32 ? t32.description : t32;
  }
  function Ql2(t32) {
    return "string" == typeof t32 ? `${t32}`.toLowerCase() : t32;
  }
  var ts5 = { toString: () => "projection" };
  function ns5(t32) {
    switch (t32) {
      case Ci6:
        return "point";
      case Ti6:
        return Rl2;
      default:
        return "ordinal";
    }
  }
  function es5({ type: t32 }) {
    return "ordinal" === t32 || "point" === t32 || "band" === t32 || t32 === Rl2;
  }
  function rs5({ type: t32 }) {
    return "threshold" === t32;
  }
  function os5(t32) {
    if (void 0 === t32)
      return true;
    const n37 = t32.domain(), e26 = t32(n37[0]);
    for (let r91 = 1, o35 = n37.length; r91 < o35; ++r91)
      if (t32(n37[r91]) - e26)
        return false;
    return true;
  }
  function is5(t32, { domain: n37, ...e26 }, r91) {
    for (const e27 of t32)
      void 0 !== e27.value && (void 0 === n37 && (n37 = e27.value?.domain), e27.value = r91(e27.value));
    return { domain: void 0 === n37 ? n37 : r91(n37), ...e26 };
  }
  function as5(t32) {
    return Do4(t32, Hi6);
  }
  function ss5({ scale: t32, type: n37, domain: e26, range: r91, interpolate: o35, interval: i29, transform: a27, percent: l35, pivot: s29 }) {
    if ("identity" === n37)
      return { type: "identity", apply: (t33) => t33, invert: (t33) => t33 };
    const c30 = t32.unknown ? t32.unknown() : void 0;
    return { type: n37, domain: qo5(e26), ...void 0 !== r91 && { range: qo5(r91) }, ...void 0 !== a27 && { transform: a27 }, ...l35 && { percent: l35 }, ...void 0 !== c30 && { unknown: c30 }, ...void 0 !== i29 && { interval: i29 }, ...void 0 !== o35 && { interpolate: o35 }, ...t32.clamp && { clamp: t32.clamp() }, ...void 0 !== s29 && { pivot: s29, symmetric: false }, ...t32.base && { base: t32.base() }, ...t32.exponent && { exponent: t32.exponent() }, ...t32.constant && { constant: t32.constant() }, ...t32.align && { align: t32.align(), round: t32.round() }, ...t32.padding && (t32.paddingInner ? { paddingInner: t32.paddingInner(), paddingOuter: t32.paddingOuter() } : { padding: t32.padding() }), ...t32.bandwidth && { bandwidth: t32.bandwidth(), step: t32.step() }, apply: (n38) => t32(n38), ...t32.invert && { invert: (n38) => t32.invert(n38) } };
  }
  function cs5(t32, { fx: n37, fy: e26 }) {
    const r91 = Ko3(t32), o35 = n37?.value, i29 = e26?.value;
    return n37 && e26 ? I10(r91, (t33) => (t33.fx = o35[t33[0]], t33.fy = i29[t33[0]], t33), (t33) => o35[t33], (t33) => i29[t33]) : n37 ? I10(r91, (t33) => (t33.fx = o35[t33[0]], t33), (t33) => o35[t33]) : I10(r91, (t33) => (t33.fy = i29[t33[0]], t33), (t33) => i29[t33]);
  }
  function us5(t32) {
    const n37 = [], e26 = new Uint32Array(jt6(t32, (t33) => t33.length));
    for (const r91 of t32) {
      let o35 = 0;
      for (const n38 of t32)
        r91 !== n38 && (e26.set(n38, o35), o35 += n38.length);
      n37.push(e26.slice(0, o35));
    }
    return n37;
  }
  var fs5 = /* @__PURE__ */ new Map([["top", ys5], ["right", xs5], ["bottom", gs5], ["left", vs5], ["top-left", ws5(ys5, vs5)], ["top-right", ws5(ys5, xs5)], ["bottom-left", ws5(gs5, vs5)], ["bottom-right", ws5(gs5, xs5)], ["top-empty", function(t32, { y: n37 }, { x: e26, y: r91, empty: o35 }) {
    if (o35)
      return false;
    if (!n37)
      return;
    const i29 = ps5(n37, r91);
    if (i29 > 0)
      return ms5(t32, e26, n37[i29 - 1]);
  }], ["right-empty", function(t32, { x: n37 }, { x: e26, y: r91, empty: o35 }) {
    if (o35)
      return false;
    if (!n37)
      return;
    const i29 = ps5(n37, e26);
    if (i29 < n37.length - 1)
      return ms5(t32, n37[i29 + 1], r91);
  }], ["bottom-empty", function(t32, { y: n37 }, { x: e26, y: r91, empty: o35 }) {
    if (o35)
      return false;
    if (!n37)
      return;
    const i29 = ps5(n37, r91);
    if (i29 < n37.length - 1)
      return ms5(t32, e26, n37[i29 + 1]);
  }], ["left-empty", function(t32, { x: n37 }, { x: e26, y: r91, empty: o35 }) {
    if (o35)
      return false;
    if (!n37)
      return;
    const i29 = ps5(n37, e26);
    if (i29 > 0)
      return ms5(t32, n37[i29 - 1], r91);
  }], ["empty", function(t32, n37, { empty: e26 }) {
    return e26;
  }]]);
  var hs5 = /* @__PURE__ */ new WeakMap();
  function ds5(t32) {
    let n37 = hs5.get(t32);
    return n37 || hs5.set(t32, n37 = new e3(Do4(t32, (t33, n38) => [t33, n38]))), n37;
  }
  function ps5(t32, n37) {
    return ds5(t32).get(n37);
  }
  function ms5(t32, n37, e26) {
    return function(t33, n38, e27) {
      return n38 = ei5(n38), e27 = ei5(e27), t33.find((t34) => Object.is(ei5(t34.x), n38) && Object.is(ei5(t34.y), e27));
    }(t32, n37, e26)?.empty;
  }
  function ys5(t32, { y: n37 }, { y: e26 }) {
    return !n37 || 0 === ps5(n37, e26);
  }
  function gs5(t32, { y: n37 }, { y: e26 }) {
    return !n37 || ps5(n37, e26) === n37.length - 1;
  }
  function vs5(t32, { x: n37 }, { x: e26 }) {
    return !n37 || 0 === ps5(n37, e26);
  }
  function xs5(t32, { x: n37 }, { x: e26 }) {
    return !n37 || ps5(n37, e26) === n37.length - 1;
  }
  function ws5(t32, n37) {
    return function() {
      return t32.apply(null, arguments) && n37.apply(null, arguments);
    };
  }
  function bs4(t32, { channels: { fx: n37, fy: e26 }, groups: r91 }) {
    return n37 && e26 ? t32.map(({ x: t33, y: n38 }) => r91.get(t33)?.get(n38) ?? []) : n37 ? t32.map(({ x: t33 }) => r91.get(t33) ?? []) : t32.map(({ y: t33 }) => r91.get(t33) ?? []);
  }
  var ks4 = Math.PI;
  var $s5 = 2 * ks4;
  var Ms5 = 0.618;
  function Ls5({ projection: t32, inset: n37 = 0, insetTop: e26 = n37, insetRight: r91 = n37, insetBottom: o35 = n37, insetLeft: i29 = n37 } = {}, a27) {
    if (null == t32)
      return;
    if ("function" == typeof t32.stream)
      return t32;
    let l35, s29, c30 = "frame";
    if (Ho5(t32)) {
      let n38;
      if ({ type: t32, domain: s29, inset: n38, insetTop: e26 = void 0 !== n38 ? n38 : e26, insetRight: r91 = void 0 !== n38 ? n38 : r91, insetBottom: o35 = void 0 !== n38 ? n38 : o35, insetLeft: i29 = void 0 !== n38 ? n38 : i29, clip: c30 = c30, ...l35 } = t32, null == t32)
        return;
    }
    "function" != typeof t32 && ({ type: t32 } = As5(t32));
    const { width: u30, height: f25, marginLeft: h35, marginRight: d25, marginTop: p24, marginBottom: m27 } = a27, y24 = u30 - h35 - d25 - i29 - r91, g31 = f25 - p24 - m27 - e26 - o35;
    if (t32 = t32?.({ width: y24, height: g31, clip: c30, ...l35 }), null == t32)
      return;
    c30 = function(t33, n38, e27, r92, o36) {
      if (false === t33 || null == t33 || "number" == typeof t33)
        return (t34) => t34;
      true === t33 && (t33 = "frame");
      if ("frame" === `${t33}`.toLowerCase())
        return Ct7(n38, e27, r92, o36);
      throw new Error(`unknown projection clip type: ${t33}`);
    }(c30, h35, p24, u30 - d25, f25 - m27);
    let v31, x22 = h35 + i29, w26 = p24 + e26;
    if (null != s29) {
      const [[n38, e27], [r92, o36]] = Vr5(t32).bounds(s29), i30 = Math.min(y24 / (r92 - n38), g31 / (o36 - e27));
      i30 > 0 ? (x22 -= (i30 * (n38 + r92) - y24) / 2, w26 -= (i30 * (e27 + o36) - g31) / 2, v31 = ni4({ point(t33, n39) {
        this.stream.point(t33 * i30 + x22, n39 * i30 + w26);
      } })) : Al2("Warning: the projection could not be fit to the specified domain; using the default scale.");
    }
    return v31 ??= 0 === x22 && 0 === w26 ? Os5() : ni4({ point(t33, n38) {
      this.stream.point(t33 + x22, n38 + w26);
    } }), { stream: (n38) => t32.stream(v31.stream(c30(n38))) };
  }
  function As5(t32) {
    switch (`${t32}`.toLowerCase()) {
      case "albers-usa":
        return Es4(Si5, 0.7463, 0.4673);
      case "albers":
        return zs4(yi3, 0.7463, 0.4673);
      case "azimuthal-equal-area":
        return Es4(xi5, 4, 4);
      case "azimuthal-equidistant":
        return Es4(Ni5, $s5, $s5);
      case "conic-conformal":
        return zs4(qi5, $s5, $s5);
      case "conic-equal-area":
        return zs4(Ei5, 6.1702, 2.9781);
      case "conic-equidistant":
        return zs4(bi5, 7.312, 3.6282);
      case "equal-earth":
        return Es4(Ii5, 5.4133, 2.6347);
      case "equirectangular":
        return Es4(ji5, $s5, ks4);
      case "gnomonic":
        return Es4(Xi5, 3.4641, 3.4641);
      case "identity":
        return { type: Os5 };
      case "reflect-y":
        return { type: Ss4 };
      case "mercator":
        return Es4(Ci5, $s5, $s5);
      case "orthographic":
        return Es4(Zi5, 2, 2);
      case "stereographic":
        return Es4(Ki5, 2, 2);
      case "transverse-mercator":
        return Es4(Vi5, $s5, $s5);
      default:
        throw new Error(`unknown projection type: ${t32}`);
    }
  }
  function Es4(t32, n37, e26) {
    return { type: ({ width: r91, height: o35, rotate: i29, precision: a27 = 0.15, clip: l35 }) => {
      const s29 = t32();
      return null != a27 && s29.precision?.(a27), null != i29 && s29.rotate?.(i29), "number" == typeof l35 && s29.clipAngle?.(l35), s29.scale(Math.min(r91 / n37, o35 / e26)), s29.translate([r91 / 2, o35 / 2]), s29;
    }, aspectRatio: e26 / n37 };
  }
  function zs4(t32, n37, e26) {
    const { type: r91, aspectRatio: o35 } = Es4(t32, n37, e26);
    return { type: (t33) => {
      const { parallels: n38, domain: e27, width: o36, height: i29 } = t33, a27 = r91(t33);
      return null != n38 && (a27.parallels(n38), void 0 === e27 && a27.fitSize([o36, i29], { type: "Sphere" })), a27;
    }, aspectRatio: o35 };
  }
  var Os5 = Oo4({ stream: (t32) => t32 });
  var Ss4 = Oo4(ni4({ point(t32, n37) {
    this.stream.point(t32, -n37);
  } }));
  function Ns5(t32, n37, e26, r91) {
    const o35 = e26[t32], i29 = e26[n37], a27 = o35.length, l35 = e26[t32] = new Float64Array(a27).fill(NaN), s29 = e26[n37] = new Float64Array(a27).fill(NaN);
    let c30;
    const u30 = r91.stream({ point(t33, n38) {
      l35[c30] = t33, s29[c30] = n38;
    } });
    for (c30 = 0; c30 < a27; ++c30)
      u30.point(o35[c30], i29[c30]);
  }
  function Cs5({ projection: t32 } = {}) {
    return null != t32 && ("function" == typeof t32.stream || (Ho5(t32) && (t32 = t32.type), null != t32));
  }
  function Rs4(t32) {
    const n37 = [], e26 = [], r91 = { scale: "x", value: n37 }, o35 = { scale: "y", value: e26 }, i29 = { point(t33, r92) {
      n37.push(t33), e26.push(r92);
    }, lineStart() {
    }, lineEnd() {
    }, polygonStart() {
    }, polygonEnd() {
    }, sphere() {
    } };
    for (const n38 of t32.value)
      j16(n38, i29);
    return [r91, o35];
  }
  function Is5(t32 = {}) {
    const { document: n37 = "undefined" != typeof window ? window.document : void 0, clip: e26 } = t32;
    return { document: n37, clip: Ni6(e26) };
  }
  function Ws5(t32, { document: n37 }) {
    return ht7(o10(t32).call(n37.documentElement));
  }
  function js4(t32) {
    let n37, e26;
    return (...r91) => ((e26?.length !== r91.length || e26.some((t33, n38) => t33 !== r91[n38])) && (e26 = r91, n37 = t32(...r91)), n37);
  }
  var Bs4 = js4((t32) => new Intl.NumberFormat(t32));
  var Fs5 = js4((t32, n37) => new Intl.DateTimeFormat(t32, { timeZone: "UTC", ...n37 && { month: n37 } }));
  var Ds5 = js4((t32, n37) => new Intl.DateTimeFormat(t32, { timeZone: "UTC", ...n37 && { weekday: n37 } }));
  function qs4(t32 = "en-US") {
    const n37 = Bs4(t32);
    return (t33) => null == t33 || isNaN(t33) ? void 0 : n37.format(t33);
  }
  function Vs3(t32) {
    return t30(t32, "Invalid Date");
  }
  var Hs4 = function(t32 = "en-US") {
    const n37 = qs4(t32);
    return (t33) => (t33 instanceof Date ? Vs3 : "number" == typeof t33 ? n37 : Mo4)(t33);
  }();
  var Ys5 = ("undefined" != typeof window ? window.devicePixelRatio > 1 : "undefined" == typeof it) ? 0 : 0.5;
  var Us5 = 0;
  function Xs3() {
    return "plot-clip-" + ++Us5;
  }
  function Gs4(t32, { title: n37, href: e26, ariaLabel: r91, ariaDescription: o35, ariaHidden: i29, target: a27, fill: l35, fillOpacity: s29, stroke: c30, strokeWidth: u30, strokeOpacity: f25, strokeLinejoin: h35, strokeLinecap: d25, strokeMiterlimit: p24, strokeDasharray: m27, strokeDashoffset: y24, opacity: g31, mixBlendMode: v31, imageFilter: x22, paintOrder: w26, pointerEvents: b28, shapeRendering: k24, channels: $26 }, { ariaLabel: M26, fill: L25 = "currentColor", fillOpacity: A27, stroke: E24 = "none", strokeOpacity: z26, strokeWidth: O21, strokeLinecap: S25, strokeLinejoin: N28, strokeMiterlimit: C24, paintOrder: T23 }) {
    null === L25 && (l35 = null, s29 = null), null === E24 && (c30 = null, f25 = null), Ai6(L25) ? Ai6(E24) || Ai6(l35) && !$26?.fill || (E24 = "none") : !Ai6(E24) || Ai6(c30) && !$26?.stroke || (L25 = "none");
    const [R25, I26] = Io5(l35, L25), [W25, j26] = Wo5(s29, A27), [B28, F26] = Io5(c30, E24), [D24, q25] = Wo5(f25, z26), [_24, P25] = Wo5(g31);
    Ei6(F26) || (void 0 === u30 && (u30 = O21), void 0 === d25 && (d25 = S25), void 0 === h35 && (h35 = N28), void 0 !== p24 || /^\s*round\s*$/i.test(h35) || (p24 = C24), Ei6(I26) || void 0 !== w26 || (w26 = T23));
    const [V24, H26] = Wo5(u30);
    return null !== L25 && (t32.fill = lc2(I26, "currentColor"), t32.fillOpacity = sc2(j26, 1)), null !== E24 && (t32.stroke = lc2(F26, "none"), t32.strokeWidth = sc2(H26, 1), t32.strokeOpacity = sc2(q25, 1), t32.strokeLinejoin = lc2(h35, "miter"), t32.strokeLinecap = lc2(d25, "butt"), t32.strokeMiterlimit = sc2(p24, 4), t32.strokeDasharray = lc2(m27, "none"), t32.strokeDashoffset = lc2(y24, "0")), t32.target = Mo4(a27), t32.ariaLabel = Mo4(M26), t32.ariaDescription = Mo4(o35), t32.ariaHidden = Mo4(i29), t32.opacity = sc2(P25, 1), t32.mixBlendMode = lc2(v31, "normal"), t32.imageFilter = lc2(x22, "none"), t32.paintOrder = lc2(w26, "normal"), t32.pointerEvents = lc2(b28, "auto"), t32.shapeRendering = lc2(k24, "auto"), { title: { value: n37, optional: true, filter: null }, href: { value: e26, optional: true, filter: null }, ariaLabel: { value: r91, optional: true, filter: null }, fill: { value: R25, scale: "auto", optional: true }, fillOpacity: { value: W25, scale: "auto", optional: true }, stroke: { value: B28, scale: "auto", optional: true }, strokeOpacity: { value: D24, scale: "auto", optional: true }, strokeWidth: { value: V24, optional: true }, opacity: { value: _24, scale: "auto", optional: true } };
  }
  function Zs5(t32, n37) {
    n37 && t32.text((t33) => Hs4(n37[t33]));
  }
  function Js4(t32, n37) {
    n37 && t32.text(([t33]) => Hs4(n37[t33]));
  }
  function Ks4(t32, { target: n37, tip: e26 }, { ariaLabel: r91, title: o35, fill: i29, fillOpacity: a27, stroke: l35, strokeOpacity: s29, strokeWidth: c30, opacity: u30, href: f25 }) {
    r91 && ic2(t32, "aria-label", (t33) => r91[t33]), i29 && ic2(t32, "fill", (t33) => i29[t33]), a27 && ic2(t32, "fill-opacity", (t33) => a27[t33]), l35 && ic2(t32, "stroke", (t33) => l35[t33]), s29 && ic2(t32, "stroke-opacity", (t33) => s29[t33]), c30 && ic2(t32, "stroke-width", (t33) => c30[t33]), u30 && ic2(t32, "opacity", (t33) => u30[t33]), f25 && oc2(t32, (t33) => f25[t33], n37), e26 || function(t33, n38) {
      n38 && t33.filter((t34) => Wr6(n38[t34])).append("title").call(Zs5, n38);
    }(t32, o35);
  }
  function Qs4(t32, { target: n37, tip: e26 }, { ariaLabel: r91, title: o35, fill: i29, fillOpacity: a27, stroke: l35, strokeOpacity: s29, strokeWidth: c30, opacity: u30, href: f25 }) {
    r91 && ic2(t32, "aria-label", ([t33]) => r91[t33]), i29 && ic2(t32, "fill", ([t33]) => i29[t33]), a27 && ic2(t32, "fill-opacity", ([t33]) => a27[t33]), l35 && ic2(t32, "stroke", ([t33]) => l35[t33]), s29 && ic2(t32, "stroke-opacity", ([t33]) => s29[t33]), c30 && ic2(t32, "stroke-width", ([t33]) => c30[t33]), u30 && ic2(t32, "opacity", ([t33]) => u30[t33]), f25 && oc2(t32, ([t33]) => f25[t33], n37), e26 || function(t33, n38) {
      n38 && t33.filter(([t34]) => Wr6(n38[t34])).append("title").call(Js4, n38);
    }(t32, o35);
  }
  function tc2(t32, n37, e26) {
    const r91 = q8(t32, (t33) => n37[t33]);
    return void 0 === e26 && r91.size > 1 + t32.length >> 1 && Al2("Warning: the implicit z channel has high cardinality. This may occur when the fill or stroke channel is associated with quantitative data rather than ordinal or categorical data. You can suppress this warning by setting the z option explicitly; if this data represents a single series, set z to null."), r91.values();
  }
  function* nc2(t32, n37, e26, r91) {
    const { z: o35 } = e26, { z: i29 } = r91, a27 = function({ ariaLabel: t33, title: n38, fill: e27, fillOpacity: r92, stroke: o36, strokeOpacity: i30, strokeWidth: a28, opacity: l36, href: s29 }, { tip: c30 }) {
      return [t33, c30 ? void 0 : n38, e27, r92, o36, i30, a28, l36, s29].filter((t34) => void 0 !== t34);
    }(r91, e26), l35 = [...n37, ...a27];
    for (const n38 of i29 ? tc2(t32, i29, o35) : [t32]) {
      let t33, e27;
      t:
        for (const r92 of n38) {
          for (const t34 of l35)
            if (!Tr6(t34[r92])) {
              e27 && e27.push(-1);
              continue t;
            }
          if (void 0 !== t33) {
            e27.push(r92);
            for (let n39 = 0; n39 < a27.length; ++n39) {
              if (ei5(a27[n39][r92]) !== t33[n39]) {
                yield e27, t33 = a27.map((t34) => ei5(t34[r92])), e27 = [r92];
                continue t;
              }
            }
          } else
            e27 && (yield e27), t33 = a27.map((t34) => ei5(t34[r92])), e27 = [r92];
        }
      e27 && (yield e27);
    }
  }
  function ec2(t32, n37, e26, r91) {
    !function(t33, n38, e27, r92) {
      let o36;
      const { clip: i29 = r92.clip } = n38;
      switch (i29) {
        case "frame": {
          const { width: n39, height: i30, marginLeft: a27, marginRight: l35, marginTop: s29, marginBottom: c30 } = e27, u30 = Xs3();
          o36 = `url(#${u30})`, t33 = Ws5("svg:g", r92).call((t34) => t34.append("svg:clipPath").attr("id", u30).append("rect").attr("x", a27).attr("y", s29).attr("width", n39 - l35 - a27).attr("height", i30 - s29 - c30)).each(function() {
            this.appendChild(t33.node()), t33.node = () => this;
          });
          break;
        }
        case "sphere": {
          const { projection: n39 } = r92;
          if (!n39)
            throw new Error('the "sphere" clip option requires a projection');
          const e28 = Xs3();
          o36 = `url(#${e28})`, t33.append("clipPath").attr("id", e28).append("path").attr("d", Vr5(n39)({ type: "Sphere" }));
          break;
        }
      }
      ic2(t33, "aria-label", n38.ariaLabel), ic2(t33, "aria-description", n38.ariaDescription), ic2(t33, "aria-hidden", n38.ariaHidden), ic2(t33, "clip-path", o36);
    }(t32, n37, e26, r91), ic2(t32, "fill", n37.fill), ic2(t32, "fill-opacity", n37.fillOpacity), ic2(t32, "stroke", n37.stroke), ic2(t32, "stroke-width", n37.strokeWidth), ic2(t32, "stroke-opacity", n37.strokeOpacity), ic2(t32, "stroke-linejoin", n37.strokeLinejoin), ic2(t32, "stroke-linecap", n37.strokeLinecap), ic2(t32, "stroke-miterlimit", n37.strokeMiterlimit), ic2(t32, "stroke-dasharray", n37.strokeDasharray), ic2(t32, "stroke-dashoffset", n37.strokeDashoffset), ic2(t32, "shape-rendering", n37.shapeRendering), ic2(t32, "filter", n37.imageFilter), ic2(t32, "paint-order", n37.paintOrder);
    const { pointerEvents: o35 = false === r91.pointerSticky ? "none" : void 0 } = n37;
    ic2(t32, "pointer-events", o35);
  }
  function rc2(t32, n37) {
    !function(t33, n38, e26) {
      null != e26 && t33.style(n38, e26);
    }(t32, "mix-blend-mode", n37.mixBlendMode), ic2(t32, "opacity", n37.opacity);
  }
  function oc2(t32, n37, e26) {
    t32.each(function(t33) {
      const r91 = n37(t33);
      if (null != r91) {
        const t34 = this.ownerDocument.createElementNS(n11.svg, "a");
        t34.setAttribute("fill", "inherit"), t34.setAttributeNS(n11.xlink, "href", r91), null != e26 && t34.setAttribute("target", e26), this.parentNode.insertBefore(t34, this).appendChild(this);
      }
    });
  }
  function ic2(t32, n37, e26) {
    null != e26 && t32.attr(n37, e26);
  }
  function ac2(t32, n37, { x: e26, y: r91 }, o35 = Ys5, i29 = Ys5) {
    o35 += n37.dx, i29 += n37.dy, e26?.bandwidth && (o35 += e26.bandwidth() / 2), r91?.bandwidth && (i29 += r91.bandwidth() / 2), (o35 || i29) && t32.attr("transform", `translate(${o35},${i29})`);
  }
  function lc2(t32, n37) {
    if ((t32 = Mo4(t32)) !== n37)
      return t32;
  }
  function sc2(t32, n37) {
    if ((t32 = Lo5(t32)) !== n37)
      return t32;
  }
  var cc2 = /^-?([_a-z]|[\240-\377]|\\[0-9a-f]{1,6}(\r\n|[ \t\r\n\f])?|\\[^\r\n\f0-9a-f])([_a-z0-9-]|[\240-\377]|\\[0-9a-f]{1,6}(\r\n|[ \t\r\n\f])?|\\[^\r\n\f0-9a-f])*$/i;
  function uc2(t32) {
    if (void 0 === t32)
      return "plot-d6a7b5";
    if (t32 = `${t32}`, !cc2.test(t32))
      throw new Error(`invalid class name: ${t32}`);
    return t32;
  }
  function fc2(t32, n37) {
    if ("string" == typeof n37)
      t32.property("style", n37);
    else if (null != n37)
      for (const e26 of t32)
        Object.assign(e26.style, n37);
  }
  function hc2({ frameAnchor: t32 }, { width: n37, height: e26, marginTop: r91, marginRight: o35, marginBottom: i29, marginLeft: a27 }) {
    return [/left$/.test(t32) ? a27 : /right$/.test(t32) ? n37 - o35 : (a27 + n37 - o35) / 2, /^top/.test(t32) ? r91 : /^bottom/.test(t32) ? e26 - i29 : (r91 + e26 - i29) / 2];
  }
  var dc2 = class {
    constructor(t32, n37 = {}, e26 = {}, r91) {
      const { facet: o35 = "auto", facetAnchor: i29, fx: a27, fy: l35, sort: s29, dx: c30 = 0, dy: u30 = 0, margin: f25 = 0, marginTop: h35 = f25, marginRight: d25 = f25, marginBottom: p24 = f25, marginLeft: m27 = f25, clip: y24 = r91?.clip, channels: g31, tip: v31, render: x22 } = e26;
      if (this.data = t32, this.sort = Xo4(s29) ? s29 : null, this.initializer = Ui5(e26).initializer, this.transform = this.initializer ? e26.transform : Yi5(e26).transform, null === o35 || false === o35 ? this.facet = null : (this.facet = Bo4(true === o35 ? "include" : o35, "facet", ["auto", "include", "exclude", "super"]), this.fx = t32 === vo5 && "string" == typeof a27 ? [a27] : a27, this.fy = t32 === vo5 && "string" == typeof l35 ? [l35] : l35), this.facetAnchor = function(t33) {
        if (null == t33)
          return null;
        const n38 = fs5.get(`${t33}`.toLowerCase());
        if (n38)
          return n38;
        throw new Error(`invalid facet anchor: ${t33}`);
      }(i29), n37 = Si6(n37), void 0 !== g31 && (n37 = { ...yc2(g31), ...n37 }), void 0 !== r91 && (n37 = { ...Gs4(this, e26, r91), ...n37 }), this.channels = Object.fromEntries(Object.entries(n37).map(([n38, e27]) => {
        if (Uo4(e27.value)) {
          const { value: t33, label: n39 = e27.label, scale: r92 = e27.scale } = e27.value;
          e27 = { ...e27, label: n39, scale: r92, value: t33 };
        }
        if (t32 === vo5 && "string" == typeof e27.value) {
          const { value: t33 } = e27;
          e27 = { ...e27, value: [t33] };
        }
        return [n38, e27];
      }).filter(([t33, { value: n38, optional: e27 }]) => {
        if (null != n38)
          return true;
        if (e27)
          return false;
        throw new Error(`missing channel value: ${t33}`);
      })), this.dx = +c30, this.dy = +u30, this.marginTop = +h35, this.marginRight = +d25, this.marginBottom = +p24, this.marginLeft = +m27, this.clip = Ni6(y24), this.tip = function(t33) {
        return true === t33 ? "xy" : false === t33 || null == t33 ? null : "string" == typeof t33 ? Bo4(t33, "tip", ["x", "y", "xy"]) : t33;
      }(v31), "super" === this.facet) {
        if (a27 || l35)
          throw new Error("super-faceting cannot use fx or fy");
        for (const t33 in this.channels) {
          const { scale: e27 } = n37[t33];
          if ("x" === e27 || "y" === e27)
            throw new Error("super-faceting cannot use x or y");
        }
      }
      null != x22 && (this.render = mc2(x22, this.render));
    }
    initialize(t32, n37, e26) {
      let r91 = Fo5(this.data);
      void 0 === t32 && null != r91 && (t32 = [Ko3(r91)]);
      const o35 = t32;
      null != this.transform && ({ facets: t32, data: r91 } = this.transform(r91, t32, e26), r91 = Fo5(r91)), void 0 !== t32 && (t32.original = o35);
      const i29 = Da4(this.channels, r91);
      return null != this.sort && function(t33, n38, e27, r92, o36) {
        const { order: i30, reverse: a27, reduce: l35 = true, limit: s29 } = o36;
        for (const c30 in o36) {
          if (!Fi6.has(c30))
            continue;
          let { value: u30, order: f25 = i30, reverse: h35 = a27, reduce: d25 = l35, limit: p24 = s29 } = pi5(o36[c30]);
          const m27 = u30?.startsWith("-");
          if (m27 && (u30 = u30.slice(1)), f25 = void 0 === f25 ? m27 !== ("width" === u30 || "height" === u30) ? Ga5 : Xa5 : Ua5(f25), null == d25 || false === d25)
            continue;
          const y24 = "fx" === c30 || "fy" === c30 ? Va5(n38, r92[c30]) : Pa5(e27, c30);
          if (!y24)
            throw new Error(`missing channel for scale: ${c30}`);
          const g31 = y24.value, [v31 = 0, x22 = 1 / 0] = mi5(p24) ? p24 : p24 < 0 ? [p24] : [0, p24];
          if (null == u30)
            y24.domain = () => {
              let t34 = Array.from(new t9(g31));
              return h35 && (t34 = t34.reverse()), 0 === v31 && x22 === 1 / 0 || (t34 = t34.slice(v31, x22)), t34;
            };
          else {
            const n39 = "data" === u30 ? t33 : "height" === u30 ? Ha5(e27, "y1", "y2") : "width" === u30 ? Ha5(e27, "x1", "x2") : Ya5(e27, u30, "y" === u30 ? "y2" : "x" === u30 ? "x2" : void 0), r93 = ya4(true === d25 ? "max" : d25, n39);
            y24.domain = () => {
              let t34 = L9(Ko3(g31), (t35) => r93.reduceIndex(t35, n39), (t35) => g31[t35]);
              return f25 && t34.sort(f25), h35 && t34.reverse(), 0 === v31 && x22 === 1 / 0 || (t34 = t34.slice(v31, x22)), t34.map(Ao5);
            };
          }
        }
      }(r91, t32, i29, n37, this.sort), { data: r91, facets: t32, channels: i29 };
    }
    filter(t32, n37, e26) {
      for (const r91 in n37) {
        const { filter: o35 = Tr6 } = n37[r91];
        if (null !== o35) {
          const n38 = e26[r91];
          t32 = t32.filter((t33) => o35(n38[t33]));
        }
      }
      return t32;
    }
    project(t32, n37, e26) {
      for (const r91 in t32)
        if ("x" === t32[r91].scale && /^x|x$/.test(r91)) {
          const o35 = r91.replace(/^x|x$/, "y");
          o35 in t32 && "y" === t32[o35].scale && Ns5(r91, o35, n37, e26.projection);
        }
    }
    scale(t32, n37, e26) {
      const r91 = qa3(t32, n37);
      return e26.projection && this.project(t32, r91, e26), r91;
    }
  };
  function pc2(...t32) {
    return t32.plot = dc2.prototype.plot, t32;
  }
  function mc2(t32, n37) {
    if (null == t32)
      return null === n37 ? void 0 : n37;
    if (null == n37)
      return null === t32 ? void 0 : t32;
    if ("function" != typeof t32)
      throw new TypeError(`invalid render transform: ${t32}`);
    if ("function" != typeof n37)
      throw new TypeError(`invalid render transform: ${n37}`);
    return function(e26, r91, o35, i29, a27, l35) {
      return t32.call(this, e26, r91, o35, i29, a27, (t33, e27, r92, o36, i30) => n37.call(this, t33, e27, r92, o36, i30, l35));
    };
  }
  function yc2(t32) {
    return Object.fromEntries(Object.entries(Si6(t32)).map(([t33, n37]) => (void 0 === (n37 = "string" == typeof n37 ? { value: n37, label: t33 } : pi5(n37)).filter && null == n37.scale && (n37 = { ...n37, filter: null }), [t33, n37])));
  }
  function gc2(t32, n37) {
    return true === t32?.tip ? { ...t32, tip: n37 } : Ho5(t32?.tip) && void 0 === t32.tip.pointer ? { ...t32, tip: { ...t32.tip, pointer: n37 } } : t32;
  }
  function vc2({ x: t32, y: n37, fy: e26, fx: r91 }, { projection: o35, aspectRatio: i29 }, { width: a27, marginTopDefault: l35, marginRightDefault: s29, marginBottomDefault: c30, marginLeftDefault: u30 }) {
    const f25 = e26 ? e26.scale.domain().length : 1, h35 = function(t33) {
      if ("function" == typeof t33?.stream)
        return Ms5;
      if (Ho5(t33) && (t33 = t33.type), null != t33) {
        if ("function" != typeof t33) {
          const { aspectRatio: n38 } = As5(t33);
          if (n38)
            return n38;
        }
        return Ms5;
      }
    }(o35);
    if (h35) {
      const t33 = (1.1 * f25 - 0.1) / (1.1 * (r91 ? r91.scale.domain().length : 1) - 0.1) * h35, n38 = Math.max(0.1, Math.min(10, t33));
      return Math.round((a27 - u30 - s29) * n38 + l35 + c30);
    }
    const d25 = n37 ? es5(n37) ? n37.scale.domain().length : Math.max(7, 17 / f25) : 1;
    if (null != i29) {
      if (i29 = +i29, !(isFinite(i29) && i29 > 0))
        throw new Error(`invalid aspectRatio: ${i29}`);
      const o36 = xc2("y", n37) / (xc2("x", t32) * i29), f26 = r91 ? r91.scale.bandwidth() : 1, h36 = e26 ? e26.scale.bandwidth() : 1;
      return (o36 * (f26 * (a27 - u30 - s29) - t32.insetLeft - t32.insetRight) + n37.insetTop + n37.insetBottom) / h36 + l35 + c30;
    }
    return !(!n37 && !e26) * Math.max(1, Math.min(60, d25 * f25)) * 20 + 30 * !!r91 + 60;
  }
  function xc2(t32, n37) {
    if (!n37)
      throw new Error(`aspectRatio requires ${t32} scale`);
    const { type: e26, domain: r91 } = n37;
    let o35;
    switch (e26) {
      case "linear":
      case "utc":
      case "time":
        o35 = Number;
        break;
      case "pow": {
        const t33 = n37.scale.exponent();
        o35 = (n38) => Math.pow(n38, t33);
        break;
      }
      case "log":
        o35 = Math.log;
        break;
      case "point":
      case "band":
        return r91.length;
      default:
        throw new Error(`unsupported ${t32} scale for aspectRatio: ${e26}`);
    }
    const [i29, a27] = T8(r91);
    return Math.abs(o35(a27) - o35(i29));
  }
  var wc2 = /* @__PURE__ */ new WeakMap();
  function bc2(t32, n37, { x: e26, y: r91, px: o35, py: i29, maxRadius: a27 = 40, channels: l35, render: s29, ...c30 } = {}) {
    return a27 = +a27, null != o35 && (e26 ??= null, l35 = { ...l35, px: { value: o35, scale: "x" } }), null != i29 && (r91 ??= null, l35 = { ...l35, py: { value: i29, scale: "y" } }), { x: e26, y: r91, channels: l35, ...c30, render: mc2(function(e27, r92, o36, i30, l36, s30) {
      const c31 = (l36 = { ...l36, pointerSticky: false }).ownerSVGElement, { data: u30 } = l36.getMarkState(this);
      let f25 = wc2.get(c31);
      f25 || wc2.set(c31, f25 = { sticky: false, roots: [], renders: [] });
      let h35 = f25.renders.push(C24) - 1;
      const { x: d25, y: p24, fx: m27, fy: y24 } = r92;
      let g31 = m27 ? m27(e27.fx) - i30.marginLeft : 0, v31 = y24 ? y24(e27.fy) - i30.marginTop : 0;
      d25?.bandwidth && (g31 += d25.bandwidth() / 2), p24?.bandwidth && (v31 += p24.bandwidth() / 2);
      const x22 = null != e27.fi;
      let w26;
      if (x22) {
        let t33 = f25.facetStates;
        t33 || (f25.facetStates = t33 = /* @__PURE__ */ new Map()), w26 = t33.get(this), w26 || t33.set(this, w26 = /* @__PURE__ */ new Map());
      }
      const [b28, k24] = hc2(this, i30), { px: $26, py: M26 } = o36, L25 = $26 ? (t33) => $26[t33] : Lc2(o36, b28), A27 = M26 ? (t33) => M26[t33] : Ac2(o36, k24);
      let E24, z26, O21, S25;
      function N28(t33, n38) {
        if (x22) {
          if (S25 && (S25 = cancelAnimationFrame(S25)), null != t33)
            return w26.set(e27.fi, n38), void (S25 = requestAnimationFrame(() => {
              S25 = null;
              for (const [r93, o37] of w26)
                if (o37 < n38 || o37 === n38 && r93 < e27.fi) {
                  t33 = null;
                  break;
                }
              C24(t33);
            }));
          w26.delete(e27.fi);
        }
        C24(t33);
      }
      function C24(t33) {
        if (E24 === t33 && O21 === f25.sticky)
          return;
        E24 = t33, O21 = l36.pointerSticky = f25.sticky;
        const n38 = null == E24 ? [] : [E24];
        x22 && (n38.fx = e27.fx, n38.fy = e27.fy, n38.fi = e27.fi);
        const a28 = s30(n38, r92, o36, i30, l36);
        if (z26) {
          if (x22) {
            const t34 = z26.parentNode, n39 = z26.getAttribute("transform"), e28 = a28.getAttribute("transform");
            n39 ? a28.setAttribute("transform", n39) : a28.removeAttribute("transform"), e28 ? t34.setAttribute("transform", e28) : t34.removeAttribute("transform"), a28.removeAttribute("aria-label"), a28.removeAttribute("aria-description"), a28.removeAttribute("aria-hidden");
          }
          z26.replaceWith(a28);
        }
        return f25.roots[h35] = z26 = a28, null == E24 && w26?.size > 1 || l36.dispatchValue(null == E24 ? null : u30[E24]), a28;
      }
      function T23(r93) {
        if (f25.sticky || "mouse" === r93.pointerType && 1 === r93.buttons)
          return;
        let [o37, l37] = mt7(r93);
        o37 -= g31, l37 -= v31;
        const s31 = o37 < i30.marginLeft || o37 > i30.width - i30.marginRight ? 1 : t32, c32 = l37 < i30.marginTop || l37 > i30.height - i30.marginBottom ? 1 : n37;
        let u31 = null, h36 = a27 * a27;
        for (const t33 of e27) {
          const n38 = s31 * (L25(t33) - o37), e28 = c32 * (A27(t33) - l37), r94 = n38 * n38 + e28 * e28;
          r94 <= h36 && (u31 = t33, h36 = r94);
        }
        if (null != u31 && (1 !== t32 || 1 !== n37)) {
          const t33 = L25(u31) - o37, n38 = A27(u31) - l37;
          h36 = t33 * t33 + n38 * n38;
        }
        N28(u31, h36);
      }
      return c31.addEventListener("pointerenter", T23), c31.addEventListener("pointermove", T23), c31.addEventListener("pointerdown", function(t33) {
        "mouse" === t33.pointerType && null != E24 && (f25.sticky && f25.roots.some((n38) => n38?.contains(t33.target)) || (f25.sticky ? (f25.sticky = false, f25.renders.forEach((t34) => t34(null))) : (f25.sticky = true, C24(E24)), t33.stopImmediatePropagation()));
      }), c31.addEventListener("pointerleave", function(t33) {
        "mouse" === t33.pointerType && (f25.sticky || N28(null));
      }), C24(null);
    }, s29) };
  }
  function kc2(t32) {
    return bc2(1, 1, t32);
  }
  function $c(t32) {
    return bc2(1, 0.01, t32);
  }
  function Mc2(t32) {
    return bc2(0.01, 1, t32);
  }
  function Lc2({ x1: t32, x2: n37, x: e26 = t32 }, r91) {
    return t32 && n37 ? (e27) => (t32[e27] + n37[e27]) / 2 : e26 ? (t33) => e26[t33] : () => r91;
  }
  function Ac2({ y1: t32, y2: n37, y: e26 = t32 }, r91) {
    return t32 && n37 ? (e27) => (t32[e27] + n37[e27]) / 2 : e26 ? (t33) => e26[t33] : () => r91;
  }
  function Ec2(t32) {
    return es5(t32) && void 0 === t32.interval ? void 0 : "tabular-nums";
  }
  var zc = Math.PI / 180;
  function Oc2(t32, { marker: n37, markerStart: e26 = n37, markerMid: r91 = n37, markerEnd: o35 = n37 } = {}) {
    t32.markerStart = Sc2(e26), t32.markerMid = Sc2(r91), t32.markerEnd = Sc2(o35);
  }
  function Sc2(t32) {
    if (null == t32 || false === t32)
      return null;
    if (true === t32)
      return Tc2;
    if ("function" == typeof t32)
      return t32;
    switch (`${t32}`.toLowerCase()) {
      case "none":
        return null;
      case "arrow":
        return Nc2("auto");
      case "arrow-reverse":
        return Nc2("auto-start-reverse");
      case "dot":
        return Cc2;
      case "circle":
      case "circle-fill":
        return Tc2;
      case "circle-stroke":
        return Rc2;
      case "tick":
        return Ic2("auto");
      case "tick-x":
        return Ic2(90);
      case "tick-y":
        return Ic2(0);
    }
    throw new Error(`invalid marker: ${t32}`);
  }
  function Nc2(t32) {
    return (n37, e26) => Ws5("svg:marker", e26).attr("viewBox", "-5 -5 10 10").attr("markerWidth", 6.67).attr("markerHeight", 6.67).attr("orient", t32).attr("fill", "none").attr("stroke", n37).attr("stroke-width", 1.5).attr("stroke-linecap", "round").attr("stroke-linejoin", "round").call((t33) => t33.append("path").attr("d", "M-1.5,-3l3,3l-3,3")).node();
  }
  function Cc2(t32, n37) {
    return Ws5("svg:marker", n37).attr("viewBox", "-5 -5 10 10").attr("markerWidth", 6.67).attr("markerHeight", 6.67).attr("fill", t32).attr("stroke", "none").call((t33) => t33.append("circle").attr("r", 2.5)).node();
  }
  function Tc2(t32, n37) {
    return Ws5("svg:marker", n37).attr("viewBox", "-5 -5 10 10").attr("markerWidth", 6.67).attr("markerHeight", 6.67).attr("fill", t32).attr("stroke", "var(--plot-background)").attr("stroke-width", 1.5).call((t33) => t33.append("circle").attr("r", 3)).node();
  }
  function Rc2(t32, n37) {
    return Ws5("svg:marker", n37).attr("viewBox", "-5 -5 10 10").attr("markerWidth", 6.67).attr("markerHeight", 6.67).attr("fill", "var(--plot-background)").attr("stroke", t32).attr("stroke-width", 1.5).call((t33) => t33.append("circle").attr("r", 3)).node();
  }
  function Ic2(t32) {
    return (n37, e26) => Ws5("svg:marker", e26).attr("viewBox", "-3 -3 6 6").attr("markerWidth", 6).attr("markerHeight", 6).attr("orient", t32).attr("stroke", n37).call((t33) => t33.append("path").attr("d", "M0,-3v6")).node();
  }
  var Wc = 0;
  function jc2(t32, n37, { stroke: e26 }, r91) {
    return Fc2(t32, n37, e26 && ((t33) => e26[t33]), r91);
  }
  function Bc2(t32, n37, { stroke: e26 }, r91) {
    return Fc2(t32, n37, e26 && (([t33]) => e26[t33]), r91);
  }
  function Fc2(t32, { markerStart: n37, markerMid: e26, markerEnd: r91, stroke: o35 }, i29 = () => o35, a27) {
    const l35 = /* @__PURE__ */ new Map();
    function s29(t33) {
      return function(n38) {
        const e27 = i29(n38);
        let r92 = l35.get(t33);
        r92 || l35.set(t33, r92 = /* @__PURE__ */ new Map());
        let o36 = r92.get(e27);
        if (!o36) {
          const n39 = this.parentNode.insertBefore(t33(e27, a27), this), i30 = "plot-marker-" + ++Wc;
          n39.setAttribute("id", i30), r92.set(e27, o36 = `url(#${i30})`);
        }
        return o36;
      };
    }
    n37 && t32.attr("marker-start", s29(n37)), e26 && t32.attr("marker-mid", s29(e26)), r91 && t32.attr("marker-end", s29(r91));
  }
  function Dc2({ inset: t32, insetLeft: n37, insetRight: e26, ...r91 } = {}) {
    return [n37, e26] = _c2(t32, n37, e26), { inset: t32, insetLeft: n37, insetRight: e26, ...r91 };
  }
  function qc2({ inset: t32, insetTop: n37, insetBottom: e26, ...r91 } = {}) {
    return [n37, e26] = _c2(t32, n37, e26), { inset: t32, insetTop: n37, insetBottom: e26, ...r91 };
  }
  function _c2(t32, n37, e26) {
    return void 0 === t32 && void 0 === n37 && void 0 === e26 ? Ys5 ? [1, 0] : [0.5, 0.5] : [n37, e26];
  }
  function Pc2(t32, { interval: n37 }) {
    return (t32 = { ...pi5(t32) }).interval = ui5(void 0 === t32.interval ? n37 : t32.interval), t32;
  }
  function Vc2(t32, n37, e26, r91) {
    const { [t32]: o35, [`${t32}1`]: i29, [`${t32}2`]: a27 } = e26, { value: l35, interval: s29 } = Pc2(o35, e26);
    if (null == l35 || null == s29 && !r91)
      return e26;
    const c30 = ai5(o35);
    if (null == s29) {
      let n38;
      const o36 = { transform: (t33) => n38 || (n38 = mo5(t33, l35)), label: c30 };
      return { ...e26, [t32]: void 0, [`${t32}1`]: void 0 === i29 ? o36 : i29, [`${t32}2`]: void 0 !== a27 || i29 === a27 && r91 ? a27 : o36 };
    }
    let u30, f25;
    function h35(t33) {
      return void 0 !== f25 && t33 === u30 ? f25 : f25 = Do4(mo5(u30 = t33, l35), (t34) => s29.floor(t34));
    }
    return n37({ ...e26, [t32]: void 0, [`${t32}1`]: void 0 === i29 ? { transform: h35, label: c30 } : i29, [`${t32}2`]: void 0 === a27 ? { transform: (t33) => h35(t33).map((t34) => s29.offset(t34)), label: c30 } : a27 });
  }
  function Hc(t32, n37, e26) {
    const { [t32]: r91 } = e26, { value: o35, interval: i29 } = Pc2(r91, e26);
    return null == o35 || null == i29 ? e26 : n37({ ...e26, [t32]: { label: ai5(r91), transform: (t33) => {
      const n38 = Do4(mo5(t33, o35), (t34) => i29.floor(t34)), e27 = n38.map((t34) => i29.offset(t34));
      return n38.map(vi6(n38) ? (t34, n39) => null == t34 || isNaN(t34 = +t34) || null == (n39 = e27[n39]) || isNaN(n39 = +n39) ? void 0 : new Date((t34 + n39) / 2) : (t34, n39) => null == t34 || null == (n39 = e27[n39]) ? NaN : (+t34 + +n39) / 2);
    } } });
  }
  function Yc2(t32 = {}) {
    return Vc2("x", Dc2, t32, true);
  }
  function Uc2(t32 = {}) {
    return Vc2("y", qc2, t32, true);
  }
  function Xc(t32 = {}) {
    return Vc2("x", Dc2, t32);
  }
  function Gc2(t32 = {}) {
    return Vc2("y", qc2, t32);
  }
  function Zc2(t32 = {}) {
    return Hc("x", Dc2, t32);
  }
  function Jc(t32 = {}) {
    return Hc("y", qc2, t32);
  }
  var Kc2 = { ariaLabel: "rule", fill: null, stroke: "currentColor" };
  var Qc2 = class extends dc2 {
    constructor(t32, n37 = {}) {
      const { x: e26, y1: r91, y2: o35, inset: i29 = 0, insetTop: a27 = i29, insetBottom: l35 = i29 } = n37;
      super(t32, { x: { value: e26, scale: "x", optional: true }, y1: { value: r91, scale: "y", optional: true }, y2: { value: o35, scale: "y", optional: true } }, gc2(n37, "x"), Kc2), this.insetTop = Lo5(a27), this.insetBottom = Lo5(l35), Oc2(this, n37);
    }
    render(t32, n37, e26, r91, o35) {
      const { x: i29, y: a27 } = n37, { x: l35, y1: s29, y2: c30 } = e26, { width: u30, height: f25, marginTop: h35, marginRight: d25, marginLeft: p24, marginBottom: m27 } = r91, { insetTop: y24, insetBottom: g31 } = this;
      return Ws5("svg:g", o35).call(ec2, this, r91, o35).call(ac2, this, { x: l35 && i29 }, Ys5, 0).call((n38) => n38.selectAll().data(t32).enter().append("line").call(rc2, this).attr("x1", l35 ? (t33) => l35[t33] : (p24 + u30 - d25) / 2).attr("x2", l35 ? (t33) => l35[t33] : (p24 + u30 - d25) / 2).attr("y1", s29 && !os5(a27) ? (t33) => s29[t33] + y24 : h35 + y24).attr("y2", c30 && !os5(a27) ? a27.bandwidth ? (t33) => c30[t33] + a27.bandwidth() - g31 : (t33) => c30[t33] - g31 : f25 - m27 - g31).call(Ks4, this, e26).call(jc2, this, e26, o35)).node();
    }
  };
  var tu2 = class extends dc2 {
    constructor(t32, n37 = {}) {
      const { x1: e26, x2: r91, y: o35, inset: i29 = 0, insetRight: a27 = i29, insetLeft: l35 = i29 } = n37;
      super(t32, { y: { value: o35, scale: "y", optional: true }, x1: { value: e26, scale: "x", optional: true }, x2: { value: r91, scale: "x", optional: true } }, gc2(n37, "y"), Kc2), this.insetRight = Lo5(a27), this.insetLeft = Lo5(l35), Oc2(this, n37);
    }
    render(t32, n37, e26, r91, o35) {
      const { x: i29, y: a27 } = n37, { y: l35, x1: s29, x2: c30 } = e26, { width: u30, height: f25, marginTop: h35, marginRight: d25, marginLeft: p24, marginBottom: m27 } = r91, { insetLeft: y24, insetRight: g31 } = this;
      return Ws5("svg:g", o35).call(ec2, this, r91, o35).call(ac2, this, { y: l35 && a27 }, 0, Ys5).call((n38) => n38.selectAll().data(t32).enter().append("line").call(rc2, this).attr("x1", s29 && !os5(i29) ? (t33) => s29[t33] + y24 : p24 + y24).attr("x2", c30 && !os5(i29) ? i29.bandwidth ? (t33) => c30[t33] + i29.bandwidth() - g31 : (t33) => c30[t33] - g31 : u30 - d25 - g31).attr("y1", l35 ? (t33) => l35[t33] : (h35 + f25 - m27) / 2).attr("y2", l35 ? (t33) => l35[t33] : (h35 + f25 - m27) / 2).call(Ks4, this, e26).call(jc2, this, e26, o35)).node();
    }
  };
  function nu2(t32, n37) {
    let { x: e26 = bo5, y: r91, y1: o35, y2: i29, ...a27 } = Gc2(n37);
    return [o35, i29] = ru2(r91, o35, i29), new Qc2(t32, { ...a27, x: e26, y1: o35, y2: i29 });
  }
  function eu2(t32, n37) {
    let { y: e26 = bo5, x: r91, x1: o35, x2: i29, ...a27 } = Xc(n37);
    return [o35, i29] = ru2(r91, o35, i29), new tu2(t32, { ...a27, y: e26, x1: o35, x2: i29 });
  }
  function ru2(t32, n37, e26) {
    if (null == t32) {
      if (void 0 === n37) {
        if (void 0 !== e26)
          return [0, e26];
      } else if (void 0 === e26)
        return [0, n37];
    } else {
      if (void 0 === n37)
        return void 0 === e26 ? [0, t32] : [t32, e26];
      if (void 0 === e26)
        return [t32, n37];
    }
    return [n37, e26];
  }
  function ou2(t32, ...n37) {
    let e26 = n37.length;
    for (let r91 = 0, o35 = true; r91 < e26; ++r91)
      "function" != typeof n37[r91] && (o35 && (t32 = t32.slice(), o35 = false), t32.splice(r91, 2, t32[r91] + n37[r91] + t32[r91 + 1]), n37.splice(r91, 1), --r91, --e26);
    return (r91) => {
      let o35 = t32[0];
      for (let i29 = 0; i29 < e26; ++i29)
        o35 += n37[i29](r91) + t32[i29 + 1];
      return o35;
    };
  }
  var iu2 = { ariaLabel: "text", strokeLinejoin: "round", strokeWidth: 3, paintOrder: "stroke" };
  var au2 = "\xAD";
  var lu2 = class extends dc2 {
    constructor(t32, n37 = {}) {
      const { x: e26, y: r91, text: o35 = mi5(t32) && yi4(t32) ? bo5 : wo5, frameAnchor: i29, textAnchor: a27 = /right$/i.test(i29) ? "end" : /left$/i.test(i29) ? "start" : "middle", lineAnchor: l35 = /^top/i.test(i29) ? "top" : /^bottom/i.test(i29) ? "bottom" : "middle", lineHeight: s29 = 1, lineWidth: c30 = 1 / 0, textOverflow: u30, monospace: f25, fontFamily: h35 = f25 ? "ui-monospace, monospace" : void 0, fontSize: d25, fontStyle: p24, fontVariant: m27, fontWeight: y24, rotate: g31 } = n37, [v31, x22] = Wo5(g31, 0), [w26, b28] = function(t33) {
        return null == t33 || "number" == typeof t33 ? [void 0, t33] : "string" != typeof t33 ? [t33, void 0] : (t33 = t33.trim().toLowerCase(), pu2.has(t33) || /^[+-]?\d*\.?\d+(e[+-]?\d+)?(\w*|%)$/.test(t33) ? [void 0, t33] : [t33, void 0]);
      }(d25);
      var k24;
      if (super(t32, { x: { value: e26, scale: "x", optional: true }, y: { value: r91, scale: "y", optional: true }, fontSize: { value: w26, optional: true }, rotate: { value: (k24 = v31, null == k24 ? null : { transform: (t33) => mo5(t33, k24, Float64Array), label: ai5(k24) }), optional: true }, text: { value: o35, filter: Wr6, optional: true } }, n37, iu2), this.rotate = x22, this.textAnchor = lc2(a27, "middle"), this.lineAnchor = Bo4(l35, "lineAnchor", ["top", "middle", "bottom"]), this.lineHeight = +s29, this.lineWidth = +c30, this.textOverflow = su2(u30), this.monospace = !!f25, this.fontFamily = Mo4(h35), this.fontSize = b28, this.fontStyle = Mo4(p24), this.fontVariant = Mo4(m27), this.fontWeight = Mo4(y24), this.frameAnchor = Oi6(i29), !(this.lineWidth >= 0))
        throw new Error(`invalid lineWidth: ${c30}`);
      this.splitLines = xu2(this), this.clipLine = wu2(this);
    }
    render(t32, n37, e26, r91, o35) {
      const { x: i29, y: a27 } = n37, { x: l35, y: s29, rotate: c30, text: u30, title: f25, fontSize: h35 } = e26, { rotate: d25 } = this, [p24, m27] = hc2(this, r91);
      return Ws5("svg:g", o35).call(ec2, this, r91, o35).call(du2, this, u30, r91).call(ac2, this, { x: l35 && i29, y: s29 && a27 }).call((n38) => n38.selectAll().data(t32).enter().append("text").call(rc2, this).call(cu2, this, u30, f25).attr("transform", ou2`translate(${l35 ? (t33) => l35[t33] : p24},${s29 ? (t33) => s29[t33] : m27})${c30 ? (t33) => ` rotate(${c30[t33]})` : d25 ? ` rotate(${d25})` : ""}`).call(ic2, "font-size", h35 && ((t33) => h35[t33])).call(Ks4, this, e26)).node();
    }
  };
  function su2(t32) {
    return null == t32 ? null : Bo4(t32, "textOverflow", ["clip", "ellipsis", "clip-start", "clip-end", "ellipsis-start", "ellipsis-middle", "ellipsis-end"]).replace(/^(clip|ellipsis)$/, "$1-end");
  }
  function cu2(t32, n37, e26, r91) {
    if (!e26)
      return;
    const { lineAnchor: o35, lineHeight: i29, textOverflow: a27, splitLines: l35, clipLine: s29 } = n37;
    t32.each(function(t33) {
      const n38 = l35(Hs4(e26[t33]) ?? "").map(s29), c30 = n38.length, u30 = "top" === o35 ? 0.71 : "bottom" === o35 ? 1 - c30 : (164 - 100 * c30) / 200;
      if (c30 > 1) {
        let t34 = 0;
        for (let e27 = 0; e27 < c30; ++e27) {
          if (++t34, !n38[e27])
            continue;
          const r92 = this.ownerDocument.createElementNS(n11.svg, "tspan");
          r92.setAttribute("x", 0), e27 === t34 - 1 ? r92.setAttribute("y", (u30 + e27) * i29 + "em") : r92.setAttribute("dy", t34 * i29 + "em"), r92.textContent = n38[e27], this.appendChild(r92), t34 = 0;
        }
      } else
        u30 && this.setAttribute("y", u30 * i29 + "em"), this.textContent = n38[0];
      if (a27 && !r91 && n38[0] !== e26[t33]) {
        const n39 = this.ownerDocument.createElementNS(n11.svg, "title");
        n39.textContent = e26[t33], this.appendChild(n39);
      }
    });
  }
  function uu2(t32, { x: n37, y: e26, ...r91 } = {}) {
    return void 0 === r91.frameAnchor && ([n37, e26] = Zo5(n37, e26)), new lu2(t32, { ...r91, x: n37, y: e26 });
  }
  function fu2(t32, { x: n37 = bo5, ...e26 } = {}) {
    return new lu2(t32, Jc({ ...e26, x: n37 }));
  }
  function hu2(t32, { y: n37 = bo5, ...e26 } = {}) {
    return new lu2(t32, Zc2({ ...e26, y: n37 }));
  }
  function du2(t32, n37, e26) {
    ic2(t32, "text-anchor", n37.textAnchor), ic2(t32, "font-family", n37.fontFamily), ic2(t32, "font-size", n37.fontSize), ic2(t32, "font-style", n37.fontStyle), ic2(t32, "font-variant", void 0 === n37.fontVariant ? function(t33) {
      return t33 && (bi6(t33) || vi6(t33)) ? "tabular-nums" : void 0;
    }(e26) : n37.fontVariant), ic2(t32, "font-weight", n37.fontWeight);
  }
  var pu2 = /* @__PURE__ */ new Set(["inherit", "initial", "revert", "unset", "xx-small", "x-small", "small", "medium", "large", "x-large", "xx-large", "xxx-large", "larger", "smaller"]);
  function mu2(t32, n37, e26) {
    const r91 = [];
    let o35, i29 = 0;
    for (const [a27, l35, s29] of function* (t33) {
      let n38 = 0, e27 = 0;
      const r92 = t33.length;
      for (; e27 < r92; ) {
        let r93 = 1;
        switch (t33[e27]) {
          case au2:
          case "-":
            ++e27, yield [n38, e27, false], n38 = e27;
            break;
          case " ":
            for (yield [n38, e27, false]; " " === t33[++e27]; )
              ;
            n38 = e27;
            break;
          case "\r":
            "\n" === t33[e27 + 1] && ++r93;
          case "\n":
            yield [n38, e27, true], e27 += r93, n38 = e27;
            break;
          default:
            ++e27;
        }
      }
      yield [n38, e27, true];
    }(t32))
      void 0 === o35 && (o35 = a27), i29 > o35 && e26(t32, o35, l35) > n37 && (r91.push(t32.slice(o35, i29) + (t32[i29 - 1] === au2 ? "-" : "")), o35 = a27), s29 ? (r91.push(t32.slice(o35, l35)), o35 = void 0) : i29 = l35;
    return r91;
  }
  var yu2 = { a: 56, b: 63, c: 57, d: 63, e: 58, f: 37, g: 62, h: 60, i: 26, j: 26, k: 55, l: 26, m: 88, n: 60, o: 60, p: 62, q: 62, r: 39, s: 54, t: 38, u: 60, v: 55, w: 79, x: 54, y: 55, z: 55, A: 69, B: 67, C: 73, D: 74, E: 61, F: 58, G: 76, H: 75, I: 28, J: 55, K: 67, L: 58, M: 89, N: 75, O: 78, P: 65, Q: 78, R: 67, S: 65, T: 65, U: 75, V: 69, W: 98, X: 69, Y: 67, Z: 67, 0: 64, 1: 48, 2: 62, 3: 64, 4: 66, 5: 63, 6: 65, 7: 58, 8: 65, 9: 65, " ": 29, "!": 32, '"': 49, "'": 31, "(": 39, ")": 39, ",": 31, "-": 48, ".": 31, "/": 32, ":": 31, ";": 31, "?": 52, "\u2018": 31, "\u2019": 31, "\u201C": 47, "\u201D": 47, "\u2026": 82 };
  function gu2(t32, n37 = 0, e26 = t32.length) {
    let r91 = 0;
    for (let o35 = n37; o35 < e26; o35 = Eu2(t32, o35))
      r91 += yu2[t32[o35]] ?? (Ou2(t32, o35) ? 120 : yu2.e);
    return r91;
  }
  function vu2(t32, n37 = 0, e26 = t32.length) {
    let r91 = 0;
    for (let o35 = n37; o35 < e26; o35 = Eu2(t32, o35))
      r91 += Ou2(t32, o35) ? 126 : 63;
    return r91;
  }
  function xu2({ monospace: t32, lineWidth: n37, textOverflow: e26 }) {
    if (null != e26 || n37 == 1 / 0)
      return (t33) => t33.split(/\r\n?|\n/g);
    const r91 = t32 ? vu2 : gu2, o35 = 100 * n37;
    return (t33) => mu2(t33, o35, r91);
  }
  function wu2({ monospace: t32, lineWidth: n37, textOverflow: e26 }) {
    if (null == e26 || n37 == 1 / 0)
      return (t33) => t33;
    const r91 = t32 ? vu2 : gu2, o35 = 100 * n37;
    switch (e26) {
      case "clip-start":
        return (t33) => Mu2(t33, o35, r91, "");
      case "clip-end":
        return (t33) => $u2(t33, o35, r91, "");
      case "ellipsis-start":
        return (t33) => Mu2(t33, o35, r91, bu2);
      case "ellipsis-middle":
        return (t33) => function(t34, n38, e27, r92) {
          t34 = t34.trim();
          const o36 = e27(t34);
          if (o36 <= n38)
            return t34;
          const i29 = e27(r92) / 2, [a27, l35] = ku2(t34, n38 / 2, e27, i29), [s29] = ku2(t34, o36 - n38 / 2 - l35 + i29, e27, -i29);
          return s29 < 0 ? r92 : t34.slice(0, a27).trimEnd() + r92 + t34.slice(Eu2(t34, s29)).trimStart();
        }(t33, o35, r91, bu2);
      case "ellipsis-end":
        return (t33) => $u2(t33, o35, r91, bu2);
    }
  }
  var bu2 = "\u2026";
  function ku2(t32, n37, e26, r91) {
    const o35 = [];
    let i29 = 0;
    for (let a27 = 0, l35 = 0, s29 = t32.length; a27 < s29; a27 = l35) {
      l35 = Eu2(t32, a27);
      const s30 = e26(t32, a27, l35);
      if (i29 + s30 > n37) {
        for (i29 += r91; i29 > n37 && a27 > 0; )
          l35 = a27, a27 = o35.pop(), i29 -= e26(t32, a27, l35);
        return [a27, n37 - i29];
      }
      i29 += s30, o35.push(a27);
    }
    return [-1, 0];
  }
  function $u2(t32, n37, e26, r91) {
    t32 = t32.trim();
    const o35 = e26(r91), [i29] = ku2(t32, n37, e26, o35);
    return i29 < 0 ? t32 : t32.slice(0, i29).trimEnd() + r91;
  }
  function Mu2(t32, n37, e26, r91) {
    const o35 = e26(t32 = t32.trim());
    if (o35 <= n37)
      return t32;
    const i29 = e26(r91), [a27] = ku2(t32, o35 - n37 + i29, e26, -i29);
    return a27 < 0 ? r91 : r91 + t32.slice(Eu2(t32, a27)).trimStart();
  }
  var Lu2 = /[\p{Combining_Mark}\p{Emoji_Modifier}]+/uy;
  var Au2 = /\p{Extended_Pictographic}/uy;
  function Eu2(t32, n37) {
    return n37 += function(t33, n38) {
      const e26 = t33.charCodeAt(n38);
      if (e26 >= 55296 && e26 < 56320) {
        const e27 = t33.charCodeAt(n38 + 1);
        return e27 >= 56320 && e27 < 57344;
      }
      return false;
    }(t32, n37) ? 2 : 1, function(t33, n38) {
      return !zu2(t33, n38) && (Lu2.lastIndex = n38, Lu2.test(t33));
    }(t32, n37) && (n37 = Lu2.lastIndex), function(t33, n38) {
      return 8205 === t33.charCodeAt(n38);
    }(t32, n37) ? Eu2(t32, n37 + 1) : n37;
  }
  function zu2(t32, n37) {
    return t32.charCodeAt(n37) < 128;
  }
  function Ou2(t32, n37) {
    return !zu2(t32, n37) && (Au2.lastIndex = n37, Au2.test(t32));
  }
  var Su2 = { ariaLabel: "vector", fill: "none", stroke: "currentColor", strokeWidth: 1.5, strokeLinejoin: "round", strokeLinecap: "round" };
  var Nu2 = 3.5;
  var Cu2 = 5 * Nu2;
  var Tu2 = { draw(t32, n37, e26) {
    const r91 = n37 * e26 / Cu2;
    t32.moveTo(0, 0), t32.lineTo(0, -n37), t32.moveTo(-r91, r91 - n37), t32.lineTo(0, -n37), t32.lineTo(r91, r91 - n37);
  } };
  var Ru2 = { draw(t32, n37, e26) {
    t32.moveTo(-e26, 0), t32.lineTo(0, -n37), t32.lineTo(e26, 0);
  } };
  var Iu2 = /* @__PURE__ */ new Map([["arrow", Tu2], ["spike", Ru2]]);
  var Wu2 = class extends dc2 {
    constructor(t32, n37 = {}) {
      const { x: e26, y: r91, r: o35 = Nu2, length: i29, rotate: a27, shape: l35 = Tu2, anchor: s29 = "middle", frameAnchor: c30 } = n37, [u30, f25] = Wo5(i29, 12), [h35, d25] = Wo5(a27, 0);
      super(t32, { x: { value: e26, scale: "x", optional: true }, y: { value: r91, scale: "y", optional: true }, length: { value: u30, scale: "length", optional: true }, rotate: { value: h35, optional: true } }, n37, Su2), this.r = +o35, this.length = f25, this.rotate = d25, this.shape = function(t33) {
        if (function(t34) {
          return t34 && "function" == typeof t34.draw;
        }(t33))
          return t33;
        const n38 = Iu2.get(`${t33}`.toLowerCase());
        if (n38)
          return n38;
        throw new Error(`invalid shape: ${t33}`);
      }(l35), this.anchor = Bo4(s29, "anchor", ["start", "middle", "end"]), this.frameAnchor = Oi6(c30);
    }
    render(t32, n37, e26, r91, o35) {
      const { x: i29, y: a27 } = n37, { x: l35, y: s29, length: c30, rotate: u30 } = e26, { length: f25, rotate: h35, anchor: d25, shape: p24, r: m27 } = this, [y24, g31] = hc2(this, r91);
      return Ws5("svg:g", o35).call(ec2, this, r91, o35).call(ac2, this, { x: l35 && i29, y: s29 && a27 }).call((n38) => n38.selectAll().data(t32).enter().append("path").call(rc2, this).attr("transform", ou2`translate(${l35 ? (t33) => l35[t33] : y24},${s29 ? (t33) => s29[t33] : g31})${u30 ? (t33) => ` rotate(${u30[t33]})` : h35 ? ` rotate(${h35})` : ""}${"start" === d25 ? "" : "end" === d25 ? c30 ? (t33) => ` translate(0,${c30[t33]})` : ` translate(0,${f25})` : c30 ? (t33) => ` translate(0,${c30[t33] / 2})` : ` translate(0,${f25 / 2})`}`).attr("d", c30 ? (t33) => {
        const n39 = $13();
        return p24.draw(n39, c30[t33], m27), n39;
      } : (() => {
        const t33 = $13();
        return p24.draw(t33, f25, m27), t33;
      })()).call(Ks4, this, e26)).node();
    }
  };
  function Bu2(t32, n37 = {}) {
    const { x: e26 = bo5, ...r91 } = n37;
    return new Wu2(t32, { ...r91, x: e26 });
  }
  function Fu2(t32, n37 = {}) {
    const { y: e26 = bo5, ...r91 } = n37;
    return new Wu2(t32, { ...r91, y: e26 });
  }
  function qu(t32, n37) {
    return arguments.length < 2 && !mi5(t32) && (n37 = t32, t32 = null), void 0 === n37 && (n37 = {}), [t32, n37];
  }
  function _u2({ anchor: t32 } = {}, n37) {
    return void 0 === t32 ? n37[0] : Bo4(t32, "anchor", n37);
  }
  function Pu2(t32) {
    return _u2(t32, ["left", "right"]);
  }
  function Vu2(t32) {
    return _u2(t32, ["right", "left"]);
  }
  function Hu2(t32) {
    return _u2(t32, ["bottom", "top"]);
  }
  function Yu2(t32) {
    return _u2(t32, ["top", "bottom"]);
  }
  function Uu2() {
    const [t32, n37] = qu(...arguments);
    return Ju2("y", Pu2(n37), t32, n37);
  }
  function Xu2() {
    const [t32, n37] = qu(...arguments);
    return Ju2("fy", Vu2(n37), t32, n37);
  }
  function Gu2() {
    const [t32, n37] = qu(...arguments);
    return Ku2("x", Hu2(n37), t32, n37);
  }
  function Zu2() {
    const [t32, n37] = qu(...arguments);
    return Ku2("fx", Yu2(n37), t32, n37);
  }
  function Ju2(t32, n37, e26, { color: r91 = "currentColor", opacity: o35 = 1, stroke: i29 = r91, strokeOpacity: a27 = o35, strokeWidth: l35 = 1, fill: s29 = r91, fillOpacity: c30 = o35, textAnchor: u30, textStroke: f25, textStrokeOpacity: h35, textStrokeWidth: d25, tickSize: p24 = "y" === t32 ? 6 : 0, tickPadding: m27, tickRotate: y24, x: g31, margin: v31, marginTop: x22 = void 0 === v31 ? 20 : v31, marginRight: w26 = void 0 === v31 ? "right" === n37 ? 40 : 0 : v31, marginBottom: b28 = void 0 === v31 ? 20 : v31, marginLeft: k24 = void 0 === v31 ? "left" === n37 ? 40 : 0 : v31, label: $26, labelAnchor: M26, labelArrow: L25, labelOffset: A27, ...E24 }) {
    return p24 = Lo5(p24), m27 = Lo5(m27), y24 = Lo5(y24), void 0 !== M26 && (M26 = Bo4(M26, "labelAnchor", ["center", "top", "bottom"])), L25 = vf2(L25), pc2(p24 && !Ai6(i29) ? function(t33, n38, e27, { strokeWidth: r92 = 1, strokeLinecap: o36 = null, strokeLinejoin: i30 = null, facetAnchor: a28 = n38 + ("y" === t33 ? "-empty" : ""), frameAnchor: l36 = n38, tickSize: s30, inset: c31 = 0, insetLeft: u31 = c31, insetRight: f26 = c31, dx: h36 = 0, y: d26 = "y" === t33 ? void 0 : null, ...p25 }) {
      return sf2(Fu2, t33, e27, { ariaLabel: `${t33}-axis tick`, ariaHidden: true }, { strokeWidth: r92, strokeLinecap: o36, strokeLinejoin: i30, facetAnchor: a28, frameAnchor: l36, y: d26, ...p25, dx: "left" === n38 ? +h36 - Ys5 + +u31 : +h36 + Ys5 - f26, anchor: "start", length: s30, shape: "left" === n38 ? pf2 : mf2 });
    }(t32, n37, e26, { stroke: i29, strokeOpacity: a27, strokeWidth: l35, tickSize: p24, tickPadding: m27, tickRotate: y24, x: g31, ...E24 }) : null, Ai6(s29) ? null : function(t33, n38, e27, { facetAnchor: r92 = n38 + ("y" === t33 ? "-empty" : ""), frameAnchor: o36 = n38, tickSize: i30, tickRotate: a28 = 0, tickPadding: l36 = Math.max(3, 9 - i30) + (Math.abs(a28) > 60 ? 4 * Math.cos(a28 * zc) : 0), text: s30, textAnchor: c31 = Math.abs(a28) > 60 ? "middle" : "left" === n38 ? "end" : "start", lineAnchor: u31 = a28 > 60 ? "top" : a28 < -60 ? "bottom" : "middle", fontVariant: f26, inset: h36 = 0, insetLeft: d26 = h36, insetRight: p25 = h36, dx: m28 = 0, y: y25 = "y" === t33 ? void 0 : null, ...g32 }) {
      return sf2(hu2, t33, e27, { ariaLabel: `${t33}-axis tick label` }, { facetAnchor: r92, frameAnchor: o36, text: s30, textAnchor: c31, lineAnchor: u31, fontVariant: f26, rotate: a28, y: y25, ...g32, dx: "left" === n38 ? +m28 - i30 - l36 + +d26 : +m28 + +i30 + +l36 - p25 }, function(t34, e28, r93, o37, i31) {
        void 0 === f26 && (this.fontVariant = yf2(t34)), void 0 === s30 && (i31.text = cf2(t34, e28, r93, o37, n38));
      });
    }(t32, n37, e26, { fill: s29, fillOpacity: c30, stroke: f25, strokeOpacity: h35, strokeWidth: d25, textAnchor: u30, tickSize: p24, tickPadding: m27, tickRotate: y24, x: g31, marginTop: x22, marginRight: w26, marginBottom: b28, marginLeft: k24, ...E24 }), Ai6(s29) || null === $26 ? null : uu2([], lf2({ fill: s29, fillOpacity: c30, ...E24 }, function(e27, r92, o36, i30, a28) {
      const l36 = i30[t32], { marginTop: s30, marginRight: c31, marginBottom: u31, marginLeft: f26 } = "y" === t32 && a28.inset || a28, h36 = M26 ?? (l36.bandwidth ? "center" : "top"), d26 = A27 ?? ("right" === n37 ? c31 : f26) - 3;
      return "center" === h36 ? (this.textAnchor = void 0, this.lineAnchor = "right" === n37 ? "bottom" : "top", this.frameAnchor = n37, this.rotate = -90) : (this.textAnchor = "right" === n37 ? "end" : "start", this.lineAnchor = h36, this.frameAnchor = `${h36}-${n37}`, this.rotate = 0), this.dy = "top" === h36 ? 3 - s30 : "bottom" === h36 ? u31 - 3 : 0, this.dx = "right" === n37 ? d26 : -d26, this.ariaLabel = `${t32}-axis label`, { facets: [[0]], channels: { text: { value: [gf2(t32, l36, { anchor: n37, label: $26, labelAnchor: h36, labelArrow: L25 })] } } };
    })));
  }
  function Ku2(t32, n37, e26, { color: r91 = "currentColor", opacity: o35 = 1, stroke: i29 = r91, strokeOpacity: a27 = o35, strokeWidth: l35 = 1, fill: s29 = r91, fillOpacity: c30 = o35, textAnchor: u30, textStroke: f25, textStrokeOpacity: h35, textStrokeWidth: d25, tickSize: p24 = "x" === t32 ? 6 : 0, tickPadding: m27, tickRotate: y24, y: g31, margin: v31, marginTop: x22 = void 0 === v31 ? "top" === n37 ? 30 : 0 : v31, marginRight: w26 = void 0 === v31 ? 20 : v31, marginBottom: b28 = void 0 === v31 ? "bottom" === n37 ? 30 : 0 : v31, marginLeft: k24 = void 0 === v31 ? 20 : v31, label: $26, labelAnchor: M26, labelArrow: L25, labelOffset: A27, ...E24 }) {
    return p24 = Lo5(p24), m27 = Lo5(m27), y24 = Lo5(y24), void 0 !== M26 && (M26 = Bo4(M26, "labelAnchor", ["center", "left", "right"])), L25 = vf2(L25), pc2(p24 && !Ai6(i29) ? function(t33, n38, e27, { strokeWidth: r92 = 1, strokeLinecap: o36 = null, strokeLinejoin: i30 = null, facetAnchor: a28 = n38 + ("x" === t33 ? "-empty" : ""), frameAnchor: l36 = n38, tickSize: s30, inset: c31 = 0, insetTop: u31 = c31, insetBottom: f26 = c31, dy: h36 = 0, x: d26 = "x" === t33 ? void 0 : null, ...p25 }) {
      return sf2(Bu2, t33, e27, { ariaLabel: `${t33}-axis tick`, ariaHidden: true }, { strokeWidth: r92, strokeLinejoin: i30, strokeLinecap: o36, facetAnchor: a28, frameAnchor: l36, x: d26, ...p25, dy: "bottom" === n38 ? +h36 - Ys5 - f26 : +h36 + Ys5 + +u31, anchor: "start", length: s30, shape: "bottom" === n38 ? hf2 : df2 });
    }(t32, n37, e26, { stroke: i29, strokeOpacity: a27, strokeWidth: l35, tickSize: p24, tickPadding: m27, tickRotate: y24, y: g31, ...E24 }) : null, Ai6(s29) ? null : function(t33, n38, e27, { facetAnchor: r92 = n38 + ("x" === t33 ? "-empty" : ""), frameAnchor: o36 = n38, tickSize: i30, tickRotate: a28 = 0, tickPadding: l36 = Math.max(3, 9 - i30) + (Math.abs(a28) >= 10 ? 4 * Math.cos(a28 * zc) : 0), text: s30, textAnchor: c31 = Math.abs(a28) >= 10 ? a28 < 0 ^ "bottom" === n38 ? "start" : "end" : "middle", lineAnchor: u31 = Math.abs(a28) >= 10 ? "middle" : "bottom" === n38 ? "top" : "bottom", fontVariant: f26, inset: h36 = 0, insetTop: d26 = h36, insetBottom: p25 = h36, dy: m28 = 0, x: y25 = "x" === t33 ? void 0 : null, ...g32 }) {
      return sf2(fu2, t33, e27, { ariaLabel: `${t33}-axis tick label` }, { facetAnchor: r92, frameAnchor: o36, text: void 0 === s30 ? null : s30, textAnchor: c31, lineAnchor: u31, fontVariant: f26, rotate: a28, x: y25, ...g32, dy: "bottom" === n38 ? +m28 + +i30 + +l36 - p25 : +m28 - i30 - l36 + +d26 }, function(t34, e28, r93, o37, i31) {
        void 0 === f26 && (this.fontVariant = yf2(t34)), void 0 === s30 && (i31.text = cf2(t34, e28, r93, o37, n38));
      });
    }(t32, n37, e26, { fill: s29, fillOpacity: c30, stroke: f25, strokeOpacity: h35, strokeWidth: d25, textAnchor: u30, tickSize: p24, tickPadding: m27, tickRotate: y24, y: g31, marginTop: x22, marginRight: w26, marginBottom: b28, marginLeft: k24, ...E24 }), Ai6(s29) || null === $26 ? null : uu2([], lf2({ fill: s29, fillOpacity: c30, ...E24 }, function(e27, r92, o36, i30, a28) {
      const l36 = i30[t32], { marginTop: s30, marginRight: c31, marginBottom: u31, marginLeft: f26 } = "x" === t32 && a28.inset || a28, h36 = M26 ?? (l36.bandwidth ? "center" : "right"), d26 = A27 ?? ("top" === n37 ? s30 : u31) - 3;
      return "center" === h36 ? (this.frameAnchor = n37, this.textAnchor = void 0) : (this.frameAnchor = `${n37}-${h36}`, this.textAnchor = "right" === h36 ? "end" : "start"), this.lineAnchor = n37, this.dy = "top" === n37 ? -d26 : d26, this.dx = "right" === h36 ? c31 - 3 : "left" === h36 ? 3 - f26 : 0, this.ariaLabel = `${t32}-axis label`, { facets: [[0]], channels: { text: { value: [gf2(t32, l36, { anchor: n37, label: $26, labelAnchor: h36, labelArrow: L25 })] } } };
    })));
  }
  function Qu2() {
    const [t32, n37] = qu(...arguments);
    return rf2("y", Pu2(n37), t32, n37);
  }
  function tf2() {
    const [t32, n37] = qu(...arguments);
    return rf2("fy", Vu2(n37), t32, n37);
  }
  function nf2() {
    const [t32, n37] = qu(...arguments);
    return of2("x", Hu2(n37), t32, n37);
  }
  function ef2() {
    const [t32, n37] = qu(...arguments);
    return of2("fx", Yu2(n37), t32, n37);
  }
  function rf2(t32, n37, e26, { y: r91 = "y" === t32 ? void 0 : null, x: o35 = null, x1: i29 = "left" === n37 ? o35 : null, x2: a27 = "right" === n37 ? o35 : null, ...l35 }) {
    return sf2(eu2, t32, e26, { ariaLabel: `${t32}-grid`, ariaHidden: true }, { y: r91, x1: i29, x2: a27, ...af2(l35) });
  }
  function of2(t32, n37, e26, { x: r91 = "x" === t32 ? void 0 : null, y: o35 = null, y1: i29 = "top" === n37 ? o35 : null, y2: a27 = "bottom" === n37 ? o35 : null, ...l35 }) {
    return sf2(nu2, t32, e26, { ariaLabel: `${t32}-grid`, ariaHidden: true }, { x: r91, y1: i29, y2: a27, ...af2(l35) });
  }
  function af2({ color: t32 = "currentColor", opacity: n37 = 0.1, stroke: e26 = t32, strokeOpacity: r91 = n37, strokeWidth: o35 = 1, ...i29 }) {
    return { stroke: e26, strokeOpacity: r91, strokeWidth: o35, ...i29 };
  }
  function lf2({ fill: t32, fillOpacity: n37, fontFamily: e26, fontSize: r91, fontStyle: o35, fontVariant: i29, fontWeight: a27, monospace: l35, pointerEvents: s29, shapeRendering: c30, clip: u30 = false }, f25) {
    return [, t32] = Io5(t32), [, n37] = Wo5(n37), { facet: "super", x: null, y: null, fill: t32, fillOpacity: n37, fontFamily: e26, fontSize: r91, fontStyle: o35, fontVariant: i29, fontWeight: a27, monospace: l35, pointerEvents: s29, shapeRendering: c30, clip: u30, initializer: f25 };
  }
  function sf2(t32, n37, e26, r91, o35, i29) {
    let a27;
    const l35 = Ui5(o35).initializer, s29 = t32(e26, Ui5({ ...o35, initializer: function(t33, e27, r92, l36, s30, c30) {
      const u30 = null == t33 && ("fx" === n37 || "fy" === n37), { [n37]: f25 } = l36;
      if (!f25)
        throw new Error(`missing scale: ${n37}`);
      const h35 = f25.domain();
      let { interval: d25, ticks: p24, tickFormat: m27, tickSpacing: y24 = "x" === n37 ? 80 : 35 } = o35;
      if ("string" == typeof p24 && xf2(f25) && (d25 = p24, p24 = void 0), void 0 === p24 && (p24 = hi6(d25, f25.type) ?? function(t34, n38) {
        const [e28, r93] = T8(t34.range());
        return (r93 - e28) / n38;
      }(f25, y24)), null == t33) {
        if (mi5(p24))
          t33 = Fo5(p24);
        else if (di6(p24))
          t33 = ff2(p24, ...T8(h35));
        else if (f25.interval) {
          let n38 = f25.interval;
          if (f25.ticks) {
            const [e28, r93] = T8(h35);
            n38 = lo5(n38, (r93 - e28) / n38[Kr6] / p24) ?? n38, t33 = ff2(n38, e28, r93);
          } else {
            n38 = lo5(n38, (t33 = h35).length / p24) ?? n38, n38 !== f25.interval && (t33 = ff2(n38, ...T8(t33)));
          }
          if (n38 === f25.interval) {
            const n39 = Math.round(t33.length / p24);
            n39 > 1 && (t33 = t33.filter((t34, e28) => e28 % n39 == 0));
          }
        } else
          t33 = f25.ticks ? f25.ticks(p24) : h35;
        if (!f25.ticks && t33.length && t33 !== h35) {
          const e28 = new t9(h35);
          (t33 = t33.filter((t34) => e28.has(t34))).length || Al2(`Warning: the ${n37}-axis ticks appear to not align with the scale domain, resulting in no ticks. Try different ticks?`);
        }
        "y" === n37 || "x" === n37 ? e27 = [Ko3(t33)] : a27[n37] = { scale: n37, value: bo5 };
      }
      i29?.call(this, f25, t33, p24, m27, a27);
      const g31 = Object.fromEntries(Object.entries(a27).map(([n38, e28]) => [n38, { ...e28, value: mo5(t33, e28.value) }]));
      return u30 && (e27 = c30.filterFacets(t33, g31)), { data: t33, facets: e27, channels: g31 };
    } }, l35));
    return null == e26 ? (a27 = s29.channels, s29.channels = {}) : a27 = {}, void 0 !== r91 && Object.assign(s29, r91), void 0 === s29.clip && (s29.clip = false), s29;
  }
  function cf2(t32, n37, e26, r91, o35) {
    return { value: uf2(t32, n37, e26, r91, o35) };
  }
  function uf2(t32, n37, e26, r91, o35) {
    return "function" != typeof r91 || "log" === t32.type && t32.tickFormat ? void 0 === r91 && n37 && vi6(n37) ? co5(t32.type, n37, o35) ?? Hs4 : t32.tickFormat ? t32.tickFormat("number" == typeof e26 ? e26 : null, r91) : void 0 === r91 ? Hs4 : "string" == typeof r91 ? (vi6(t32.domain()) ? m21 : l22)(r91) : Oo4(r91) : r91;
  }
  function ff2(t32, n37, e26) {
    return t32.range(n37, t32.offset(t32.floor(e26)));
  }
  var hf2 = { draw(t32, n37) {
    t32.moveTo(0, 0), t32.lineTo(0, n37);
  } };
  var df2 = { draw(t32, n37) {
    t32.moveTo(0, 0), t32.lineTo(0, -n37);
  } };
  var pf2 = { draw(t32, n37) {
    t32.moveTo(0, 0), t32.lineTo(-n37, 0);
  } };
  var mf2 = { draw(t32, n37) {
    t32.moveTo(0, 0), t32.lineTo(n37, 0);
  } };
  function yf2(t32) {
    return t32.bandwidth && !t32.interval ? void 0 : "tabular-nums";
  }
  function gf2(t32, n37, { anchor: e26, label: r91 = n37.label, labelAnchor: o35, labelArrow: i29 } = {}) {
    if (!(null == r91 || r91.inferred && xf2(n37) && /^(date|time|year)$/i.test(r91))) {
      if (r91 = String(r91), "auto" === i29 && (i29 = (!n37.bandwidth || n37.interval) && !/[↑↓→←]/.test(r91)), !i29)
        return r91;
      if (true === i29) {
        const e27 = Pl2(n37);
        e27 && (i29 = /x$/.test(t32) || "center" === o35 ? /x$/.test(t32) === e27 < 0 ? "left" : "right" : e27 < 0 ? "up" : "down");
      }
      switch (i29) {
        case "left":
          return `\u2190 ${r91}`;
        case "right":
          return `${r91} \u2192`;
        case "up":
          return "right" === e26 ? `${r91} \u2191` : `\u2191 ${r91}`;
        case "down":
          return "right" === e26 ? `${r91} \u2193` : `\u2193 ${r91}`;
      }
      return r91;
    }
  }
  function vf2(t32 = "auto") {
    return !Ai6(t32) && ("boolean" == typeof t32 ? t32 : Bo4(t32, "labelArrow", ["auto", "up", "right", "down", "left"]));
  }
  function xf2(t32) {
    return vi6(t32.domain());
  }
  function wf2(t32, n37) {
    if (null == n37)
      return n37;
    const e26 = t32(n37);
    if (!e26)
      throw new Error(`scale not found: ${n37}`);
    return e26;
  }
  function bf2(t32, n37 = {}, e26) {
    let { columns: r91, tickFormat: o35, fontVariant: i29 = Ec2(t32), swatchSize: a27 = 15, swatchWidth: l35 = a27, swatchHeight: s29 = a27, marginLeft: c30 = 0, className: u30, style: f25, width: h35 } = n37;
    const d25 = Is5(n37);
    u30 = uc2(u30), o35 = uf2(t32.scale, t32.domain, void 0, o35);
    const p24 = Ws5("div", d25).attr("class", `${u30}-swatches ${u30}-swatches-${null != r91 ? "columns" : "wrap"}`);
    let m27;
    return null != r91 ? (m27 = `:where(.${u30}-swatches-columns .${u30}-swatch) {
  display: flex;
  align-items: center;
  break-inside: avoid;
  padding-bottom: 1px;
}
:where(.${u30}-swatches-columns .${u30}-swatch::before) {
  flex-shrink: 0;
}
:where(.${u30}-swatches-columns .${u30}-swatch-label) {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}`, p24.style("columns", r91).selectAll().data(t32.domain).enter().append("div").attr("class", `${u30}-swatch`).call(e26, t32, l35, s29).call((t33) => t33.append("div").attr("class", `${u30}-swatch-label`).attr("title", o35).text(o35))) : (m27 = `:where(.${u30}-swatches-wrap) {
  display: flex;
  align-items: center;
  min-height: 33px;
  flex-wrap: wrap;
}
:where(.${u30}-swatches-wrap .${u30}-swatch) {
  display: inline-flex;
  align-items: center;
  margin-right: 1em;
}`, p24.selectAll().data(t32.domain).enter().append("span").attr("class", `${u30}-swatch`).call(e26, t32, l35, s29).append(function() {
      return this.ownerDocument.createTextNode(o35.apply(this, arguments));
    })), p24.call((t33) => t33.insert("style", "*").text(`:where(.${u30}-swatches) {
  font-family: system-ui, sans-serif;
  font-size: 10px;
  margin-bottom: 0.5em;
}
:where(.${u30}-swatch > svg) {
  margin-right: 0.5em;
  overflow: visible;
}
${m27}`)).style("margin-left", c30 ? +c30 + "px" : null).style("width", void 0 === h35 ? null : +h35 + "px").style("font-variant", lc2(i29, "normal")).call(fc2, f25).node();
  }
  var kf = /* @__PURE__ */ new Map([["symbol", function(t32, { fill: n37 = void 0 !== t32.hint?.fill ? t32.hint.fill : "none", fillOpacity: e26 = 1, stroke: r91 = void 0 !== t32.hint?.stroke ? t32.hint.stroke : Ai6(n37) ? "currentColor" : "none", strokeOpacity: o35 = 1, strokeWidth: i29 = 1.5, r: a27 = 4.5, ...l35 } = {}, s29) {
    const [c30, u30] = Io5(n37), [f25, h35] = Io5(r91), d25 = wf2(s29, c30), p24 = wf2(s29, f25), m27 = a27 * a27 * Math.PI;
    return e26 = Wo5(e26)[1], o35 = Wo5(o35)[1], i29 = Wo5(i29)[1], bf2(t32, l35, (n38, r92, a28, l36) => n38.append("svg").attr("viewBox", "-8 -8 16 16").attr("width", a28).attr("height", l36).attr("fill", "color" === c30 ? (t33) => d25.scale(t33) : u30).attr("fill-opacity", e26).attr("stroke", "color" === f25 ? (t33) => p24.scale(t33) : h35).attr("stroke-opacity", o35).attr("stroke-width", i29).append("path").attr("d", (n39) => {
      const e27 = $13();
      return t32.scale(n39).draw(e27, m27), e27;
    }));
  }], ["color", Lf], ["opacity", function({ type: t32, interpolate: n37, ...e26 }, { legend: r91 = true, color: o35 = k10(0, 0, 0), ...i29 }) {
    if (!n37)
      throw new Error(`${t32} opacity scales are not supported`);
    true === r91 && (r91 = "ramp");
    if ("ramp" !== `${r91}`.toLowerCase())
      throw new Error(`${r91} opacity legends are not supported`);
    return Lf({ type: t32, ...e26, interpolate: Af2(o35) }, { legend: r91, ...i29 });
  }]]);
  function Mf2({ className: t32, ...n37 }, { label: e26, ticks: r91, tickFormat: o35 } = {}, i29) {
    return function(t33 = {}, ...n38) {
      let e27 = t33;
      for (const r92 of n38)
        for (const n39 in r92)
          if (void 0 === e27[n39]) {
            const o36 = r92[n39];
            e27 === t33 ? e27 = { ...e27, [n39]: o36 } : e27[n39] = o36;
          }
      return e27;
    }(i29, { className: t32, ...n37 }, { label: e26, ticks: r91, tickFormat: o35 });
  }
  function Lf(t32, { legend: n37 = true, ...e26 }) {
    if (true === n37 && (n37 = "ordinal" === t32.type ? "swatches" : "ramp"), void 0 !== t32.domain)
      switch (`${n37}`.toLowerCase()) {
        case "swatches":
          return function(t33, { opacity: n38, ...e27 } = {}) {
            if (!es5(t33) && !rs5(t33))
              throw new Error(`swatches legend requires ordinal or threshold color scale (not ${t33.type})`);
            return bf2(t33, e27, (t34, e28, r91, o35) => t34.append("svg").attr("width", r91).attr("height", o35).attr("fill", e28.scale).attr("fill-opacity", Wo5(n38)[1]).append("rect").attr("width", "100%").attr("height", "100%"));
          }(t32, e26);
        case "ramp":
          return function(t33, n38) {
            let { label: e27 = t33.label, tickSize: r91 = 6, width: o35 = 240, height: i29 = 44 + r91, marginTop: a27 = 18, marginRight: l35 = 0, marginBottom: s29 = 16 + r91, marginLeft: c30 = 0, style: u30, ticks: f25 = (o35 - c30 - l35) / 64, tickFormat: h35, fontVariant: d25 = Ec2(t33), round: p24 = true, opacity: m27, className: y24 } = n38;
            const g31 = Is5(n38);
            y24 = uc2(y24), m27 = Wo5(m27)[1], null === h35 && (h35 = () => null);
            const v31 = Ws5("svg", g31).attr("class", `${y24}-ramp`).attr("font-family", "system-ui, sans-serif").attr("font-size", 10).attr("width", o35).attr("height", i29).attr("viewBox", `0 0 ${o35} ${i29}`).call((t34) => t34.append("style").text(`:where(.${y24}-ramp) {
  display: block;
  height: auto;
  height: intrinsic;
  max-width: 100%;
  overflow: visible;
}
:where(.${y24}-ramp text) {
  white-space: pre;
}`)).call(fc2, u30);
            let x22, w26 = (t34) => t34.selectAll(".tick line").attr("y1", a27 + s29 - i29);
            const b28 = p24 ? (t34, n39) => t34.rangeRound(n39) : (t34, n39) => t34.range(n39), { type: k24, domain: $26, range: M26, interpolate: L25, scale: A27, pivot: E24 } = t33;
            if (L25) {
              const t34 = void 0 === M26 ? L25 : U12(1 === L25.length ? $l2(L25) : L25, M26);
              x22 = b28(A27.copy(), $11(X11(c30, o35 - l35), Math.min($26.length + (void 0 !== E24), void 0 === M26 ? 1 / 0 : M26.length)));
              const n39 = 256, e28 = g31.document.createElement("canvas");
              e28.width = n39, e28.height = 1;
              const r92 = e28.getContext("2d");
              for (let e29 = 0, o36 = n39 - 1; e29 < n39; ++e29)
                r92.fillStyle = t34(e29 / o36), r92.fillRect(e29, 0, 1, 1);
              v31.append("image").attr("opacity", m27).attr("x", c30).attr("y", a27).attr("width", o35 - c30 - l35).attr("height", i29 - a27 - s29).attr("preserveAspectRatio", "none").attr("xlink:href", e28.toDataURL());
            } else if ("threshold" === k24) {
              const t34 = $26, n39 = void 0 === h35 ? (t35) => t35 : "string" == typeof h35 ? l22(h35) : h35;
              x22 = b28(en8().domain([-1, M26.length - 1]), [c30, o35 - l35]), v31.append("g").attr("fill-opacity", m27).selectAll().data(M26).enter().append("rect").attr("x", (t35, n40) => x22(n40 - 1)).attr("y", a27).attr("width", (t35, n40) => x22(n40) - x22(n40 - 1)).attr("height", i29 - a27 - s29).attr("fill", (t35) => t35), f25 = Do4(t34, (t35, n40) => n40), h35 = (e28) => n39(t34[e28], e28);
            } else
              x22 = b28(j19().domain($26), [c30, o35 - l35]), v31.append("g").attr("fill-opacity", m27).selectAll().data($26).enter().append("rect").attr("x", x22).attr("y", a27).attr("width", Math.max(0, x22.bandwidth() - 1)).attr("height", i29 - a27 - s29).attr("fill", A27), w26 = () => {
              };
            return v31.append("g").attr("transform", `translate(0,${i29 - s29})`).call(h11(x22).ticks(Array.isArray(f25) ? null : f25, "string" == typeof h35 ? h35 : void 0).tickFormat("function" == typeof h35 ? h35 : void 0).tickSize(r91).tickValues(Array.isArray(f25) ? f25 : null)).attr("font-size", null).attr("font-family", null).attr("font-variant", lc2(d25, "normal")).call(w26).call((t34) => t34.select(".domain").remove()), void 0 !== e27 && v31.append("text").attr("x", c30).attr("y", a27 - 6).attr("fill", "currentColor").attr("font-weight", "bold").text(e27), v31.node();
          }(t32, e26);
        default:
          throw new Error(`unknown legend type: ${n37}`);
      }
  }
  function Af2(t32) {
    const { r: n37, g: e26, b: r91 } = k10(t32) || k10(0, 0, 0);
    return (t33) => `rgba(${n37},${e26},${r91},${t33})`;
  }
  var Ef = { ariaLabel: "frame", fill: "none", stroke: "currentColor", clip: false };
  var zf = { ariaLabel: "frame", fill: null, stroke: "currentColor", strokeLinecap: "square", clip: false };
  var Of2 = class extends dc2 {
    constructor(t32 = {}) {
      const { anchor: n37 = null, inset: e26 = 0, insetTop: r91 = e26, insetRight: o35 = e26, insetBottom: i29 = e26, insetLeft: a27 = e26, rx: l35, ry: s29 } = t32;
      super(vo5, void 0, t32, null == n37 ? Ef : zf), this.anchor = jo2(n37, "anchor", ["top", "right", "bottom", "left"]), this.insetTop = Lo5(r91), this.insetRight = Lo5(o35), this.insetBottom = Lo5(i29), this.insetLeft = Lo5(a27), this.rx = Lo5(l35), this.ry = Lo5(s29);
    }
    render(t32, n37, e26, r91, o35) {
      const { marginTop: i29, marginRight: a27, marginBottom: l35, marginLeft: s29, width: c30, height: u30 } = r91, { anchor: f25, insetTop: h35, insetRight: d25, insetBottom: p24, insetLeft: m27, rx: y24, ry: g31 } = this, v31 = s29 + m27, x22 = c30 - a27 - d25, w26 = i29 + h35, b28 = u30 - l35 - p24;
      return Ws5(f25 ? "svg:line" : "svg:rect", o35).datum(0).call(ec2, this, r91, o35).call(rc2, this).call(Ks4, this, e26).call(ac2, this, {}).call("left" === f25 ? (t33) => t33.attr("x1", v31).attr("x2", v31).attr("y1", w26).attr("y2", b28) : "right" === f25 ? (t33) => t33.attr("x1", x22).attr("x2", x22).attr("y1", w26).attr("y2", b28) : "top" === f25 ? (t33) => t33.attr("x1", v31).attr("x2", x22).attr("y1", w26).attr("y2", w26) : "bottom" === f25 ? (t33) => t33.attr("x1", v31).attr("x2", x22).attr("y1", b28).attr("y2", b28) : (t33) => t33.attr("x", v31).attr("y", w26).attr("width", x22 - v31).attr("height", b28 - w26).attr("rx", y24).attr("ry", g31)).node();
    }
  };
  function Sf2(t32) {
    return new Of2(t32);
  }
  var Nf = { ariaLabel: "tip", fill: "var(--plot-background)", stroke: "currentColor" };
  var Cf2 = /* @__PURE__ */ new Set(["geometry", "href", "src", "ariaLabel", "scales"]);
  var Tf = class extends dc2 {
    constructor(t32, n37 = {}) {
      n37.tip && (n37 = { ...n37, tip: false }), void 0 === n37.title && mi5(t32) && yi4(t32) && (n37 = { ...n37, title: bo5 });
      const { x: e26, y: r91, x1: o35, x2: i29, y1: a27, y2: l35, anchor: s29, preferredAnchor: c30 = "bottom", monospace: u30, fontFamily: f25 = u30 ? "ui-monospace, monospace" : void 0, fontSize: h35, fontStyle: d25, fontVariant: p24, fontWeight: m27, lineHeight: y24 = 1, lineWidth: g31 = 20, frameAnchor: v31, format: x22, textAnchor: w26 = "start", textOverflow: b28, textPadding: k24 = 8, title: $26, pointerSize: M26 = 12, pathFilter: L25 = "drop-shadow(0 3px 4px rgba(0,0,0,0.2))" } = n37;
      super(t32, { x: { value: null != o35 && null != i29 ? null : e26, scale: "x", optional: true }, y: { value: null != a27 && null != l35 ? null : r91, scale: "y", optional: true }, x1: { value: o35, scale: "x", optional: null == i29 }, y1: { value: a27, scale: "y", optional: null == l35 }, x2: { value: i29, scale: "x", optional: null == o35 }, y2: { value: l35, scale: "y", optional: null == a27 }, title: { value: $26, optional: true } }, n37, Nf), this.anchor = zi6(s29, "anchor"), this.preferredAnchor = zi6(c30, "preferredAnchor"), this.frameAnchor = Oi6(v31), this.textAnchor = lc2(w26, "middle"), this.textPadding = +k24, this.pointerSize = +M26, this.pathFilter = Mo4(L25), this.lineHeight = +y24, this.lineWidth = +g31, this.textOverflow = su2(b28), this.monospace = !!u30, this.fontFamily = Mo4(f25), this.fontSize = Lo5(h35), this.fontStyle = Mo4(d25), this.fontVariant = Mo4(p24), this.fontWeight = Mo4(m27);
      for (const t33 in Nf)
        t33 in this.channels && (this[t33] = Nf[t33]);
      this.splitLines = xu2(this), this.clipLine = wu2(this), this.format = "string" == typeof x22 || "function" == typeof x22 ? { title: x22 } : { ...x22 };
    }
    render(t32, n37, e26, r91, o35) {
      const i29 = this, { x: a27, y: l35, fx: s29, fy: c30 } = n37, { ownerSVGElement: u30, document: f25 } = o35, { anchor: h35, monospace: d25, lineHeight: p24, lineWidth: m27 } = this, { textPadding: y24, pointerSize: g31, pathFilter: v31 } = this, { marginTop: x22, marginLeft: w26 } = r91, { x1: b28, y1: k24, x2: $26, y2: M26, x: L25 = b28 ?? $26, y: A27 = k24 ?? M26 } = e26, E24 = s29 ? s29(t32.fx) - w26 : 0, z26 = c30 ? c30(t32.fy) - x22 : 0, [O21, S25] = hc2(this, r91), N28 = Lc2(e26, O21), C24 = Ac2(e26, S25), T23 = d25 ? vu2 : gu2, R25 = T23(bu2);
      let I26, W25;
      "title" in e26 ? (I26 = If2.call(this, { title: e26.channels.title }, n37), W25 = jf) : (I26 = If2.call(this, e26.channels, n37), W25 = Bf2);
      const j26 = Ws5("svg:g", o35).call(ec2, this, r91, o35).call(du2, this).call(ac2, this, { x: L25 && a27, y: A27 && l35 }).call((r92) => r92.selectAll().data(t32).enter().append("g").attr("transform", (t33) => `translate(${Math.round(N28(t33))},${Math.round(C24(t33))})`).call(rc2, this).call((t33) => t33.append("path").attr("filter", v31)).call((r93) => r93.append("text").each(function(r94) {
        const o36 = ht7(this);
        this.setAttribute("fill", "currentColor"), this.setAttribute("fill-opacity", 1), this.setAttribute("stroke", "none");
        const a28 = W25.call(i29, r94, t32, I26, n37, e26);
        if ("string" == typeof a28)
          for (const t33 of i29.splitLines(a28))
            B28(o36, { value: i29.clipLine(t33) });
        else {
          const t33 = /* @__PURE__ */ new Set();
          for (const n38 of a28) {
            const { label: e27 = "" } = n38;
            e27 && t33.has(e27) || (t33.add(e27), B28(o36, n38));
          }
        }
      })));
      function B28(t33, { label: n38, value: e27, color: r92, opacity: o36 }) {
        n38 ??= "", e27 ??= "";
        const i30 = null != r92 || null != o36;
        let a28, l36 = 100 * m27;
        const [s30] = ku2(n38, l36, T23, R25);
        if (s30 >= 0)
          n38 = n38.slice(0, s30).trimEnd() + bu2, a28 = e27.trim(), e27 = "";
        else {
          (n38 || !e27 && !i30) && (e27 = " " + e27);
          const [t34] = ku2(e27, l36 - T23(n38), T23, R25);
          t34 >= 0 && (a28 = e27.trim(), e27 = e27.slice(0, t34).trimEnd() + bu2);
        }
        const c31 = t33.append("tspan").attr("x", 0).attr("dy", `${p24}em`).text("\u200B");
        n38 && c31.append("tspan").attr("font-weight", "bold").text(n38), e27 && c31.append(() => f25.createTextNode(e27)), i30 && c31.append("tspan").text(" \u25A0").attr("fill", r92).attr("fill-opacity", o36).style("user-select", "none"), a28 && c31.append("title").text(a28);
      }
      function F26() {
        const { width: t33, height: n38 } = r91.facet ?? r91;
        j26.selectChildren().each(function(e27) {
          let { x: r92, width: o36, height: a28 } = this.getBBox();
          o36 = Math.round(o36), a28 = Math.round(a28);
          let l36 = h35;
          if (void 0 === l36) {
            const r93 = N28(e27) + E24, s31 = C24(e27) + z26, c32 = r93 + o36 + g31 + 2 * y24 < t33, u31 = r93 - o36 - g31 - 2 * y24 > 0, f26 = s31 + a28 + g31 + 2 * y24 < n38, h36 = s31 - a28 - g31 - 2 * y24 > 0;
            l36 = c32 && u31 ? f26 && h36 ? i29.preferredAnchor : h36 ? "bottom" : "top" : f26 && h36 ? c32 ? "left" : "right" : (c32 || u31) && (f26 || h36) ? `${h36 ? "bottom" : "top"}-${c32 ? "left" : "right"}` : i29.preferredAnchor;
          }
          const s30 = this.firstChild, c31 = this.lastChild;
          if (s30.setAttribute("d", function(t34, n39, e28, r93, o37) {
            const i30 = r93 + 2 * e28, a29 = o37 + 2 * e28;
            switch (t34) {
              case "middle":
                return `M${-i30 / 2},${-a29 / 2}h${i30}v${a29}h${-i30}z`;
              case "top-left":
                return `M0,0l${n39},${n39}h${i30 - n39}v${a29}h${-i30}z`;
              case "top":
                return `M0,0l${n39 / 2},${n39 / 2}h${(i30 - n39) / 2}v${a29}h${-i30}v${-a29}h${(i30 - n39) / 2}z`;
              case "top-right":
                return `M0,0l${-n39},${n39}h${n39 - i30}v${a29}h${i30}z`;
              case "right":
                return `M0,0l${-n39 / 2},${-n39 / 2}v${n39 / 2 - a29 / 2}h${-i30}v${a29}h${i30}v${n39 / 2 - a29 / 2}z`;
              case "bottom-left":
                return `M0,0l${n39},${-n39}h${i30 - n39}v${-a29}h${-i30}z`;
              case "bottom":
                return `M0,0l${n39 / 2},${-n39 / 2}h${(i30 - n39) / 2}v${-a29}h${-i30}v${a29}h${(i30 - n39) / 2}z`;
              case "bottom-right":
                return `M0,0l${-n39},${-n39}h${n39 - i30}v${-a29}h${i30}z`;
              case "left":
                return `M0,0l${n39 / 2},${-n39 / 2}v${n39 / 2 - a29 / 2}h${i30}v${a29}h${-i30}v${n39 / 2 - a29 / 2}z`;
            }
          }(l36, g31, y24, o36, a28)), r92)
            for (const t34 of c31.childNodes)
              t34.setAttribute("x", -r92);
          c31.setAttribute("y", +function(t34, n39, e28) {
            return /^top(?:-|$)/.test(t34) ? 0.94 - e28 : -0.29 - n39 * e28;
          }(l36, c31.childNodes.length, p24).toFixed(6) + "em"), c31.setAttribute("transform", `translate(${function(t34, n39, e28, r93, o37) {
            switch (t34) {
              case "middle":
                return [-r93 / 2, o37 / 2];
              case "top-left":
                return [e28, n39 + e28];
              case "top":
                return [-r93 / 2, n39 / 2 + e28];
              case "top-right":
                return [-r93 - e28, n39 + e28];
              case "right":
                return [-n39 / 2 - r93 - e28, o37 / 2];
              case "bottom-left":
                return [e28, -n39 - e28];
              case "bottom":
                return [-r93 / 2, -n39 / 2 - e28];
              case "bottom-right":
                return [-r93 - e28, -n39 - e28];
              case "left":
                return [e28 + n39 / 2, o37 / 2];
            }
          }(l36, g31, y24, o36, a28)})`);
        }), j26.attr("visibility", null);
      }
      return t32.length && (j26.attr("visibility", "hidden"), u30.isConnected ? Promise.resolve().then(F26) : "undefined" != typeof requestAnimationFrame && requestAnimationFrame(F26)), j26.node();
    }
  };
  function Rf2(t32, { x: n37, y: e26, ...r91 } = {}) {
    return void 0 === r91.frameAnchor && ([n37, e26] = Zo5(n37, e26)), new Tf(t32, { ...r91, x: n37, y: e26 });
  }
  function If2(t32, n37) {
    const e26 = {};
    let r91 = this.format;
    r91 = Wf(r91, t32, "x"), r91 = Wf(r91, t32, "y"), this.format = r91;
    for (const n38 in r91) {
      const o35 = r91[n38];
      if (null !== o35 && false !== o35)
        if ("fx" === n38 || "fy" === n38)
          e26[n38] = true;
        else {
          const r92 = Za5(t32, n38);
          r92 && (e26[n38] = r92);
        }
    }
    for (const n38 in t32) {
      if (n38 in e26 || n38 in r91 || Cf2.has(n38))
        continue;
      const o35 = Za5(t32, n38);
      o35 && (e26[n38] = o35);
    }
    this.facet && (n37.fx && !("fx" in r91) && (e26.fx = true), n37.fy && !("fy" in r91) && (e26.fy = true));
    for (const t33 in e26) {
      const r92 = this.format[t33];
      if ("string" == typeof r92) {
        const o35 = e26[t33]?.value ?? n37[t33]?.domain() ?? [];
        this.format[t33] = (vi6(o35) ? m21 : l22)(r92);
      } else if (void 0 === r92 || true === r92) {
        const e27 = n37[t33];
        this.format[t33] = e27?.bandwidth ? uf2(e27, e27.domain()) : Hs4;
      }
    }
    return e26;
  }
  function Wf(t32, n37, e26) {
    if (!(e26 in t32))
      return t32;
    const r91 = `${e26}1`, o35 = `${e26}2`;
    if (!(!(r91 in t32) && r91 in n37 || !(o35 in t32) && o35 in n37))
      return t32;
    const i29 = Object.entries(t32), a27 = t32[e26];
    return i29.splice(i29.findIndex(([t33]) => t33 === e26) + 1, 0, [r91, a27], [o35, a27]), Object.fromEntries(i29);
  }
  function jf(t32, n37, { title: e26 }) {
    return this.format.title(e26.value[t32], t32);
  }
  function* Bf2(t32, n37, e26, r91, o35) {
    for (const i29 in e26) {
      if ("fx" === i29 || "fy" === i29) {
        yield { label: qf(r91, e26, i29), value: this.format[i29](n37[i29], t32) };
        continue;
      }
      if ("x1" === i29 && "x2" in e26)
        continue;
      if ("y1" === i29 && "y2" in e26)
        continue;
      const a27 = e26[i29];
      if ("x2" === i29 && "x1" in e26)
        yield { label: Df2(r91, e26, "x"), value: Ff(this.format.x2, e26.x1, a27, t32) };
      else if ("y2" === i29 && "y1" in e26)
        yield { label: Df2(r91, e26, "y"), value: Ff(this.format.y2, e26.y1, a27, t32) };
      else {
        const n38 = a27.value[t32], l35 = a27.scale;
        if (!Tr6(n38) && null == l35)
          continue;
        yield { label: qf(r91, e26, i29), value: this.format[i29](n38, t32), color: "color" === l35 ? o35[i29][t32] : null, opacity: "opacity" === l35 ? o35[i29][t32] : null };
      }
    }
  }
  function Ff(t32, n37, e26, r91) {
    return e26.hint?.length ? `${t32(e26.value[r91] - n37.value[r91], r91)}` : `${t32(n37.value[r91], r91)}\u2013${t32(e26.value[r91], r91)}`;
  }
  function Df2(t32, n37, e26) {
    const r91 = qf(t32, n37, `${e26}1`, e26), o35 = qf(t32, n37, `${e26}2`, e26);
    return r91 === o35 ? r91 : `${r91}\u2013${o35}`;
  }
  function qf(t32, n37, e26, r91 = e26) {
    const o35 = n37[e26], i29 = t32[o35?.scale ?? e26];
    return String(i29?.label ?? o35?.label ?? r91);
  }
  function _f(t32 = {}) {
    const { facet: n37, style: e26, title: r91, subtitle: o35, caption: i29, ariaLabel: a27, ariaDescription: l35 } = t32, s29 = uc2(t32.className), c30 = void 0 === t32.marks ? [] : Vf(t32.marks);
    c30.push(...function(t33) {
      const n38 = [];
      for (const e27 of t33) {
        let t34 = e27.tip;
        if (t34) {
          true === t34 ? t34 = {} : "string" == typeof t34 && (t34 = { pointer: t34 });
          let { pointer: r92, preferredAnchor: o36 } = t34;
          r92 = /^x$/i.test(r92) ? $c : /^y$/i.test(r92) ? Mc2 : kc2, t34 = r92(Qf(e27, t34)), t34.title = null, void 0 === o36 && (t34.preferredAnchor = r92 === Mc2 ? "left" : "bottom");
          const i30 = Rf2(e27.data, t34);
          i30.facet = e27.facet, i30.facetAnchor = e27.facetAnchor, n38.push(i30);
        }
      }
      return n38;
    }(c30));
    const u30 = function(t33, n38) {
      if (null == t33)
        return;
      const { x: e27, y: r92 } = t33;
      if (null == e27 && null == r92)
        return;
      const o36 = Fo5(t33.data);
      if (null == o36)
        throw new Error("missing facet data");
      const i30 = {};
      null != e27 && (i30.fx = Fa5(o36, { value: e27, scale: "fx" }));
      null != r92 && (i30.fy = Fa5(o36, { value: r92, scale: "fy" }));
      Uf(i30, n38);
      const a28 = cs5(o36, i30);
      return { channels: i30, groups: a28, data: t33.data };
    }(n37, t32), f25 = /* @__PURE__ */ new Map();
    for (const n38 of c30) {
      const e27 = Kf(n38, u30, t32);
      e27 && f25.set(n38, e27);
    }
    const h35 = /* @__PURE__ */ new Map();
    u30 && Zf(h35, [u30], t32), Zf(h35, f25, t32);
    const d25 = Vf(function(t33, n38, e27) {
      let { projection: r92, x: o36 = {}, y: i30 = {}, fx: a28 = {}, fy: l36 = {}, axis: s30, grid: c31, facet: u31 = {}, facet: { axis: f26 = s30, grid: h36 } = u31, x: { axis: d26 = s30, grid: p25 = null === d26 ? null : c31 } = o36, y: { axis: m28 = s30, grid: y25 = null === m28 ? null : c31 } = i30, fx: { axis: g32 = f26, grid: v32 = null === g32 ? null : h36 } = a28, fy: { axis: x23 = f26, grid: w27 = null === x23 ? null : h36 } = l36 } = e27;
      (r92 || !Yo4(o36) && !oh("x", t33)) && (d26 = p25 = null);
      (r92 || !Yo4(i30) && !oh("y", t33)) && (m28 = y25 = null);
      n38.has("fx") || (g32 = v32 = null);
      n38.has("fy") || (x23 = w27 = null);
      void 0 === d26 && (d26 = !rh(t33, "x"));
      void 0 === m28 && (m28 = !rh(t33, "y"));
      void 0 === g32 && (g32 = !rh(t33, "fx"));
      void 0 === x23 && (x23 = !rh(t33, "fy"));
      true === d26 && (d26 = "bottom");
      true === m28 && (m28 = "left");
      true === g32 && (g32 = "top" === d26 || null === d26 ? "bottom" : "top");
      true === x23 && (x23 = "right" === m28 || null === m28 ? "left" : "right");
      const b29 = [];
      return nh(b29, w27, tf2, l36), th(b29, x23, Xu2, "right", "left", u31, l36), nh(b29, v32, ef2, a28), th(b29, g32, Zu2, "top", "bottom", u31, a28), nh(b29, y25, Qu2, i30), th(b29, m28, Uu2, "left", "right", e27, i30), nh(b29, p25, nf2, o36), th(b29, d26, Gu2, "bottom", "top", e27, o36), b29;
    }(c30, h35, t32));
    for (const n38 of d25) {
      const e27 = Kf(n38, u30, t32);
      e27 && f25.set(n38, e27);
    }
    c30.unshift(...d25);
    let p24 = function(t33, n38) {
      const { fx: e27, fy: r92 } = Dl(t33, n38), o36 = e27?.scale.domain(), i30 = r92?.scale.domain();
      return o36 && i30 ? b9(o36, i30).map(([t34, n39], e28) => ({ x: t34, y: n39, i: e28 })) : o36 ? o36.map((t34, n39) => ({ x: t34, i: n39 })) : i30 ? i30.map((t34, n39) => ({ y: t34, i: n39 })) : void 0;
    }(h35, t32);
    if (void 0 !== p24) {
      const t33 = u30 ? bs4(p24, u30) : void 0;
      for (const n39 of c30) {
        if (null === n39.facet || "super" === n39.facet)
          continue;
        const e27 = f25.get(n39);
        void 0 !== e27 && (e27.facetsIndex = null != n39.fx || null != n39.fy ? bs4(p24, e27) : t33);
      }
      const n38 = /* @__PURE__ */ new Set();
      for (const { facetsIndex: t34 } of f25.values())
        t34?.forEach((t35, e27) => {
          t35?.length > 0 && n38.add(e27);
        });
      p24.forEach(0 < n38.size && n38.size < p24.length ? (t34, e27) => t34.empty = !n38.has(e27) : (t34) => t34.empty = false);
      for (const t34 of c30)
        if ("exclude" === t34.facet) {
          const n39 = f25.get(t34);
          void 0 !== n39 && (n39.facetsIndex = us5(n39.facetsIndex));
        }
    }
    for (const n38 of Fi6.keys())
      Yo4(t32[n38]) && "fx" !== n38 && "fy" !== n38 && h35.set(n38, []);
    const m27 = /* @__PURE__ */ new Map();
    for (const n38 of c30) {
      if (m27.has(n38))
        throw new Error("duplicate mark; each mark must be unique");
      const { facetsIndex: e27, channels: r92 } = f25.get(n38) ?? {}, { data: o36, facets: i30, channels: a28 } = n38.initialize(e27, r92, t32);
      Uf(a28, t32), m27.set(n38, { data: o36, facets: i30, channels: a28 });
    }
    const y24 = Dl(Zf(h35, m27, t32), t32), g31 = function(t33, n38, e27 = {}) {
      let r92 = 0.5 - Ys5, o36 = 0.5 + Ys5, i30 = 0.5 + Ys5, a28 = 0.5 - Ys5;
      for (const { marginTop: t34, marginRight: e28, marginBottom: l37, marginLeft: s31 } of n38)
        t34 > r92 && (r92 = t34), e28 > o36 && (o36 = e28), l37 > i30 && (i30 = l37), s31 > a28 && (a28 = s31);
      let { margin: l36, marginTop: s30 = void 0 !== l36 ? l36 : r92, marginRight: c31 = void 0 !== l36 ? l36 : o36, marginBottom: u31 = void 0 !== l36 ? l36 : i30, marginLeft: f26 = void 0 !== l36 ? l36 : a28 } = e27;
      s30 = +s30, c31 = +c31, u31 = +u31, f26 = +f26;
      let { width: h36 = 640, height: d26 = vc2(t33, e27, { width: h36, marginTopDefault: r92, marginRightDefault: o36, marginBottomDefault: i30, marginLeftDefault: a28 }) + Math.max(0, s30 - r92 + u31 - i30) } = e27;
      h36 = +h36, d26 = +d26;
      const p25 = { width: h36, height: d26, marginTop: s30, marginRight: c31, marginBottom: u31, marginLeft: f26 };
      if (t33.fx || t33.fy) {
        let { margin: t34, marginTop: n39 = void 0 !== t34 ? t34 : s30, marginRight: r93 = void 0 !== t34 ? t34 : c31, marginBottom: o37 = void 0 !== t34 ? t34 : u31, marginLeft: i31 = void 0 !== t34 ? t34 : f26 } = e27.facet ?? {};
        n39 = +n39, r93 = +r93, o37 = +o37, i31 = +i31, p25.facet = { marginTop: n39, marginRight: r93, marginBottom: o37, marginLeft: i31 };
      }
      return p25;
    }(y24, c30, t32);
    !function(t33, n38) {
      const { x: e27, y: r92, fx: o36, fy: i30 } = t33, a28 = o36 || i30 ? Vl2(n38) : n38;
      o36 && Yl2(o36, a28), i30 && Ul2(i30, a28);
      const l36 = o36 || i30 ? Hl2(t33, n38) : n38;
      e27 && Yl2(e27, l36), r92 && Ul2(r92, l36);
    }(y24, g31);
    const v31 = ql2(y24), { fx: x22, fy: w26 } = v31, b28 = x22 || w26 ? Hl2(y24, g31) : g31, k24 = x22 || w26 ? function({ fx: t33, fy: n38 }, e27) {
      const { marginTop: r92, marginRight: o36, marginBottom: i30, marginLeft: a28, width: l36, height: s30 } = Vl2(e27), c31 = t33 && ih(t33), u31 = n38 && ih(n38);
      return { marginTop: n38 ? u31[0] : r92, marginRight: t33 ? l36 - c31[1] : o36, marginBottom: n38 ? s30 - u31[1] : i30, marginLeft: t33 ? c31[0] : a28, inset: { marginTop: e27.marginTop, marginRight: e27.marginRight, marginBottom: e27.marginBottom, marginLeft: e27.marginLeft }, width: l36, height: s30 };
    }(v31, g31) : g31, $26 = Is5(t32), M26 = $26.document, L25 = o10("svg").call(M26.documentElement);
    let A27 = L25;
    $26.ownerSVGElement = L25, $26.className = s29, $26.projection = Ls5(t32, b28), $26.filterFacets = (t33, n38) => bs4(p24, { channels: n38, groups: cs5(t33, n38) }), $26.getMarkState = (t33) => {
      const n38 = m27.get(t33), e27 = f25.get(t33);
      return { ...n38, channels: { ...n38.channels, ...e27?.channels } };
    }, $26.dispatchValue = (t33) => {
      A27.value !== t33 && (A27.value = t33, A27.dispatchEvent(new Event("input", { bubbles: true })));
    };
    const E24 = /* @__PURE__ */ new Set();
    for (const [n38, e27] of m27)
      if (null != n38.initializer) {
        const r92 = "super" === n38.facet ? k24 : b28, o36 = n38.initializer(e27.data, e27.facets, e27.channels, v31, r92, $26);
        if (void 0 !== o36.data && (e27.data = o36.data), void 0 !== o36.facets && (e27.facets = o36.facets), void 0 !== o36.channels) {
          const { fx: r93, fy: i30, ...a28 } = o36.channels;
          Gf2(a28), Object.assign(e27.channels, a28);
          for (const n39 of Object.values(a28)) {
            const { scale: e28 } = n39;
            null != e28 && ((z26 = Fi6.get(e28)) !== Ci6 && z26 !== Bi6) && (Xf(n39, t32), E24.add(e28));
          }
          null == r93 && null == i30 || f25.set(n38, true);
        }
      }
    var z26;
    if (E24.size) {
      const n38 = /* @__PURE__ */ new Map();
      Zf(n38, m27, t32, (t33) => E24.has(t33)), Zf(h35, m27, t32, (t33) => E24.has(t33));
      const e27 = function(t33, n39) {
        for (const e28 in t33) {
          const r93 = t33[e28], o37 = n39[e28];
          void 0 === r93.label && o37 && (r93.label = o37.label);
        }
        return t33;
      }(Dl(n38, t32), y24), { scales: r92, ...o36 } = ql2(e27);
      Object.assign(y24, e27), Object.assign(v31, o36), Object.assign(v31.scales, r92);
    }
    let O21, S25;
    void 0 !== p24 && (O21 = { x: x22?.domain(), y: w26?.domain() }, p24 = function(t33, { x: n38, y: e27 }) {
      return n38 &&= ds5(n38), e27 &&= ds5(e27), t33.filter(n38 && e27 ? (t34) => n38.has(t34.x) && e27.has(t34.y) : n38 ? (t34) => n38.has(t34.x) : (t34) => e27.has(t34.y)).sort(n38 && e27 ? (t34, r92) => n38.get(t34.x) - n38.get(r92.x) || e27.get(t34.y) - e27.get(r92.y) : n38 ? (t34, e28) => n38.get(t34.x) - n38.get(e28.x) : (t34, n39) => e27.get(t34.y) - e27.get(n39.y));
    }(p24, O21), S25 = function(t33, n38, { marginTop: e27, marginLeft: r92 }) {
      return t33 && n38 ? ({ x: o36, y: i30 }) => `translate(${t33(o36) - r92},${n38(i30) - e27})` : t33 ? ({ x: n39 }) => `translate(${t33(n39) - r92},0)` : ({ y: t34 }) => `translate(0,${n38(t34) - e27})`;
    }(x22, w26, g31));
    for (const [t33, n38] of m27)
      n38.values = t33.scale(n38.channels, v31, $26);
    const { width: N28, height: C24 } = g31;
    ht7(L25).attr("class", s29).attr("fill", "currentColor").attr("font-family", "system-ui, sans-serif").attr("font-size", 10).attr("text-anchor", "middle").attr("width", N28).attr("height", C24).attr("viewBox", `0 0 ${N28} ${C24}`).attr("aria-label", a27).attr("aria-description", l35).call((t33) => t33.append("style").text(`:where(.${s29}) {
  --plot-background: white;
  display: block;
  height: auto;
  height: intrinsic;
  max-width: 100%;
}
:where(.${s29} text),
:where(.${s29} tspan) {
  white-space: pre;
}`)).call(fc2, e26);
    for (const t33 of c30) {
      const { channels: n38, values: e27, facets: r92 } = m27.get(t33);
      if (void 0 === p24 || "super" === t33.facet) {
        let o36 = null;
        if (r92 && (o36 = r92[0], o36 = t33.filter(o36, n38, e27), 0 === o36.length))
          continue;
        const i30 = t33.render(o36, v31, e27, k24, $26);
        if (null == i30)
          continue;
        L25.appendChild(i30);
      } else {
        let o36;
        for (const i30 of p24) {
          if (!(t33.facetAnchor?.(p24, O21, i30) ?? !i30.empty))
            continue;
          let a28 = null;
          if (r92) {
            const o37 = f25.has(t33);
            if (a28 = r92[o37 ? i30.i : 0], a28 = t33.filter(a28, n38, e27), 0 === a28.length)
              continue;
            o37 || a28 !== r92[0] || (a28 = ni5(a28)), a28.fx = i30.x, a28.fy = i30.y, a28.fi = i30.i;
          }
          const l36 = t33.render(a28, v31, e27, b28, $26);
          if (null != l36) {
            (o36 ??= ht7(L25).append("g")).append(() => l36).datum(i30);
            for (const t34 of ["aria-label", "aria-description", "aria-hidden", "transform"])
              l36.hasAttribute(t34) && (o36.attr(t34, l36.getAttribute(t34)), l36.removeAttribute(t34));
          }
        }
        o36?.selectChildren().attr("transform", S25);
      }
    }
    const T23 = function(t33, n38, e27) {
      const r92 = [];
      for (const [o36, i30] of kf) {
        const a28 = e27[o36];
        if (a28?.legend && o36 in t33) {
          const e28 = i30(t33[o36], Mf2(n38, t33[o36], a28), (n39) => t33[n39]);
          null != e28 && r92.push(e28);
        }
      }
      return r92;
    }(y24, $26, t32), { figure: R25 = null != r91 || null != o35 || null != i29 || T23.length > 0 } = t32;
    R25 && (A27 = M26.createElement("figure"), A27.className = `${s29}-figure`, A27.style.maxWidth = "initial", null != r91 && A27.append(Pf2(M26, r91, "h2")), null != o35 && A27.append(Pf2(M26, o35, "h3")), A27.append(...T23, L25), null != i29 && A27.append(function(t33, n38) {
      const e27 = t33.createElement("figcaption");
      return e27.append(n38), e27;
    }(M26, i29)), "value" in L25 && (A27.value = L25.value, delete L25.value)), A27.scale = /* @__PURE__ */ function(t33) {
      return (n38) => {
        if (!Fi6.has(n38 = `${n38}`))
          throw new Error(`unknown scale: ${n38}`);
        return t33[n38];
      };
    }(v31.scales), A27.legend = /* @__PURE__ */ function(t33, n38, e27 = {}) {
      return (r92, o36) => {
        if (!kf.has(r92))
          throw new Error(`unknown legend type: ${r92}`);
        if (r92 in t33)
          return kf.get(r92)(t33[r92], Mf2(n38, e27[r92], o36), (n39) => t33[n39]);
      };
    }(y24, $26, t32);
    const I26 = function() {
      const t33 = Ll2;
      return Ll2 = 0, Ml2 = void 0, t33;
    }();
    return I26 > 0 && ht7(L25).append("text").attr("x", N28).attr("y", 20).attr("dy", "-1em").attr("text-anchor", "end").attr("font-family", "initial").text("\u26A0\uFE0F").append("title").text(`${I26.toLocaleString("en-US")} warning${1 === I26 ? "" : "s"}. Please check the console.`), A27;
  }
  function Pf2(t32, n37, e26) {
    if (n37.ownerDocument)
      return n37;
    const r91 = t32.createElement(e26);
    return r91.append(n37), r91;
  }
  function Vf(t32) {
    return t32.flat(1 / 0).filter((t33) => null != t33).map(Hf);
  }
  function Hf(t32) {
    return "function" == typeof t32.render ? t32 : new Yf2(t32);
  }
  var Yf2 = class extends dc2 {
    constructor(t32) {
      if ("function" != typeof t32)
        throw new TypeError("invalid mark; missing render function");
      super(), this.render = t32;
    }
    render() {
    }
  };
  function Uf(t32, n37) {
    for (const e26 in t32)
      Xf(t32[e26], n37);
    return t32;
  }
  function Xf(t32, n37) {
    const { scale: e26, transform: r91 = true } = t32;
    if (null == e26 || !r91)
      return;
    const { type: o35, percent: i29, interval: a27, transform: l35 = i29 ? (t33) => null == t33 ? NaN : 100 * t33 : ci6(a27, o35) } = n37[e26] ?? {};
    null != l35 && (t32.value = Do4(t32.value, l35), t32.transform = false);
  }
  function Gf2(t32) {
    for (const n37 in t32)
      _a4(n37, t32[n37]);
  }
  function Zf(t32, n37, e26, r91 = $o4) {
    for (const { channels: o35 } of n37.values())
      for (const n38 in o35) {
        const i29 = o35[n38], { scale: a27 } = i29;
        if (null != a27 && r91(a27))
          if ("projection" === a27) {
            if (!Cs5(e26)) {
              const n39 = void 0 === e26.x?.domain, r92 = void 0 === e26.y?.domain;
              if (n39 || r92) {
                const [e27, o36] = Rs4(i29);
                n39 && Jf(t32, "x", e27), r92 && Jf(t32, "y", o36);
              }
            }
          } else
            Jf(t32, a27, i29);
      }
    return t32;
  }
  function Jf(t32, n37, e26) {
    const r91 = t32.get(n37);
    void 0 !== r91 ? r91.push(e26) : t32.set(n37, [e26]);
  }
  function Kf(t32, n37, e26) {
    if (null === t32.facet || "super" === t32.facet)
      return;
    const { fx: r91, fy: o35 } = t32;
    if (null != r91 || null != o35) {
      const n38 = Fo5(t32.data ?? r91 ?? o35);
      if (void 0 === n38)
        throw new Error(`missing facet data in ${t32.ariaLabel}`);
      if (null === n38)
        return;
      const i30 = {};
      return null != r91 && (i30.fx = Fa5(n38, { value: r91, scale: "fx" })), null != o35 && (i30.fy = Fa5(n38, { value: o35, scale: "fy" })), Uf(i30, e26), { channels: i30, groups: cs5(n38, i30) };
    }
    if (void 0 === n37)
      return;
    const { channels: i29, groups: a27, data: l35 } = n37;
    if ("auto" !== t32.facet || t32.data === l35)
      return { channels: i29, groups: a27 };
    l35.length > 0 && (a27.size > 1 || 1 === a27.size && i29.fx && i29.fy && [...a27][0][1].size > 1) && Fo5(t32.data)?.length === l35.length && Al2(`Warning: the ${t32.ariaLabel} mark appears to use faceted data, but isn\u2019t faceted. The mark data has the same length as the facet data and the mark facet option is "auto", but the mark data and facet data are distinct. If this mark should be faceted, set the mark facet option to true; otherwise, suppress this warning by setting the mark facet option to false.`);
  }
  function Qf(t32, n37 = {}) {
    return Ui5({ ...n37, x: null, y: null }, (n38, e26, r91, o35, i29, a27) => a27.getMarkState(t32));
  }
  function th(t32, n37, e26, r91, o35, i29, a27) {
    if (!n37)
      return;
    const l35 = /^\s*both\s*$/i.test(n37);
    a27 = function(t33, n38, { line: e27 = n38.line, ticks: r92, tickSize: o36, tickSpacing: i30, tickPadding: a28, tickFormat: l36, tickRotate: s30, fontVariant: c30, ariaLabel: u30, ariaDescription: f25, label: h35 = n38.label, labelAnchor: d25, labelArrow: p24 = n38.labelArrow, labelOffset: m27 }) {
      return { anchor: t33, line: e27, ticks: r92, tickSize: o36, tickSpacing: i30, tickPadding: a28, tickFormat: l36, tickRotate: s30, fontVariant: c30, ariaLabel: u30, ariaDescription: f25, label: h35, labelAnchor: d25, labelArrow: p24, labelOffset: m27 };
    }(l35 ? r91 : n37, i29, a27);
    const { line: s29 } = a27;
    e26 !== Uu2 && e26 !== Gu2 || !s29 || Ei6(s29) || t32.push(Sf2(function(t33) {
      const { anchor: n38, line: e27 } = t33;
      return { anchor: n38, facetAnchor: n38 + "-empty", stroke: true === e27 ? void 0 : e27 };
    }(a27))), t32.push(e26(a27)), l35 && t32.push(e26({ ...a27, anchor: o35, label: null }));
  }
  function nh(t32, n37, e26, r91) {
    n37 && !Ei6(n37) && t32.push(e26(function(t33, { stroke: n38 = Mi6(t33) ? t33 : void 0, ticks: e27 = eh(t33) ? t33 : void 0, tickSpacing: r92, ariaLabel: o35, ariaDescription: i29 }) {
      return { stroke: n38, ticks: e27, tickSpacing: r92, ariaLabel: o35, ariaDescription: i29 };
    }(n37, r91)));
  }
  function eh(t32) {
    switch (typeof t32) {
      case "number":
        return true;
      case "string":
        return !Mi6(t32);
    }
    return mi5(t32) || "function" == typeof t32?.range;
  }
  function rh(t32, n37) {
    const e26 = `${n37}-axis `;
    return t32.some((t33) => t33.ariaLabel?.startsWith(e26));
  }
  function oh(t32, n37) {
    for (const e26 of n37)
      for (const n38 in e26.channels) {
        const { scale: r91 } = e26.channels[n38];
        if (r91 === t32 || "projection" === r91)
          return true;
      }
    return false;
  }
  function ih(t32) {
    const n37 = t32.domain();
    let e26 = t32(n37[0]), r91 = t32(n37[n37.length - 1]);
    return r91 < e26 && ([e26, r91] = [r91, e26]), [e26, r91 + t32.bandwidth()];
  }
  var ah = /* @__PURE__ */ new Map([["basis", At8], ["basis-closed", Pt7], ["basis-open", Ot7], ["bundle", zt7], ["bump-x", L18], ["bump-y", W18], ["cardinal", Bt6], ["cardinal-closed", Dt8], ["cardinal-open", jt7], ["catmull-rom", Vt8], ["catmull-rom-closed", Ft7], ["catmull-rom-open", Ht7], ["linear", N19], ["linear-closed", Kt8], ["monotone-x", on10], ["monotone-y", hn8], ["natural", an10], ["step", cn9], ["step-after", fn8], ["step-before", un10]]);
  function lh(t32 = N19, n37) {
    if ("function" == typeof t32)
      return t32;
    const e26 = ah.get(`${t32}`.toLowerCase());
    if (!e26)
      throw new Error(`unknown curve: ${t32}`);
    if (void 0 !== n37) {
      if ("beta" in e26)
        return e26.beta(n37);
      if ("tension" in e26)
        return e26.tension(n37);
      if ("alpha" in e26)
        return e26.alpha(n37);
    }
    return e26;
  }
  function sh(t32 = ch, n37) {
    return "function" != typeof t32 && "auto" === `${t32}`.toLowerCase() ? ch : lh(t32, n37);
  }
  function ch(t32) {
    return N19(t32);
  }
  function uh(t32 = { y: "count" }, n37 = {}) {
    [t32, n37] = gh(t32, n37);
    const { x: e26, y: r91 } = n37;
    return yh(vh(e26, n37, bo5), null, null, r91, t32, Dc2(n37));
  }
  function fh(t32 = { x: "count" }, n37 = {}) {
    [t32, n37] = gh(t32, n37);
    const { x: e26, y: r91 } = n37;
    return yh(null, vh(r91, n37, bo5), e26, null, t32, qc2(n37));
  }
  function hh(t32 = { fill: "count" }, n37 = {}) {
    [t32, n37] = gh(t32, n37);
    const { x: e26, y: r91 } = function(t33) {
      let { x: n38, y: e27 } = t33;
      return n38 = vh(n38, t33), e27 = vh(e27, t33), [n38.value, e27.value] = Zo5(n38.value, e27.value), { x: n38, y: e27 };
    }(n37);
    return yh(e26, r91, null, null, t32, Dc2(qc2(n37)));
  }
  function dh(t32, n37, e26 = {}) {
    if (null == e26?.interval)
      return e26;
    const { reduce: r91 = za5 } = e26, o35 = { filter: null };
    return null != e26[n37] && (o35[n37] = r91), null != e26[`${n37}1`] && (o35[`${n37}1`] = r91), null != e26[`${n37}2`] && (o35[`${n37}2`] = r91), t32(o35, e26);
  }
  function ph(t32 = {}) {
    return dh(uh, "y", gc2(t32, "x"));
  }
  function mh(t32 = {}) {
    return dh(fh, "x", gc2(t32, "y"));
  }
  function yh(t32, n37, e26, r91, { data: o35 = Ea5, filter: i29 = Na5, sort: a27, reverse: l35, ...s29 } = {}, c30 = {}) {
    t32 = xh(t32), n37 = xh(n37), s29 = function(t33, n38) {
      return ha4(t33, n38, bh);
    }(s29, c30), o35 = $h(o35, bo5), a27 = null == a27 ? void 0 : bh("sort", a27, c30), i29 = null == i29 ? void 0 : kh("filter", i29, c30), null != e26 && fa4(s29, "x", "x1", "x2") && (e26 = null), null != r91 && fa4(s29, "y", "y1", "y2") && (r91 = null);
    const [u30, f25] = ii6(t32), [h35, d25] = ii6(t32), [p24, m27] = ii6(n37), [y24, g31] = ii6(n37), [v31, x22] = null != e26 ? [e26, "x"] : null != r91 ? [r91, "y"] : [], [w26, b28] = ii6(v31), { x: k24, y: $26, z: M26, fill: L25, stroke: A27, x1: E24, x2: z26, y1: O21, y2: S25, domain: N28, cumulative: C24, thresholds: T23, interval: R25, ...I26 } = c30, [W25, j26] = ii6(M26), [B28] = Io5(L25), [F26] = Io5(A27), [D24, q25] = ii6(B28), [_24, P25] = ii6(F26);
    return { ..."z" in c30 && { z: W25 || M26 }, ..."fill" in c30 && { fill: D24 || L25 }, ..."stroke" in c30 && { stroke: _24 || A27 }, ...Yi5(I26, (e27, r92, c31) => {
      const u31 = si6(mo5(e27, v31), c31?.[x22]), h36 = mo5(e27, M26), p25 = mo5(e27, B28), y25 = mo5(e27, F26), w27 = $a5(s29, { z: h36, fill: p25, stroke: y25 }), k25 = [], $27 = [], L26 = u31 && b28([]), A28 = h36 && j26([]), E25 = p25 && q25([]), z27 = y25 && P25([]), O22 = t32 && f25([]), S26 = t32 && d25([]), N29 = n37 && m27([]), C25 = n37 && g31([]), T24 = function(t33, n38, e28) {
        const r93 = t33?.(e28), o36 = n38?.(e28);
        return r93 && o36 ? function* (t34) {
          const n39 = r93.bin(t34);
          for (const [t35, [i30, a28]] of r93.entries()) {
            const r94 = o36.bin(n39[t35]);
            for (const [t36, [n40, l36]] of o36.entries())
              yield [r94[t36], { data: e28, x1: i30, y1: n40, x2: a28, y2: l36 }];
          }
        } : r93 ? function* (t34) {
          const n39 = r93.bin(t34);
          for (const [t35, [o37, i30]] of r93.entries())
            yield [n39[t35], { data: e28, x1: o37, x2: i30 }];
        } : function* (t34) {
          const n39 = o36.bin(t34);
          for (const [t35, [r94, i30]] of o36.entries())
            yield [n39[t35], { data: e28, y1: r94, y2: i30 }];
        };
      }(t32, n37, e27);
      let R26 = 0;
      for (const t33 of s29)
        t33.initialize(e27);
      a27 && a27.initialize(e27), i29 && i29.initialize(e27);
      for (const t33 of r92) {
        const n38 = [];
        for (const n39 of s29)
          n39.scope("facet", t33);
        a27 && a27.scope("facet", t33), i29 && i29.scope("facet", t33);
        for (const [r93, l36] of ma4(t33, w27))
          for (const [t34, c32] of ma4(l36, u31))
            for (const [l37, f26] of T24(c32))
              if (w27 && (f26.z = r93), !i29 || i29.reduce(l37, f26)) {
                n38.push(R26++), $27.push(o35.reduceIndex(l37, e27, f26)), u31 && L26.push(t34), h36 && A28.push(w27 === h36 ? r93 : h36[(l37.length > 0 ? l37 : c32)[0]]), p25 && E25.push(w27 === p25 ? r93 : p25[(l37.length > 0 ? l37 : c32)[0]]), y25 && z27.push(w27 === y25 ? r93 : y25[(l37.length > 0 ? l37 : c32)[0]]), O22 && (O22.push(f26.x1), S26.push(f26.x2)), N29 && (N29.push(f26.y1), C25.push(f26.y2));
                for (const t35 of s29)
                  t35.reduce(l37, f26);
                a27 && a27.reduce(l37, f26);
              }
        k25.push(n38);
      }
      return Ma5(k25, a27, l35), { data: $27, facets: k25 };
    }), ...!fa4(s29, "x") && (u30 ? { x1: u30, x2: h35, x: li5(u30, h35) } : { x: k24, x1: E24, x2: z26 }), ...!fa4(s29, "y") && (p24 ? { y1: p24, y2: y24, y: li5(p24, y24) } : { y: $26, y1: O21, y2: S25 }), ...w26 && { [x22]: w26 }, ...Object.fromEntries(s29.map(({ name: t33, output: n38 }) => [t33, n38])) };
  }
  function gh({ cumulative: t32, domain: n37, thresholds: e26, interval: r91, ...o35 }, i29) {
    return [o35, { cumulative: t32, domain: n37, thresholds: e26, interval: r91, ...i29 }];
  }
  function vh(t32, { cumulative: n37, domain: e26, thresholds: r91, interval: o35 }, i29) {
    return void 0 === (t32 = { ...pi5(t32) }).domain && (t32.domain = e26), void 0 === t32.cumulative && (t32.cumulative = n37), void 0 === t32.thresholds && (t32.thresholds = r91), void 0 === t32.interval && (t32.interval = o35), void 0 === t32.value && (t32.value = i29), t32.thresholds = wh(t32.thresholds, t32.interval), t32;
  }
  function xh(t32) {
    if (null == t32)
      return;
    const { value: n37, cumulative: e26, domain: r91 = T8, thresholds: o35 } = t32, i29 = (t33) => {
      let i30, a27 = mo5(t33, n37);
      if (vi6(a27) || (function(t34) {
        return di6(t34) && "function" == typeof t34?.floor && t34.floor() instanceof Date;
      }(l35 = o35) || mi5(l35) && vi6(l35))) {
        a27 = Do4(a27, Ro5, Float64Array);
        let [t34, n38] = "function" == typeof r91 ? r91(a27) : r91, e27 = "function" != typeof o35 || di6(o35) ? o35 : o35(a27, t34, n38);
        "number" == typeof e27 && (e27 = Me6(t34, n38, e27)), di6(e27) && (r91 === T8 && (t34 = e27.floor(t34), n38 = e27.offset(e27.floor(n38))), e27 = e27.range(t34, e27.offset(n38))), i30 = e27;
      } else {
        a27 = No5(a27);
        let [t34, n38] = "function" == typeof r91 ? r91(a27) : r91, e27 = "function" != typeof o35 || di6(o35) ? o35 : o35(a27, t34, n38);
        if ("number" == typeof e27)
          if (r91 === T8) {
            let r92 = tt6(t34, n38, e27);
            if (isFinite(r92))
              if (r92 > 0) {
                let o36 = Math.round(t34 / r92), i31 = Math.round(n38 / r92);
                o36 * r92 <= t34 || --o36, i31 * r92 > n38 || ++i31;
                let a28 = i31 - o36 + 1;
                e27 = new Float64Array(a28);
                for (let t35 = 0; t35 < a28; ++t35)
                  e27[t35] = (o36 + t35) * r92;
              } else if (r92 < 0) {
                r92 = -r92;
                let o36 = Math.round(t34 * r92), i31 = Math.round(n38 * r92);
                o36 / r92 <= t34 || --o36, i31 / r92 > n38 || ++i31;
                let a28 = i31 - o36 + 1;
                e27 = new Float64Array(a28);
                for (let t35 = 0; t35 < a28; ++t35)
                  e27[t35] = (o36 + t35) / r92;
              } else
                e27 = [t34];
            else
              e27 = [t34];
          } else
            e27 = $8(t34, n38, e27);
        else
          di6(e27) && (r91 === T8 && (t34 = e27.floor(t34), n38 = e27.offset(e27.floor(n38))), e27 = e27.range(t34, e27.offset(n38)));
        i30 = e27;
      }
      var l35;
      const s29 = [];
      if (1 === i30.length)
        s29.push([i30[0], i30[0]]);
      else
        for (let t34 = 1; t34 < i30.length; ++t34)
          s29.push([i30[t34 - 1], i30[t34]]);
      return s29.bin = (e26 < 0 ? zh : e26 > 0 ? Eh : Ah)(s29, i30, a27), s29;
    };
    return i29.label = ai5(n37), i29;
  }
  function wh(t32, n37, e26 = Lh) {
    if (void 0 === t32)
      return void 0 === n37 ? e26 : hi6(n37);
    if ("string" == typeof t32) {
      switch (t32.toLowerCase()) {
        case "freedman-diaconis":
          return pt6;
        case "scott":
          return mt6;
        case "sturges":
          return ot6;
        case "auto":
          return Lh;
      }
      return io5(t32);
    }
    return t32;
  }
  function bh(t32, n37, e26) {
    return da4(t32, n37, e26, kh);
  }
  function kh(t32, n37, e26) {
    return pa4(t32, n37, e26, $h);
  }
  function $h(t32, n37) {
    return ya4(t32, n37, Mh);
  }
  function Mh(t32) {
    switch (`${t32}`.toLowerCase()) {
      case "x":
        return Sh;
      case "x1":
        return Ch;
      case "x2":
        return Th;
      case "y":
        return Nh;
      case "y1":
        return Rh;
      case "y2":
        return Ih;
      case "z":
        return ja5;
    }
    throw new Error(`invalid bin reduce: ${t32}`);
  }
  function Lh(t32, n37, e26) {
    return Math.min(200, mt6(t32, n37, e26));
  }
  function Ah(t32, n37, e26) {
    return n37 = No5(n37), (r91) => {
      const o35 = t32.map(() => []);
      for (const t33 of r91)
        o35[l9(n37, e26[t33]) - 1]?.push(t33);
      return o35;
    };
  }
  function Eh(t32, n37, e26) {
    const r91 = Ah(t32, n37, e26);
    return (t33) => {
      const n38 = r91(t33);
      for (let t34 = 1, e27 = n38.length; t34 < e27; ++t34) {
        const e28 = n38[t34 - 1], r92 = n38[t34];
        for (const t35 of e28)
          r92.push(t35);
      }
      return n38;
    };
  }
  function zh(t32, n37, e26) {
    const r91 = Ah(t32, n37, e26);
    return (t33) => {
      const n38 = r91(t33);
      for (let t34 = n38.length - 2; t34 >= 0; --t34) {
        const e27 = n38[t34 + 1], r92 = n38[t34];
        for (const t35 of e27)
          r92.push(t35);
      }
      return n38;
    };
  }
  function Oh(t32, n37) {
    const e26 = (+t32 + +n37) / 2;
    return t32 instanceof Date ? new Date(e26) : e26;
  }
  var Sh = { reduceIndex: (t32, n37, { x1: e26, x2: r91 }) => Oh(e26, r91) };
  var Nh = { reduceIndex: (t32, n37, { y1: e26, y2: r91 }) => Oh(e26, r91) };
  var Ch = { reduceIndex: (t32, n37, { x1: e26 }) => e26 };
  var Th = { reduceIndex: (t32, n37, { x2: e26 }) => e26 };
  var Rh = { reduceIndex: (t32, n37, { y1: e26 }) => e26 };
  var Ih = { reduceIndex: (t32, n37, { y2: e26 }) => e26 };
  function Wh(t32 = {}) {
    return _o5(t32) ? t32 : { ...t32, x: bo5 };
  }
  function jh(t32 = {}) {
    return Po3(t32) ? t32 : { ...t32, y: bo5 };
  }
  function Bh(t32 = {}, n37 = {}) {
    1 === arguments.length && ([t32, n37] = Yh(t32));
    const { y1: e26, y: r91 = e26, x: o35, ...i29 } = n37, [a27, l35, s29, c30] = Xh(r91, o35, "y", "x", t32, i29);
    return { ...a27, y1: e26, y: l35, x1: s29, x2: c30, x: li5(s29, c30) };
  }
  function qh(t32 = {}, n37 = {}) {
    1 === arguments.length && ([t32, n37] = Yh(t32));
    const { x1: e26, x: r91 = e26, y: o35, ...i29 } = n37, [a27, l35, s29, c30] = Xh(r91, o35, "x", "y", t32, i29);
    return { ...a27, x1: e26, x: l35, y1: s29, y2: c30, y: li5(s29, c30) };
  }
  function Vh({ x: t32, x1: n37, x2: e26, ...r91 } = {}) {
    return r91 = gc2(r91, "y"), void 0 === n37 && void 0 === e26 ? Bh({ x: t32, ...r91 }) : ([n37, e26] = Go5(t32, n37, e26), { ...r91, x1: n37, x2: e26 });
  }
  function Hh({ y: t32, y1: n37, y2: e26, ...r91 } = {}) {
    return r91 = gc2(r91, "x"), void 0 === n37 && void 0 === e26 ? qh({ y: t32, ...r91 }) : ([n37, e26] = Go5(t32, n37, e26), { ...r91, y1: n37, y2: e26 });
  }
  function Yh(t32) {
    const { offset: n37, order: e26, reverse: r91, ...o35 } = t32;
    return [{ offset: n37, order: e26, reverse: r91 }, o35];
  }
  var Uh = { length: true };
  function Xh(t32, n37 = ko4, e26, r91, { offset: o35, order: i29, reverse: a27 }, l35) {
    if (null === n37)
      throw new Error(`stack requires ${r91}`);
    const s29 = Jo5(l35), [c30, u30] = ii6(t32), [f25, h35] = oi5(n37), [d25, p24] = oi5(n37);
    return f25.hint = d25.hint = Uh, o35 = function(t33) {
      if (null == t33)
        return;
      if ("function" == typeof t33)
        return t33;
      switch (`${t33}`.toLowerCase()) {
        case "expand":
        case "normalize":
          return Zh;
        case "center":
        case "silhouette":
          return Jh;
        case "wiggle":
          return Kh;
      }
      throw new Error(`unknown offset: ${t33}`);
    }(o35), i29 = function(t33, n38, e27) {
      if (void 0 === t33 && n38 === Kh)
        return nd2(Rr5);
      if (null == t33)
        return;
      if ("string" == typeof t33) {
        const n39 = t33.startsWith("-"), r93 = n39 ? Ir6 : Rr5;
        switch ((n39 ? t33.slice(1) : t33).toLowerCase()) {
          case "value":
          case e27:
            return /* @__PURE__ */ function(t34) {
              return (n40, e28, r94) => (n41, e29) => t34(r94[n41], r94[e29]);
            }(r93);
          case "z":
            return /* @__PURE__ */ function(t34) {
              return (n40, e28, r94, o36) => (n41, e29) => t34(o36[n41], o36[e29]);
            }(r93);
          case "sum":
            return function(t34) {
              return od2(t34, (t35, n40, e28, r94) => P8(Ko3(t35), (t36) => jt6(t36, (t37) => e28[t37]), (t36) => r94[t36]));
            }(r93);
          case "appearance":
            return function(t34) {
              return od2(t34, (t35, n40, e28, r94) => P8(Ko3(t35), (t36) => n40[st6(t36, (t37) => e28[t37])], (t36) => r94[t36]));
            }(r93);
          case "inside-out":
            return nd2(r93);
        }
        return ed2(xo5(t33));
      }
      if ("function" == typeof t33)
        return (1 === t33.length ? ed2 : rd)(t33);
      if (Array.isArray(t33))
        return r92 = t33, od2(Rr5, () => r92);
      var r92;
      throw new Error(`invalid order: ${t33}`);
    }(i29, o35, r91), [Yi5(l35, (r92, l36, c31) => {
      ({ data: r92, facets: l36 } = function(t33, n38) {
        if (1 === n38.length)
          return { data: t33, facets: n38 };
        const e27 = t33.length, r93 = new Uint8Array(e27);
        let o36 = 0;
        for (const t34 of n38)
          for (const n39 of t34)
            r93[n39] && ++o36, r93[n39] = 1;
        if (0 === o36)
          return { data: t33, facets: n38 };
        const i30 = (t33 = qo5(t33))[po5] = new Uint32Array(e27 + o36);
        n38 = n38.map((t34) => qo5(t34, Uint32Array));
        let a28 = e27;
        r93.fill(0);
        for (const e28 of n38)
          for (let n39 = 0, o37 = e28.length; n39 < o37; ++n39) {
            const o38 = e28[n39];
            r93[o38] ? (e28[n39] = a28, t33[a28] = t33[o38], i30[a28] = o38, ++a28) : i30[o38] = o38, r93[o38] = 1;
          }
        return { data: t33, facets: n38 };
      }(r92, l36));
      const f26 = null == t32 ? void 0 : u30(si6(mo5(r92, t32), c31?.[e26])), d26 = mo5(r92, n37, Float64Array), m27 = mo5(r92, s29), y24 = i29 && i29(r92, f26, d26, m27), g31 = r92.length, v31 = h35(new Float64Array(g31)), x22 = p24(new Float64Array(g31)), w26 = [];
      for (const t33 of l36) {
        const n38 = f26 ? Array.from(q8(t33, (t34) => f26[t34]).values()) : [t33];
        if (y24)
          for (const t34 of n38)
            t34.sort(y24);
        for (const t34 of n38) {
          let n39 = 0, e27 = 0;
          a27 && t34.reverse();
          for (const r93 of t34) {
            const t35 = d26[r93];
            t35 < 0 ? n39 = x22[r93] = (v31[r93] = n39) + t35 : t35 > 0 ? e27 = x22[r93] = (v31[r93] = e27) + t35 : x22[r93] = v31[r93] = e27;
          }
        }
        w26.push(n38);
      }
      return o35 && o35(w26, v31, x22, m27), { data: r92, facets: l36 };
    }), c30, f25, d25];
  }
  function Gh(t32, n37) {
    let e26 = 0, r91 = 0;
    for (const o35 of t32) {
      const t33 = n37[o35];
      t33 < e26 && (e26 = t33), t33 > r91 && (r91 = t33);
    }
    return [e26, r91];
  }
  function Zh(t32, n37, e26) {
    for (const r91 of t32)
      for (const t33 of r91) {
        const [r92, o35] = Gh(t33, e26);
        for (const i29 of t33) {
          const t34 = 1 / (o35 - r92 || 1);
          n37[i29] = t34 * (n37[i29] - r92), e26[i29] = t34 * (e26[i29] - r92);
        }
      }
  }
  function Jh(t32, n37, e26) {
    for (const r91 of t32) {
      for (const t33 of r91) {
        const [r92, o35] = Gh(t33, e26);
        for (const i29 of t33) {
          const t34 = (o35 + r92) / 2;
          n37[i29] -= t34, e26[i29] -= t34;
        }
      }
      Qh(r91, n37, e26);
    }
    td2(t32, n37, e26);
  }
  function Kh(t32, n37, e26, r91) {
    for (const o35 of t32) {
      const t33 = new e3();
      let i29 = 0;
      for (const a27 of o35) {
        let o36 = -1;
        const l35 = a27.map((t34) => Math.abs(e26[t34] - n37[t34])), s29 = a27.map((i30) => {
          o36 = r91 ? r91[i30] : ++o36;
          const a28 = e26[i30] - n37[i30], l36 = t33.has(o36) ? a28 - t33.get(o36) : 0;
          return t33.set(o36, a28), l36;
        }), c30 = [0, ...x7(s29)];
        for (const t34 of a27)
          n37[t34] += i29, e26[t34] += i29;
        const u30 = jt6(l35);
        u30 && (i29 -= jt6(l35, (t34, n38) => (s29[n38] / 2 + c30[n38]) * t34) / u30);
      }
      Qh(o35, n37, e26);
    }
    td2(t32, n37, e26);
  }
  function Qh(t32, n37, e26) {
    const r91 = ut6(t32, (t33) => ut6(t33, (t34) => n37[t34]));
    for (const o35 of t32)
      for (const t33 of o35)
        n37[t33] -= r91, e26[t33] -= r91;
  }
  function td2(t32, n37, e26) {
    const r91 = t32.length;
    if (1 === r91)
      return;
    const o35 = t32.map((t33) => t33.flat()), i29 = o35.map((t33) => (ut6(t33, (t34) => n37[t34]) + ft6(t33, (t34) => e26[t34])) / 2), a27 = ut6(i29);
    for (let t33 = 0; t33 < r91; t33++) {
      const r92 = a27 - i29[t33];
      for (const i30 of o35[t33])
        n37[i30] += r92, e26[i30] += r92;
    }
  }
  function nd2(t32) {
    return od2(t32, (t33, n37, e26, r91) => {
      const o35 = Ko3(t33), i29 = P8(o35, (t34) => n37[st6(t34, (t35) => e26[t35])], (t34) => r91[t34]), a27 = I10(o35, (t34) => jt6(t34, (t35) => e26[t35]), (t34) => r91[t34]), l35 = [], s29 = [];
      let c30 = 0;
      for (const t34 of i29)
        c30 < 0 ? (c30 += a27.get(t34), l35.push(t34)) : (c30 -= a27.get(t34), s29.push(t34));
      return s29.reverse().concat(l35);
    });
  }
  function ed2(t32) {
    return (n37) => {
      const e26 = mo5(n37, t32);
      return (t33, n38) => Rr5(e26[t33], e26[n38]);
    };
  }
  function rd(t32) {
    return (n37) => (e26, r91) => t32(n37[e26], n37[r91]);
  }
  function od2(t32, n37) {
    return (e26, r91, o35, i29) => {
      if (!i29)
        throw new Error("missing channel: z");
      const a27 = new e3(n37(e26, r91, o35, i29).map((t33, n38) => [t33, n38]));
      return (n38, e27) => t32(a27.get(i29[n38]), a27.get(i29[e27]));
    };
  }
  var id2 = { ariaLabel: "area", strokeWidth: 1, strokeLinecap: "round", strokeLinejoin: "round", strokeMiterlimit: 1 };
  var ad2 = class extends dc2 {
    constructor(t32, n37 = {}) {
      const { x1: e26, y1: r91, x2: o35, y2: i29, z: a27, curve: l35, tension: s29 } = n37;
      super(t32, { x1: { value: e26, scale: "x" }, y1: { value: r91, scale: "y" }, x2: { value: o35, scale: "x", optional: true }, y2: { value: i29, scale: "y", optional: true }, z: { value: Jo5(n37), optional: true } }, n37, id2), this.z = a27, this.curve = lh(l35, s29);
    }
    filter(t32) {
      return t32;
    }
    render(t32, n37, e26, r91, o35) {
      const { x1: i29, y1: a27, x2: l35 = i29, y2: s29 = a27 } = e26;
      return Ws5("svg:g", o35).call(ec2, this, r91, o35).call(ac2, this, n37, 0, 0).call((n38) => n38.selectAll().data(nc2(t32, [i29, a27, l35, s29], this, e26)).enter().append("path").call(rc2, this).call(Qs4, this, e26).attr("d", M20().curve(this.curve).defined((t33) => t33 >= 0).x0((t33) => i29[t33]).y0((t33) => a27[t33]).x1((t33) => l35[t33]).y1((t33) => s29[t33]))).node();
    }
  };
  function sd2(t32, n37) {
    const { y: e26 = wo5, ...r91 } = mh(n37);
    return new ad2(t32, Vh(Wh({ ...r91, y1: e26, y2: void 0 })));
  }
  function cd2(t32, n37) {
    const { x: e26 = wo5, ...r91 } = ph(n37);
    return new ad2(t32, Hh(jh({ ...r91, x1: e26, x2: void 0 })));
  }
  var vd2 = class extends dc2 {
    constructor(t32, n37, e26 = {}, r91) {
      super(t32, n37, e26, r91);
      const { inset: o35 = 0, insetTop: i29 = o35, insetRight: a27 = o35, insetBottom: l35 = o35, insetLeft: s29 = o35, rx: c30, ry: u30 } = e26;
      this.insetTop = Lo5(i29), this.insetRight = Lo5(a27), this.insetBottom = Lo5(l35), this.insetLeft = Lo5(s29), this.rx = lc2(c30, "auto"), this.ry = lc2(u30, "auto");
    }
    render(t32, n37, e26, r91, o35) {
      const { rx: i29, ry: a27 } = this;
      return Ws5("svg:g", o35).call(ec2, this, r91, o35).call(this._transform, this, n37).call((o36) => o36.selectAll().data(t32).enter().append("rect").call(rc2, this).attr("x", this._x(n37, e26, r91)).attr("width", this._width(n37, e26, r91)).attr("y", this._y(n37, e26, r91)).attr("height", this._height(n37, e26, r91)).call(ic2, "rx", i29).call(ic2, "ry", a27).call(Ks4, this, e26)).node();
    }
    _x(t32, { x: n37 }, { marginLeft: e26 }) {
      const { insetLeft: r91 } = this;
      return n37 ? (t33) => n37[t33] + r91 : e26 + r91;
    }
    _y(t32, { y: n37 }, { marginTop: e26 }) {
      const { insetTop: r91 } = this;
      return n37 ? (t33) => n37[t33] + r91 : e26 + r91;
    }
    _width({ x: t32 }, { x: n37 }, { marginRight: e26, marginLeft: r91, width: o35 }) {
      const { insetLeft: i29, insetRight: a27 } = this, l35 = n37 && t32 ? t32.bandwidth() : o35 - e26 - r91;
      return Math.max(0, l35 - i29 - a27);
    }
    _height({ y: t32 }, { y: n37 }, { marginTop: e26, marginBottom: r91, height: o35 }) {
      const { insetTop: i29, insetBottom: a27 } = this, l35 = n37 && t32 ? t32.bandwidth() : o35 - e26 - r91;
      return Math.max(0, l35 - i29 - a27);
    }
  };
  var xd2 = { ariaLabel: "bar" };
  var wd2 = class extends vd2 {
    constructor(t32, n37 = {}) {
      const { x1: e26, x2: r91, y: o35 } = n37;
      super(t32, { x1: { value: e26, scale: "x" }, x2: { value: r91, scale: "x" }, y: { value: o35, scale: "y", type: "band", optional: true } }, n37, xd2);
    }
    _transform(t32, n37, { x: e26 }) {
      t32.call(ac2, n37, { x: e26 }, 0, 0);
    }
    _x({ x: t32 }, { x1: n37, x2: e26 }, { marginLeft: r91 }) {
      const { insetLeft: o35 } = this;
      return os5(t32) ? r91 + o35 : (t33) => Math.min(n37[t33], e26[t33]) + o35;
    }
    _width({ x: t32 }, { x1: n37, x2: e26 }, { marginRight: r91, marginLeft: o35, width: i29 }) {
      const { insetLeft: a27, insetRight: l35 } = this;
      return os5(t32) ? i29 - r91 - o35 - a27 - l35 : (t33) => Math.max(0, Math.abs(e26[t33] - n37[t33]) - a27 - l35);
    }
  };
  var bd2 = class extends vd2 {
    constructor(t32, n37 = {}) {
      const { x: e26, y1: r91, y2: o35 } = n37;
      super(t32, { y1: { value: r91, scale: "y" }, y2: { value: o35, scale: "y" }, x: { value: e26, scale: "x", type: "band", optional: true } }, n37, xd2);
    }
    _transform(t32, n37, { y: e26 }) {
      t32.call(ac2, n37, { y: e26 }, 0, 0);
    }
    _y({ y: t32 }, { y1: n37, y2: e26 }, { marginTop: r91 }) {
      const { insetTop: o35 } = this;
      return os5(t32) ? r91 + o35 : (t33) => Math.min(n37[t33], e26[t33]) + o35;
    }
    _height({ y: t32 }, { y1: n37, y2: e26 }, { marginTop: r91, marginBottom: o35, height: i29 }) {
      const { insetTop: a27, insetBottom: l35 } = this;
      return os5(t32) ? i29 - r91 - o35 - a27 - l35 : (t33) => Math.max(0, Math.abs(e26[t33] - n37[t33]) - a27 - l35);
    }
  };
  function kd2(t32, n37 = {}) {
    return Vo5(n37) || (n37 = { ...n37, y: wo5, x2: bo5 }), new wd2(t32, Vh(Xc(Wh(n37))));
  }
  function $d(t32, n37 = {}) {
    return Vo5(n37) || (n37 = { ...n37, x: wo5, y2: bo5 }), new bd2(t32, Hh(Gc2(jh(n37))));
  }
  var Md2 = { ariaLabel: "cell" };
  var Ld2 = class extends vd2 {
    constructor(t32, { x: n37, y: e26, ...r91 } = {}) {
      super(t32, { x: { value: n37, scale: "x", type: "band", optional: true }, y: { value: e26, scale: "y", type: "band", optional: true } }, r91, Md2);
    }
    _transform(t32, n37) {
      t32.call(ac2, n37, {}, 0, 0);
    }
  };
  function Ad2(t32, { x: n37, y: e26, ...r91 } = {}) {
    return [n37, e26] = Zo5(n37, e26), new Ld2(t32, { ...r91, x: n37, y: e26 });
  }
  var Od2 = { ariaLabel: "dot", fill: "none", stroke: "currentColor", strokeWidth: 1.5 };
  function Sd2(t32) {
    return void 0 === t32.sort && void 0 === t32.reverse ? ea4({ channel: "-r" }, t32) : t32;
  }
  var Nd2 = class extends dc2 {
    constructor(t32, n37 = {}) {
      const { x: e26, y: r91, r: o35, rotate: i29, symbol: a27 = Z17, frameAnchor: l35 } = n37, [s29, c30] = Wo5(i29, 0), [u30, f25] = function(t33) {
        if (null == t33 || Pi6(t33))
          return [void 0, t33];
        if ("string" == typeof t33) {
          const n38 = _i6.get(`${t33}`.toLowerCase());
          if (n38)
            return [void 0, n38];
        }
        return [t33, void 0];
      }(a27), [h35, d25] = Wo5(o35, null == u30 ? 3 : 4.5);
      super(t32, { x: { value: e26, scale: "x", optional: true }, y: { value: r91, scale: "y", optional: true }, r: { value: h35, scale: "r", filter: Br6, optional: true }, rotate: { value: s29, optional: true }, symbol: { value: u30, scale: "auto", optional: true } }, Sd2(n37), Od2), this.r = d25, this.rotate = c30, this.symbol = f25, this.frameAnchor = Oi6(l35);
      const { channels: p24 } = this, { symbol: m27 } = p24;
      if (m27) {
        const { fill: t33, stroke: n38 } = p24;
        m27.hint = { fill: t33 ? t33.value === m27.value ? "color" : "currentColor" : this.fill ?? "currentColor", stroke: n38 ? n38.value === m27.value ? "color" : "currentColor" : this.stroke ?? "none" };
      }
    }
    render(t32, n37, e26, r91, o35) {
      const { x: i29, y: a27 } = n37, { x: l35, y: s29, r: c30, rotate: u30, symbol: f25 } = e26, { r: h35, rotate: d25, symbol: p24 } = this, [m27, y24] = hc2(this, r91), g31 = p24 === Z17, v31 = c30 ? void 0 : h35 * h35 * Math.PI;
      return Fr6(h35) && (t32 = []), Ws5("svg:g", o35).call(ec2, this, r91, o35).call(ac2, this, { x: l35 && i29, y: s29 && a27 }).call((n38) => n38.selectAll().data(t32).enter().append(g31 ? "circle" : "path").call(rc2, this).call(g31 ? (t33) => {
        t33.attr("cx", l35 ? (t34) => l35[t34] : m27).attr("cy", s29 ? (t34) => s29[t34] : y24).attr("r", c30 ? (t34) => c30[t34] : h35);
      } : (t33) => {
        t33.attr("transform", ou2`translate(${l35 ? (t34) => l35[t34] : m27},${s29 ? (t34) => s29[t34] : y24})${u30 ? (t34) => ` rotate(${u30[t34]})` : d25 ? ` rotate(${d25})` : ""}`).attr("d", c30 && f25 ? (t34) => {
          const n39 = $13();
          return f25[t34].draw(n39, c30[t34] * c30[t34] * Math.PI), n39;
        } : c30 ? (t34) => {
          const n39 = $13();
          return p24.draw(n39, c30[t34] * c30[t34] * Math.PI), n39;
        } : f25 ? (t34) => {
          const n39 = $13();
          return f25[t34].draw(n39, v31), n39;
        } : (() => {
          const t34 = $13();
          return p24.draw(t34, v31), t34;
        })());
      }).call(Ks4, this, e26)).node();
    }
  };
  function Cd2(t32, { x: n37, y: e26, ...r91 } = {}) {
    return void 0 === r91.frameAnchor && ([n37, e26] = Zo5(n37, e26)), new Nd2(t32, { ...r91, x: n37, y: e26 });
  }
  var jd2 = { ariaLabel: "line", fill: "none", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round", strokeMiterlimit: 1 };
  var Bd2 = class extends dc2 {
    constructor(t32, n37 = {}) {
      const { x: e26, y: r91, z: o35, curve: i29, tension: a27 } = n37;
      super(t32, { x: { value: e26, scale: "x" }, y: { value: r91, scale: "y" }, z: { value: Jo5(n37), optional: true } }, n37, jd2), this.z = o35, this.curve = sh(i29, a27), Oc2(this, n37);
    }
    filter(t32) {
      return t32;
    }
    project(t32, n37, e26) {
      this.curve !== ch && super.project(t32, n37, e26);
    }
    render(t32, n37, e26, r91, o35) {
      const { x: i29, y: a27 } = e26, { curve: l35 } = this;
      return Ws5("svg:g", o35).call(ec2, this, r91, o35).call(ac2, this, n37).call((n38) => n38.selectAll().data(nc2(t32, [i29, a27], this, e26)).enter().append("path").call(rc2, this).call(Qs4, this, e26).call(Bc2, this, e26, o35).attr("d", l35 === ch && o35.projection ? function(t33, n39, e27) {
        const r92 = Vr5(t33);
        return n39 = No5(n39), e27 = No5(e27), (t34) => {
          let o36 = [];
          const i30 = [o36];
          for (const r93 of t34)
            -1 === r93 ? (o36 = [], i30.push(o36)) : o36.push([n39[r93], e27[r93]]);
          return r92({ type: "MultiLineString", coordinates: i30 });
        };
      }(o35.projection, i29, a27) : A21().curve(l35).defined((t33) => t33 >= 0).x((t33) => i29[t33]).y((t33) => a27[t33]))).node();
    }
  };
  function Fd2(t32, { x: n37, y: e26, ...r91 } = {}) {
    return [n37, e26] = Zo5(n37, e26), new Bd2(t32, { ...r91, x: n37, y: e26 });
  }
  function Dd2(t32, { x: n37 = bo5, y: e26 = wo5, ...r91 } = {}) {
    return new Bd2(t32, mh({ ...r91, x: n37, y: e26 }));
  }
  function qd(t32, { x: n37 = wo5, y: e26 = bo5, ...r91 } = {}) {
    return new Bd2(t32, ph({ ...r91, x: n37, y: e26 }));
  }
  var _d2 = { ariaLabel: "rect" };
  var Pd2 = class extends dc2 {
    constructor(t32, n37 = {}) {
      const { x1: e26, y1: r91, x2: o35, y2: i29, inset: a27 = 0, insetTop: l35 = a27, insetRight: s29 = a27, insetBottom: c30 = a27, insetLeft: u30 = a27, rx: f25, ry: h35 } = n37;
      super(t32, { x1: { value: e26, scale: "x", type: null != e26 && null == o35 ? "band" : void 0, optional: true }, y1: { value: r91, scale: "y", type: null != r91 && null == i29 ? "band" : void 0, optional: true }, x2: { value: o35, scale: "x", optional: true }, y2: { value: i29, scale: "y", optional: true } }, n37, _d2), this.insetTop = Lo5(l35), this.insetRight = Lo5(s29), this.insetBottom = Lo5(c30), this.insetLeft = Lo5(u30), this.rx = lc2(f25, "auto"), this.ry = lc2(h35, "auto");
    }
    render(t32, n37, e26, r91, o35) {
      const { x: i29, y: a27 } = n37, { x1: l35, y1: s29, x2: c30, y2: u30 } = e26, { marginTop: f25, marginRight: h35, marginBottom: d25, marginLeft: p24, width: m27, height: y24 } = r91, { projection: g31 } = o35, { insetTop: v31, insetRight: x22, insetBottom: w26, insetLeft: b28, rx: k24, ry: $26 } = this, M26 = (i29?.bandwidth ? i29.bandwidth() : 0) - b28 - x22, L25 = (a27?.bandwidth ? a27.bandwidth() : 0) - v31 - w26;
      return Ws5("svg:g", o35).call(ec2, this, r91, o35).call(ac2, this, {}, 0, 0).call((n38) => n38.selectAll().data(t32).enter().append("rect").call(rc2, this).attr("x", !l35 || !g31 && os5(i29) ? p24 + b28 : c30 ? (t33) => Math.min(l35[t33], c30[t33]) + b28 : (t33) => l35[t33] + b28).attr("y", !s29 || !g31 && os5(a27) ? f25 + v31 : u30 ? (t33) => Math.min(s29[t33], u30[t33]) + v31 : (t33) => s29[t33] + v31).attr("width", !l35 || !g31 && os5(i29) ? m27 - h35 - p24 - x22 - b28 : c30 ? (t33) => Math.max(0, Math.abs(c30[t33] - l35[t33]) + M26) : M26).attr("height", !s29 || !g31 && os5(a27) ? y24 - f25 - d25 - v31 - w26 : u30 ? (t33) => Math.max(0, Math.abs(s29[t33] - u30[t33]) + L25) : L25).call(ic2, "rx", k24).call(ic2, "ry", $26).call(Ks4, this, e26)).node();
    }
  };
  function Vd(t32, n37) {
    return new Pd2(t32, Yc2(Uc2(n37)));
  }
  function Hd(t32, n37 = {}) {
    return Vo5(n37) || (n37 = { ...n37, y: wo5, x2: bo5, interval: 1 }), new Pd2(t32, Vh(Uc2(Wh(n37))));
  }
  function Yd(t32, n37 = {}) {
    return Vo5(n37) || (n37 = { ...n37, x: wo5, y2: bo5, interval: 1 }), new Pd2(t32, Hh(Yc2(jh(n37))));
  }
  var np = { dot: Cd2, line: Fd2, lineX: Dd2, lineY: qd, areaX: sd2, areaY: cd2, ruleX: nu2, ruleY: eu2, barX: kd2, barY: $d, rect: Vd, rectX: Hd, rectY: Yd, cell: Ad2, bin: hh, binX: uh, binY: fh, group: ca4, groupX: la4, groupY: sa4 };
  var ep = Object.fromEntries(Object.entries(np).map(([t32, n37]) => [n37, t32]));
  function fg(t32) {
    return { mapIndex(n37, e26, r91) {
      const o35 = +t32(n37, e26);
      for (const t33 of n37)
        r91[t33] = null === e26[t33] ? NaN : e26[t33] / o35;
    } };
  }
  function hg(t32) {
    return fg((n37, e26) => t32(n37, (t33) => e26[t33]));
  }
  var pg = fg((t32, n37) => {
    for (let e26 = 0; e26 < t32.length; ++e26) {
      const r91 = n37[t32[e26]];
      if (Tr6(r91))
        return r91;
    }
  });
  var mg = fg((t32, n37) => {
    for (let e26 = t32.length - 1; e26 >= 0; --e26) {
      const r91 = n37[t32[e26]];
      if (Tr6(r91))
        return r91;
    }
  });
  var gg = hg(ft6);
  var vg = hg(Mt6);
  var xg = hg(vt6);
  var wg = hg(ut6);
  var bg = hg(jt6);
  dc2.prototype.plot = function({ marks: t32 = [], ...n37 } = {}) {
    return _f({ ...n37, marks: [...t32, this] });
  };

  // https://cdn.jsdelivr.net/npm/@uwdata/mosaic-plot@0.10.0/+esm
  var ut12 = Symbol("Fixed");
  var pt11 = Symbol("Transient");
  var dt9 = Symbol("Transform");
  function Dt9(t32, e26) {
    const { plot: n37 } = t32;
    let i29 = n37.getAttribute(`${e26}Scale`);
    if (!i29) {
      const { type: n38 } = t32.channelField(e26);
      i29 = "date" === n38 ? "time" : "linear";
    }
    const s29 = { type: i29 };
    switch (i29) {
      case "log":
        s29.base = n37.getAttribute(`${e26}Base`) ?? 10;
        break;
      case "pow":
        s29.exponent = n37.getAttribute(`${e26}Exponent`) ?? 1;
        break;
      case "symlog":
        s29.constant = n37.getAttribute(`${e26}Constant`) ?? 1;
    }
    return Ne2(s29);
  }
  var zt8 = { x: ["min", "max"] };
  var Gt8 = { y: ["min", "max"] };
  var Bt7 = { ...zt8, ...Gt8 };
  function Re7(t32) {
    const e26 = t32.toLowerCase(), n37 = t32.length;
    let i29 = "";
    for (let s29 = 0; s29 < n37; ++s29)
      i29 += (t32[s29] !== e26[s29] ? "-" : "") + e26[s29];
    return i29;
  }
  function Oe7(t32) {
    const e26 = {};
    for (const n37 in t32)
      e26[Re7(n37)] = t32[n37];
    return e26;
  }
  function Se8(t32) {
    const e26 = t32.on;
    let n37 = true;
    function i29(t33) {
      n37 = false, t33(), n37 = true;
    }
    return t32.reset = (...e27) => {
      i29(() => t32.clear(...e27));
    }, t32.moveSilent = (...e27) => {
      i29(() => t32.move(...e27));
    }, t32.on = (...t33) => {
      if (t33.length > 1 && t33[1]) {
        const e27 = t33[1];
        t33[1] = (...t34) => n37 && e27(...t34);
      }
      return e26(...t33);
    }, t32;
  }
  function ke6(t32, e26) {
    return t32 === e26 || t32 && e26 && Math.abs(t32[0] - e26[0]) < 1e-12 && Math.abs(t32[1] - e26[1]) < 1e-12 || false;
  }
  function Fe5(t32, e26) {
    const n37 = t32.channelField(e26)?.field;
    return n37?.basis || n37;
  }
  function Te8(t32, e26, n37 = 1) {
    return e26.invert(n37 * Math.floor(t32 / n37));
  }
  function Me7() {
    const t32 = this, e26 = t32.getScreenCTM;
    let n37;
    t32.getScreenCTM = () => t32.isConnected ? n37 = e26.call(t32) : n37;
  }
  var Ne7 = class {
    constructor(t32, { channel: e26, selection: n37, field: i29, pixelSize: s29 = 1, peers: r91 = true, brush: o35 }) {
      this.mark = t32, this.channel = e26, this.pixelSize = s29 || 1, this.selection = n37, this.peers = r91, this.field = i29 || Fe5(t32, e26), this.style = o35 && Oe7(o35), this.brush = Se8("y" === e26 ? M12() : I15()), this.brush.on("brush end", ({ selection: t33 }) => this.publish(t33));
    }
    reset() {
      this.value = void 0, this.g && this.brush.reset(this.g);
    }
    activate() {
      this.selection.activate(this.clause(this.value || [0, 1]));
    }
    publish(t32) {
      let e26;
      t32 && (e26 = t32.map((t33) => Te8(t33, this.scale, this.pixelSize)).sort((t33, e27) => t33 - e27)), ke6(e26, this.value) || (this.value = e26, this.g.call(this.brush.moveSilent, t32), this.selection.update(this.clause(e26)));
    }
    clause(t32) {
      const { mark: e26, pixelSize: n37, field: i29, scale: s29 } = this;
      return Le3(i29, t32, { source: this, clients: this.peers ? e26.plot.markSet : (/* @__PURE__ */ new Set()).add(e26), scale: s29, pixelSize: n37 });
    }
    init(t32, e26) {
      const { brush: n37, channel: i29, style: s29 } = this;
      this.scale = t32.scale(i29);
      const r91 = t32.scale("x").range, o35 = t32.scale("y").range;
      n37.extent([[ut6(r91), ut6(o35)], [ft6(r91), ft6(o35)]]);
      const a27 = this.value?.map(this.scale.apply).sort(r56), l35 = ht7(t32).selectAll('g[aria-label="facet"]');
      if (e26 = l35.size() ? l35 : ht7(e26 ?? t32), this.g = e26.append("g").attr("class", `interval-${i29}`).each(Me7).call(n37).call(n37.moveSilent, a27), s29) {
        const t33 = this.g.selectAll("rect.selection");
        for (const e27 in s29)
          t33.attr(e27, s29[e27]);
      }
      t32.addEventListener("pointerenter", (t33) => {
        t33.buttons || this.activate();
      });
    }
  };
  function Ue8(t32, e26, n37 = 0, i29 = Math.LN10) {
    let s29;
    const r91 = Math.ceil(Math.log(e26) / i29);
    let o35 = Math.max(n37, Math.pow(10, Math.round(Math.log(t32) / i29) - r91));
    for (; Math.ceil(t32 / o35) > e26; )
      o35 *= 10;
    const a27 = [5, 2];
    for (let i30 = 0, r92 = a27.length; i30 < r92; ++i30)
      s29 = o35 / a27[i30], s29 >= n37 && t32 / s29 <= e26 && (o35 = s29);
    return o35;
  }
  var He6 = "year";
  var Xe4 = "month";
  var Ye3 = "hour";
  var Ve5 = "minute";
  var Ze3 = "second";
  var Qe3 = "millisecond";
  var Ke4 = 1e3;
  var Je5 = 6e4;
  var tn10 = 36e5;
  var en10 = 864e5;
  var nn8 = 2592e6;
  var sn10 = [[Ze3, 1, Ke4], [Ze3, 5, 5e3], [Ze3, 15, 15e3], [Ze3, 30, 3e4], [Ve5, 1, Je5], [Ve5, 5, 3e5], [Ve5, 15, 9e5], [Ve5, 30, 18e5], [Ye3, 1, tn10], [Ye3, 3, 108e5], [Ye3, 6, 216e5], [Ye3, 12, 432e5], ["day", 1, en10], ["day", 7, 6048e5], [Xe4, 1, nn8], [Xe4, 3, 7776e6], [He6, 1, 31536e6]];
  var rn10 = /* @__PURE__ */ new Set(["rectY-x", "rectX-y", "rect-x", "rect-y", "ruleY-x", "ruleX-y"]);
  function on11(t32, e26 = {}) {
    const n37 = (n38, i29) => function(t33, e27) {
      return rn10.has(`${t33.type}-${e27}`);
    }(n38, i29) ? { [`${i29}1`]: an11(n38, i29, t32, e26), [`${i29}2`]: an11(n38, i29, t32, { ...e26, offset: 1 }) } : { [i29]: an11(n38, i29, t32, e26) };
    return n37[dt9] = true, n37;
  }
  function an11(t32, e26, n37, i29) {
    return { column: n37, label: n37, get columns() {
      return [n37];
    }, get basis() {
      return n37;
    }, get stats() {
      return { column: n37, stats: ["min", "max"] };
    }, toString() {
      const { type: s29, min: r91, max: o35 } = t32.channelField(e26), { interval: a27, steps: l35, offset: c30 = 0 } = i29, h35 = a27 ?? ("date" === s29 || function(t33, e27) {
        const n38 = t33.plot.getAttribute(`${e27}Scale`);
        return "utc" === n38 || "time" === n38;
      }(t32, e26) ? "date" : "number");
      if ("number" === h35) {
        const { apply: s30, sqlApply: a28, sqlInvert: l36 } = Dt9(t32, e26), h36 = function(t33, e27, n38) {
          let { step: i30, steps: s31, minstep: r92 = 0, nice: o36 = true } = n38;
          if (false !== o36) {
            const n39 = e27 - t33, o37 = Math.LN10;
            i30 = i30 || Ue8(n39, s31 || 25, r92, o37);
            let a29 = Math.log(i30);
            const l37 = a29 >= 0 ? 0 : 1 + ~~(-a29 / o37), c31 = Math.pow(10, -l37 - 1);
            a29 = Math.floor(t33 / i30 + c31) * i30, t33 = t33 < a29 ? a29 - i30 : a29, e27 = Math.ceil(e27 / i30) * i30, s31 = Math.round((e27 - t33) / i30);
          }
          return { min: t33, max: e27, steps: s31 };
        }(s30(r91), s30(o35), i29), u30 = a28(n37), p24 = 0 === h36.min ? u30 : `(${u30} - ${h36.min})`, d25 = (h36.max - h36.min) / h36.steps + "::DOUBLE", f25 = c30 ? `${c30} + ` : "";
        return `${l36(`${h36.min} + ${d25} * (${f25}FLOOR(${p24} / ${d25}))`)}`;
      }
      {
        const { interval: t33, step: e27 = 1 } = "date" === h35 ? function(t34, e28, n38) {
          const i30 = e28 - t34, s31 = i30 / n38;
          let r92 = e4((t35) => t35[2]).right(sn10, s31);
          return r92 === sn10.length ? { interval: He6, step: Ue8(i30, n38) } : r92 ? (r92 = sn10[s31 / sn10[r92 - 1][2] < sn10[r92][2] / s31 ? r92 - 1 : r92], { interval: r92[0], step: r92[1] }) : { interval: Qe3, step: Ue8(i30, n38, 1) };
        }(r91, o35, l35 || 40) : i29, s30 = c30 ? ` + INTERVAL ${c30 * e27} ${t33}` : "";
        return `(${te2(n37, t33, e27)}${s30})`;
      }
    } };
  }

  // https://esm.sh/v135/d3-selection@3.0.0/denonext/d3-selection.mjs
  var E18 = "http://www.w3.org/1999/xhtml";
  var N21 = { svg: "http://www.w3.org/2000/svg", xhtml: E18, xlink: "http://www.w3.org/1999/xlink", xml: "http://www.w3.org/XML/1998/namespace", xmlns: "http://www.w3.org/2000/xmlns/" };
  function x20(t32) {
    var e26 = t32 += "", r91 = e26.indexOf(":");
    return r91 >= 0 && (e26 = t32.slice(0, r91)) !== "xmlns" && (t32 = t32.slice(r91 + 1)), N21.hasOwnProperty(e26) ? { space: N21[e26], local: t32 } : t32;
  }
  function Vt9(t32) {
    return function() {
      var e26 = this.ownerDocument, r91 = this.namespaceURI;
      return r91 === E18 && e26.documentElement.namespaceURI === E18 ? e26.createElement(t32) : e26.createElementNS(r91, t32);
    };
  }
  function Ft8(t32) {
    return function() {
      return this.ownerDocument.createElementNS(t32.space, t32.local);
    };
  }
  function d22(t32) {
    var e26 = x20(t32);
    return (e26.local ? Ft8 : Vt9)(e26);
  }
  function Bt8() {
  }
  function g27(t32) {
    return t32 == null ? Bt8 : function() {
      return this.querySelector(t32);
    };
  }
  function H19(t32) {
    typeof t32 != "function" && (t32 = g27(t32));
    for (var e26 = this._groups, r91 = e26.length, i29 = new Array(r91), n37 = 0; n37 < r91; ++n37)
      for (var o35 = e26[n37], f25 = o35.length, l35 = i29[n37] = new Array(f25), u30, s29, c30 = 0; c30 < f25; ++c30)
        (u30 = o35[c30]) && (s29 = t32.call(u30, u30.__data__, c30, o35)) && ("__data__" in u30 && (s29.__data__ = u30.__data__), l35[c30] = s29);
    return new a24(i29, this._parents);
  }
  function v25(t32) {
    return t32 == null ? [] : Array.isArray(t32) ? t32 : Array.from(t32);
  }
  function Mt9() {
    return [];
  }
  function V18(t32) {
    return t32 == null ? Mt9 : function() {
      return this.querySelectorAll(t32);
    };
  }
  function Tt9(t32) {
    return function() {
      return v25(t32.apply(this, arguments));
    };
  }
  function U19(t32) {
    typeof t32 == "function" ? t32 = Tt9(t32) : t32 = V18(t32);
    for (var e26 = this._groups, r91 = e26.length, i29 = [], n37 = [], o35 = 0; o35 < r91; ++o35)
      for (var f25 = e26[o35], l35 = f25.length, u30, s29 = 0; s29 < l35; ++s29)
        (u30 = f25[s29]) && (i29.push(t32.call(u30, u30.__data__, s29, f25)), n37.push(u30));
    return new a24(i29, n37);
  }
  function F18(t32) {
    return function() {
      return this.matches(t32);
    };
  }
  function L19(t32) {
    return function(e26) {
      return e26.matches(t32);
    };
  }
  var Pt8 = Array.prototype.find;
  function qt8(t32) {
    return function() {
      return Pt8.call(this.children, t32);
    };
  }
  function Dt10() {
    return this.firstElementChild;
  }
  function X19(t32) {
    return this.select(t32 == null ? Dt10 : qt8(typeof t32 == "function" ? t32 : L19(t32)));
  }
  var It8 = Array.prototype.filter;
  function Ot8() {
    return Array.from(this.children);
  }
  function kt6(t32) {
    return function() {
      return It8.call(this.children, t32);
    };
  }
  function z20(t32) {
    return this.selectAll(t32 == null ? Ot8 : kt6(typeof t32 == "function" ? t32 : L19(t32)));
  }
  function Y18(t32) {
    typeof t32 != "function" && (t32 = F18(t32));
    for (var e26 = this._groups, r91 = e26.length, i29 = new Array(r91), n37 = 0; n37 < r91; ++n37)
      for (var o35 = e26[n37], f25 = o35.length, l35 = i29[n37] = [], u30, s29 = 0; s29 < f25; ++s29)
        (u30 = o35[s29]) && t32.call(u30, u30.__data__, s29, o35) && l35.push(u30);
    return new a24(i29, this._parents);
  }
  function b21(t32) {
    return new Array(t32.length);
  }
  function K21() {
    return new a24(this._enter || this._groups.map(b21), this._parents);
  }
  function w22(t32, e26) {
    this.ownerDocument = t32.ownerDocument, this.namespaceURI = t32.namespaceURI, this._next = null, this._parent = t32, this.__data__ = e26;
  }
  w22.prototype = { constructor: w22, appendChild: function(t32) {
    return this._parent.insertBefore(t32, this._next);
  }, insertBefore: function(t32, e26) {
    return this._parent.insertBefore(t32, e26);
  }, querySelector: function(t32) {
    return this._parent.querySelector(t32);
  }, querySelectorAll: function(t32) {
    return this._parent.querySelectorAll(t32);
  } };
  function G21(t32) {
    return function() {
      return t32;
    };
  }
  function Ht8(t32, e26, r91, i29, n37, o35) {
    for (var f25 = 0, l35, u30 = e26.length, s29 = o35.length; f25 < s29; ++f25)
      (l35 = e26[f25]) ? (l35.__data__ = o35[f25], i29[f25] = l35) : r91[f25] = new w22(t32, o35[f25]);
    for (; f25 < u30; ++f25)
      (l35 = e26[f25]) && (n37[f25] = l35);
  }
  function Ut8(t32, e26, r91, i29, n37, o35, f25) {
    var l35, u30, s29 = /* @__PURE__ */ new Map(), c30 = e26.length, h35 = o35.length, m27 = new Array(c30), p24;
    for (l35 = 0; l35 < c30; ++l35)
      (u30 = e26[l35]) && (m27[l35] = p24 = f25.call(u30, u30.__data__, l35, e26) + "", s29.has(p24) ? n37[l35] = u30 : s29.set(p24, u30));
    for (l35 = 0; l35 < h35; ++l35)
      p24 = f25.call(t32, o35[l35], l35, o35) + "", (u30 = s29.get(p24)) ? (i29[l35] = u30, u30.__data__ = o35[l35], s29.delete(p24)) : r91[l35] = new w22(t32, o35[l35]);
    for (l35 = 0; l35 < c30; ++l35)
      (u30 = e26[l35]) && s29.get(m27[l35]) === u30 && (n37[l35] = u30);
  }
  function Xt8(t32) {
    return t32.__data__;
  }
  function J19(t32, e26) {
    if (!arguments.length)
      return Array.from(this, Xt8);
    var r91 = e26 ? Ut8 : Ht8, i29 = this._parents, n37 = this._groups;
    typeof t32 != "function" && (t32 = G21(t32));
    for (var o35 = n37.length, f25 = new Array(o35), l35 = new Array(o35), u30 = new Array(o35), s29 = 0; s29 < o35; ++s29) {
      var c30 = i29[s29], h35 = n37[s29], m27 = h35.length, p24 = zt9(t32.call(c30, c30 && c30.__data__, s29, i29)), _24 = p24.length, D24 = l35[s29] = new Array(_24), I26 = f25[s29] = new Array(_24), Rt10 = u30[s29] = new Array(m27);
      r91(c30, h35, D24, I26, Rt10, p24, e26);
      for (var y24 = 0, C24 = 0, O21, k24; y24 < _24; ++y24)
        if (O21 = D24[y24]) {
          for (y24 >= C24 && (C24 = y24 + 1); !(k24 = I26[C24]) && ++C24 < _24; )
            ;
          O21._next = k24 || null;
        }
    }
    return f25 = new a24(f25, i29), f25._enter = l35, f25._exit = u30, f25;
  }
  function zt9(t32) {
    return typeof t32 == "object" && "length" in t32 ? t32 : Array.from(t32);
  }
  function Q19() {
    return new a24(this._exit || this._groups.map(b21), this._parents);
  }
  function W19(t32, e26, r91) {
    var i29 = this.enter(), n37 = this, o35 = this.exit();
    return typeof t32 == "function" ? (i29 = t32(i29), i29 && (i29 = i29.selection())) : i29 = i29.append(t32 + ""), e26 != null && (n37 = e26(n37), n37 && (n37 = n37.selection())), r91 == null ? o35.remove() : r91(o35), i29 && n37 ? i29.merge(n37).order() : n37;
  }
  function Z18(t32) {
    for (var e26 = t32.selection ? t32.selection() : t32, r91 = this._groups, i29 = e26._groups, n37 = r91.length, o35 = i29.length, f25 = Math.min(n37, o35), l35 = new Array(n37), u30 = 0; u30 < f25; ++u30)
      for (var s29 = r91[u30], c30 = i29[u30], h35 = s29.length, m27 = l35[u30] = new Array(h35), p24, _24 = 0; _24 < h35; ++_24)
        (p24 = s29[_24] || c30[_24]) && (m27[_24] = p24);
    for (; u30 < n37; ++u30)
      l35[u30] = r91[u30];
    return new a24(l35, this._parents);
  }
  function $20() {
    for (var t32 = this._groups, e26 = -1, r91 = t32.length; ++e26 < r91; )
      for (var i29 = t32[e26], n37 = i29.length - 1, o35 = i29[n37], f25; --n37 >= 0; )
        (f25 = i29[n37]) && (o35 && f25.compareDocumentPosition(o35) ^ 4 && o35.parentNode.insertBefore(f25, o35), o35 = f25);
    return this;
  }
  function j21(t32) {
    t32 || (t32 = Yt8);
    function e26(h35, m27) {
      return h35 && m27 ? t32(h35.__data__, m27.__data__) : !h35 - !m27;
    }
    for (var r91 = this._groups, i29 = r91.length, n37 = new Array(i29), o35 = 0; o35 < i29; ++o35) {
      for (var f25 = r91[o35], l35 = f25.length, u30 = n37[o35] = new Array(l35), s29, c30 = 0; c30 < l35; ++c30)
        (s29 = f25[c30]) && (u30[c30] = s29);
      u30.sort(e26);
    }
    return new a24(n37, this._parents).order();
  }
  function Yt8(t32, e26) {
    return t32 < e26 ? -1 : t32 > e26 ? 1 : t32 >= e26 ? 0 : NaN;
  }
  function tt12() {
    var t32 = arguments[0];
    return arguments[0] = this, t32.apply(null, arguments), this;
  }
  function et11() {
    return Array.from(this);
  }
  function rt12() {
    for (var t32 = this._groups, e26 = 0, r91 = t32.length; e26 < r91; ++e26)
      for (var i29 = t32[e26], n37 = 0, o35 = i29.length; n37 < o35; ++n37) {
        var f25 = i29[n37];
        if (f25)
          return f25;
      }
    return null;
  }
  function nt13() {
    let t32 = 0;
    for (let e26 of this)
      ++t32;
    return t32;
  }
  function it13() {
    return !this.node();
  }
  function ot12(t32) {
    for (var e26 = this._groups, r91 = 0, i29 = e26.length; r91 < i29; ++r91)
      for (var n37 = e26[r91], o35 = 0, f25 = n37.length, l35; o35 < f25; ++o35)
        (l35 = n37[o35]) && t32.call(l35, l35.__data__, o35, n37);
    return this;
  }
  function Kt9(t32) {
    return function() {
      this.removeAttribute(t32);
    };
  }
  function Gt9(t32) {
    return function() {
      this.removeAttributeNS(t32.space, t32.local);
    };
  }
  function Jt7(t32, e26) {
    return function() {
      this.setAttribute(t32, e26);
    };
  }
  function Qt8(t32, e26) {
    return function() {
      this.setAttributeNS(t32.space, t32.local, e26);
    };
  }
  function Wt8(t32, e26) {
    return function() {
      var r91 = e26.apply(this, arguments);
      r91 == null ? this.removeAttribute(t32) : this.setAttribute(t32, r91);
    };
  }
  function Zt9(t32, e26) {
    return function() {
      var r91 = e26.apply(this, arguments);
      r91 == null ? this.removeAttributeNS(t32.space, t32.local) : this.setAttributeNS(t32.space, t32.local, r91);
    };
  }
  function lt12(t32, e26) {
    var r91 = x20(t32);
    if (arguments.length < 2) {
      var i29 = this.node();
      return r91.local ? i29.getAttributeNS(r91.space, r91.local) : i29.getAttribute(r91);
    }
    return this.each((e26 == null ? r91.local ? Gt9 : Kt9 : typeof e26 == "function" ? r91.local ? Zt9 : Wt8 : r91.local ? Qt8 : Jt7)(r91, e26));
  }
  function A22(t32) {
    return t32.ownerDocument && t32.ownerDocument.defaultView || t32.document && t32 || t32.defaultView;
  }
  function $t8(t32) {
    return function() {
      this.style.removeProperty(t32);
    };
  }
  function jt8(t32, e26, r91) {
    return function() {
      this.style.setProperty(t32, e26, r91);
    };
  }
  function te10(t32, e26, r91) {
    return function() {
      var i29 = e26.apply(this, arguments);
      i29 == null ? this.style.removeProperty(t32) : this.style.setProperty(t32, i29, r91);
    };
  }
  function ft11(t32, e26, r91) {
    return arguments.length > 1 ? this.each((e26 == null ? $t8 : typeof e26 == "function" ? te10 : jt8)(t32, e26, r91 ?? "")) : ut13(this.node(), t32);
  }
  function ut13(t32, e26) {
    return t32.style.getPropertyValue(e26) || A22(t32).getComputedStyle(t32, null).getPropertyValue(e26);
  }
  function ee8(t32) {
    return function() {
      delete this[t32];
    };
  }
  function re8(t32, e26) {
    return function() {
      this[t32] = e26;
    };
  }
  function ne6(t32, e26) {
    return function() {
      var r91 = e26.apply(this, arguments);
      r91 == null ? delete this[t32] : this[t32] = r91;
    };
  }
  function st12(t32, e26) {
    return arguments.length > 1 ? this.each((e26 == null ? ee8 : typeof e26 == "function" ? ne6 : re8)(t32, e26)) : this.node()[t32];
  }
  function ct11(t32) {
    return t32.trim().split(/^|\s+/);
  }
  function B19(t32) {
    return t32.classList || new at12(t32);
  }
  function at12(t32) {
    this._node = t32, this._names = ct11(t32.getAttribute("class") || "");
  }
  at12.prototype = { add: function(t32) {
    var e26 = this._names.indexOf(t32);
    e26 < 0 && (this._names.push(t32), this._node.setAttribute("class", this._names.join(" ")));
  }, remove: function(t32) {
    var e26 = this._names.indexOf(t32);
    e26 >= 0 && (this._names.splice(e26, 1), this._node.setAttribute("class", this._names.join(" ")));
  }, contains: function(t32) {
    return this._names.indexOf(t32) >= 0;
  } };
  function pt12(t32, e26) {
    for (var r91 = B19(t32), i29 = -1, n37 = e26.length; ++i29 < n37; )
      r91.add(e26[i29]);
  }
  function ht12(t32, e26) {
    for (var r91 = B19(t32), i29 = -1, n37 = e26.length; ++i29 < n37; )
      r91.remove(e26[i29]);
  }
  function ie9(t32) {
    return function() {
      pt12(this, t32);
    };
  }
  function oe9(t32) {
    return function() {
      ht12(this, t32);
    };
  }
  function le9(t32, e26) {
    return function() {
      (e26.apply(this, arguments) ? pt12 : ht12)(this, t32);
    };
  }
  function mt10(t32, e26) {
    var r91 = ct11(t32 + "");
    if (arguments.length < 2) {
      for (var i29 = B19(this.node()), n37 = -1, o35 = r91.length; ++n37 < o35; )
        if (!i29.contains(r91[n37]))
          return false;
      return true;
    }
    return this.each((typeof e26 == "function" ? le9 : e26 ? ie9 : oe9)(r91, e26));
  }
  function fe7() {
    this.textContent = "";
  }
  function ue8(t32) {
    return function() {
      this.textContent = t32;
    };
  }
  function se9(t32) {
    return function() {
      var e26 = t32.apply(this, arguments);
      this.textContent = e26 ?? "";
    };
  }
  function _t9(t32) {
    return arguments.length ? this.each(t32 == null ? fe7 : (typeof t32 == "function" ? se9 : ue8)(t32)) : this.node().textContent;
  }
  function ce7() {
    this.innerHTML = "";
  }
  function ae8(t32) {
    return function() {
      this.innerHTML = t32;
    };
  }
  function pe7(t32) {
    return function() {
      var e26 = t32.apply(this, arguments);
      this.innerHTML = e26 ?? "";
    };
  }
  function dt10(t32) {
    return arguments.length ? this.each(t32 == null ? ce7 : (typeof t32 == "function" ? pe7 : ae8)(t32)) : this.node().innerHTML;
  }
  function he7() {
    this.nextSibling && this.parentNode.appendChild(this);
  }
  function yt11() {
    return this.each(he7);
  }
  function me8() {
    this.previousSibling && this.parentNode.insertBefore(this, this.parentNode.firstChild);
  }
  function xt9() {
    return this.each(me8);
  }
  function gt10(t32) {
    var e26 = typeof t32 == "function" ? t32 : d22(t32);
    return this.select(function() {
      return this.appendChild(e26.apply(this, arguments));
    });
  }
  function _e6() {
    return null;
  }
  function vt11(t32, e26) {
    var r91 = typeof t32 == "function" ? t32 : d22(t32), i29 = e26 == null ? _e6 : typeof e26 == "function" ? e26 : g27(e26);
    return this.select(function() {
      return this.insertBefore(r91.apply(this, arguments), i29.apply(this, arguments) || null);
    });
  }
  function de6() {
    var t32 = this.parentNode;
    t32 && t32.removeChild(this);
  }
  function wt8() {
    return this.each(de6);
  }
  function ye7() {
    var t32 = this.cloneNode(false), e26 = this.parentNode;
    return e26 ? e26.insertBefore(t32, this.nextSibling) : t32;
  }
  function xe7() {
    var t32 = this.cloneNode(true), e26 = this.parentNode;
    return e26 ? e26.insertBefore(t32, this.nextSibling) : t32;
  }
  function At9(t32) {
    return this.select(t32 ? xe7 : ye7);
  }
  function St9(t32) {
    return arguments.length ? this.property("__data__", t32) : this.node().__data__;
  }
  function ge8(t32) {
    return function(e26) {
      t32.call(this, e26, this.__data__);
    };
  }
  function ve6(t32) {
    return t32.trim().split(/^|\s+/).map(function(e26) {
      var r91 = "", i29 = e26.indexOf(".");
      return i29 >= 0 && (r91 = e26.slice(i29 + 1), e26 = e26.slice(0, i29)), { type: e26, name: r91 };
    });
  }
  function we7(t32) {
    return function() {
      var e26 = this.__on;
      if (e26) {
        for (var r91 = 0, i29 = -1, n37 = e26.length, o35; r91 < n37; ++r91)
          o35 = e26[r91], (!t32.type || o35.type === t32.type) && o35.name === t32.name ? this.removeEventListener(o35.type, o35.listener, o35.options) : e26[++i29] = o35;
        ++i29 ? e26.length = i29 : delete this.__on;
      }
    };
  }
  function Ae7(t32, e26, r91) {
    return function() {
      var i29 = this.__on, n37, o35 = ge8(e26);
      if (i29) {
        for (var f25 = 0, l35 = i29.length; f25 < l35; ++f25)
          if ((n37 = i29[f25]).type === t32.type && n37.name === t32.name) {
            this.removeEventListener(n37.type, n37.listener, n37.options), this.addEventListener(n37.type, n37.listener = o35, n37.options = r91), n37.value = e26;
            return;
          }
      }
      this.addEventListener(t32.type, o35, r91), n37 = { type: t32.type, name: t32.name, value: e26, listener: o35, options: r91 }, i29 ? i29.push(n37) : this.__on = [n37];
    };
  }
  function Ct9(t32, e26, r91) {
    var i29 = ve6(t32 + ""), n37, o35 = i29.length, f25;
    if (arguments.length < 2) {
      var l35 = this.node().__on;
      if (l35) {
        for (var u30 = 0, s29 = l35.length, c30; u30 < s29; ++u30)
          for (n37 = 0, c30 = l35[u30]; n37 < o35; ++n37)
            if ((f25 = i29[n37]).type === c30.type && f25.name === c30.name)
              return c30.value;
      }
      return;
    }
    for (l35 = e26 ? Ae7 : we7, n37 = 0; n37 < o35; ++n37)
      this.each(l35(i29[n37], e26, r91));
    return this;
  }
  function Et10(t32, e26, r91) {
    var i29 = A22(t32), n37 = i29.CustomEvent;
    typeof n37 == "function" ? n37 = new n37(e26, r91) : (n37 = i29.document.createEvent("Event"), r91 ? (n37.initEvent(e26, r91.bubbles, r91.cancelable), n37.detail = r91.detail) : n37.initEvent(e26, false, false)), t32.dispatchEvent(n37);
  }
  function Se9(t32, e26) {
    return function() {
      return Et10(this, t32, e26);
    };
  }
  function Ce7(t32, e26) {
    return function() {
      return Et10(this, t32, e26.apply(this, arguments));
    };
  }
  function Nt10(t32, e26) {
    return this.each((typeof e26 == "function" ? Ce7 : Se9)(t32, e26));
  }
  function* Lt8() {
    for (var t32 = this._groups, e26 = 0, r91 = t32.length; e26 < r91; ++e26)
      for (var i29 = t32[e26], n37 = 0, o35 = i29.length, f25; n37 < o35; ++n37)
        (f25 = i29[n37]) && (yield f25);
  }
  var S20 = [null];
  function a24(t32, e26) {
    this._groups = t32, this._parents = e26;
  }
  function bt9() {
    return new a24([[document.documentElement]], S20);
  }
  function Ee8() {
    return this;
  }
  a24.prototype = bt9.prototype = { constructor: a24, select: H19, selectAll: U19, selectChild: X19, selectChildren: z20, filter: Y18, data: J19, enter: K21, exit: Q19, join: W19, merge: Z18, selection: Ee8, order: $20, sort: j21, call: tt12, nodes: et11, node: rt12, size: nt13, empty: it13, each: ot12, attr: lt12, style: ft11, property: st12, classed: mt10, text: _t9, html: dt10, raise: yt11, lower: xt9, append: gt10, insert: vt11, remove: wt8, clone: At9, datum: St9, on: Ct9, dispatch: Nt10, [Symbol.iterator]: Lt8 };
  function M21(t32) {
    return typeof t32 == "string" ? new a24([[document.querySelector(t32)]], [document.documentElement]) : new a24([[t32]], S20);
  }
  function Le7(t32) {
    return M21(d22(t32).call(document.documentElement));
  }
  var be6 = 0;
  function P20() {
    return new T17();
  }
  function T17() {
    this._ = "@" + (++be6).toString(36);
  }
  T17.prototype = P20.prototype = { constructor: T17, get: function(t32) {
    for (var e26 = this._; !(e26 in t32); )
      if (!(t32 = t32.parentNode))
        return;
    return t32[e26];
  }, set: function(t32, e26) {
    return t32[this._] = e26;
  }, remove: function(t32) {
    return this._ in t32 && delete t32[this._];
  }, toString: function() {
    return this._;
  } };

  // https://esm.sh/v135/d3-array@3.2.4/denonext/d3-array.mjs
  function s26(e26, t32) {
    return e26 == null || t32 == null ? NaN : e26 < t32 ? -1 : e26 > t32 ? 1 : e26 >= t32 ? 0 : NaN;
  }
  function H20(e26, t32) {
    return e26 == null || t32 == null ? NaN : t32 < e26 ? -1 : t32 > e26 ? 1 : t32 >= e26 ? 0 : NaN;
  }
  function F19(e26) {
    let t32, n37, o35;
    e26.length !== 2 ? (t32 = s26, n37 = (u30, c30) => s26(e26(u30), c30), o35 = (u30, c30) => e26(u30) - c30) : (t32 = e26 === s26 || e26 === H20 ? e26 : Xe5, n37 = e26, o35 = e26);
    function r91(u30, c30, l35 = 0, m27 = u30.length) {
      if (l35 < m27) {
        if (t32(c30, c30) !== 0)
          return m27;
        do {
          let d25 = l35 + m27 >>> 1;
          n37(u30[d25], c30) < 0 ? l35 = d25 + 1 : m27 = d25;
        } while (l35 < m27);
      }
      return l35;
    }
    function f25(u30, c30, l35 = 0, m27 = u30.length) {
      if (l35 < m27) {
        if (t32(c30, c30) !== 0)
          return m27;
        do {
          let d25 = l35 + m27 >>> 1;
          n37(u30[d25], c30) <= 0 ? l35 = d25 + 1 : m27 = d25;
        } while (l35 < m27);
      }
      return l35;
    }
    function i29(u30, c30, l35 = 0, m27 = u30.length) {
      let d25 = r91(u30, c30, l35, m27 - 1);
      return d25 > l35 && o35(u30[d25 - 1], c30) > -o35(u30[d25], c30) ? d25 - 1 : d25;
    }
    return { left: r91, center: i29, right: f25 };
  }
  function Xe5() {
    return 0;
  }
  function b22(e26) {
    return e26 === null ? NaN : +e26;
  }
  var de7 = F19(s26);
  var ae9 = de7.right;
  var Ye4 = de7.left;
  var Ze4 = F19(b22).center;
  var re9 = ae9;
  var ve7 = me9(oe10);
  var et12 = me9(tt13);
  function me9(e26) {
    return function(t32, n37, o35 = n37) {
      if (!((n37 = +n37) >= 0))
        throw new RangeError("invalid rx");
      if (!((o35 = +o35) >= 0))
        throw new RangeError("invalid ry");
      let { data: r91, width: f25, height: i29 } = t32;
      if (!((f25 = Math.floor(f25)) >= 0))
        throw new RangeError("invalid width");
      if (!((i29 = Math.floor(i29 !== void 0 ? i29 : r91.length / f25)) >= 0))
        throw new RangeError("invalid height");
      if (!f25 || !i29 || !n37 && !o35)
        return t32;
      let u30 = n37 && e26(n37), c30 = o35 && e26(o35), l35 = r91.slice();
      return u30 && c30 ? (N22(u30, l35, r91, f25, i29), N22(u30, r91, l35, f25, i29), N22(u30, l35, r91, f25, i29), q19(c30, r91, l35, f25, i29), q19(c30, l35, r91, f25, i29), q19(c30, r91, l35, f25, i29)) : u30 ? (N22(u30, r91, l35, f25, i29), N22(u30, l35, r91, f25, i29), N22(u30, r91, l35, f25, i29)) : c30 && (q19(c30, r91, l35, f25, i29), q19(c30, l35, r91, f25, i29), q19(c30, r91, l35, f25, i29)), t32;
    };
  }
  function N22(e26, t32, n37, o35, r91) {
    for (let f25 = 0, i29 = o35 * r91; f25 < i29; )
      e26(t32, n37, f25, f25 += o35, 1);
  }
  function q19(e26, t32, n37, o35, r91) {
    for (let f25 = 0, i29 = o35 * r91; f25 < o35; ++f25)
      e26(t32, n37, f25, f25 + i29, o35);
  }
  function tt13(e26) {
    let t32 = oe10(e26);
    return (n37, o35, r91, f25, i29) => {
      r91 <<= 2, f25 <<= 2, i29 <<= 2, t32(n37, o35, r91 + 0, f25 + 0, i29), t32(n37, o35, r91 + 1, f25 + 1, i29), t32(n37, o35, r91 + 2, f25 + 2, i29), t32(n37, o35, r91 + 3, f25 + 3, i29);
    };
  }
  function oe10(e26) {
    let t32 = Math.floor(e26);
    if (t32 === e26)
      return nt14(e26);
    let n37 = e26 - t32, o35 = 2 * e26 + 1;
    return (r91, f25, i29, u30, c30) => {
      if (!((u30 -= c30) >= i29))
        return;
      let l35 = t32 * f25[i29], m27 = c30 * t32, d25 = m27 + c30;
      for (let a27 = i29, p24 = i29 + m27; a27 < p24; a27 += c30)
        l35 += f25[Math.min(u30, a27)];
      for (let a27 = i29, p24 = u30; a27 <= p24; a27 += c30)
        l35 += f25[Math.min(u30, a27 + m27)], r91[a27] = (l35 + n37 * (f25[Math.max(i29, a27 - d25)] + f25[Math.min(u30, a27 + d25)])) / o35, l35 -= f25[Math.max(i29, a27 - m27)];
    };
  }
  function nt14(e26) {
    let t32 = 2 * e26 + 1;
    return (n37, o35, r91, f25, i29) => {
      if (!((f25 -= i29) >= r91))
        return;
      let u30 = e26 * o35[r91], c30 = i29 * e26;
      for (let l35 = r91, m27 = r91 + c30; l35 < m27; l35 += i29)
        u30 += o35[Math.min(f25, l35)];
      for (let l35 = r91, m27 = f25; l35 <= m27; l35 += i29)
        u30 += o35[Math.min(f25, l35 + c30)], n37[l35] = u30 / t32, u30 -= o35[Math.max(r91, l35 - c30)];
    };
  }
  var ye8 = Array.prototype;
  var be7 = ye8.slice;
  var un11 = ye8.map;
  var pt13 = Math.sqrt(50);
  var xt10 = Math.sqrt(10);
  var ht13 = Math.sqrt(2);
  function W20(e26, t32, n37) {
    let o35 = (t32 - e26) / Math.max(0, n37), r91 = Math.floor(Math.log10(o35)), f25 = o35 / Math.pow(10, r91), i29 = f25 >= pt13 ? 10 : f25 >= xt10 ? 5 : f25 >= ht13 ? 2 : 1, u30, c30, l35;
    return r91 < 0 ? (l35 = Math.pow(10, -r91) / i29, u30 = Math.round(e26 * l35), c30 = Math.round(t32 * l35), u30 / l35 < e26 && ++u30, c30 / l35 > t32 && --c30, l35 = -l35) : (l35 = Math.pow(10, r91) * i29, u30 = Math.round(e26 / l35), c30 = Math.round(t32 / l35), u30 * l35 < e26 && ++u30, c30 * l35 > t32 && --c30), c30 < u30 && 0.5 <= n37 && n37 < 2 ? W20(e26, t32, n37 * 2) : [u30, c30, l35];
  }
  function X20(e26, t32, n37) {
    if (t32 = +t32, e26 = +e26, n37 = +n37, !(n37 > 0))
      return [];
    if (e26 === t32)
      return [e26];
    let o35 = t32 < e26, [r91, f25, i29] = o35 ? W20(t32, e26, n37) : W20(e26, t32, n37);
    if (!(f25 >= r91))
      return [];
    let u30 = f25 - r91 + 1, c30 = new Array(u30);
    if (o35)
      if (i29 < 0)
        for (let l35 = 0; l35 < u30; ++l35)
          c30[l35] = (f25 - l35) / -i29;
      else
        for (let l35 = 0; l35 < u30; ++l35)
          c30[l35] = (f25 - l35) * i29;
    else if (i29 < 0)
      for (let l35 = 0; l35 < u30; ++l35)
        c30[l35] = (r91 + l35) / -i29;
    else
      for (let l35 = 0; l35 < u30; ++l35)
        c30[l35] = (r91 + l35) * i29;
    return c30;
  }
  function M22(e26, t32, n37) {
    return t32 = +t32, e26 = +e26, n37 = +n37, W20(e26, t32, n37)[2];
  }
  function gt11(e26, t32, n37) {
    t32 = +t32, e26 = +e26, n37 = +n37;
    let o35 = t32 < e26, r91 = o35 ? M22(t32, e26, n37) : M22(e26, t32, n37);
    return (o35 ? -1 : 1) * (r91 < 0 ? 1 / -r91 : r91);
  }
  var At10 = Fe6(Math.random);
  function Fe6(e26) {
    return function(n37, o35 = 0, r91 = n37.length) {
      let f25 = r91 - (o35 = +o35);
      for (; f25; ) {
        let i29 = e26() * f25-- | 0, u30 = n37[f25 + o35];
        n37[f25 + o35] = n37[i29 + o35], n37[i29 + o35] = u30;
      }
      return n37;
    };
  }

  // https://esm.sh/v135/d3-time@3.1.0/denonext/d3-time.mjs
  var j22 = /* @__PURE__ */ new Date();
  var q20 = /* @__PURE__ */ new Date();
  function o29(e26, t32, u30, D24) {
    function i29(r91) {
      return e26(r91 = arguments.length === 0 ? /* @__PURE__ */ new Date() : /* @__PURE__ */ new Date(+r91)), r91;
    }
    return i29.floor = (r91) => (e26(r91 = /* @__PURE__ */ new Date(+r91)), r91), i29.ceil = (r91) => (e26(r91 = new Date(r91 - 1)), t32(r91, 1), e26(r91), r91), i29.round = (r91) => {
      let n37 = i29(r91), s29 = i29.ceil(r91);
      return r91 - n37 < s29 - r91 ? n37 : s29;
    }, i29.offset = (r91, n37) => (t32(r91 = /* @__PURE__ */ new Date(+r91), n37 == null ? 1 : Math.floor(n37)), r91), i29.range = (r91, n37, s29) => {
      let d25 = [];
      if (r91 = i29.ceil(r91), s29 = s29 == null ? 1 : Math.floor(s29), !(r91 < n37) || !(s29 > 0))
        return d25;
      let c30;
      do
        d25.push(c30 = /* @__PURE__ */ new Date(+r91)), t32(r91, s29), e26(r91);
      while (c30 < r91 && r91 < n37);
      return d25;
    }, i29.filter = (r91) => o29((n37) => {
      if (n37 >= n37)
        for (; e26(n37), !r91(n37); )
          n37.setTime(n37 - 1);
    }, (n37, s29) => {
      if (n37 >= n37)
        if (s29 < 0)
          for (; ++s29 <= 0; )
            for (; t32(n37, -1), !r91(n37); )
              ;
        else
          for (; --s29 >= 0; )
            for (; t32(n37, 1), !r91(n37); )
              ;
    }), u30 && (i29.count = (r91, n37) => (j22.setTime(+r91), q20.setTime(+n37), e26(j22), e26(q20), Math.floor(u30(j22, q20))), i29.every = (r91) => (r91 = Math.floor(r91), !isFinite(r91) || !(r91 > 0) ? null : r91 > 1 ? i29.filter(D24 ? (n37) => D24(n37) % r91 === 0 : (n37) => i29.count(0, n37) % r91 === 0) : i29)), i29;
  }
  var T18 = o29(() => {
  }, (e26, t32) => {
    e26.setTime(+e26 + t32);
  }, (e26, t32) => t32 - e26);
  T18.every = (e26) => (e26 = Math.floor(e26), !isFinite(e26) || !(e26 > 0) ? null : e26 > 1 ? o29((t32) => {
    t32.setTime(Math.floor(t32 / e26) * e26);
  }, (t32, u30) => {
    t32.setTime(+t32 + u30 * e26);
  }, (t32, u30) => (u30 - t32) / e26) : T18);
  var A23 = T18.range;
  var g28 = o29((e26) => {
    e26.setTime(e26 - e26.getMilliseconds());
  }, (e26, t32) => {
    e26.setTime(+e26 + t32 * 1e3);
  }, (e26, t32) => (t32 - e26) / 1e3, (e26) => e26.getUTCSeconds());
  var B20 = g28.range;
  var H21 = o29((e26) => {
    e26.setTime(e26 - e26.getMilliseconds() - e26.getSeconds() * 1e3);
  }, (e26, t32) => {
    e26.setTime(+e26 + t32 * 6e4);
  }, (e26, t32) => (t32 - e26) / 6e4, (e26) => e26.getMinutes());
  var se10 = H21.range;
  var I21 = o29((e26) => {
    e26.setUTCSeconds(0, 0);
  }, (e26, t32) => {
    e26.setTime(+e26 + t32 * 6e4);
  }, (e26, t32) => (t32 - e26) / 6e4, (e26) => e26.getUTCMinutes());
  var ce8 = I21.range;
  var W21 = o29((e26) => {
    e26.setTime(e26 - e26.getMilliseconds() - e26.getSeconds() * 1e3 - e26.getMinutes() * 6e4);
  }, (e26, t32) => {
    e26.setTime(+e26 + t32 * 36e5);
  }, (e26, t32) => (t32 - e26) / 36e5, (e26) => e26.getHours());
  var ae10 = W21.range;
  var w23 = o29((e26) => {
    e26.setUTCMinutes(0, 0, 0);
  }, (e26, t32) => {
    e26.setTime(+e26 + t32 * 36e5);
  }, (e26, t32) => (t32 - e26) / 36e5, (e26) => e26.getUTCHours());
  var me10 = w23.range;
  var k19 = o29((e26) => e26.setHours(0, 0, 0, 0), (e26, t32) => e26.setDate(e26.getDate() + t32), (e26, t32) => (t32 - e26 - (t32.getTimezoneOffset() - e26.getTimezoneOffset()) * 6e4) / 864e5, (e26) => e26.getDate() - 1);
  var le10 = k19.range;
  var E19 = o29((e26) => {
    e26.setUTCHours(0, 0, 0, 0);
  }, (e26, t32) => {
    e26.setUTCDate(e26.getUTCDate() + t32);
  }, (e26, t32) => (t32 - e26) / 864e5, (e26) => e26.getUTCDate() - 1);
  var ye9 = E19.range;
  var z21 = o29((e26) => {
    e26.setUTCHours(0, 0, 0, 0);
  }, (e26, t32) => {
    e26.setUTCDate(e26.getUTCDate() + t32);
  }, (e26, t32) => (t32 - e26) / 864e5, (e26) => Math.floor(e26 / 864e5));
  var ge9 = z21.range;
  function M23(e26) {
    return o29((t32) => {
      t32.setDate(t32.getDate() - (t32.getDay() + 7 - e26) % 7), t32.setHours(0, 0, 0, 0);
    }, (t32, u30) => {
      t32.setDate(t32.getDate() + u30 * 7);
    }, (t32, u30) => (u30 - t32 - (u30.getTimezoneOffset() - t32.getTimezoneOffset()) * 6e4) / 6048e5);
  }
  var U20 = M23(0);
  var J20 = M23(1);
  var K22 = M23(2);
  var L20 = M23(3);
  var N23 = M23(4);
  var P21 = M23(5);
  var Q20 = M23(6);
  var R19 = U20.range;
  var Te9 = J20.range;
  var pe8 = K22.range;
  var xe8 = L20.range;
  var Me8 = N23.range;
  var fe8 = P21.range;
  var de8 = Q20.range;
  function f22(e26) {
    return o29((t32) => {
      t32.setUTCDate(t32.getUTCDate() - (t32.getUTCDay() + 7 - e26) % 7), t32.setUTCHours(0, 0, 0, 0);
    }, (t32, u30) => {
      t32.setUTCDate(t32.getUTCDate() + u30 * 7);
    }, (t32, u30) => (u30 - t32) / 6048e5);
  }
  var S21 = f22(0);
  var V19 = f22(1);
  var X21 = f22(2);
  var Z19 = f22(3);
  var _20 = f22(4);
  var $21 = f22(5);
  var ee9 = f22(6);
  var te11 = S21.range;
  var he8 = V19.range;
  var De6 = X21.range;
  var Ce8 = Z19.range;
  var Ue9 = _20.range;
  var Se10 = $21.range;
  var Fe7 = ee9.range;
  var O17 = o29((e26) => {
    e26.setDate(1), e26.setHours(0, 0, 0, 0);
  }, (e26, t32) => {
    e26.setMonth(e26.getMonth() + t32);
  }, (e26, t32) => t32.getMonth() - e26.getMonth() + (t32.getFullYear() - e26.getFullYear()) * 12, (e26) => e26.getMonth());
  var Ye5 = O17.range;
  var b23 = o29((e26) => {
    e26.setUTCDate(1), e26.setUTCHours(0, 0, 0, 0);
  }, (e26, t32) => {
    e26.setUTCMonth(e26.getUTCMonth() + t32);
  }, (e26, t32) => t32.getUTCMonth() - e26.getUTCMonth() + (t32.getUTCFullYear() - e26.getUTCFullYear()) * 12, (e26) => e26.getUTCMonth());
  var ve8 = b23.range;
  var F20 = o29((e26) => {
    e26.setMonth(0, 1), e26.setHours(0, 0, 0, 0);
  }, (e26, t32) => {
    e26.setFullYear(e26.getFullYear() + t32);
  }, (e26, t32) => t32.getFullYear() - e26.getFullYear(), (e26) => e26.getFullYear());
  F20.every = (e26) => !isFinite(e26 = Math.floor(e26)) || !(e26 > 0) ? null : o29((t32) => {
    t32.setFullYear(Math.floor(t32.getFullYear() / e26) * e26), t32.setMonth(0, 1), t32.setHours(0, 0, 0, 0);
  }, (t32, u30) => {
    t32.setFullYear(t32.getFullYear() + u30 * e26);
  });
  var He7 = F20.range;
  var Y19 = o29((e26) => {
    e26.setUTCMonth(0, 1), e26.setUTCHours(0, 0, 0, 0);
  }, (e26, t32) => {
    e26.setUTCFullYear(e26.getUTCFullYear() + t32);
  }, (e26, t32) => t32.getUTCFullYear() - e26.getUTCFullYear(), (e26) => e26.getUTCFullYear());
  Y19.every = (e26) => !isFinite(e26 = Math.floor(e26)) || !(e26 > 0) ? null : o29((t32) => {
    t32.setUTCFullYear(Math.floor(t32.getUTCFullYear() / e26) * e26), t32.setUTCMonth(0, 1), t32.setUTCHours(0, 0, 0, 0);
  }, (t32, u30) => {
    t32.setUTCFullYear(t32.getUTCFullYear() + u30 * e26);
  });
  var Ie6 = Y19.range;
  function oe11(e26, t32, u30, D24, i29, r91) {
    let n37 = [[g28, 1, 1e3], [g28, 5, 5 * 1e3], [g28, 15, 15 * 1e3], [g28, 30, 30 * 1e3], [r91, 1, 6e4], [r91, 5, 5 * 6e4], [r91, 15, 15 * 6e4], [r91, 30, 30 * 6e4], [i29, 1, 36e5], [i29, 3, 3 * 36e5], [i29, 6, 6 * 36e5], [i29, 12, 12 * 36e5], [D24, 1, 864e5], [D24, 2, 2 * 864e5], [u30, 1, 6048e5], [t32, 1, 2592e6], [t32, 3, 3 * 2592e6], [e26, 1, 31536e6]];
    function s29(c30, m27, y24) {
      let h35 = m27 < c30;
      h35 && ([c30, m27] = [m27, c30]);
      let l35 = y24 && typeof y24.range == "function" ? y24 : d25(c30, m27, y24), v31 = l35 ? l35.range(c30, +m27 + 1) : [];
      return h35 ? v31.reverse() : v31;
    }
    function d25(c30, m27, y24) {
      let h35 = Math.abs(m27 - c30) / y24, l35 = F19(([, , ie11]) => ie11).right(n37, h35);
      if (l35 === n37.length)
        return e26.every(gt11(c30 / 31536e6, m27 / 31536e6, y24));
      if (l35 === 0)
        return T18.every(Math.max(gt11(c30, m27, y24), 1));
      let [v31, ue10] = n37[h35 / n37[l35 - 1][2] < n37[l35][2] / h35 ? l35 - 1 : l35];
      return v31.every(ue10);
    }
    return [s29, d25];
  }
  var [ke7, ze5] = oe11(Y19, b23, S21, z21, w23, I21);
  var [Oe8, be8] = oe11(F20, O17, U20, k19, W21, H21);

  // https://esm.sh/v135/d3-time-format@4.1.0/denonext/src/defaultLocale.js
  function F21(e26) {
    if (0 <= e26.y && e26.y < 100) {
      var t32 = new Date(-1, e26.m, e26.d, e26.H, e26.M, e26.S, e26.L);
      return t32.setFullYear(e26.y), t32;
    }
    return new Date(e26.y, e26.m, e26.d, e26.H, e26.M, e26.S, e26.L);
  }
  function H22(e26) {
    if (0 <= e26.y && e26.y < 100) {
      var t32 = new Date(Date.UTC(-1, e26.m, e26.d, e26.H, e26.M, e26.S, e26.L));
      return t32.setUTCFullYear(e26.y), t32;
    }
    return new Date(Date.UTC(e26.y, e26.m, e26.d, e26.H, e26.M, e26.S, e26.L));
  }
  function v26(e26, t32, n37) {
    return { y: e26, m: t32, d: n37, H: 0, M: 0, S: 0, L: 0 };
  }
  function A24(e26) {
    var t32 = e26.dateTime, n37 = e26.date, u30 = e26.time, g31 = e26.periods, T23 = e26.days, W25 = e26.shortDays, L25 = e26.months, Y23 = e26.shortMonths, ne8 = d23(g31), re11 = S22(g31), ue10 = d23(T23), oe13 = S22(T23), ae12 = d23(W25), ce10 = S22(W25), fe10 = d23(L25), ie11 = S22(L25), le12 = d23(Y23), se12 = S22(Y23), p24 = { a: ve10, A: de10, b: Se11, B: De7, c: null, d: q21, e: q21, f: rt13, g: yt12, G: ht14, H: et13, I: tt14, j: nt15, L: $22, m: ut14, M: ot13, p: xe10, q: we9, Q: j23, s: B21, S: at13, u: ct12, U: ft12, V: it14, w: lt13, W: st13, x: null, X: null, y: mt11, Y: gt12, Z: Tt10, "%": X22 }, M26 = { a: ke10, A: We4, b: Le8, B: Ye6, c: null, d: J21, e: J21, f: Ct10, g: Yt9, G: Ft9, H: pt14, I: Mt10, j: Ut9, L: K23, m: vt12, M: dt11, p: be10, q: Fe8, Q: j23, s: B21, S: St10, u: Dt11, U: xt11, V: wt9, w: kt7, W: Wt9, x: null, X: null, y: Lt9, Y: bt10, Z: Ht9, "%": X22 }, me12 = { a: ge11, A: he10, b: Te10, B: pe10, c: Me10, d: V20, e: V20, f: ze6, g: Q21, G: R20, H: _21, I: _21, j: Xe6, L: Ge5, m: Je6, M: je5, p: ye11, q: qe5, Q: Ee9, s: Ke5, S: Be7, u: Pe5, U: Re8, V: Qe4, w: Ie7, W: Ve6, x: Ue10, X: Ce9, y: Q21, Y: R20, Z: _e7, "%": $e7 };
    p24.x = h35(n37, p24), p24.X = h35(u30, p24), p24.c = h35(t32, p24), M26.x = h35(n37, M26), M26.X = h35(u30, M26), M26.c = h35(t32, M26);
    function h35(o35, a27) {
      return function(c30) {
        var r91 = [], s29 = -1, i29 = 0, m27 = o35.length, y24, U23, I26;
        for (c30 instanceof Date || (c30 = /* @__PURE__ */ new Date(+c30)); ++s29 < m27; )
          o35.charCodeAt(s29) === 37 && (r91.push(o35.slice(i29, s29)), (U23 = P22[y24 = o35.charAt(++s29)]) != null ? y24 = o35.charAt(++s29) : U23 = y24 === "e" ? " " : "0", (I26 = a27[y24]) && (y24 = I26(c30, U23)), r91.push(y24), i29 = s29 + 1);
        return r91.push(o35.slice(i29, s29)), r91.join("");
      };
    }
    function Z23(o35, a27) {
      return function(c30) {
        var r91 = v26(1900, void 0, 1), s29 = b28(r91, o35, c30 += "", 0), i29, m27;
        if (s29 != c30.length)
          return null;
        if ("Q" in r91)
          return new Date(r91.Q);
        if ("s" in r91)
          return new Date(r91.s * 1e3 + ("L" in r91 ? r91.L : 0));
        if (a27 && !("Z" in r91) && (r91.Z = 0), "p" in r91 && (r91.H = r91.H % 12 + r91.p * 12), r91.m === void 0 && (r91.m = "q" in r91 ? r91.q : 0), "V" in r91) {
          if (r91.V < 1 || r91.V > 53)
            return null;
          "w" in r91 || (r91.w = 1), "Z" in r91 ? (i29 = H22(v26(r91.y, 0, 1)), m27 = i29.getUTCDay(), i29 = m27 > 4 || m27 === 0 ? V19.ceil(i29) : V19(i29), i29 = E19.offset(i29, (r91.V - 1) * 7), r91.y = i29.getUTCFullYear(), r91.m = i29.getUTCMonth(), r91.d = i29.getUTCDate() + (r91.w + 6) % 7) : (i29 = F21(v26(r91.y, 0, 1)), m27 = i29.getDay(), i29 = m27 > 4 || m27 === 0 ? J20.ceil(i29) : J20(i29), i29 = k19.offset(i29, (r91.V - 1) * 7), r91.y = i29.getFullYear(), r91.m = i29.getMonth(), r91.d = i29.getDate() + (r91.w + 6) % 7);
        } else
          ("W" in r91 || "U" in r91) && ("w" in r91 || (r91.w = "u" in r91 ? r91.u % 7 : "W" in r91 ? 1 : 0), m27 = "Z" in r91 ? H22(v26(r91.y, 0, 1)).getUTCDay() : F21(v26(r91.y, 0, 1)).getDay(), r91.m = 0, r91.d = "W" in r91 ? (r91.w + 6) % 7 + r91.W * 7 - (m27 + 5) % 7 : r91.w + r91.U * 7 - (m27 + 6) % 7);
        return "Z" in r91 ? (r91.H += r91.Z / 100 | 0, r91.M += r91.Z % 100, H22(r91)) : F21(r91);
      };
    }
    function b28(o35, a27, c30, r91) {
      for (var s29 = 0, i29 = a27.length, m27 = c30.length, y24, U23; s29 < i29; ) {
        if (r91 >= m27)
          return -1;
        if (y24 = a27.charCodeAt(s29++), y24 === 37) {
          if (y24 = a27.charAt(s29++), U23 = me12[y24 in P22 ? a27.charAt(s29++) : y24], !U23 || (r91 = U23(o35, c30, r91)) < 0)
            return -1;
        } else if (y24 != c30.charCodeAt(r91++))
          return -1;
      }
      return r91;
    }
    function ye11(o35, a27, c30) {
      var r91 = ne8.exec(a27.slice(c30));
      return r91 ? (o35.p = re11.get(r91[0].toLowerCase()), c30 + r91[0].length) : -1;
    }
    function ge11(o35, a27, c30) {
      var r91 = ae12.exec(a27.slice(c30));
      return r91 ? (o35.w = ce10.get(r91[0].toLowerCase()), c30 + r91[0].length) : -1;
    }
    function he10(o35, a27, c30) {
      var r91 = ue10.exec(a27.slice(c30));
      return r91 ? (o35.w = oe13.get(r91[0].toLowerCase()), c30 + r91[0].length) : -1;
    }
    function Te10(o35, a27, c30) {
      var r91 = le12.exec(a27.slice(c30));
      return r91 ? (o35.m = se12.get(r91[0].toLowerCase()), c30 + r91[0].length) : -1;
    }
    function pe10(o35, a27, c30) {
      var r91 = fe10.exec(a27.slice(c30));
      return r91 ? (o35.m = ie11.get(r91[0].toLowerCase()), c30 + r91[0].length) : -1;
    }
    function Me10(o35, a27, c30) {
      return b28(o35, t32, a27, c30);
    }
    function Ue10(o35, a27, c30) {
      return b28(o35, n37, a27, c30);
    }
    function Ce9(o35, a27, c30) {
      return b28(o35, u30, a27, c30);
    }
    function ve10(o35) {
      return W25[o35.getDay()];
    }
    function de10(o35) {
      return T23[o35.getDay()];
    }
    function Se11(o35) {
      return Y23[o35.getMonth()];
    }
    function De7(o35) {
      return L25[o35.getMonth()];
    }
    function xe10(o35) {
      return g31[+(o35.getHours() >= 12)];
    }
    function we9(o35) {
      return 1 + ~~(o35.getMonth() / 3);
    }
    function ke10(o35) {
      return W25[o35.getUTCDay()];
    }
    function We4(o35) {
      return T23[o35.getUTCDay()];
    }
    function Le8(o35) {
      return Y23[o35.getUTCMonth()];
    }
    function Ye6(o35) {
      return L25[o35.getUTCMonth()];
    }
    function be10(o35) {
      return g31[+(o35.getUTCHours() >= 12)];
    }
    function Fe8(o35) {
      return 1 + ~~(o35.getUTCMonth() / 3);
    }
    return { format: function(o35) {
      var a27 = h35(o35 += "", p24);
      return a27.toString = function() {
        return o35;
      }, a27;
    }, parse: function(o35) {
      var a27 = Z23(o35 += "", false);
      return a27.toString = function() {
        return o35;
      }, a27;
    }, utcFormat: function(o35) {
      var a27 = h35(o35 += "", M26);
      return a27.toString = function() {
        return o35;
      }, a27;
    }, utcParse: function(o35) {
      var a27 = Z23(o35 += "", true);
      return a27.toString = function() {
        return o35;
      }, a27;
    } };
  }
  var P22 = { "-": "", _: " ", 0: "0" };
  var l31 = /^\s*\d+/;
  var Oe9 = /^%/;
  var Ae8 = /[\\^$*+?|[\]().{}]/g;
  function f23(e26, t32, n37) {
    var u30 = e26 < 0 ? "-" : "", g31 = (u30 ? -e26 : e26) + "", T23 = g31.length;
    return u30 + (T23 < n37 ? new Array(n37 - T23 + 1).join(t32) + g31 : g31);
  }
  function Ze5(e26) {
    return e26.replace(Ae8, "\\$&");
  }
  function d23(e26) {
    return new RegExp("^(?:" + e26.map(Ze5).join("|") + ")", "i");
  }
  function S22(e26) {
    return new Map(e26.map((t32, n37) => [t32.toLowerCase(), n37]));
  }
  function Ie7(e26, t32, n37) {
    var u30 = l31.exec(t32.slice(n37, n37 + 1));
    return u30 ? (e26.w = +u30[0], n37 + u30[0].length) : -1;
  }
  function Pe5(e26, t32, n37) {
    var u30 = l31.exec(t32.slice(n37, n37 + 1));
    return u30 ? (e26.u = +u30[0], n37 + u30[0].length) : -1;
  }
  function Re8(e26, t32, n37) {
    var u30 = l31.exec(t32.slice(n37, n37 + 2));
    return u30 ? (e26.U = +u30[0], n37 + u30[0].length) : -1;
  }
  function Qe4(e26, t32, n37) {
    var u30 = l31.exec(t32.slice(n37, n37 + 2));
    return u30 ? (e26.V = +u30[0], n37 + u30[0].length) : -1;
  }
  function Ve6(e26, t32, n37) {
    var u30 = l31.exec(t32.slice(n37, n37 + 2));
    return u30 ? (e26.W = +u30[0], n37 + u30[0].length) : -1;
  }
  function R20(e26, t32, n37) {
    var u30 = l31.exec(t32.slice(n37, n37 + 4));
    return u30 ? (e26.y = +u30[0], n37 + u30[0].length) : -1;
  }
  function Q21(e26, t32, n37) {
    var u30 = l31.exec(t32.slice(n37, n37 + 2));
    return u30 ? (e26.y = +u30[0] + (+u30[0] > 68 ? 1900 : 2e3), n37 + u30[0].length) : -1;
  }
  function _e7(e26, t32, n37) {
    var u30 = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(t32.slice(n37, n37 + 6));
    return u30 ? (e26.Z = u30[1] ? 0 : -(u30[2] + (u30[3] || "00")), n37 + u30[0].length) : -1;
  }
  function qe5(e26, t32, n37) {
    var u30 = l31.exec(t32.slice(n37, n37 + 1));
    return u30 ? (e26.q = u30[0] * 3 - 3, n37 + u30[0].length) : -1;
  }
  function Je6(e26, t32, n37) {
    var u30 = l31.exec(t32.slice(n37, n37 + 2));
    return u30 ? (e26.m = u30[0] - 1, n37 + u30[0].length) : -1;
  }
  function V20(e26, t32, n37) {
    var u30 = l31.exec(t32.slice(n37, n37 + 2));
    return u30 ? (e26.d = +u30[0], n37 + u30[0].length) : -1;
  }
  function Xe6(e26, t32, n37) {
    var u30 = l31.exec(t32.slice(n37, n37 + 3));
    return u30 ? (e26.m = 0, e26.d = +u30[0], n37 + u30[0].length) : -1;
  }
  function _21(e26, t32, n37) {
    var u30 = l31.exec(t32.slice(n37, n37 + 2));
    return u30 ? (e26.H = +u30[0], n37 + u30[0].length) : -1;
  }
  function je5(e26, t32, n37) {
    var u30 = l31.exec(t32.slice(n37, n37 + 2));
    return u30 ? (e26.M = +u30[0], n37 + u30[0].length) : -1;
  }
  function Be7(e26, t32, n37) {
    var u30 = l31.exec(t32.slice(n37, n37 + 2));
    return u30 ? (e26.S = +u30[0], n37 + u30[0].length) : -1;
  }
  function Ge5(e26, t32, n37) {
    var u30 = l31.exec(t32.slice(n37, n37 + 3));
    return u30 ? (e26.L = +u30[0], n37 + u30[0].length) : -1;
  }
  function ze6(e26, t32, n37) {
    var u30 = l31.exec(t32.slice(n37, n37 + 6));
    return u30 ? (e26.L = Math.floor(u30[0] / 1e3), n37 + u30[0].length) : -1;
  }
  function $e7(e26, t32, n37) {
    var u30 = Oe9.exec(t32.slice(n37, n37 + 1));
    return u30 ? n37 + u30[0].length : -1;
  }
  function Ee9(e26, t32, n37) {
    var u30 = l31.exec(t32.slice(n37));
    return u30 ? (e26.Q = +u30[0], n37 + u30[0].length) : -1;
  }
  function Ke5(e26, t32, n37) {
    var u30 = l31.exec(t32.slice(n37));
    return u30 ? (e26.s = +u30[0], n37 + u30[0].length) : -1;
  }
  function q21(e26, t32) {
    return f23(e26.getDate(), t32, 2);
  }
  function et13(e26, t32) {
    return f23(e26.getHours(), t32, 2);
  }
  function tt14(e26, t32) {
    return f23(e26.getHours() % 12 || 12, t32, 2);
  }
  function nt15(e26, t32) {
    return f23(1 + k19.count(F20(e26), e26), t32, 3);
  }
  function $22(e26, t32) {
    return f23(e26.getMilliseconds(), t32, 3);
  }
  function rt13(e26, t32) {
    return $22(e26, t32) + "000";
  }
  function ut14(e26, t32) {
    return f23(e26.getMonth() + 1, t32, 2);
  }
  function ot13(e26, t32) {
    return f23(e26.getMinutes(), t32, 2);
  }
  function at13(e26, t32) {
    return f23(e26.getSeconds(), t32, 2);
  }
  function ct12(e26) {
    var t32 = e26.getDay();
    return t32 === 0 ? 7 : t32;
  }
  function ft12(e26, t32) {
    return f23(U20.count(F20(e26) - 1, e26), t32, 2);
  }
  function E20(e26) {
    var t32 = e26.getDay();
    return t32 >= 4 || t32 === 0 ? N23(e26) : N23.ceil(e26);
  }
  function it14(e26, t32) {
    return e26 = E20(e26), f23(N23.count(F20(e26), e26) + (F20(e26).getDay() === 4), t32, 2);
  }
  function lt13(e26) {
    return e26.getDay();
  }
  function st13(e26, t32) {
    return f23(J20.count(F20(e26) - 1, e26), t32, 2);
  }
  function mt11(e26, t32) {
    return f23(e26.getFullYear() % 100, t32, 2);
  }
  function yt12(e26, t32) {
    return e26 = E20(e26), f23(e26.getFullYear() % 100, t32, 2);
  }
  function gt12(e26, t32) {
    return f23(e26.getFullYear() % 1e4, t32, 4);
  }
  function ht14(e26, t32) {
    var n37 = e26.getDay();
    return e26 = n37 >= 4 || n37 === 0 ? N23(e26) : N23.ceil(e26), f23(e26.getFullYear() % 1e4, t32, 4);
  }
  function Tt10(e26) {
    var t32 = e26.getTimezoneOffset();
    return (t32 > 0 ? "-" : (t32 *= -1, "+")) + f23(t32 / 60 | 0, "0", 2) + f23(t32 % 60, "0", 2);
  }
  function J21(e26, t32) {
    return f23(e26.getUTCDate(), t32, 2);
  }
  function pt14(e26, t32) {
    return f23(e26.getUTCHours(), t32, 2);
  }
  function Mt10(e26, t32) {
    return f23(e26.getUTCHours() % 12 || 12, t32, 2);
  }
  function Ut9(e26, t32) {
    return f23(1 + E19.count(Y19(e26), e26), t32, 3);
  }
  function K23(e26, t32) {
    return f23(e26.getUTCMilliseconds(), t32, 3);
  }
  function Ct10(e26, t32) {
    return K23(e26, t32) + "000";
  }
  function vt12(e26, t32) {
    return f23(e26.getUTCMonth() + 1, t32, 2);
  }
  function dt11(e26, t32) {
    return f23(e26.getUTCMinutes(), t32, 2);
  }
  function St10(e26, t32) {
    return f23(e26.getUTCSeconds(), t32, 2);
  }
  function Dt11(e26) {
    var t32 = e26.getUTCDay();
    return t32 === 0 ? 7 : t32;
  }
  function xt11(e26, t32) {
    return f23(S21.count(Y19(e26) - 1, e26), t32, 2);
  }
  function ee10(e26) {
    var t32 = e26.getUTCDay();
    return t32 >= 4 || t32 === 0 ? _20(e26) : _20.ceil(e26);
  }
  function wt9(e26, t32) {
    return e26 = ee10(e26), f23(_20.count(Y19(e26), e26) + (Y19(e26).getUTCDay() === 4), t32, 2);
  }
  function kt7(e26) {
    return e26.getUTCDay();
  }
  function Wt9(e26, t32) {
    return f23(V19.count(Y19(e26) - 1, e26), t32, 2);
  }
  function Lt9(e26, t32) {
    return f23(e26.getUTCFullYear() % 100, t32, 2);
  }
  function Yt9(e26, t32) {
    return e26 = ee10(e26), f23(e26.getUTCFullYear() % 100, t32, 2);
  }
  function bt10(e26, t32) {
    return f23(e26.getUTCFullYear() % 1e4, t32, 4);
  }
  function Ft9(e26, t32) {
    var n37 = e26.getUTCDay();
    return e26 = n37 >= 4 || n37 === 0 ? _20(e26) : _20.ceil(e26), f23(e26.getUTCFullYear() % 1e4, t32, 4);
  }
  function Ht9() {
    return "+0000";
  }
  function X22() {
    return "%";
  }
  function j23(e26) {
    return +e26;
  }
  function B21(e26) {
    return Math.floor(+e26 / 1e3);
  }
  var C18;
  var Nt11;
  var Ot9;
  var At11;
  var Zt10;
  te12({ dateTime: "%x, %X", date: "%-m/%-d/%Y", time: "%-I:%M:%S %p", periods: ["AM", "PM"], days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"] });
  function te12(e26) {
    return C18 = A24(e26), Nt11 = C18.format, Ot9 = C18.parse, At11 = C18.utcFormat, Zt10 = C18.utcParse, C18;
  }

  // https://esm.sh/v135/d3-time-format@4.1.0/denonext/d3-time-format.mjs
  var I22 = "%Y-%m-%dT%H:%M:%S.%LZ";
  function Nt12(e26) {
    return e26.toISOString();
  }
  var It9 = Date.prototype.toISOString ? Nt12 : At11(I22);
  function At12(e26) {
    var t32 = new Date(e26);
    return isNaN(t32) ? null : t32;
  }
  var Pt9 = +/* @__PURE__ */ new Date("2000-01-01T00:00:00.000Z") ? At12 : Zt10(I22);

  // https://esm.sh/v135/d3-color@3.1.0/denonext/d3-color.mjs
  function b24(e26, t32, r91) {
    e26.prototype = t32.prototype = r91, r91.constructor = e26;
  }
  function g29(e26, t32) {
    var r91 = Object.create(e26.prototype);
    for (var n37 in t32)
      r91[n37] = t32[n37];
    return r91;
  }
  function u29() {
  }
  var p23 = 0.7;
  var y21 = 1 / p23;
  var N24 = "\\s*([+-]?\\d+)\\s*";
  var M24 = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*";
  var c28 = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*";
  var be9 = /^#([0-9a-f]{3,8})$/;
  var de9 = new RegExp(`^rgb\\(${N24},${N24},${N24}\\)$`);
  var ge10 = new RegExp(`^rgb\\(${c28},${c28},${c28}\\)$`);
  var pe9 = new RegExp(`^rgba\\(${N24},${N24},${N24},${M24}\\)$`);
  var me11 = new RegExp(`^rgba\\(${c28},${c28},${c28},${M24}\\)$`);
  var we8 = new RegExp(`^hsl\\(${M24},${c28},${c28}\\)$`);
  var ye10 = new RegExp(`^hsla\\(${M24},${c28},${c28},${M24}\\)$`);
  var Y20 = { aliceblue: 15792383, antiquewhite: 16444375, aqua: 65535, aquamarine: 8388564, azure: 15794175, beige: 16119260, bisque: 16770244, black: 0, blanchedalmond: 16772045, blue: 255, blueviolet: 9055202, brown: 10824234, burlywood: 14596231, cadetblue: 6266528, chartreuse: 8388352, chocolate: 13789470, coral: 16744272, cornflowerblue: 6591981, cornsilk: 16775388, crimson: 14423100, cyan: 65535, darkblue: 139, darkcyan: 35723, darkgoldenrod: 12092939, darkgray: 11119017, darkgreen: 25600, darkgrey: 11119017, darkkhaki: 12433259, darkmagenta: 9109643, darkolivegreen: 5597999, darkorange: 16747520, darkorchid: 10040012, darkred: 9109504, darksalmon: 15308410, darkseagreen: 9419919, darkslateblue: 4734347, darkslategray: 3100495, darkslategrey: 3100495, darkturquoise: 52945, darkviolet: 9699539, deeppink: 16716947, deepskyblue: 49151, dimgray: 6908265, dimgrey: 6908265, dodgerblue: 2003199, firebrick: 11674146, floralwhite: 16775920, forestgreen: 2263842, fuchsia: 16711935, gainsboro: 14474460, ghostwhite: 16316671, gold: 16766720, goldenrod: 14329120, gray: 8421504, green: 32768, greenyellow: 11403055, grey: 8421504, honeydew: 15794160, hotpink: 16738740, indianred: 13458524, indigo: 4915330, ivory: 16777200, khaki: 15787660, lavender: 15132410, lavenderblush: 16773365, lawngreen: 8190976, lemonchiffon: 16775885, lightblue: 11393254, lightcoral: 15761536, lightcyan: 14745599, lightgoldenrodyellow: 16448210, lightgray: 13882323, lightgreen: 9498256, lightgrey: 13882323, lightpink: 16758465, lightsalmon: 16752762, lightseagreen: 2142890, lightskyblue: 8900346, lightslategray: 7833753, lightslategrey: 7833753, lightsteelblue: 11584734, lightyellow: 16777184, lime: 65280, limegreen: 3329330, linen: 16445670, magenta: 16711935, maroon: 8388608, mediumaquamarine: 6737322, mediumblue: 205, mediumorchid: 12211667, mediumpurple: 9662683, mediumseagreen: 3978097, mediumslateblue: 8087790, mediumspringgreen: 64154, mediumturquoise: 4772300, mediumvioletred: 13047173, midnightblue: 1644912, mintcream: 16121850, mistyrose: 16770273, moccasin: 16770229, navajowhite: 16768685, navy: 128, oldlace: 16643558, olive: 8421376, olivedrab: 7048739, orange: 16753920, orangered: 16729344, orchid: 14315734, palegoldenrod: 15657130, palegreen: 10025880, paleturquoise: 11529966, palevioletred: 14381203, papayawhip: 16773077, peachpuff: 16767673, peru: 13468991, pink: 16761035, plum: 14524637, powderblue: 11591910, purple: 8388736, rebeccapurple: 6697881, red: 16711680, rosybrown: 12357519, royalblue: 4286945, saddlebrown: 9127187, salmon: 16416882, sandybrown: 16032864, seagreen: 3050327, seashell: 16774638, sienna: 10506797, silver: 12632256, skyblue: 8900331, slateblue: 6970061, slategray: 7372944, slategrey: 7372944, snow: 16775930, springgreen: 65407, steelblue: 4620980, tan: 13808780, teal: 32896, thistle: 14204888, tomato: 16737095, turquoise: 4251856, violet: 15631086, wheat: 16113331, white: 16777215, whitesmoke: 16119285, yellow: 16776960, yellowgreen: 10145074 };
  b24(u29, H23, { copy(e26) {
    return Object.assign(new this.constructor(), this, e26);
  }, displayable() {
    return this.rgb().displayable();
  }, hex: Z20, formatHex: Z20, formatHex8: $e8, formatHsl: Ne8, formatRgb: F22, toString: F22 });
  function Z20() {
    return this.rgb().formatHex();
  }
  function $e8() {
    return this.rgb().formatHex8();
  }
  function Ne8() {
    return W22(this).formatHsl();
  }
  function F22() {
    return this.rgb().formatRgb();
  }
  function H23(e26) {
    var t32, r91;
    return e26 = (e26 + "").trim().toLowerCase(), (t32 = be9.exec(e26)) ? (r91 = t32[1].length, t32 = parseInt(t32[1], 16), r91 === 6 ? G22(t32) : r91 === 3 ? new a25(t32 >> 8 & 15 | t32 >> 4 & 240, t32 >> 4 & 15 | t32 & 240, (t32 & 15) << 4 | t32 & 15, 1) : r91 === 8 ? C19(t32 >> 24 & 255, t32 >> 16 & 255, t32 >> 8 & 255, (t32 & 255) / 255) : r91 === 4 ? C19(t32 >> 12 & 15 | t32 >> 8 & 240, t32 >> 8 & 15 | t32 >> 4 & 240, t32 >> 4 & 15 | t32 & 240, ((t32 & 15) << 4 | t32 & 15) / 255) : null) : (t32 = de9.exec(e26)) ? new a25(t32[1], t32[2], t32[3], 1) : (t32 = ge10.exec(e26)) ? new a25(t32[1] * 255 / 100, t32[2] * 255 / 100, t32[3] * 255 / 100, 1) : (t32 = pe9.exec(e26)) ? C19(t32[1], t32[2], t32[3], t32[4]) : (t32 = me11.exec(e26)) ? C19(t32[1] * 255 / 100, t32[2] * 255 / 100, t32[3] * 255 / 100, t32[4]) : (t32 = we8.exec(e26)) ? T19(t32[1], t32[2] / 100, t32[3] / 100, 1) : (t32 = ye10.exec(e26)) ? T19(t32[1], t32[2] / 100, t32[3] / 100, t32[4]) : Y20.hasOwnProperty(e26) ? G22(Y20[e26]) : e26 === "transparent" ? new a25(NaN, NaN, NaN, 0) : null;
  }
  function G22(e26) {
    return new a25(e26 >> 16 & 255, e26 >> 8 & 255, e26 & 255, 1);
  }
  function C19(e26, t32, r91, n37) {
    return n37 <= 0 && (e26 = t32 = r91 = NaN), new a25(e26, t32, r91, n37);
  }
  function R21(e26) {
    return e26 instanceof u29 || (e26 = H23(e26)), e26 ? (e26 = e26.rgb(), new a25(e26.r, e26.g, e26.b, e26.opacity)) : new a25();
  }
  function V21(e26, t32, r91, n37) {
    return arguments.length === 1 ? R21(e26) : new a25(e26, t32, r91, n37 ?? 1);
  }
  function a25(e26, t32, r91, n37) {
    this.r = +e26, this.g = +t32, this.b = +r91, this.opacity = +n37;
  }
  b24(a25, V21, g29(u29, { brighter(e26) {
    return e26 = e26 == null ? y21 : Math.pow(y21, e26), new a25(this.r * e26, this.g * e26, this.b * e26, this.opacity);
  }, darker(e26) {
    return e26 = e26 == null ? p23 : Math.pow(p23, e26), new a25(this.r * e26, this.g * e26, this.b * e26, this.opacity);
  }, rgb() {
    return this;
  }, clamp() {
    return new a25(w24(this.r), w24(this.g), w24(this.b), E21(this.opacity));
  }, displayable() {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  }, hex: J22, formatHex: J22, formatHex8: ve9, formatRgb: Q22, toString: Q22 }));
  function J22() {
    return `#${m24(this.r)}${m24(this.g)}${m24(this.b)}`;
  }
  function ve9() {
    return `#${m24(this.r)}${m24(this.g)}${m24(this.b)}${m24((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
  }
  function Q22() {
    let e26 = E21(this.opacity);
    return `${e26 === 1 ? "rgb(" : "rgba("}${w24(this.r)}, ${w24(this.g)}, ${w24(this.b)}${e26 === 1 ? ")" : `, ${e26})`}`;
  }
  function E21(e26) {
    return isNaN(e26) ? 1 : Math.max(0, Math.min(1, e26));
  }
  function w24(e26) {
    return Math.max(0, Math.min(255, Math.round(e26) || 0));
  }
  function m24(e26) {
    return e26 = w24(e26), (e26 < 16 ? "0" : "") + e26.toString(16);
  }
  function T19(e26, t32, r91, n37) {
    return n37 <= 0 ? e26 = t32 = r91 = NaN : r91 <= 0 || r91 >= 1 ? e26 = t32 = NaN : t32 <= 0 && (e26 = NaN), new h33(e26, t32, r91, n37);
  }
  function W22(e26) {
    if (e26 instanceof h33)
      return new h33(e26.h, e26.s, e26.l, e26.opacity);
    if (e26 instanceof u29 || (e26 = H23(e26)), !e26)
      return new h33();
    if (e26 instanceof h33)
      return e26;
    e26 = e26.rgb();
    var t32 = e26.r / 255, r91 = e26.g / 255, n37 = e26.b / 255, i29 = Math.min(t32, r91, n37), f25 = Math.max(t32, r91, n37), s29 = NaN, x22 = f25 - i29, d25 = (f25 + i29) / 2;
    return x22 ? (t32 === f25 ? s29 = (r91 - n37) / x22 + (r91 < n37) * 6 : r91 === f25 ? s29 = (n37 - t32) / x22 + 2 : s29 = (t32 - r91) / x22 + 4, x22 /= d25 < 0.5 ? f25 + i29 : 2 - f25 - i29, s29 *= 60) : x22 = d25 > 0 && d25 < 1 ? 0 : s29, new h33(s29, x22, d25, e26.opacity);
  }
  function ee11(e26, t32, r91, n37) {
    return arguments.length === 1 ? W22(e26) : new h33(e26, t32, r91, n37 ?? 1);
  }
  function h33(e26, t32, r91, n37) {
    this.h = +e26, this.s = +t32, this.l = +r91, this.opacity = +n37;
  }
  b24(h33, ee11, g29(u29, { brighter(e26) {
    return e26 = e26 == null ? y21 : Math.pow(y21, e26), new h33(this.h, this.s, this.l * e26, this.opacity);
  }, darker(e26) {
    return e26 = e26 == null ? p23 : Math.pow(p23, e26), new h33(this.h, this.s, this.l * e26, this.opacity);
  }, rgb() {
    var e26 = this.h % 360 + (this.h < 0) * 360, t32 = isNaN(e26) || isNaN(this.s) ? 0 : this.s, r91 = this.l, n37 = r91 + (r91 < 0.5 ? r91 : 1 - r91) * t32, i29 = 2 * r91 - n37;
    return new a25(j24(e26 >= 240 ? e26 - 240 : e26 + 120, i29, n37), j24(e26, i29, n37), j24(e26 < 120 ? e26 + 240 : e26 - 120, i29, n37), this.opacity);
  }, clamp() {
    return new h33(U21(this.h), q22(this.s), q22(this.l), E21(this.opacity));
  }, displayable() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  }, formatHsl() {
    let e26 = E21(this.opacity);
    return `${e26 === 1 ? "hsl(" : "hsla("}${U21(this.h)}, ${q22(this.s) * 100}%, ${q22(this.l) * 100}%${e26 === 1 ? ")" : `, ${e26})`}`;
  } }));
  function U21(e26) {
    return e26 = (e26 || 0) % 360, e26 < 0 ? e26 + 360 : e26;
  }
  function q22(e26) {
    return Math.max(0, Math.min(1, e26 || 0));
  }
  function j24(e26, t32, r91) {
    return (e26 < 60 ? t32 + (r91 - t32) * e26 / 60 : e26 < 180 ? r91 : e26 < 240 ? t32 + (r91 - t32) * (240 - e26) / 60 : t32) * 255;
  }
  var P23 = Math.PI / 180;
  var _22 = 180 / Math.PI;
  var I23 = 18;
  var te13 = 0.96422;
  var re10 = 1;
  var ne7 = 0.82521;
  var ie10 = 4 / 29;
  var v27 = 6 / 29;
  var ae11 = 3 * v27 * v27;
  var Me9 = v27 * v27 * v27;
  function fe9(e26) {
    if (e26 instanceof l32)
      return new l32(e26.l, e26.a, e26.b, e26.opacity);
    if (e26 instanceof o30)
      return le11(e26);
    e26 instanceof a25 || (e26 = R21(e26));
    var t32 = S23(e26.r), r91 = S23(e26.g), n37 = S23(e26.b), i29 = B22((0.2225045 * t32 + 0.7168786 * r91 + 0.0606169 * n37) / re10), f25, s29;
    return t32 === r91 && r91 === n37 ? f25 = s29 = i29 : (f25 = B22((0.4360747 * t32 + 0.3850649 * r91 + 0.1430804 * n37) / te13), s29 = B22((0.0139322 * t32 + 0.0971045 * r91 + 0.7141733 * n37) / ne7)), new l32(116 * i29 - 16, 500 * (f25 - i29), 200 * (i29 - s29), e26.opacity);
  }
  function A25(e26, t32, r91, n37) {
    return arguments.length === 1 ? fe9(e26) : new l32(e26, t32, r91, n37 ?? 1);
  }
  function l32(e26, t32, r91, n37) {
    this.l = +e26, this.a = +t32, this.b = +r91, this.opacity = +n37;
  }
  b24(l32, A25, g29(u29, { brighter(e26) {
    return new l32(this.l + I23 * (e26 ?? 1), this.a, this.b, this.opacity);
  }, darker(e26) {
    return new l32(this.l - I23 * (e26 ?? 1), this.a, this.b, this.opacity);
  }, rgb() {
    var e26 = (this.l + 16) / 116, t32 = isNaN(this.a) ? e26 : e26 + this.a / 500, r91 = isNaN(this.b) ? e26 : e26 - this.b / 200;
    return t32 = te13 * D20(t32), e26 = re10 * D20(e26), r91 = ne7 * D20(r91), new a25(O18(3.1338561 * t32 - 1.6168667 * e26 - 0.4906146 * r91), O18(-0.9787684 * t32 + 1.9161415 * e26 + 0.033454 * r91), O18(0.0719453 * t32 - 0.2289914 * e26 + 1.4052427 * r91), this.opacity);
  } }));
  function B22(e26) {
    return e26 > Me9 ? Math.pow(e26, 1 / 3) : e26 / ae11 + ie10;
  }
  function D20(e26) {
    return e26 > v27 ? e26 * e26 * e26 : ae11 * (e26 - ie10);
  }
  function O18(e26) {
    return 255 * (e26 <= 31308e-7 ? 12.92 * e26 : 1.055 * Math.pow(e26, 1 / 2.4) - 0.055);
  }
  function S23(e26) {
    return (e26 /= 255) <= 0.04045 ? e26 / 12.92 : Math.pow((e26 + 0.055) / 1.055, 2.4);
  }
  function se11(e26) {
    if (e26 instanceof o30)
      return new o30(e26.h, e26.c, e26.l, e26.opacity);
    if (e26 instanceof l32 || (e26 = fe9(e26)), e26.a === 0 && e26.b === 0)
      return new o30(NaN, 0 < e26.l && e26.l < 100 ? 0 : NaN, e26.l, e26.opacity);
    var t32 = Math.atan2(e26.b, e26.a) * _22;
    return new o30(t32 < 0 ? t32 + 360 : t32, Math.sqrt(e26.a * e26.a + e26.b * e26.b), e26.l, e26.opacity);
  }
  function he9(e26, t32, r91, n37) {
    return arguments.length === 1 ? se11(e26) : new o30(e26, t32, r91, n37 ?? 1);
  }
  function o30(e26, t32, r91, n37) {
    this.h = +e26, this.c = +t32, this.l = +r91, this.opacity = +n37;
  }
  function le11(e26) {
    if (isNaN(e26.h))
      return new l32(e26.l, 0, 0, e26.opacity);
    var t32 = e26.h * P23;
    return new l32(e26.l, Math.cos(t32) * e26.c, Math.sin(t32) * e26.c, e26.opacity);
  }
  b24(o30, he9, g29(u29, { brighter(e26) {
    return new o30(this.h, this.c, this.l + I23 * (e26 ?? 1), this.opacity);
  }, darker(e26) {
    return new o30(this.h, this.c, this.l - I23 * (e26 ?? 1), this.opacity);
  }, rgb() {
    return le11(this).rgb();
  } }));
  var oe12 = -0.14861;
  var L21 = 1.78277;
  var K24 = -0.29227;
  var z22 = -0.90649;
  var k20 = 1.97294;
  var xe9 = k20 * z22;
  var ce9 = k20 * L21;
  var ue9 = L21 * K24 - z22 * oe12;
  function ke8(e26) {
    if (e26 instanceof $23)
      return new $23(e26.h, e26.s, e26.l, e26.opacity);
    e26 instanceof a25 || (e26 = R21(e26));
    var t32 = e26.r / 255, r91 = e26.g / 255, n37 = e26.b / 255, i29 = (ue9 * n37 + xe9 * t32 - ce9 * r91) / (ue9 + xe9 - ce9), f25 = n37 - i29, s29 = (k20 * (r91 - i29) - K24 * f25) / z22, x22 = Math.sqrt(s29 * s29 + f25 * f25) / (k20 * i29 * (1 - i29)), d25 = x22 ? Math.atan2(s29, f25) * _22 - 120 : NaN;
    return new $23(d25 < 0 ? d25 + 360 : d25, x22, i29, e26.opacity);
  }
  function X23(e26, t32, r91, n37) {
    return arguments.length === 1 ? ke8(e26) : new $23(e26, t32, r91, n37 ?? 1);
  }
  function $23(e26, t32, r91, n37) {
    this.h = +e26, this.s = +t32, this.l = +r91, this.opacity = +n37;
  }
  b24($23, X23, g29(u29, { brighter(e26) {
    return e26 = e26 == null ? y21 : Math.pow(y21, e26), new $23(this.h, this.s, this.l * e26, this.opacity);
  }, darker(e26) {
    return e26 = e26 == null ? p23 : Math.pow(p23, e26), new $23(this.h, this.s, this.l * e26, this.opacity);
  }, rgb() {
    var e26 = isNaN(this.h) ? 0 : (this.h + 120) * P23, t32 = +this.l, r91 = isNaN(this.s) ? 0 : this.s * t32 * (1 - t32), n37 = Math.cos(e26), i29 = Math.sin(e26);
    return new a25(255 * (t32 + r91 * (oe12 * n37 + L21 * i29)), 255 * (t32 + r91 * (K24 * n37 + z22 * i29)), 255 * (t32 + r91 * (k20 * n37)), this.opacity);
  } }));

  // https://esm.sh/v135/d3-interpolate@3.0.1/denonext/d3-interpolate.mjs
  function T20(e26, r91, t32, n37, o35) {
    var u30 = e26 * e26, i29 = u30 * e26;
    return ((1 - 3 * e26 + 3 * u30 - i29) * r91 + (4 - 6 * u30 + 3 * i29) * t32 + (1 + 3 * e26 + 3 * u30 - 3 * i29) * n37 + i29 * o35) / 6;
  }
  function D21(e26) {
    var r91 = e26.length - 1;
    return function(t32) {
      var n37 = t32 <= 0 ? t32 = 0 : t32 >= 1 ? (t32 = 1, r91 - 1) : Math.floor(t32 * r91), o35 = e26[n37], u30 = e26[n37 + 1], i29 = n37 > 0 ? e26[n37 - 1] : 2 * o35 - u30, f25 = n37 < r91 - 1 ? e26[n37 + 2] : 2 * u30 - o35;
      return T20((t32 - n37 / r91) * r91, i29, o35, u30, f25);
    };
  }
  function H24(e26) {
    var r91 = e26.length;
    return function(t32) {
      var n37 = Math.floor(((t32 %= 1) < 0 ? ++t32 : t32) * r91), o35 = e26[(n37 + r91 - 1) % r91], u30 = e26[n37 % r91], i29 = e26[(n37 + 1) % r91], f25 = e26[(n37 + 2) % r91];
      return T20((t32 - n37 / r91) * r91, o35, u30, i29, f25);
    };
  }
  var w25 = (e26) => () => e26;
  function Z21(e26, r91) {
    return function(t32) {
      return e26 + t32 * r91;
    };
  }
  function mr6(e26, r91, t32) {
    return e26 = Math.pow(e26, t32), r91 = Math.pow(r91, t32) - e26, t32 = 1 / t32, function(n37) {
      return Math.pow(e26 + n37 * r91, t32);
    };
  }
  function v28(e26, r91) {
    var t32 = r91 - e26;
    return t32 ? Z21(e26, t32 > 180 || t32 < -180 ? t32 - 360 * Math.round(t32 / 360) : t32) : w25(isNaN(e26) ? r91 : e26);
  }
  function F23(e26) {
    return (e26 = +e26) == 1 ? s27 : function(r91, t32) {
      return t32 - r91 ? mr6(r91, t32, e26) : w25(isNaN(r91) ? t32 : r91);
    };
  }
  function s27(e26, r91) {
    var t32 = r91 - e26;
    return t32 ? Z21(e26, t32) : w25(isNaN(e26) ? r91 : e26);
  }
  var C20 = function e21(r91) {
    var t32 = F23(r91);
    function n37(o35, u30) {
      var i29 = t32((o35 = V21(o35)).r, (u30 = V21(u30)).r), f25 = t32(o35.g, u30.g), c30 = t32(o35.b, u30.b), l35 = s27(o35.opacity, u30.opacity);
      return function(a27) {
        return o35.r = i29(a27), o35.g = f25(a27), o35.b = c30(a27), o35.opacity = l35(a27), o35 + "";
      };
    }
    return n37.gamma = e21, n37;
  }(1);
  function J23(e26) {
    return function(r91) {
      var t32 = r91.length, n37 = new Array(t32), o35 = new Array(t32), u30 = new Array(t32), i29, f25;
      for (i29 = 0; i29 < t32; ++i29)
        f25 = V21(r91[i29]), n37[i29] = f25.r || 0, o35[i29] = f25.g || 0, u30[i29] = f25.b || 0;
      return n37 = e26(n37), o35 = e26(o35), u30 = e26(u30), f25.opacity = 1, function(c30) {
        return f25.r = n37(c30), f25.g = o35(c30), f25.b = u30(c30), f25 + "";
      };
    };
  }
  var sr5 = J23(D21);
  var hr6 = J23(H24);
  function S24(e26, r91) {
    r91 || (r91 = []);
    var t32 = e26 ? Math.min(r91.length, e26.length) : 0, n37 = r91.slice(), o35;
    return function(u30) {
      for (o35 = 0; o35 < t32; ++o35)
        n37[o35] = e26[o35] * (1 - u30) + r91[o35] * u30;
      return n37;
    };
  }
  function L22(e26) {
    return ArrayBuffer.isView(e26) && !(e26 instanceof DataView);
  }
  function I24(e26, r91) {
    var t32 = r91 ? r91.length : 0, n37 = e26 ? Math.min(t32, e26.length) : 0, o35 = new Array(n37), u30 = new Array(t32), i29;
    for (i29 = 0; i29 < n37; ++i29)
      o35[i29] = y22(e26[i29], r91[i29]);
    for (; i29 < t32; ++i29)
      u30[i29] = r91[i29];
    return function(f25) {
      for (i29 = 0; i29 < n37; ++i29)
        u30[i29] = o35[i29](f25);
      return u30;
    };
  }
  function z23(e26, r91) {
    var t32 = /* @__PURE__ */ new Date();
    return e26 = +e26, r91 = +r91, function(n37) {
      return t32.setTime(e26 * (1 - n37) + r91 * n37), t32;
    };
  }
  function x21(e26, r91) {
    return e26 = +e26, r91 = +r91, function(t32) {
      return e26 * (1 - t32) + r91 * t32;
    };
  }
  function O19(e26, r91) {
    var t32 = {}, n37 = {}, o35;
    (e26 === null || typeof e26 != "object") && (e26 = {}), (r91 === null || typeof r91 != "object") && (r91 = {});
    for (o35 in r91)
      o35 in e26 ? t32[o35] = y22(e26[o35], r91[o35]) : n37[o35] = r91[o35];
    return function(u30) {
      for (o35 in t32)
        n37[o35] = t32[o35](u30);
      return n37;
    };
  }
  var V22 = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
  var E22 = new RegExp(V22.source, "g");
  function gr6(e26) {
    return function() {
      return e26;
    };
  }
  function dr5(e26) {
    return function(r91) {
      return e26(r91) + "";
    };
  }
  function _23(e26, r91) {
    var t32 = V22.lastIndex = E22.lastIndex = 0, n37, o35, u30, i29 = -1, f25 = [], c30 = [];
    for (e26 = e26 + "", r91 = r91 + ""; (n37 = V22.exec(e26)) && (o35 = E22.exec(r91)); )
      (u30 = o35.index) > t32 && (u30 = r91.slice(t32, u30), f25[i29] ? f25[i29] += u30 : f25[++i29] = u30), (n37 = n37[0]) === (o35 = o35[0]) ? f25[i29] ? f25[i29] += o35 : f25[++i29] = o35 : (f25[++i29] = null, c30.push({ i: i29, x: x21(n37, o35) })), t32 = E22.lastIndex;
    return t32 < r91.length && (u30 = r91.slice(t32), f25[i29] ? f25[i29] += u30 : f25[++i29] = u30), f25.length < 2 ? c30[0] ? dr5(c30[0].x) : gr6(r91) : (r91 = c30.length, function(l35) {
      for (var a27 = 0, p24; a27 < r91; ++a27)
        f25[(p24 = c30[a27]).i] = p24.x(l35);
      return f25.join("");
    });
  }
  function y22(e26, r91) {
    var t32 = typeof r91, n37;
    return r91 == null || t32 === "boolean" ? w25(r91) : (t32 === "number" ? x21 : t32 === "string" ? (n37 = H23(r91)) ? (r91 = n37, C20) : _23 : r91 instanceof H23 ? C20 : r91 instanceof Date ? z23 : L22(r91) ? S24 : Array.isArray(r91) ? I24 : typeof r91.valueOf != "function" && typeof r91.toString != "function" || isNaN(r91) ? O19 : x21)(e26, r91);
  }
  function yr5(e26, r91) {
    return e26 = +e26, r91 = +r91, function(t32) {
      return Math.round(e26 * (1 - t32) + r91 * t32);
    };
  }
  var $24 = 180 / Math.PI;
  var B23 = { translateX: 0, translateY: 0, rotate: 0, skewX: 0, scaleX: 1, scaleY: 1 };
  function G23(e26, r91, t32, n37, o35, u30) {
    var i29, f25, c30;
    return (i29 = Math.sqrt(e26 * e26 + r91 * r91)) && (e26 /= i29, r91 /= i29), (c30 = e26 * t32 + r91 * n37) && (t32 -= e26 * c30, n37 -= r91 * c30), (f25 = Math.sqrt(t32 * t32 + n37 * n37)) && (t32 /= f25, n37 /= f25, c30 /= f25), e26 * n37 < r91 * t32 && (e26 = -e26, r91 = -r91, c30 = -c30, i29 = -i29), { translateX: o35, translateY: u30, rotate: Math.atan2(r91, e26) * $24, skewX: Math.atan(c30) * $24, scaleX: i29, scaleY: f25 };
  }
  var k21;
  function P24(e26) {
    let r91 = new (typeof DOMMatrix == "function" ? DOMMatrix : WebKitCSSMatrix)(e26 + "");
    return r91.isIdentity ? B23 : G23(r91.a, r91.b, r91.c, r91.d, r91.e, r91.f);
  }
  function b25(e26) {
    return e26 == null ? B23 : (k21 || (k21 = document.createElementNS("http://www.w3.org/2000/svg", "g")), k21.setAttribute("transform", e26), (e26 = k21.transform.baseVal.consolidate()) ? (e26 = e26.matrix, G23(e26.a, e26.b, e26.c, e26.d, e26.e, e26.f)) : B23);
  }
  function rr6(e26, r91, t32, n37) {
    function o35(l35) {
      return l35.length ? l35.pop() + " " : "";
    }
    function u30(l35, a27, p24, m27, h35, d25) {
      if (l35 !== p24 || a27 !== m27) {
        var g31 = h35.push("translate(", null, r91, null, t32);
        d25.push({ i: g31 - 4, x: x21(l35, p24) }, { i: g31 - 2, x: x21(a27, m27) });
      } else
        (p24 || m27) && h35.push("translate(" + p24 + r91 + m27 + t32);
    }
    function i29(l35, a27, p24, m27) {
      l35 !== a27 ? (l35 - a27 > 180 ? a27 += 360 : a27 - l35 > 180 && (l35 += 360), m27.push({ i: p24.push(o35(p24) + "rotate(", null, n37) - 2, x: x21(l35, a27) })) : a27 && p24.push(o35(p24) + "rotate(" + a27 + n37);
    }
    function f25(l35, a27, p24, m27) {
      l35 !== a27 ? m27.push({ i: p24.push(o35(p24) + "skewX(", null, n37) - 2, x: x21(l35, a27) }) : a27 && p24.push(o35(p24) + "skewX(" + a27 + n37);
    }
    function c30(l35, a27, p24, m27, h35, d25) {
      if (l35 !== p24 || a27 !== m27) {
        var g31 = h35.push(o35(h35) + "scale(", null, ",", null, ")");
        d25.push({ i: g31 - 4, x: x21(l35, p24) }, { i: g31 - 2, x: x21(a27, m27) });
      } else
        (p24 !== 1 || m27 !== 1) && h35.push(o35(h35) + "scale(" + p24 + "," + m27 + ")");
    }
    return function(l35, a27) {
      var p24 = [], m27 = [];
      return l35 = e26(l35), a27 = e26(a27), u30(l35.translateX, l35.translateY, a27.translateX, a27.translateY, p24, m27), i29(l35.rotate, a27.rotate, p24, m27), f25(l35.skewX, a27.skewX, p24, m27), c30(l35.scaleX, l35.scaleY, a27.scaleX, a27.scaleY, p24, m27), l35 = a27 = null, function(h35) {
        for (var d25 = -1, g31 = m27.length, M26; ++d25 < g31; )
          p24[(M26 = m27[d25]).i] = M26.x(h35);
        return p24.join("");
      };
    };
  }
  var wr6 = rr6(P24, "px, ", "px)", "deg)");
  var Ar6 = rr6(b25, ", ", ")", ")");
  var Xr7 = 1e-12;
  function er6(e26) {
    return ((e26 = Math.exp(e26)) + 1 / e26) / 2;
  }
  function Nr6(e26) {
    return ((e26 = Math.exp(e26)) - 1 / e26) / 2;
  }
  function Sr6(e26) {
    return ((e26 = Math.exp(2 * e26)) - 1) / (e26 + 1);
  }
  var Cr6 = function e22(r91, t32, n37) {
    function o35(u30, i29) {
      var f25 = u30[0], c30 = u30[1], l35 = u30[2], a27 = i29[0], p24 = i29[1], m27 = i29[2], h35 = a27 - f25, d25 = p24 - c30, g31 = h35 * h35 + d25 * d25, M26, A27;
      if (g31 < Xr7)
        A27 = Math.log(m27 / l35) / r91, M26 = function(N28) {
          return [f25 + N28 * h35, c30 + N28 * d25, l35 * Math.exp(r91 * N28 * A27)];
        };
      else {
        var R25 = Math.sqrt(g31), Y23 = (m27 * m27 - l35 * l35 + n37 * g31) / (2 * l35 * t32 * R25), q25 = (m27 * m27 - l35 * l35 - n37 * g31) / (2 * m27 * t32 * R25), X25 = Math.log(Math.sqrt(Y23 * Y23 + 1) - Y23), cr6 = Math.log(Math.sqrt(q25 * q25 + 1) - q25);
        A27 = (cr6 - X25) / r91, M26 = function(N28) {
          var Q24 = N28 * A27, K26 = er6(X25), W25 = l35 / (t32 * R25) * (K26 * Sr6(r91 * Q24 + X25) - Nr6(X25));
          return [f25 + W25 * h35, c30 + W25 * d25, l35 * K26 / er6(r91 * Q24 + X25)];
        };
      }
      return M26.duration = A27 * 1e3 * r91 / Math.SQRT2, M26;
    }
    return o35.rho = function(u30) {
      var i29 = Math.max(1e-3, +u30), f25 = i29 * i29, c30 = f25 * f25;
      return e22(i29, f25, c30);
    }, o35;
  }(Math.SQRT2, 2, 4);
  function or6(e26) {
    return function(r91, t32) {
      var n37 = e26((r91 = ee11(r91)).h, (t32 = ee11(t32)).h), o35 = s27(r91.s, t32.s), u30 = s27(r91.l, t32.l), i29 = s27(r91.opacity, t32.opacity);
      return function(f25) {
        return r91.h = n37(f25), r91.s = o35(f25), r91.l = u30(f25), r91.opacity = i29(f25), r91 + "";
      };
    };
  }
  var Lr6 = or6(v28);
  var Br7 = or6(s27);
  function fr6(e26) {
    return function(r91, t32) {
      var n37 = e26((r91 = he9(r91)).h, (t32 = he9(t32)).h), o35 = s27(r91.c, t32.c), u30 = s27(r91.l, t32.l), i29 = s27(r91.opacity, t32.opacity);
      return function(f25) {
        return r91.h = n37(f25), r91.c = o35(f25), r91.l = u30(f25), r91.opacity = i29(f25), r91 + "";
      };
    };
  }
  var kr6 = fr6(v28);
  var Rr6 = fr6(s27);
  function lr6(e26) {
    return function r91(t32) {
      t32 = +t32;
      function n37(o35, u30) {
        var i29 = e26((o35 = X23(o35)).h, (u30 = X23(u30)).h), f25 = s27(o35.s, u30.s), c30 = s27(o35.l, u30.l), l35 = s27(o35.opacity, u30.opacity);
        return function(a27) {
          return o35.h = i29(a27), o35.s = f25(a27), o35.l = c30(Math.pow(a27, t32)), o35.opacity = l35(a27), o35 + "";
        };
      }
      return n37.gamma = r91, n37;
    }(1);
  }
  var Yr7 = lr6(v28);
  var qr7 = lr6(s27);

  // https://esm.sh/v135/d3-format@3.1.0/denonext/src/defaultLocale.js
  function R22(t32) {
    return Math.abs(t32 = Math.round(t32)) >= 1e21 ? t32.toLocaleString("en").replace(/,/g, "") : t32.toString(10);
  }
  function l33(t32, n37) {
    if ((i29 = (t32 = n37 ? t32.toExponential(n37 - 1) : t32.toExponential()).indexOf("e")) < 0)
      return null;
    var i29, o35 = t32.slice(0, i29);
    return [o35.length > 1 ? o35[0] + o35.slice(2) : o35, +t32.slice(i29 + 1)];
  }
  function U22(t32) {
    return t32 = l33(Math.abs(t32)), t32 ? t32[1] : NaN;
  }
  function Y21(t32, n37) {
    return function(i29, o35) {
      for (var e26 = i29.length, a27 = [], p24 = 0, h35 = t32[0], b28 = 0; e26 > 0 && h35 > 0 && (b28 + h35 + 1 > o35 && (h35 = Math.max(1, o35 - b28)), a27.push(i29.substring(e26 -= h35, e26 + h35)), !((b28 += h35 + 1) > o35)); )
        h35 = t32[p24 = (p24 + 1) % t32.length];
      return a27.reverse().join(n37);
    };
  }
  function Z22(t32) {
    return function(n37) {
      return n37.replace(/[0-9]/g, function(i29) {
        return t32[+i29];
      });
    };
  }
  var tt15 = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
  function k22(t32) {
    if (!(n37 = tt15.exec(t32)))
      throw new Error("invalid format: " + t32);
    var n37;
    return new N25({ fill: n37[1], align: n37[2], sign: n37[3], symbol: n37[4], zero: n37[5], width: n37[6], comma: n37[7], precision: n37[8] && n37[8].slice(1), trim: n37[9], type: n37[10] });
  }
  k22.prototype = N25.prototype;
  function N25(t32) {
    this.fill = t32.fill === void 0 ? " " : t32.fill + "", this.align = t32.align === void 0 ? ">" : t32.align + "", this.sign = t32.sign === void 0 ? "-" : t32.sign + "", this.symbol = t32.symbol === void 0 ? "" : t32.symbol + "", this.zero = !!t32.zero, this.width = t32.width === void 0 ? void 0 : +t32.width, this.comma = !!t32.comma, this.precision = t32.precision === void 0 ? void 0 : +t32.precision, this.trim = !!t32.trim, this.type = t32.type === void 0 ? "" : t32.type + "";
  }
  N25.prototype.toString = function() {
    return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
  };
  function q23(t32) {
    t:
      for (var n37 = t32.length, i29 = 1, o35 = -1, e26; i29 < n37; ++i29)
        switch (t32[i29]) {
          case ".":
            o35 = e26 = i29;
            break;
          case "0":
            o35 === 0 && (o35 = i29), e26 = i29;
            break;
          default:
            if (!+t32[i29])
              break t;
            o35 > 0 && (o35 = 0);
            break;
        }
    return o35 > 0 ? t32.slice(0, o35) + t32.slice(e26 + 1) : t32;
  }
  var $25;
  function B24(t32, n37) {
    var i29 = l33(t32, n37);
    if (!i29)
      return t32 + "";
    var o35 = i29[0], e26 = i29[1], a27 = e26 - ($25 = Math.max(-8, Math.min(8, Math.floor(e26 / 3))) * 3) + 1, p24 = o35.length;
    return a27 === p24 ? o35 : a27 > p24 ? o35 + new Array(a27 - p24 + 1).join("0") : a27 > 0 ? o35.slice(0, a27) + "." + o35.slice(a27) : "0." + new Array(1 - a27).join("0") + l33(t32, Math.max(0, n37 + a27 - 1))[0];
  }
  function F24(t32, n37) {
    var i29 = l33(t32, n37);
    if (!i29)
      return t32 + "";
    var o35 = i29[0], e26 = i29[1];
    return e26 < 0 ? "0." + new Array(-e26).join("0") + o35 : o35.length > e26 + 1 ? o35.slice(0, e26 + 1) + "." + o35.slice(e26 + 1) : o35 + new Array(e26 - o35.length + 2).join("0");
  }
  var L23 = { "%": (t32, n37) => (t32 * 100).toFixed(n37), b: (t32) => Math.round(t32).toString(2), c: (t32) => t32 + "", d: R22, e: (t32, n37) => t32.toExponential(n37), f: (t32, n37) => t32.toFixed(n37), g: (t32, n37) => t32.toPrecision(n37), o: (t32) => Math.round(t32).toString(8), p: (t32, n37) => F24(t32 * 100, n37), r: F24, s: B24, X: (t32) => Math.round(t32).toString(16).toUpperCase(), x: (t32) => Math.round(t32).toString(16) };
  function T21(t32) {
    return t32;
  }
  var H25 = Array.prototype.map;
  var J24 = ["y", "z", "a", "f", "p", "n", "\xB5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
  function K25(t32) {
    var n37 = t32.grouping === void 0 || t32.thousands === void 0 ? T21 : Y21(H25.call(t32.grouping, Number), t32.thousands + ""), i29 = t32.currency === void 0 ? "" : t32.currency[0] + "", o35 = t32.currency === void 0 ? "" : t32.currency[1] + "", e26 = t32.decimal === void 0 ? "." : t32.decimal + "", a27 = t32.numerals === void 0 ? T21 : Z22(H25.call(t32.numerals, String)), p24 = t32.percent === void 0 ? "%" : t32.percent + "", h35 = t32.minus === void 0 ? "\u2212" : t32.minus + "", b28 = t32.nan === void 0 ? "NaN" : t32.nan + "";
    function C24(f25) {
      f25 = k22(f25);
      var M26 = f25.fill, w26 = f25.align, u30 = f25.sign, S25 = f25.symbol, x22 = f25.zero, P25 = f25.width, D24 = f25.comma, c30 = f25.precision, G24 = f25.trim, m27 = f25.type;
      m27 === "n" ? (D24 = true, m27 = "g") : L23[m27] || (c30 === void 0 && (c30 = 12), G24 = true, m27 = "g"), (x22 || M26 === "0" && w26 === "=") && (x22 = true, M26 = "0", w26 = "=");
      var W25 = S25 === "$" ? i29 : S25 === "#" && /[boxX]/.test(m27) ? "0" + m27.toLowerCase() : "", _24 = S25 === "$" ? o35 : /[%p]/.test(m27) ? p24 : "", I26 = L23[m27], v31 = /[defgprs%]/.test(m27);
      c30 = c30 === void 0 ? 6 : /[gprs]/.test(m27) ? Math.max(1, Math.min(21, c30)) : Math.max(0, Math.min(20, c30));
      function X25(r91) {
        var g31 = W25, d25 = _24, y24, O21, z26;
        if (m27 === "c")
          d25 = I26(r91) + d25, r91 = "";
        else {
          r91 = +r91;
          var A27 = r91 < 0 || 1 / r91 < 0;
          if (r91 = isNaN(r91) ? b28 : I26(Math.abs(r91), c30), G24 && (r91 = q23(r91)), A27 && +r91 == 0 && u30 !== "+" && (A27 = false), g31 = (A27 ? u30 === "(" ? u30 : h35 : u30 === "-" || u30 === "(" ? "" : u30) + g31, d25 = (m27 === "s" ? J24[8 + $25 / 3] : "") + d25 + (A27 && u30 === "(" ? ")" : ""), v31) {
            for (y24 = -1, O21 = r91.length; ++y24 < O21; )
              if (z26 = r91.charCodeAt(y24), 48 > z26 || z26 > 57) {
                d25 = (z26 === 46 ? e26 + r91.slice(y24 + 1) : r91.slice(y24)) + d25, r91 = r91.slice(0, y24);
                break;
              }
          }
        }
        D24 && !x22 && (r91 = n37(r91, 1 / 0));
        var j26 = g31.length + r91.length + d25.length, s29 = j26 < P25 ? new Array(P25 - j26 + 1).join(M26) : "";
        switch (D24 && x22 && (r91 = n37(s29 + r91, s29.length ? P25 - d25.length : 1 / 0), s29 = ""), w26) {
          case "<":
            r91 = g31 + r91 + d25 + s29;
            break;
          case "=":
            r91 = g31 + s29 + r91 + d25;
            break;
          case "^":
            r91 = s29.slice(0, j26 = s29.length >> 1) + g31 + r91 + d25 + s29.slice(j26);
            break;
          default:
            r91 = s29 + g31 + r91 + d25;
            break;
        }
        return a27(r91);
      }
      return X25.toString = function() {
        return f25 + "";
      }, X25;
    }
    function V24(f25, M26) {
      var w26 = C24((f25 = k22(f25), f25.type = "f", f25)), u30 = Math.max(-8, Math.min(8, Math.floor(U22(M26) / 3))) * 3, S25 = Math.pow(10, -u30), x22 = J24[8 + u30 / 3];
      return function(P25) {
        return w26(S25 * P25) + x22;
      };
    }
    return { format: C24, formatPrefix: V24 };
  }
  var E23;
  var nt16;
  var rt14;
  Q23({ thousands: ",", grouping: [3], currency: ["$", ""] });
  function Q23(t32) {
    return E23 = K25(t32), nt16 = E23.format, rt14 = E23.formatPrefix, E23;
  }

  // https://esm.sh/v135/d3-format@3.1.0/denonext/d3-format.mjs
  function g30(t32, r91) {
    if ((e26 = (t32 = r91 ? t32.toExponential(r91 - 1) : t32.toExponential()).indexOf("e")) < 0)
      return null;
    var e26, o35 = t32.slice(0, e26);
    return [o35.length > 1 ? o35[0] + o35.slice(2) : o35, +t32.slice(e26 + 1)];
  }
  function h34(t32) {
    return t32 = g30(Math.abs(t32)), t32 ? t32[1] : NaN;
  }
  var W23 = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
  function b26(t32) {
    if (!(r91 = W23.exec(t32)))
      throw new Error("invalid format: " + t32);
    var r91;
    return new D22({ fill: r91[1], align: r91[2], sign: r91[3], symbol: r91[4], zero: r91[5], width: r91[6], comma: r91[7], precision: r91[8] && r91[8].slice(1), trim: r91[9], type: r91[10] });
  }
  b26.prototype = D22.prototype;
  function D22(t32) {
    this.fill = t32.fill === void 0 ? " " : t32.fill + "", this.align = t32.align === void 0 ? ">" : t32.align + "", this.sign = t32.sign === void 0 ? "-" : t32.sign + "", this.symbol = t32.symbol === void 0 ? "" : t32.symbol + "", this.zero = !!t32.zero, this.width = t32.width === void 0 ? void 0 : +t32.width, this.comma = !!t32.comma, this.precision = t32.precision === void 0 ? void 0 : +t32.precision, this.trim = !!t32.trim, this.type = t32.type === void 0 ? "" : t32.type + "";
  }
  D22.prototype.toString = function() {
    return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
  };
  var B25 = Array.prototype.map;
  function v29(t32) {
    return Math.max(0, -h34(Math.abs(t32)));
  }
  function tt16(t32, r91) {
    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(h34(r91) / 3))) * 3 - h34(Math.abs(t32)));
  }
  function rt15(t32, r91) {
    return t32 = Math.abs(t32), r91 = Math.abs(r91) - t32, Math.max(0, h34(r91) - h34(t32)) + 1;
  }

  // https://esm.sh/v135/d3-scale@4.0.2/denonext/d3-scale.mjs
  function y23(n37, r91) {
    switch (arguments.length) {
      case 0:
        break;
      case 1:
        this.range(n37);
        break;
      default:
        this.range(r91).domain(n37);
        break;
    }
    return this;
  }
  var W24 = Symbol("implicit");
  function j25(n37) {
    return function() {
      return n37;
    };
  }
  function b27(n37) {
    return +n37;
  }
  var an12 = [0, 1];
  function v30(n37) {
    return n37;
  }
  function B26(n37, r91) {
    return (r91 -= n37 = +n37) ? function(o35) {
      return (o35 - n37) / r91;
    } : j25(isNaN(r91) ? NaN : 0.5);
  }
  function Dn6(n37, r91) {
    var o35;
    return n37 > r91 && (o35 = n37, n37 = r91, r91 = o35), function(t32) {
      return Math.max(n37, Math.min(r91, t32));
    };
  }
  function Fn7(n37, r91, o35) {
    var t32 = n37[0], u30 = n37[1], e26 = r91[0], i29 = r91[1];
    return u30 < t32 ? (t32 = B26(u30, t32), e26 = o35(i29, e26)) : (t32 = B26(t32, u30), e26 = o35(e26, i29)), function(f25) {
      return e26(t32(f25));
    };
  }
  function Ln6(n37, r91, o35) {
    var t32 = Math.min(n37.length, r91.length) - 1, u30 = new Array(t32), e26 = new Array(t32), i29 = -1;
    for (n37[t32] < n37[0] && (n37 = n37.slice().reverse(), r91 = r91.slice().reverse()); ++i29 < t32; )
      u30[i29] = B26(n37[i29], n37[i29 + 1]), e26[i29] = o35(r91[i29], r91[i29 + 1]);
    return function(f25) {
      var c30 = re9(n37, f25, 1, t32) - 1;
      return e26[c30](u30[c30](f25));
    };
  }
  function N26(n37, r91) {
    return r91.domain(n37.domain()).range(n37.range()).interpolate(n37.interpolate()).clamp(n37.clamp()).unknown(n37.unknown());
  }
  function R23() {
    var n37 = an12, r91 = an12, o35 = y22, t32, u30, e26, i29 = v30, f25, c30, a27;
    function s29() {
      var l35 = Math.min(n37.length, r91.length);
      return i29 !== v30 && (i29 = Dn6(n37[0], n37[l35 - 1])), f25 = l35 > 2 ? Ln6 : Fn7, c30 = a27 = null, m27;
    }
    function m27(l35) {
      return l35 == null || isNaN(l35 = +l35) ? e26 : (c30 || (c30 = f25(n37.map(t32), r91, o35)))(t32(i29(l35)));
    }
    return m27.invert = function(l35) {
      return i29(u30((a27 || (a27 = f25(r91, n37.map(t32), x21)))(l35)));
    }, m27.domain = function(l35) {
      return arguments.length ? (n37 = Array.from(l35, b27), s29()) : n37.slice();
    }, m27.range = function(l35) {
      return arguments.length ? (r91 = Array.from(l35), s29()) : r91.slice();
    }, m27.rangeRound = function(l35) {
      return r91 = Array.from(l35), o35 = yr5, s29();
    }, m27.clamp = function(l35) {
      return arguments.length ? (i29 = l35 ? true : v30, s29()) : i29 !== v30;
    }, m27.interpolate = function(l35) {
      return arguments.length ? (o35 = l35, s29()) : o35;
    }, m27.unknown = function(l35) {
      return arguments.length ? (e26 = l35, m27) : e26;
    }, function(l35, g31) {
      return t32 = l35, u30 = g31, s29();
    };
  }
  function I25() {
    return R23()(v30, v30);
  }
  function z24(n37, r91, o35, t32) {
    var u30 = gt11(n37, r91, o35), e26;
    switch (t32 = b26(t32 ?? ",f"), t32.type) {
      case "s": {
        var i29 = Math.max(Math.abs(n37), Math.abs(r91));
        return t32.precision == null && !isNaN(e26 = tt16(u30, i29)) && (t32.precision = e26), rt14(t32, i29);
      }
      case "":
      case "e":
      case "g":
      case "p":
      case "r": {
        t32.precision == null && !isNaN(e26 = rt15(u30, Math.max(Math.abs(n37), Math.abs(r91)))) && (t32.precision = e26 - (t32.type === "e"));
        break;
      }
      case "f":
      case "%": {
        t32.precision == null && !isNaN(e26 = v29(u30)) && (t32.precision = e26 - (t32.type === "%") * 2);
        break;
      }
    }
    return nt16(t32);
  }
  function M25(n37) {
    var r91 = n37.domain;
    return n37.ticks = function(o35) {
      var t32 = r91();
      return X20(t32[0], t32[t32.length - 1], o35 ?? 10);
    }, n37.tickFormat = function(o35, t32) {
      var u30 = r91();
      return z24(u30[0], u30[u30.length - 1], o35 ?? 10, t32);
    }, n37.nice = function(o35) {
      o35 == null && (o35 = 10);
      var t32 = r91(), u30 = 0, e26 = t32.length - 1, i29 = t32[u30], f25 = t32[e26], c30, a27, s29 = 10;
      for (f25 < i29 && (a27 = i29, i29 = f25, f25 = a27, a27 = u30, u30 = e26, e26 = a27); s29-- > 0; ) {
        if (a27 = M22(i29, f25, o35), a27 === c30)
          return t32[u30] = i29, t32[e26] = f25, r91(t32);
        if (a27 > 0)
          i29 = Math.floor(i29 / a27) * a27, f25 = Math.ceil(f25 / a27) * a27;
        else if (a27 < 0)
          i29 = Math.ceil(i29 * a27) / a27, f25 = Math.floor(f25 * a27) / a27;
        else
          break;
        c30 = a27;
      }
      return n37;
    }, n37;
  }
  function C21() {
    var n37 = I25();
    return n37.copy = function() {
      return N26(n37, C21());
    }, y23.apply(n37, arguments), M25(n37);
  }
  function D23(n37, r91) {
    n37 = n37.slice();
    var o35 = 0, t32 = n37.length - 1, u30 = n37[o35], e26 = n37[t32], i29;
    return e26 < u30 && (i29 = o35, o35 = t32, t32 = i29, i29 = u30, u30 = e26, e26 = i29), n37[o35] = r91.floor(u30), n37[t32] = r91.ceil(e26), n37;
  }
  function gt13(n37) {
    return new Date(n37);
  }
  function ht15(n37) {
    return n37 instanceof Date ? +n37 : +/* @__PURE__ */ new Date(+n37);
  }
  function Y22(n37, r91, o35, t32, u30, e26, i29, f25, c30, a27) {
    var s29 = I25(), m27 = s29.invert, l35 = s29.domain, g31 = a27(".%L"), d25 = a27(":%S"), p24 = a27("%I:%M"), x22 = a27("%I %p"), w26 = a27("%a %d"), O21 = a27("%b %d"), T23 = a27("%B"), xn7 = a27("%Y");
    function qn6(h35) {
      return (c30(h35) < h35 ? g31 : f25(h35) < h35 ? d25 : i29(h35) < h35 ? p24 : e26(h35) < h35 ? x22 : t32(h35) < h35 ? u30(h35) < h35 ? w26 : O21 : o35(h35) < h35 ? T23 : xn7)(h35);
    }
    return s29.invert = function(h35) {
      return new Date(m27(h35));
    }, s29.domain = function(h35) {
      return arguments.length ? l35(Array.from(h35, ht15)) : l35().map(gt13);
    }, s29.ticks = function(h35) {
      var q25 = l35();
      return n37(q25[0], q25[q25.length - 1], h35 ?? 10);
    }, s29.tickFormat = function(h35, q25) {
      return q25 == null ? qn6 : a27(q25);
    }, s29.nice = function(h35) {
      var q25 = l35();
      return (!h35 || typeof h35.range != "function") && (h35 = r91(q25[0], q25[q25.length - 1], h35 ?? 10)), h35 ? l35(D23(q25, h35)) : s29;
    }, s29.copy = function() {
      return N26(s29, Y22(n37, r91, o35, t32, u30, e26, i29, f25, c30, a27));
    }, s29;
  }
  function yn7() {
    return y23.apply(Y22(ke7, ze5, Y19, b23, S21, E19, w23, I21, g28, At11).domain([Date.UTC(2e3, 0, 1), Date.UTC(2e3, 0, 2)]), arguments);
  }

  // https://esm.sh/v135/d3-axis@3.0.0/denonext/d3-axis.mjs
  function R24(t32) {
    return t32;
  }
  var z25 = 1;
  var F25 = 2;
  var C22 = 3;
  var k23 = 4;
  var B27 = 1e-6;
  function L24(t32) {
    return "translate(" + t32 + ",0)";
  }
  function O20(t32) {
    return "translate(0," + t32 + ")";
  }
  function T22(t32) {
    return (r91) => +t32(r91);
  }
  function N27(t32, r91) {
    return r91 = Math.max(0, t32.bandwidth() - r91 * 2) / 2, t32.round() && (r91 = Math.round(r91)), (l35) => +t32(l35) + r91;
  }
  function X24() {
    return !this.__axis;
  }
  function V23(t32, r91) {
    var l35 = [], m27 = null, h35 = null, c30 = 6, a27 = 6, b28 = 3, e26 = typeof window < "u" && window.devicePixelRatio > 1 ? 0 : 0.5, o35 = t32 === z25 || t32 === k23 ? -1 : 1, x22 = t32 === k23 || t32 === F25 ? "x" : "y", S25 = t32 === z25 || t32 === C22 ? L24 : O20;
    function i29(n37) {
      var E24 = m27 ?? (r91.ticks ? r91.ticks.apply(r91, l35) : r91.domain()), I26 = h35 ?? (r91.tickFormat ? r91.tickFormat.apply(r91, l35) : R24), P25 = Math.max(c30, 0) + b28, H26 = r91.range(), y24 = +H26[0] + e26, A27 = +H26[H26.length - 1] + e26, v31 = (r91.bandwidth ? N27 : T22)(r91.copy(), e26), g31 = n37.selection ? n37.selection() : n37, f25 = g31.selectAll(".domain").data([null]), u30 = g31.selectAll(".tick").data(E24, r91).order(), _24 = u30.exit(), M26 = u30.enter().append("g").attr("class", "tick"), p24 = u30.select("line"), d25 = u30.select("text");
      f25 = f25.merge(f25.enter().insert("path", ".tick").attr("class", "domain").attr("stroke", "currentColor")), u30 = u30.merge(M26), p24 = p24.merge(M26.append("line").attr("stroke", "currentColor").attr(x22 + "2", o35 * c30)), d25 = d25.merge(M26.append("text").attr("fill", "currentColor").attr(x22, o35 * P25).attr("dy", t32 === z25 ? "0em" : t32 === C22 ? "0.71em" : "0.32em")), n37 !== g31 && (f25 = f25.transition(n37), u30 = u30.transition(n37), p24 = p24.transition(n37), d25 = d25.transition(n37), _24 = _24.transition(n37).attr("opacity", B27).attr("transform", function(s29) {
        return isFinite(s29 = v31(s29)) ? S25(s29 + e26) : this.getAttribute("transform");
      }), M26.attr("opacity", B27).attr("transform", function(s29) {
        var w26 = this.parentNode.__axis;
        return S25((w26 && isFinite(w26 = w26(s29)) ? w26 : v31(s29)) + e26);
      })), _24.remove(), f25.attr("d", t32 === k23 || t32 === F25 ? a27 ? "M" + o35 * a27 + "," + y24 + "H" + e26 + "V" + A27 + "H" + o35 * a27 : "M" + e26 + "," + y24 + "V" + A27 : a27 ? "M" + y24 + "," + o35 * a27 + "V" + e26 + "H" + A27 + "V" + o35 * a27 : "M" + y24 + "," + e26 + "H" + A27), u30.attr("opacity", 1).attr("transform", function(s29) {
        return S25(v31(s29) + e26);
      }), p24.attr(x22 + "2", o35 * c30), d25.attr(x22, o35 * P25).text(I26), g31.filter(X24).attr("fill", "none").attr("font-size", 10).attr("font-family", "sans-serif").attr("text-anchor", t32 === F25 ? "start" : t32 === k23 ? "end" : "middle"), g31.each(function() {
        this.__axis = v31;
      });
    }
    return i29.scale = function(n37) {
      return arguments.length ? (r91 = n37, i29) : r91;
    }, i29.ticks = function() {
      return l35 = Array.from(arguments), i29;
    }, i29.tickArguments = function(n37) {
      return arguments.length ? (l35 = n37 == null ? [] : Array.from(n37), i29) : l35.slice();
    }, i29.tickValues = function(n37) {
      return arguments.length ? (m27 = n37 == null ? null : Array.from(n37), i29) : m27 && m27.slice();
    }, i29.tickFormat = function(n37) {
      return arguments.length ? (h35 = n37, i29) : h35;
    }, i29.tickSize = function(n37) {
      return arguments.length ? (c30 = a27 = +n37, i29) : c30;
    }, i29.tickSizeInner = function(n37) {
      return arguments.length ? (c30 = +n37, i29) : c30;
    }, i29.tickSizeOuter = function(n37) {
      return arguments.length ? (a27 = +n37, i29) : a27;
    }, i29.tickPadding = function(n37) {
      return arguments.length ? (b28 = +n37, i29) : b28;
    }, i29.offset = function(n37) {
      return arguments.length ? (e26 = +n37, i29) : e26;
    }, i29;
  }
  function q24(t32) {
    return V23(C22, t32);
  }

  // https://esm.sh/v135/d3-format@3.1.0/denonext/src/formatSpecifier.js
  var d24 = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
  function o32(t32) {
    if (!(n37 = d24.exec(t32)))
      throw new Error("invalid format: " + t32);
    var n37;
    return new i27({ fill: n37[1], align: n37[2], sign: n37[3], symbol: n37[4], zero: n37[5], width: n37[6], comma: n37[7], precision: n37[8] && n37[8].slice(1), trim: n37[9], type: n37[10] });
  }
  o32.prototype = i27.prototype;
  function i27(t32) {
    this.fill = t32.fill === void 0 ? " " : t32.fill + "", this.align = t32.align === void 0 ? ">" : t32.align + "", this.sign = t32.sign === void 0 ? "-" : t32.sign + "", this.symbol = t32.symbol === void 0 ? "" : t32.symbol + "", this.zero = !!t32.zero, this.width = t32.width === void 0 ? void 0 : +t32.width, this.comma = !!t32.comma, this.precision = t32.precision === void 0 ? void 0 : +t32.precision, this.trim = !!t32.trim, this.type = t32.type === void 0 ? "" : t32.type + "";
  }
  i27.prototype.toString = function() {
    return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
  };

  // https://esm.sh/v135/d3-format@3.1.0/denonext/src/locale.js
  var C23 = Array.prototype.map;

  // https://esm.sh/v135/d3-time-format@4.1.0/denonext/src/isoFormat.js
  var r90 = "%Y-%m-%dT%H:%M:%S.%LZ";
  function e25(t32) {
    return t32.toISOString();
  }
  var a26 = Date.prototype.toISOString ? e25 : At11(r90);

  // https://esm.sh/v135/d3-time-format@4.1.0/denonext/src/isoParse.js
  function o34(r91) {
    var e26 = new Date(r91);
    return isNaN(e26) ? null : e26;
  }
  var i28 = +/* @__PURE__ */ new Date("2000-01-01T00:00:00.000Z") ? o34 : Zt10(r90);

  // lib/utils/tick-formatter-for-bins.ts
  var YEAR = "year";
  var MONTH = "month";
  var DAY = "day";
  var HOUR = "hour";
  var MINUTE = "minute";
  var SECOND = "second";
  var MILLISECOND = "millisecond";
  var durationSecond = 1e3;
  var durationMinute = durationSecond * 60;
  var durationHour = durationMinute * 60;
  var durationDay = durationHour * 24;
  var durationWeek = durationDay * 7;
  var durationMonth = durationDay * 30;
  var durationYear = durationDay * 365;
  var intervals = [
    [SECOND, 1, durationSecond],
    [SECOND, 5, 5 * durationSecond],
    [SECOND, 15, 15 * durationSecond],
    [SECOND, 30, 30 * durationSecond],
    [MINUTE, 1, durationMinute],
    [MINUTE, 5, 5 * durationMinute],
    [MINUTE, 15, 15 * durationMinute],
    [MINUTE, 30, 30 * durationMinute],
    [HOUR, 1, durationHour],
    [HOUR, 3, 3 * durationHour],
    [HOUR, 6, 6 * durationHour],
    [HOUR, 12, 12 * durationHour],
    [DAY, 1, durationDay],
    [DAY, 7, durationWeek],
    [MONTH, 1, durationMonth],
    [MONTH, 3, 3 * durationMonth],
    [YEAR, 1, durationYear]
  ];
  var formatMap = {
    [MILLISECOND]: Nt11("%L"),
    [SECOND]: Nt11("%S s"),
    [MINUTE]: Nt11("%H:%M"),
    [HOUR]: Nt11("%H:%M"),
    [DAY]: Nt11("%b %d"),
    [MONTH]: Nt11("%b %Y"),
    [YEAR]: Nt11("%Y")
  };
  function tickFormatterForBins(type, bins) {
    if (type === "number") {
      return nt16("~s");
    }
    let interval = timeInterval(
      bins[0].x0,
      bins[bins.length - 1].x1,
      bins.length
    );
    return formatMap[interval.interval];
  }
  function timeInterval(min, max, steps) {
    const span = max - min;
    const target = span / steps;
    let i29 = 0;
    while (i29 < intervals.length && intervals[i29][2] < target) {
      i29++;
    }
    if (i29 === intervals.length) {
      return { interval: YEAR, step: binStep(span, steps) };
    }
    if (i29 > 0) {
      let interval = intervals[target / intervals[i29 - 1][2] < intervals[i29][2] / target ? i29 - 1 : i29];
      return { interval: interval[0], step: interval[1] };
    }
    return { interval: MILLISECOND, step: binStep(span, steps, 1) };
  }
  function binStep(span, steps, minstep = 0, logb = Math.LN10) {
    let v31;
    const level = Math.ceil(Math.log(steps) / logb);
    let step = Math.max(
      minstep,
      Math.pow(10, Math.round(Math.log(span) / logb) - level)
    );
    while (Math.ceil(span / step) > steps)
      step *= 10;
    const div = [5, 2];
    for (let i29 = 0, n37 = div.length; i29 < n37; ++i29) {
      v31 = step / div[i29];
      if (v31 >= minstep && span / v31 <= steps)
        step = v31;
    }
    return step;
  }

  // lib/utils/CrossfilterHistogramPlot.ts
  function CrossfilterHistogramPlot(bins, {
    type = "number",
    width = 125,
    height = 40,
    marginTop = 0,
    marginRight = 2,
    marginBottom = 12,
    marginLeft = 2,
    nullCount = 0,
    fillColor = "var(--primary)",
    nullFillColor = "var(--secondary)",
    backgroundBarColor = "var(--moon-gray)"
  }) {
    let nullBinWidth = nullCount === 0 ? 0 : 5;
    let spacing = nullBinWidth ? 4 : 0;
    let extent = (
      /** @type {const} */
      [
        Math.min(...bins.map((d25) => d25.x0)),
        Math.max(...bins.map((d25) => d25.x1))
      ]
    );
    let x22 = type === "date" ? yn7() : C21();
    x22.domain(extent).range([marginLeft + nullBinWidth + spacing, width - marginRight]).nice();
    let y24 = C21().domain([0, Math.max(nullCount, ...bins.map((d25) => d25.length))]).range([height - marginBottom, marginTop]);
    let svg = Le7("svg").attr("width", width).attr("height", height).attr("viewBox", [0, 0, width, height]).attr("style", "max-width: 100%; height: auto; overflow: visible;");
    {
      svg.append("g").attr("fill", backgroundBarColor).selectAll("rect").data(bins).join("rect").attr("x", (d25) => x22(d25.x0) + 1.5).attr("width", (d25) => x22(d25.x1) - x22(d25.x0) - 1.5).attr("y", (d25) => y24(d25.length)).attr("height", (d25) => y24(0) - y24(d25.length));
    }
    let foregroundBarGroup = svg.append("g").attr("fill", fillColor);
    svg.append("g").attr("transform", `translate(0,${height - marginBottom})`).call(
      q24(x22).tickValues(x22.domain()).tickFormat(tickFormatterForBins(type, bins)).tickSize(2.5)
    ).call((g31) => {
      g31.select(".domain").remove();
      g31.attr("class", "gray");
      g31.selectAll(".tick text").attr("text-anchor", (_24, i29) => i29 === 0 ? "start" : "end").attr("dx", (_24, i29) => i29 === 0 ? "-0.25em" : "0.25em");
    });
    let foregroundNullGroup = void 0;
    if (nullCount > 0) {
      let xnull = C21().range([marginLeft, marginLeft + nullBinWidth]);
      svg.append("g").attr("fill", backgroundBarColor).append("rect").attr("x", xnull(0)).attr("width", xnull(1) - xnull(0)).attr("y", y24(nullCount)).attr("height", y24(0) - y24(nullCount));
      foregroundNullGroup = svg.append("g").attr("fill", nullFillColor).attr("color", nullFillColor);
      foregroundNullGroup.append("rect").attr("x", xnull(0)).attr("width", xnull(1) - xnull(0));
      let axisGroup = foregroundNullGroup.append("g").attr("transform", `translate(0,${height - marginBottom})`).append("g").attr("transform", `translate(${xnull(0.5)}, 0)`).attr("class", "tick");
      axisGroup.append("line").attr("stroke", "currentColor").attr("y2", 2.5);
      axisGroup.append("text").attr("fill", "currentColor").attr("y", 4.5).attr("dy", "0.71em").attr("text-anchor", "middle").text("\u2205").attr("font-size", "0.9em").attr("font-family", "var(--sans-serif)").attr("font-weight", "normal");
    }
    svg.selectAll(".tick").attr("font-family", "var(--sans-serif)").attr("font-weight", "normal");
    function render(bins2, nullCount2) {
      foregroundBarGroup.selectAll("rect").data(bins2).join("rect").attr("x", (d25) => x22(d25.x0) + 1.5).attr("width", (d25) => x22(d25.x1) - x22(d25.x0) - 1.5).attr("y", (d25) => y24(d25.length)).attr("height", (d25) => y24(0) - y24(d25.length));
      foregroundNullGroup?.select("rect").attr("y", y24(nullCount2)).attr("height", y24(0) - y24(nullCount2));
    }
    let scales = {
      x: Object.assign(x22, {
        type: "linear",
        domain: x22.domain(),
        range: x22.range()
      }),
      y: Object.assign(y24, {
        type: "linear",
        domain: y24.domain(),
        range: y24.range()
      })
    };
    let node = svg.node();
    assert(node, "Infallable");
    render(bins, nullCount);
    return Object.assign(node, {
      /** @param {string} type */
      scale(type2) {
        let scale = scales[type2];
        assert(scale, "Invalid scale type");
        return scale;
      },
      /**
       * @param {Array<Bin>} bins
       * @param {{ nullCount: number }} opts
       */
      update(bins2, { nullCount: nullCount2 }) {
        render(bins2, nullCount2);
      },
      reset() {
        render(bins, nullCount);
      }
    });
  }

  // lib/clients/Histogram.ts
  var Histogram = class extends x4 {
    #source;
    #el = document.createElement("div");
    #select;
    #interval = void 0;
    #initialized = false;
    #fieldInfo;
    svg;
    constructor(options) {
      super(options.filterBy);
      this.#source = options;
      let bin = on11(options.column)(this, "x");
      this.#select = { x1: bin.x1, x2: bin.x2, y: $t2() };
      this.#interval = new Ne7(this, {
        channel: "x",
        selection: this.filterBy,
        field: this.#source.column,
        brush: void 0
      });
    }
    fields() {
      return [
        {
          table: this.#source.table,
          column: this.#source.column,
          stats: ["min", "max"]
        }
      ];
    }
    fieldInfo(info) {
      this.#fieldInfo = info[0];
      return this;
    }
    /**
     * Return a query specifying the data needed by this Mark client.
     * @param filter The filtering criteria to apply in the query.
     * @returns The client query
     */
    query(filter = []) {
      return le2.from({ source: this.#source.table }).select(this.#select).groupby(["x1", "x2"]).where(filter);
    }
    /**
     * Provide query result data to the mark.
     */
    queryResult(data) {
      let bins = Array.from(data, (d25) => ({
        x0: d25.x1,
        x1: d25.x2,
        length: d25.y
      }));
      let nullCount = 0;
      let nullBinIndex = bins.findIndex((b28) => b28.x0 == null);
      if (nullBinIndex >= 0) {
        nullCount = bins[nullBinIndex].length;
        bins.splice(nullBinIndex, 1);
      }
      if (!this.#initialized) {
        this.svg = CrossfilterHistogramPlot(bins, {
          nullCount,
          type: this.#source.type
        });
        this.#interval?.init(this.svg, null);
        this.#el.appendChild(this.svg);
        this.#initialized = true;
      } else {
        this.svg?.update(bins, { nullCount });
      }
      return this;
    }
    /* Required by the Mark interface */
    type = "rectY";
    /** Required by `mplot.bin` to get the field info. */
    channelField(channel) {
      assert(channel === "x");
      assert(this.#fieldInfo, "No field info yet");
      return this.#fieldInfo;
    }
    get plot() {
      return {
        node: () => this.#el,
        getAttribute(_name) {
          return void 0;
        }
      };
    }
  };

  // lib/utils/ValueCountsPlot.ts
  function ValueCountsPlot(data, {
    width = 125,
    height = 30,
    marginBottom = 12,
    marginRight = 2,
    marginLeft = 2,
    fillColor = "var(--primary)",
    nullFillColor = "var(--secondary)",
    backgroundBarColor = "rgb(226, 226, 226)"
  } = {}) {
    let root = document.createElement("div");
    root.style.position = "relative";
    let container = document.createElement("div");
    Object.assign(container.style, {
      width: `${width}px`,
      height: `${height}px`,
      display: "flex",
      borderRadius: "5px",
      overflow: "hidden"
    });
    let bars = createBars(data, {
      width,
      height,
      marginRight,
      marginLeft,
      fillColor,
      nullFillColor,
      backgroundBarColor
    });
    for (let bar of bars.elements) {
      container.appendChild(bar);
    }
    let text = createTextOutput();
    let hovering = O8(void 0);
    let selected = O8(void 0);
    let counts = O8(data);
    let hitArea = document.createElement("div");
    Object.assign(hitArea.style, {
      position: "absolute",
      top: "0",
      left: "-5px",
      width: `${width + 10}px`,
      height: `${height + marginBottom}px`,
      backgroundColor: "rgba(255, 255, 255, 0.01)",
      cursor: "pointer"
    });
    hitArea.addEventListener("mousemove", (event) => {
      hovering.value = bars.nearestX(event);
    });
    hitArea.addEventListener("mouseout", () => {
      hovering.value = void 0;
    });
    hitArea.addEventListener("mousedown", (event) => {
      let next = bars.nearestX(event);
      selected.value = selected.value === next ? void 0 : next;
    });
    U7(() => {
      text.textContent = bars.textFor(hovering.value ?? selected.value);
      bars.render(counts.value, hovering.value, selected.value);
    });
    root.appendChild(container);
    root.appendChild(text);
    root.appendChild(hitArea);
    return Object.assign(root, { selected, data: counts });
  }
  function createBar(opts) {
    let { title, fillColor, textColor, width, height } = opts;
    let bar = document.createElement("div");
    bar.title = title;
    Object.assign(bar.style, {
      background: createSplitBarFill({
        color: fillColor,
        bgColor: "var(--moon-gray)",
        frac: 50
      }),
      width: `${width}px`,
      height: `${height}px`,
      borderColor: "white",
      borderWidth: "0px 1px 0px 0px",
      borderStyle: "solid",
      opacity: 1,
      textAlign: "center",
      position: "relative",
      display: "flex",
      overflow: "hidden",
      alignItems: "center",
      fontWeight: 400,
      fontFamily: "var(--sans-serif)",
      boxSizing: "border-box"
    });
    let span = document.createElement("span");
    Object.assign(span.style, {
      overflow: "hidden",
      width: `calc(100% - 4px)`,
      left: "0px",
      position: "absolute",
      padding: "0px 2px",
      color: textColor
    });
    if (width > 10) {
      span.textContent = title;
    }
    bar.appendChild(span);
    return bar;
  }
  function prepareData(data) {
    let arr = data.toArray().toSorted((a27, b28) => b28.total - a27.total);
    let total = arr.reduce((acc, d25) => acc + d25.total, 0);
    return {
      bins: arr.filter(
        (d25) => d25.key !== "__quak_null__" && d25.key !== "__quak_unique__"
      ),
      nullCount: arr.find((d25) => d25.key === "__quak_null__")?.total ?? 0,
      uniqueCount: arr.find((d25) => d25.key === "__quak_unique__")?.total ?? 0,
      total
    };
  }
  function createBars(data, opts) {
    let source = prepareData(data);
    let x22 = C21().domain([0, source.total]).range([opts.marginLeft, opts.width - opts.marginRight]);
    let thresh = 20;
    let bars = [];
    for (let d25 of source.bins.slice(0, thresh)) {
      let bar = createBar({
        title: d25.key,
        fillColor: opts.fillColor,
        textColor: "white",
        width: x22(d25.total),
        height: opts.height
      });
      bars.push(Object.assign(bar, { data: d25 }));
    }
    let hoverBar = createVirtualSelectionBar(opts);
    let selectBar = createVirtualSelectionBar(opts);
    let virtualBar;
    if (source.bins.length > thresh) {
      let total = source.bins.slice(thresh).reduce(
        (acc, d25) => acc + d25.total,
        0
      );
      virtualBar = Object.assign(document.createElement("div"), {
        title: "__quak_virtual__"
      });
      Object.assign(virtualBar.style, {
        width: `${x22(total)}px`,
        height: "100%",
        borderColor: "white",
        borderWidth: "0px 1px 0px 0px",
        borderStyle: "solid",
        opacity: 1
      });
      let vbars = document.createElement("div");
      Object.assign(vbars.style, {
        width: "100%",
        height: "100%",
        background: `repeating-linear-gradient(to right, ${opts.fillColor} 0px, ${opts.fillColor} 1px, white 1px, white 2px)`
      });
      virtualBar.appendChild(vbars);
      virtualBar.appendChild(hoverBar);
      virtualBar.appendChild(selectBar);
      Object.defineProperty(virtualBar, "data", {
        value: source.bins.slice(thresh)
      });
      bars.push(virtualBar);
    }
    if (source.uniqueCount) {
      let bar = createBar({
        title: "unique",
        fillColor: opts.backgroundBarColor,
        textColor: "var(--mid-gray)",
        width: x22(source.uniqueCount),
        height: opts.height
      });
      bar.title = "__quak_unique__";
      bars.push(Object.assign(bar, {
        data: {
          key: "__quak_unique__",
          total: source.uniqueCount
        }
      }));
    }
    if (source.nullCount) {
      let bar = createBar({
        title: "null",
        fillColor: opts.nullFillColor,
        textColor: "white",
        width: x22(source.nullCount),
        height: opts.height
      });
      bar.title = "__quak_null__";
      bars.push(Object.assign(bar, {
        data: {
          key: "__quak_null__",
          total: source.uniqueCount
        }
      }));
    }
    let first = bars[0];
    let last = bars[bars.length - 1];
    if (first === last) {
      first.style.borderRadius = "5px";
    } else {
      first.style.borderRadius = "5px 0px 0px 5px";
      last.style.borderRadius = "0px 5px 5px 0px";
    }
    function virtualBin(key) {
      assert(virtualBar);
      let voffset = bars.slice(0, thresh).map((b28) => b28.getBoundingClientRect().width).reduce((a27, b28) => a27 + b28, 0);
      let vbins = virtualBar.data;
      let rect = virtualBar.getBoundingClientRect();
      let dx = rect.width / vbins.length;
      let idx = vbins.findIndex((d25) => d25.key === key);
      assert(idx !== -1, `key ${key} not found in virtual bins`);
      return {
        ...vbins[idx],
        x: dx * idx + voffset
      };
    }
    function reset(opactiy) {
      bars.forEach((bar) => {
        if (bar.title === "__quak_virtual__") {
          let vbars = bar.firstChild;
          vbars.style.opacity = opactiy.toString();
          vbars.style.background = createVirtualBarRepeatingBackground({
            color: opts.fillColor
          });
        } else {
          bar.style.opacity = opactiy.toString();
          bar.style.background = createSplitBarFill({
            color: bar.title === "__quak_unique__" ? opts.backgroundBarColor : bar.title === "__quak_null__" ? opts.nullFillColor : opts.fillColor,
            bgColor: opts.backgroundBarColor,
            frac: 1
          });
        }
        bar.style.borderColor = "white";
        bar.style.borderWidth = "0px 1px 0px 0px";
        bar.style.removeProperty("box-shadow");
      });
      bars[bars.length - 1].style.borderWidth = "0px";
      hoverBar.style.visibility = "hidden";
      selectBar.style.visibility = "hidden";
    }
    function hover(key, selected) {
      let bar = bars.find((b28) => b28.data.key === key);
      if (bar !== void 0) {
        bar.style.opacity = "1";
        return;
      }
      let vbin = virtualBin(key);
      hoverBar.title = vbin.key;
      hoverBar.data = vbin;
      hoverBar.style.opacity = selected ? "0.25" : "1";
      hoverBar.style.left = `${vbin.x}px`;
      hoverBar.style.visibility = "visible";
    }
    function select(key) {
      let bar = bars.find((b28) => b28.data.key === key);
      if (bar !== void 0) {
        bar.style.opacity = "1";
        bar.style.boxShadow = "inset 0 0 0 1.2px black";
        return;
      }
      let vbin = virtualBin(key);
      selectBar.style.opacity = "1";
      selectBar.title = vbin.key;
      selectBar.data = vbin;
      selectBar.style.left = `${vbin.x}px`;
      selectBar.style.visibility = "visible";
    }
    let counts = Object.fromEntries(
      Array.from(data.toArray(), (d25) => [d25.key, d25.total])
    );
    return {
      elements: bars,
      nearestX(event) {
        let bar = nearestX(event, bars);
        if (!bar)
          return;
        if (bar.title !== "__quak_virtual__") {
          return bar.data.key;
        }
        let rect = bar.getBoundingClientRect();
        let mouseX = event.clientX - rect.left;
        let data2 = bar.data;
        let idx = Math.floor(mouseX / rect.width * data2.length);
        return data2[idx].key;
      },
      render(data2, hovering, selected) {
        reset(hovering || selected ? 0.4 : 1);
        let update = Object.fromEntries(
          Array.from(data2.toArray(), (d25) => [d25.key, d25.total])
        );
        let total = Object.values(update).reduce((a27, b28) => a27 + b28, 0);
        for (let bar of bars) {
          if (bar.title === "__quak_virtual__") {
            let vbars = bar.firstChild;
            vbars.style.background = createVirtualBarRepeatingBackground({
              color: total < source.total || selected ? opts.backgroundBarColor : opts.fillColor
            });
          } else {
            let key = bar.data.key;
            let frac = (update[key] ?? 0) / counts[key];
            if (selected)
              frac = key === selected ? frac : 0;
            bar.style.background = createSplitBarFill({
              color: bar.title === "__quak_unique__" ? opts.backgroundBarColor : bar.title === "__quak_null__" ? opts.nullFillColor : opts.fillColor,
              bgColor: opts.backgroundBarColor,
              frac: isNaN(frac) ? 0 : frac
            });
          }
        }
        if (hovering !== void 0) {
          hover(hovering, selected);
        }
        if (selected !== void 0) {
          select(selected);
        }
      },
      textFor(key) {
        if (key === void 0) {
          let ncats = data.numRows;
          return `${ncats.toLocaleString()} categor${ncats === 1 ? "y" : "ies"}`;
        }
        if (key === "__quak_unique__") {
          return `${source.uniqueCount.toLocaleString()} unique value${source.uniqueCount === 1 ? "" : "s"}`;
        }
        if (key === "__quak_null__") {
          return "null";
        }
        return key.toString();
      }
    };
  }
  function createTextOutput() {
    let node = document.createElement("div");
    Object.assign(node.style, {
      pointerEvents: "none",
      height: "15px",
      maxWidth: "100%",
      overflow: "hidden",
      textOverflow: "ellipsis",
      position: "absolute",
      fontWeight: 400,
      marginTop: "1.5px",
      color: "var(--mid-gray)"
    });
    return node;
  }
  function createVirtualSelectionBar(opts) {
    let node = document.createElement("div");
    Object.assign(node.style, {
      position: "absolute",
      top: "0",
      width: "1.5px",
      height: "100%",
      backgroundColor: opts.fillColor,
      pointerEvents: "none",
      visibility: "hidden"
    });
    return Object.assign(node, {
      data: { key: "", total: 0 }
    });
  }
  function nearestX({ clientX }, bars) {
    for (let bar of bars) {
      let rect = bar.getBoundingClientRect();
      if (clientX >= rect.left && clientX <= rect.right) {
        return bar;
      }
    }
  }
  function createSplitBarFill(options) {
    let { color, bgColor, frac } = options;
    let p24 = frac * 100;
    return `linear-gradient(to top, ${color} ${p24}%, ${bgColor} ${p24}%, ${bgColor} ${100 - p24}%)`;
  }
  function createVirtualBarRepeatingBackground({ color }) {
    return `repeating-linear-gradient(to right, ${color} 0px, ${color} 1px, white 1px, white 2px)`;
  }

  // lib/clients/ValueCounts.ts
  var ValueCounts = class extends x4 {
    #table;
    #column;
    #el = document.createElement("div");
    #plot;
    constructor(options) {
      super(options.filterBy);
      this.#table = options.table;
      this.#column = options.column;
      options.filterBy.addEventListener("value", async () => {
        let filters = options.filterBy.predicate();
        let query = this.query(filters);
        if (this.#plot) {
          let data = await this.coordinator.query(query);
          this.#plot.data.value = data;
        }
      });
    }
    query(filter = []) {
      let counts = le2.from({ source: this.#table }).select({
        value: p2`CASE
					WHEN ${i2(this.#column)} IS NULL THEN '__quak_null__'
					ELSE ${i2(this.#column)}
				END`,
        count: $t2()
      }).groupby("value").where(filter);
      return le2.with({ counts }).select(
        {
          key: p2`CASE
						WHEN "count" = 1 AND "value" != '__quak_null__' THEN '__quak_unique__'
						ELSE "value"
					END`,
          total: At2("count")
        }
      ).from("counts").groupby("key");
    }
    queryResult(data) {
      if (!this.#plot) {
        let plot = this.#plot = ValueCountsPlot(data);
        this.#el.appendChild(plot);
        U7(() => {
          let clause = this.clause(plot.selected.value);
          this.filterBy.update(clause);
        });
      } else {
        this.#plot.data.value = data;
      }
      return this;
    }
    clause(value) {
      let update = value === "__quak_null__" ? null : value;
      return Ce3(this.#column, update, {
        source: this
      });
    }
    reset() {
      assert(this.#plot, "ValueCounts plot not initialized");
      this.#plot.selected.value = void 0;
    }
    get plot() {
      return {
        node: () => this.#el
      };
    }
  };

  // lib/clients/StatusBar.ts
  var StatusBar = class extends x4 {
    #table;
    #el = document.createElement("div");
    #button;
    #span;
    #totalRows = void 0;
    constructor(options) {
      super(options.filterBy);
      this.#table = options.table;
      this.#button = document.createElement("button");
      this.#button.innerText = "Reset";
      this.#span = document.createElement("span");
      let div = document.createElement("div");
      div.appendChild(this.#button);
      div.appendChild(this.#span);
      this.#el.appendChild(div);
      this.#el.classList.add("status-bar");
      this.#button.addEventListener("mousedown", () => {
        if (!this.filterBy)
          return;
        for (let { source } of this.filterBy.clauses) {
          if (!isInteractor(source)) {
            console.warn("Skipping non-interactor source", source);
            continue;
          }
          source.reset();
          this.filterBy.update(source.clause());
        }
      });
      this.#button.style.visibility = "hidden";
      this.filterBy?.addEventListener("value", () => {
        if (this.filterBy?.clauses.length === 0) {
          this.#button.style.visibility = "hidden";
        } else {
          this.#button.style.visibility = "visible";
        }
      });
    }
    query(filter = []) {
      let query = le2.from(this.#table).select({ count: $t2() }).where(filter);
      return query;
    }
    queryResult(table) {
      let count = Number(table.get(0)?.count ?? 0);
      if (!this.#totalRows) {
        this.#totalRows = count;
      }
      let countStr = count.toLocaleString();
      if (count == this.#totalRows) {
        this.#span.innerText = `${countStr} rows`;
      } else {
        let totalStr = this.#totalRows.toLocaleString();
        this.#span.innerText = `${countStr} of ${totalStr} rows`;
      }
      return this;
    }
    node() {
      return this.#el;
    }
  };
  function isObject(x22) {
    return typeof x22 === "object" && x22 !== null && !Array.isArray(x22);
  }
  function isInteractor(x22) {
    return isObject(x22) && "clause" in x22 && "reset" in x22;
  }

  // lib/clients/DataTable.ts
  async function datatable(table, options = {}) {
    assert(options.coordinator, "Must provide a coordinator");
    let empty = await options.coordinator.query(
      le2.from(table).select(options.columns ?? ["*"]).limit(0).toString()
    );
    let client = new DataTable({
      table,
      schema: empty.schema,
      height: options.height
    });
    options.coordinator.connect(client);
    return client;
  }
  var DataTable = class extends x4 {
    /** source of the data */
    #meta;
    /** for the component */
    #root = document.createElement("div");
    /** shadow root for the component */
    #shadowRoot = this.#root.attachShadow({ mode: "open" });
    /** header of the table */
    #thead = document.createElement("thead");
    /** body of the table */
    #tbody = document.createElement("tbody");
    /** The SQL order by */
    #orderby = [];
    /** template row for data */
    #templateRow = void 0;
    /** div containing the table */
    #tableRoot;
    /** offset into the data */
    #offset = 0;
    /** number of rows to fetch */
    #limit = 100;
    /** whether an internal request is pending */
    #pendingInternalRequest = false;
    /** number of rows to display */
    #rows = 11.5;
    /** height of a row */
    #rowHeight = 22;
    /** width of a column */
    #columnWidth = 125;
    /** height of the header */
    #headerHeight = "94px";
    /** the formatter for the data table entries */
    #format;
    /** @type {AsyncBatchReader<arrow.StructRowProxy> | null} */
    #reader = null;
    #sql = O8(void 0);
    constructor(source) {
      super(Re3.crossfilter());
      this.#format = formatof(source.schema);
      this.#pendingInternalRequest = false;
      this.#meta = source;
      let maxHeight = `${(this.#rows + 1) * this.#rowHeight - 1}px`;
      if (source.height) {
        this.#rows = Math.floor(source.height / this.#rowHeight);
        maxHeight = `${source.height}px`;
      }
      let root = Ie5`<div class="quak" style=${{
        maxHeight
      }}>`;
      root.appendChild(
        Ie5.fragment`<table style=${{ tableLayout: "fixed" }}>${this.#thead}${this.#tbody}</table>`
      );
      this.#shadowRoot.appendChild(Ie5`<style>
:host {
	all: initial;
	--sans-serif: -apple-system, BlinkMacSystemFont, "avenir next", avenir, helvetica, "helvetica neue", ubuntu, roboto, noto, "segoe ui", arial, sans-serif;
	--light-silver: #efefef;
	--spacing-none: 0;
	--white: #fff;
	--gray: #929292;
	--dark-gray: #333;
	--moon-gray: #c4c4c4;
	--mid-gray: #6e6e6e;

	--stone-blue: #64748b;
	--yellow-gold: #ca8a04;

	--teal: #027982;
	--dark-pink: #D35A5F;

	--light-blue: #7E93CF;
	--dark-yellow-gold: #A98447;

	--purple: #987fd3;

	--primary: var(--stone-blue);
	--secondary: var(--yellow-gold);
}

.highlight {
	background-color: var(--light-silver);
}

.highlight-cell {
	border: 1px solid var(--moon-gray);
}

.quak {
  border-radius: 0.2rem;
  border: 1px solid var(--light-silver);
  overflow-y: auto;
}

table {
  border-collapse: separate;
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;

  margin: var(--spacing-none);
  color: var(--dark-gray);
  font: 13px / 1.2 var(--sans-serif);

  width: 100%;
}

thead {
  position: sticky;
  vertical-align: top;
  text-align: left;
  top: 0;
}

td {
  border: 1px solid var(--light-silver);
  border-bottom: solid 1px transparent;
  border-right: solid 1px transparent;
  overflow: hidden;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
  padding: 4px 6px;
}

tr:first-child td {
  border-top: solid 1px transparent;
}

th {
  display: table-cell;
  vertical-align: inherit;
  font-weight: bold;
  text-align: -internal-center;
  unicode-bidi: isolate;

  position: relative;
  background: var(--white);
  border-bottom: solid 1px var(--light-silver);
  border-left: solid 1px var(--light-silver);
  padding: 5px 6px;
  user-select: none;
}

.number, .date {
  font-variant-numeric: tabular-nums;
}

.gray {
  color: var(--gray);
}

.number {
  text-align: right;
}

td:nth-child(1), th:nth-child(1) {
  font-variant-numeric: tabular-nums;
  text-align: center;
  color: var(--moon-gray);
  padding: 0 4px;
}

td:first-child, th:first-child {
  border-left: none;
}

th:first-child {
  border-left: none;
  vertical-align: top;
  width: 20px;
  padding: 7px;
}

td:nth-last-child(2), th:nth-last-child(2) {
  border-right: 1px solid var(--light-silver);
}

tr:first-child td {
	border-top: solid 1px transparent;
}

.resize-handle {
	width: 5px;
	height: 100%;
	background-color: transparent;
	position: absolute;
	right: -2.5px;
	top: 0;
	cursor: ew-resize;
	z-index: 1;
}

.quak .sort-button {
	cursor: pointer;
	background-color: var(--white);
	user-select: none;
}

.status-bar {
	display: flex;
	justify-content: flex-end;
	font-family: var(--sans-serif);
	margin-right: 10px;
	margin-top: 5px;
}

.status-bar button {
	border: none;
	background-color: var(--white);
	color: var(--primary);
	font-weight: 600;
	font-size: 0.875rem;
	cursor: pointer;
	margin-right: 5px;
}

.status-bar span {
	color: var(--gray);
	font-weight: 400;
	font-size: 0.75rem;
	font-variant-numeric: tabular-nums;
}

</style>`);
      this.#shadowRoot.appendChild(root);
      this.#tableRoot = root;
      this.#tableRoot.addEventListener("scroll", async () => {
        let isAtBottom = this.#tableRoot.scrollHeight - this.#tableRoot.scrollTop < this.#rows * this.#rowHeight * 1.5;
        if (isAtBottom) {
          await this.#appendRows(this.#rows);
        }
      });
    }
    get sql() {
      return this.#sql.value;
    }
    fields() {
      return this.#columns.map((column) => ({
        table: this.#meta.table,
        column,
        stats: []
      }));
    }
    node() {
      return this.#root;
    }
    resize(height) {
      this.#rows = Math.floor(height / this.#rowHeight);
      this.#tableRoot.style.maxHeight = `${height}px`;
      this.#tableRoot.scrollTop = 0;
    }
    get #columns() {
      return this.#meta.schema.fields.map((field) => field.name);
    }
    /**
     * @param {Array<unknown>} filter
     */
    query(filter = []) {
      let query = le2.from(this.#meta.table).select(this.#columns).where(filter).orderby(
        this.#orderby.filter((o35) => o35.order !== "unset").map((o35) => o35.order === "asc" ? asc(o35.field) : $2(o35.field))
      );
      this.#sql.value = query.clone().toString();
      return query.limit(this.#limit).offset(this.#offset);
    }
    /**
     * A mosiac lifecycle function that is called with the results from `query`.
     * Must be synchronous, and return `this`.
     */
    queryResult(table) {
      if (!this.#pendingInternalRequest) {
        this.#reader = new AsyncBatchReader(() => {
          this.#pendingInternalRequest = true;
          this.requestData(this.#offset + this.#limit);
        });
        this.#tbody.replaceChildren();
        this.#tableRoot.scrollTop = 0;
        this.#offset = 0;
      }
      let batch = table[Symbol.iterator]();
      this.#reader?.enqueueBatch(batch, {
        last: table.numRows < this.#limit
      });
      return this;
    }
    update() {
      if (!this.#pendingInternalRequest) {
        this.#appendRows(this.#rows * 2);
      }
      this.#pendingInternalRequest = false;
      return this;
    }
    requestData(offset = 0) {
      this.#offset = offset;
      let query = this.query(this.filterBy?.predicate(this));
      this.requestQuery(query);
      this.coordinator.prefetch(query.clone().offset(offset + this.#limit));
    }
    fieldInfo(infos) {
      let classes = classof(this.#meta.schema);
      {
        let statusBar = new StatusBar({
          table: this.#meta.table,
          filterBy: this.filterBy
        });
        this.coordinator.connect(statusBar);
        this.#shadowRoot.appendChild(statusBar.node());
      }
      this.#templateRow = Ie5`<tr><td></td>${infos.map((info) => Ie5.fragment`<td class=${classes[info.column]}></td>`)}
			<td style=${{ width: "99%", borderLeft: "none", borderRight: "none" }}></td>
		</tr>`;
      let observer = new IntersectionObserver((entries) => {
        for (let entry of entries) {
          if (!isTableColumnHeaderWithSvg(entry.target))
            continue;
          let vis = entry.target.vis;
          if (!vis)
            continue;
          if (entry.isIntersecting) {
            this.coordinator.connect(vis);
          } else {
            this.coordinator?.disconnect(vis);
          }
        }
      }, {
        root: this.#tableRoot
      });
      let cols = this.#meta.schema.fields.map((field) => {
        let info = infos.find((c30) => c30.column === field.name);
        assert(info, `No info for column ${field.name}`);
        let vis = void 0;
        if (info.type === "number" || info.type === "date") {
          vis = new Histogram({
            table: this.#meta.table,
            column: field.name,
            type: info.type,
            filterBy: this.filterBy
          });
        } else {
          vis = new ValueCounts({
            table: this.#meta.table,
            column: field.name,
            filterBy: this.filterBy
          });
        }
        let th2 = thcol(field, this.#columnWidth, vis);
        observer.observe(th2);
        return th2;
      });
      U7(() => {
        this.#orderby = cols.map((col, i29) => ({
          field: this.#columns[i29],
          order: col.sortState.value
        }));
        this.requestData();
      });
      this.#thead.appendChild(
        Ie5`<tr style=${{ height: this.#headerHeight }}>
				<th></th>
				${cols}
				<th style=${{ width: "99%", borderLeft: "none", borderRight: "none" }}></th>
			</tr>`
      );
      {
        this.#tableRoot.addEventListener("mouseover", (event) => {
          if (isTableCellElement(event.target) && isTableRowElement(event.target.parentNode)) {
            const cell = event.target;
            const row = event.target.parentNode;
            highlight(cell, row);
          }
        });
        this.#tableRoot.addEventListener("mouseout", (event) => {
          if (isTableCellElement(event.target) && isTableRowElement(event.target.parentNode)) {
            const cell = event.target;
            const row = event.target.parentNode;
            removeHighlight(cell, row);
          }
        });
      }
      return this;
    }
    /** Number of rows to append */
    async #appendRows(nrows) {
      nrows = Math.trunc(nrows);
      while (nrows >= 0) {
        let result = await this.#reader?.next();
        if (!result || result?.done) {
          break;
        }
        this.#appendRow(result.value.row, result.value.index);
        nrows--;
        continue;
      }
    }
    #appendRow(d25, i29) {
      let itr = this.#templateRow?.cloneNode(true);
      assert(itr, "Must have a data row");
      let td3 = itr.childNodes[0];
      td3.appendChild(document.createTextNode(String(i29)));
      for (let j26 = 0; j26 < this.#columns.length; ++j26) {
        td3 = itr.childNodes[j26 + 1];
        td3.classList.remove("gray");
        let col = this.#columns[j26];
        let stringified = this.#format[col](d25[col]);
        if (shouldGrayoutValue(stringified)) {
          td3.classList.add("gray");
        }
        let value = document.createTextNode(stringified);
        td3.appendChild(value);
      }
      this.#tbody.append(itr);
    }
  };
  var TRUNCATE = (
    /** @type {const} */
    {
      whiteSpace: "nowrap",
      overflow: "hidden",
      textOverflow: "ellipsis"
    }
  );
  function thcol(field, minWidth, vis) {
    let buttonVisible = O8(false);
    let width = O8(minWidth);
    let sortState = O8(
      "unset"
    );
    function nextSortState() {
      sortState.value = {
        "unset": "asc",
        "asc": "desc",
        "desc": "unset"
      }[sortState.value];
    }
    let svg = Ie5`<svg style=${{ width: "1.5em" }} fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
		<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 9L12 5.25L15.75 9" />
		<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 15L12 18.75L15.75 15" />
	</svg>`;
    let uparrow = svg.children[0];
    let downarrow = svg.children[1];
    let verticalResizeHandle = Ie5`<div class="resize-handle"></div>`;
    let sortButton = Ie5`<span aria-role="button" class="sort-button" onmousedown=${nextSortState}>${svg}</span>`;
    let th2 = Ie5`<th style=${{ overflow: "hidden" }}>
		<div style=${{ display: "flex", justifyContent: "space-between", alignItems: "center" }}>
			<span style=${{ marginBottom: "5px", maxWidth: "250px", ...TRUNCATE }}>${field.name}</span>
			${sortButton}
		</div>
		${verticalResizeHandle}
		<span class="gray" style=${{ fontWeight: 400, fontSize: "12px", userSelect: "none" }}>${formatDataType(field.type)}</span>
		${vis?.plot?.node()}
	</th>`;
    U7(() => {
      uparrow.setAttribute("stroke", "var(--moon-gray)");
      downarrow.setAttribute("stroke", "var(--moon-gray)");
      let element = { "asc": uparrow, "desc": downarrow, "unset": null }[sortState.value];
      element?.setAttribute("stroke", "var(--dark-gray)");
    });
    U7(() => {
      sortButton.style.visibility = buttonVisible.value ? "visible" : "hidden";
    });
    U7(() => {
      th2.style.width = `${width.value}px`;
    });
    th2.addEventListener("mouseover", () => {
      if (sortState.value === "unset")
        buttonVisible.value = true;
    });
    th2.addEventListener("mouseleave", () => {
      if (sortState.value === "unset")
        buttonVisible.value = false;
    });
    th2.addEventListener("dblclick", (event) => {
      if (event.offsetX < sortButton.offsetWidth && event.offsetY < sortButton.offsetHeight) {
        return;
      }
      width.value = minWidth;
    });
    verticalResizeHandle.addEventListener("mousedown", (event) => {
      event.preventDefault();
      let startX = event.clientX;
      let startWidth = th2.offsetWidth - parseFloat(getComputedStyle(th2).paddingLeft) - parseFloat(getComputedStyle(th2).paddingRight);
      function onMouseMove(event2) {
        let dx = event2.clientX - startX;
        width.value = Math.max(minWidth, startWidth + dx);
        verticalResizeHandle.style.backgroundColor = "var(--light-silver)";
      }
      function onMouseUp() {
        verticalResizeHandle.style.backgroundColor = "transparent";
        document.removeEventListener("mousemove", onMouseMove);
        document.removeEventListener("mouseup", onMouseUp);
      }
      document.addEventListener("mousemove", onMouseMove);
      document.addEventListener("mouseup", onMouseUp);
    });
    verticalResizeHandle.addEventListener("mouseover", () => {
      verticalResizeHandle.style.backgroundColor = "var(--light-silver)";
    });
    verticalResizeHandle.addEventListener("mouseleave", () => {
      verticalResizeHandle.style.backgroundColor = "transparent";
    });
    return Object.assign(th2, { vis, sortState });
  }
  function formatof(schema) {
    const format = /* @__PURE__ */ Object.create(
      null
    );
    for (const field of schema.fields) {
      format[field.name] = formatterForValue(field.type);
    }
    return format;
  }
  function classof(schema) {
    const classes = /* @__PURE__ */ Object.create(null);
    for (const field of schema.fields) {
      if (f5.isInt(field.type) || f5.isFloat(field.type)) {
        classes[field.name] = "number";
      }
      if (f5.isDate(field.type) || f5.isTimestamp(field.type)) {
        classes[field.name] = "date";
      }
    }
    return classes;
  }
  function highlight(cell, row) {
    if (row.firstChild !== cell && cell !== row.lastElementChild) {
      cell.style.border = "1px solid var(--moon-gray)";
    }
    row.style.backgroundColor = "var(--light-silver)";
  }
  function removeHighlight(cell, row) {
    cell.style.removeProperty("border");
    row.style.removeProperty("background-color");
  }
  function isTableCellElement(node) {
    return node?.tagName === "TD";
  }
  function isTableRowElement(node) {
    return node instanceof HTMLTableRowElement;
  }
  function shouldGrayoutValue(value) {
    return value === "null" || value === "undefined" || value === "NaN" || value === "TODO";
  }
  function isTableColumnHeaderWithSvg(node) {
    return node instanceof HTMLTableCellElement && "vis" in node;
  }
  function asc(field) {
    let expr = $2(field);
    expr._expr[0] = expr._expr[0].replace("DESC", "ASC");
    return expr;
  }

  // lib/htmlwidget.js
  var htmlwidget_default = () => {
    let tableName = "df";
    let coordinator;
    let options;
    return {
      async initialize(options2) {
        let exec;
        if (coordinator) {
        } else {
          options2 = options2;
          coordinator = new $e4();
          let connector = Te4();
          let db = await connector.getDuckDB();
          coordinator.databaseConnector(connector);
          const res = await fetch(options2.file.url);
          await db.registerFileBuffer(options2.file.name, new Uint8Array(await res.arrayBuffer()));
          exec = Te2(tableName, options2.file.name, { replace: true });
          await coordinator.exec([exec]);
        }
      },
      async render(el4) {
        let dt12 = await datatable(tableName, { coordinator, height: 500 });
        el4.appendChild(dt12.node());
      }
    };
  };
  return __toCommonJS(htmlwidget_exports);
})();
